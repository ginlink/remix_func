{
	"compiler": {
		"version": "0.4.24+commit.e67f0147"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"constant": false,
				"inputs": [
					{
						"name": "_token",
						"type": "address"
					},
					{
						"name": "_index",
						"type": "uint32"
					}
				],
				"name": "unregisterConverter",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"name": "tokens",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [],
				"name": "acceptOwnership",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "_token",
						"type": "address"
					},
					{
						"name": "_index",
						"type": "uint32"
					}
				],
				"name": "converterAddress",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "_converter",
						"type": "address"
					}
				],
				"name": "tokenAddress",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "tokenCount",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [
					{
						"name": "_token",
						"type": "address"
					}
				],
				"name": "converterCount",
				"outputs": [
					{
						"name": "",
						"type": "uint256"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_token",
						"type": "address"
					},
					{
						"name": "_converter",
						"type": "address"
					}
				],
				"name": "registerConverter",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"constant": true,
				"inputs": [],
				"name": "newOwner",
				"outputs": [
					{
						"name": "",
						"type": "address"
					}
				],
				"payable": false,
				"stateMutability": "view",
				"type": "function"
			},
			{
				"constant": false,
				"inputs": [
					{
						"name": "_newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"payable": false,
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "_token",
						"type": "address"
					},
					{
						"indexed": false,
						"name": "_address",
						"type": "address"
					}
				],
				"name": "ConverterAddition",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "_token",
						"type": "address"
					},
					{
						"indexed": false,
						"name": "_address",
						"type": "address"
					}
				],
				"name": "ConverterRemoval",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"name": "_prevOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"name": "_newOwner",
						"type": "address"
					}
				],
				"name": "OwnerUpdate",
				"type": "event"
			}
		],
		"devdoc": {
			"methods": {
				"acceptOwnership()": {
					"details": "used by a new owner to accept an ownership transfer"
				},
				"converterAddress(address,uint32)": {
					"details": "returns the converter address associated with the given token or zero address if no such converter exists",
					"params": {
						"_index": "converter index",
						"_token": "token address"
					},
					"return": "converter address"
				},
				"converterCount(address)": {
					"details": "returns the number of converters associated with the given token or 0 if the token isn't registered",
					"params": {
						"_token": "token address"
					},
					"return": "number of converters"
				},
				"registerConverter(address,address)": {
					"details": "adds a new converter address for a given token to the registry throws if the converter is already registered",
					"params": {
						"_converter": "converter address",
						"_token": "token address"
					}
				},
				"tokenAddress(address)": {
					"details": "returns the token address associated with the given converter or zero address if no such converter exists",
					"params": {
						"_converter": "converter address"
					},
					"return": "token address"
				},
				"tokenCount()": {
					"details": "returns the number of tokens in the registry",
					"return": "number of tokens"
				},
				"transferOwnership(address)": {
					"details": "allows transferring the contract ownership the new owner still needs to accept the transfer can only be called by the contract owner",
					"params": {
						"_newOwner": "new contract owner"
					}
				},
				"unregisterConverter(address,uint32)": {
					"details": "removes an existing converter from the registry note that the function doesn't scale and might be needed to be called multiple times when removing an older converter from a large converter list",
					"params": {
						"_index": "converter index",
						"_token": "token address"
					}
				}
			}
		},
		"userdoc": {
			"methods": {}
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/block/block.sol": "BancorConverterRegistry"
		},
		"evmVersion": "byzantium",
		"libraries": {},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/block/block.sol": {
			"keccak256": "0x2cee8ba2871093ea8de0295ff44f1e9f7a6978e4c2d7a29382690638fdccc34c",
			"urls": [
				"bzzr://42d53a521dfcd2f384c9853e94961796988b1393ce8174e45f1fe4b8bfb6f2d9"
			]
		}
	},
	"version": 1
}