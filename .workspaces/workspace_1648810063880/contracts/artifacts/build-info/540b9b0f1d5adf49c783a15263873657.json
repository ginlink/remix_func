{
	"id": "540b9b0f1d5adf49c783a15263873657",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.10",
	"solcLongVersion": "0.8.10+commit.fc410830",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Boost.sol": {
				"content": "// Sources flattened with hardhat v2.9.0 https://hardhat.org\n\n// File @openzeppelin/contracts/utils/math/Math.sol@v4.5.0\n\n// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a >= b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a / b + (a % b == 0 ? 0 : 1);\n    }\n}\n\n\n// File @openzeppelin/contracts/security/ReentrancyGuard.sol@v4.5.0\n\n\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n\n\n// File @openzeppelin/contracts/token/ERC20/IERC20.sol@v4.5.0\n\n\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n\n// File @openzeppelin/contracts/utils/Context.sol@v4.5.0\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\n\n// File @openzeppelin/contracts/access/Ownable.sol@v4.5.0\n\n\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n\n// File contracts/interface/IGauge.sol\n\npragma solidity 0.8.10;\n\ninterface IGauge {\n    function notifyRewardAmount(address token, uint amount) external;\n\n    function getReward(address account, address[] memory tokens) external;\n\n    function claimFees() external returns (uint claimed0, uint claimed1);\n\n    function left(address token) external view returns (uint);\n}\n\n\n// File contracts/interface/IGaugeFactory.sol\n\npragma solidity 0.8.10;\n\ninterface IGaugeFactory {\n    function createGauge(address, address) external returns (address);\n}\n\n\n// File @openzeppelin/contracts/utils/Address.sol@v4.5.0\n\n\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n\n\n// File @openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol@v4.5.0\n\n\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    function safeTransfer(\n        IERC20 token,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(\n        IERC20 token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        require(\n            (value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(\n        IERC20 token,\n        address spender,\n        uint256 value\n    ) internal {\n        unchecked {\n            uint256 oldAllowance = token.allowance(address(this), spender);\n            require(oldAllowance >= value, \"SafeERC20: decreased allowance below zero\");\n            uint256 newAllowance = oldAllowance - value;\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) {\n            // Return data is optional\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n\n\n// File @openzeppelin/contracts/utils/math/SafeMath.sol@v4.5.0\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n\n\n// File @openzeppelin/contracts/utils/structs/EnumerableSet.sol@v4.5.0\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/structs/EnumerableSet.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping(bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (lastIndex != toDeleteIndex) {\n                bytes32 lastvalue = set._values[lastIndex];\n\n                // Move the last value to the index where the value to delete is\n                set._values[toDeleteIndex] = lastvalue;\n                // Update the index for the moved value\n                set._indexes[lastvalue] = valueIndex; // Replace lastvalue's index to valueIndex\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        return _values(set._inner);\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n\n\n// File contracts/tools/TransferHelper.sol\n\n\npragma solidity >=0.6.11;\n\n// helper methods for interacting with ERC20 tokens and sending ETH that do not consistently return true/false\nlibrary TransferHelper {\n    function safeApprove(address token, address to, uint value) internal {\n        // bytes4(keccak256(bytes('approve(address,uint256)')));\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x095ea7b3, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: APPROVE_FAILED');\n    }\n\n    function safeTransfer(address token, address to, uint value) internal {\n        // bytes4(keccak256(bytes('transfer(address,uint256)')));\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0xa9059cbb, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FAILED');\n    }\n\n    function safeTransferFrom(address token, address from, address to, uint value) internal {\n        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FROM_FAILED');\n    }\n\n    function safeTransferETH(address to, uint value) internal {\n        (bool success,) = to.call{value:value}(new bytes(0));\n        require(success, 'TransferHelper: ETH_TRANSFER_FAILED');\n    }\n}\n\n\n// File contracts/tools/Operatable.sol\n\n\npragma solidity =0.8.10;\n\n// seperate owner and operator, operator is for daily devops, only owner can update operator\ncontract Operatable is Ownable {\n    address public operator;\n\n    event SetOperator(address indexed oldOperator, address indexed newOperator);\n\n    constructor(){\n        operator = msg.sender;\n        emit SetOperator(address(0), operator);\n    }\n\n    modifier onlyOperator() {\n        require(msg.sender == operator, 'not operator');\n        _;\n    }\n\n    function setOperator(address newOperator) public onlyOwner {\n        require(newOperator != address(0), 'bad new operator');\n        address oldOperator = operator;\n        operator = newOperator;\n        emit SetOperator(oldOperator, newOperator);\n    }\n}\n\n\n// File contracts/interface/IOperContract.sol\n\n\npragma solidity =0.8.10;\n\ninterface IOperContract {\n    function operator() external view returns (address);\n\n    function owner() external view returns (address);\n}\n\n\n// File contracts/tools/CheckOper.sol\n\n\npragma solidity =0.8.10;\n\n\n// seperate owner and operator, operator is for daily devops, only owner can update operator\ncontract CheckOper is IOperContract {\n    Operatable public operatable;\n\n    event SetOperatorContract(address indexed oldOperator, address indexed newOperator);\n\n    constructor(address _oper){\n        operatable = Operatable(_oper);\n        emit SetOperatorContract(address(0), _oper);\n    }\n\n    modifier onlyOperator() {\n        require(operatable.operator() == msg.sender, 'not operator');\n        _;\n    }\n\n    modifier onlyOwner() {\n        require(operatable.owner() == msg.sender, 'Ownable: caller is not the owner');\n        _;\n    }\n\n    function operator() public view override returns (address) {\n        return operatable.operator();\n    }\n\n    function owner() public view override returns (address) {\n        return operatable.owner();\n    }\n\n    function setOperContract(address _oper) public onlyOwner {\n        require(_oper != address(0), 'bad new operator');\n        address oldOperator = _oper;\n        operatable = Operatable(_oper);\n        emit SetOperatorContract(oldOperator, _oper);\n    }\n}\n\n\n// File contracts/interface/IToken.sol\n\n\npragma solidity =0.8.10;\n\ninterface IToken is IERC20 {\n    function mint(address to, uint256 amount) external returns (bool);\n\n    function burn(uint256 _amount) external;\n}\n\n\n// File contracts/dao/TokenReward.sol\n\n\npragma solidity =0.8.10;\n\n\n\n\n\n\nabstract contract TokenReward is CheckOper {\n    using SafeMath for uint256;\n    using SafeERC20 for IERC20;\n\n    event SetPool(address indexed pool, uint256 point);\n    event AddPool(address indexed pool, uint256 point);\n\n    IToken public swapToken;\n\n    uint256 public tokenPerBlock;\n    uint256 public immutable startBlock;\n    uint256 public periodEndBlock;\n    // How many blocks (90 days) are halved 2592000\n    uint256 public period;\n\n    uint256 public mintMulti;\n\n    uint256 public minTokenReward = 1.75e17;\n\n    constructor(\n        address _operatorMsg,\n        IToken _swapToken,\n        uint256 _tokenPerBlock,\n        uint256 _startBlock,\n        uint256 _period\n    ) CheckOper(_operatorMsg) {\n        require(address(_swapToken) != address(0), \"swapToken is 0\");\n        swapToken = _swapToken;\n        tokenPerBlock = _tokenPerBlock;\n        startBlock = _startBlock;\n        period = _period;\n        periodEndBlock = _startBlock.add(_period);\n        mintMulti = 1000;\n    }\n\n    modifier reduceBlockReward() {\n        if (block.number > startBlock && block.number >= periodEndBlock) {\n            if (tokenPerBlock > minTokenReward) {\n                tokenPerBlock = tokenPerBlock.mul(80).div(100);\n            }\n            if (tokenPerBlock < minTokenReward) {\n                tokenPerBlock = minTokenReward;\n            }\n            periodEndBlock = block.number.add(period);\n        }\n        _;\n    }\n\n    function setHalvingPeriod(uint256 _block) public onlyOperator {\n        period = _block;\n    }\n\n    function setMintMulti(uint256 _multi) public onlyOperator {\n        mintMulti = _multi;\n    }\n\n    function setMinTokenReward(uint256 _reward) public onlyOperator {\n        minTokenReward = _reward;\n    }\n\n    // Set the number of swap produced by each block\n    function setTokenPerBlock(uint256 _newPerBlock, bool _withUpdate) public onlyOperator {\n        if (_withUpdate) {\n            massUpdatePools();\n        }\n        tokenPerBlock = _newPerBlock;\n    }\n\n    // Safe swap token transfer function, just in case if rounding error causes pool to not have enough swaps.\n    function _safeTokenTransfer(address _to, uint256 _amount) internal {\n        _mintRewardToken(_amount);\n        uint256 bal = swapToken.balanceOf(address(this));\n        if (_amount > bal) {\n            _amount = bal;\n        }\n        TransferHelper.safeTransfer(address(swapToken), _to, _amount);\n    }\n\n    function _mintRewardToken(uint256 _amount) private {\n        uint256 bal = swapToken.balanceOf(address(this));\n        if (bal < _amount) {\n            swapToken.mint(address(this), _amount.mul(mintMulti));\n        }\n    }\n\n    function massUpdatePools() public virtual;\n}\n\n\n// File contracts/interface/IVeToken.sol\n\npragma solidity 0.8.10;\n\n\ninterface IVeToken {\n    function token() external view returns (address);\n    function tokenOfOwnerByIndex(address _owner, uint _tokenIndex) external view returns (uint);\n    function balanceOfNFT(uint) external view returns (uint);\n    function isApprovedOrOwner(address, uint) external view returns (bool);\n    function ownerOf(uint) external view returns (address);\n    function transferFrom(address, address, uint) external;\n    function used(uint tokenId) external;\n    function detach(uint tokenId) external;\n    function voting(uint tokenId) external;\n    function abstain(uint tokenId) external;\n}\n\n\n// File contracts/dao/AbstractBoost.sol\n\npragma solidity 0.8.10;\n\n\n\n\n\nabstract contract AbstractBoost is TokenReward {\n    using SafeMath for uint256;\n\n    event Attach(address indexed owner, address indexed gauge, uint tokenId);\n    event Detach(address indexed owner, address indexed gauge, uint tokenId);\n    event Voted(address indexed voter, uint tokenId, int256 weight);\n    event Abstained(uint tokenId, int256 weight);\n\n    uint public totalWeight; // total voting weight\n\n    address public immutable veToken; // the ve token that governs these contracts\n    address internal immutable base;\n\n    mapping(address => int256) public weights; // pool => weight\n    mapping(uint => mapping(address => int256)) public votes; // nft => pool => votes\n    mapping(uint => address[]) public poolVote; // nft => pools\n    mapping(uint => uint) public usedWeights;  // nft => total voting weight of user\n\n\n    constructor(address _operatorMsg, address __ve,\n        IToken _swapToken,\n        uint256 _tokenPerBlock,\n        uint256 _startBlock,\n        uint256 _period)TokenReward(_operatorMsg, _swapToken, _tokenPerBlock, _startBlock, _period) {\n        veToken = __ve;\n        base = IVeToken(__ve).token();\n\n    }\n\n    function getPoolVote(uint256 tokenId) public view returns (address[] memory){\n        return poolVote[tokenId];\n    }\n\n    function reset(uint _tokenId) external {\n        require(IVeToken(veToken).isApprovedOrOwner(msg.sender, _tokenId));\n        _reset(_tokenId);\n        IVeToken(veToken).abstain(_tokenId);\n    }\n\n    function _reset(uint _tokenId) internal {\n        address[] storage _poolVote = poolVote[_tokenId];\n        uint _poolVoteCnt = _poolVote.length;\n        int256 _totalWeight = 0;\n\n        for (uint i = 0; i < _poolVoteCnt; i ++) {\n            address _pool = _poolVote[i];\n            int256 _votes = votes[_tokenId][_pool];\n\n            if (_votes != 0) {\n                _updatePoolInfo(_pool);\n                weights[_pool] -= _votes;\n                votes[_tokenId][_pool] -= _votes;\n                if (_votes > 0) {\n                    _totalWeight += _votes;\n                } else {\n                    _totalWeight -= _votes;\n                }\n                emit Abstained(_tokenId, _votes);\n            }\n        }\n        totalWeight -= uint256(_totalWeight);\n        usedWeights[_tokenId] = 0;\n        delete poolVote[_tokenId];\n    }\n\n    function _vote(uint _tokenId, address[] memory _poolVote, int256[] memory _weights) internal {\n        _reset(_tokenId);\n        uint _poolCnt = _poolVote.length;\n        int256 _weight = int256(IVeToken(veToken).balanceOfNFT(_tokenId));\n        int256 _totalVoteWeight = 0;\n        int256 _totalWeight = 0;\n        int256 _usedWeight = 0;\n\n        for (uint i = 0; i < _poolCnt; i++) {\n            _totalVoteWeight += _weights[i] > 0 ? _weights[i] : - _weights[i];\n        }\n\n        for (uint i = 0; i < _poolCnt; i++) {\n            address _pool = _poolVote[i];\n\n            if (isGaugeForPool(_pool)) {\n                int256 _poolWeight = _weights[i] * _weight / _totalVoteWeight;\n                require(votes[_tokenId][_pool] == 0, \"token pool is 0\");\n                require(_poolWeight != 0, \"weight is 0\");\n                _updatePoolInfo(_pool);\n\n                poolVote[_tokenId].push(_pool);\n\n                weights[_pool] += _poolWeight;\n                votes[_tokenId][_pool] += _poolWeight;\n                if (_poolWeight > 0) {\n                } else {\n                    _poolWeight = - _poolWeight;\n                }\n                _usedWeight += _poolWeight;\n                _totalWeight += _poolWeight;\n                emit Voted(msg.sender, _tokenId, _poolWeight);\n            }\n        }\n        if (_usedWeight > 0) IVeToken(veToken).voting(_tokenId);\n        totalWeight += uint256(_totalWeight);\n        usedWeights[_tokenId] = uint256(_usedWeight);\n    }\n\n    function poke(uint _tokenId) external {\n        address[] memory _poolVote = poolVote[_tokenId];\n        uint _poolCnt = _poolVote.length;\n        int256[] memory _weights = new int256[](_poolCnt);\n\n        for (uint i = 0; i < _poolCnt; i ++) {\n            _weights[i] = votes[_tokenId][_poolVote[i]];\n        }\n\n        _vote(_tokenId, _poolVote, _weights);\n    }\n\n\n    function vote(uint tokenId, address[] calldata _poolVote, int256[] calldata _weights) external {\n        require(IVeToken(veToken).isApprovedOrOwner(msg.sender, tokenId));\n        require(_poolVote.length == _weights.length);\n        _vote(tokenId, _poolVote, _weights);\n    }\n\n\n    function _updatePoolInfo(address _pool) internal virtual;\n\n    function isGaugeForPool(address _pool) internal virtual view returns (bool);\n}\n\n\n// File contracts/dao/Boost.sol\n\n\npragma solidity 0.8.10;\n\n\n\n\n\ncontract Boost is ReentrancyGuard, AbstractBoost {\n    using SafeMath for uint256;\n\n    event GaugeCreated(address indexed gauge, address creator, address indexed pool);\n\n    event Deposit(address indexed lp, address indexed gauge, uint tokenId, uint amount);\n    event Withdraw(address indexed lp, address indexed gauge, uint tokenId, uint amount);\n    event NotifyReward(address indexed sender, address indexed reward, uint amount);\n    event DistributeReward(address indexed sender, address indexed gauge, uint amount);\n\n    // Info of each pool.\n    struct PoolInfo {\n        address lpToken;\n        uint256 allocPoint;\n        uint256 lastRewardBlock;\n    }\n\n    address public immutable gaugeFactory;\n    uint256 public totalAllocPoint = 0;\n    PoolInfo[] public poolInfo;\n    // pid corresponding address\n    mapping(address => uint256) public LpOfPid;\n\n\n    uint public constant duration = 7 days; // rewards are released over 7 days\n\n    address[] public pools; // all pools viable for incentives\n    mapping(address => address) public gauges; // pool => gauge\n    mapping(address => address) public poolForGauge; // gauge => pool\n    mapping(address => bool) public isGauge;\n\n    constructor(address _operatorMsg, address __ve, address _gauges,\n        IToken _swapToken,\n        uint256 _tokenPerBlock,\n        uint256 _startBlock,\n        uint256 _period)AbstractBoost(_operatorMsg, __ve, _swapToken, _tokenPerBlock, _startBlock, _period) {\n\n        gaugeFactory = _gauges;\n\n    }\n\n    function poolLength() public view returns (uint256) {\n        return poolInfo.length;\n    }\n\n    function createGauge(address _pool, uint256 _allocPoint, bool _withUpdate) external returns (address) {\n        require(gauges[_pool] == address(0x0), \"exists\");\n\n        require(address(_pool) != address(0), \"_lpToken is the zero address\");\n        if (_withUpdate) {\n            massUpdatePools();\n        }\n        uint256 lastRewardBlock = block.number > startBlock ? block.number : startBlock;\n        totalAllocPoint = totalAllocPoint.add(_allocPoint);\n        poolInfo.push(PoolInfo({\n        lpToken : _pool,\n        allocPoint : _allocPoint,\n        lastRewardBlock : lastRewardBlock\n        }));\n        LpOfPid[address(_pool)] = poolLength() - 1;\n\n        address _gauge = IGaugeFactory(gaugeFactory).createGauge(_pool, veToken);\n        IERC20(address(swapToken)).approve(_gauge, type(uint).max);\n        gauges[_pool] = _gauge;\n        poolForGauge[_gauge] = _pool;\n        isGauge[_gauge] = true;\n        _updateForGauge(_gauge);\n        emit GaugeCreated(_gauge, msg.sender, _pool);\n        return _gauge;\n    }\n\n    function set(uint256 _pid, uint256 _allocPoint, bool _withUpdate) public onlyOwner {\n\n        totalAllocPoint = totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint);\n        poolInfo[_pid].allocPoint = _allocPoint;\n        if (_withUpdate) {\n            massUpdatePools();\n        }\n    }\n\n    function massUpdatePools() public override {\n        uint256 length = poolInfo.length;\n        for (uint256 pid = 0; pid < length; ++pid) {\n            updatePool(pid);\n        }\n    }\n\n    // Update reward variables of the given pool to be up-to-date.\n    function updatePool(uint256 _pid) public reduceBlockReward {\n        PoolInfo storage pool = poolInfo[_pid];\n        if (block.number <= pool.lastRewardBlock) {\n            return;\n        }\n        uint256 lpSupply = IERC20(pool.lpToken).balanceOf(gauges[pool.lpToken]);\n        if (lpSupply == 0) {\n            pool.lastRewardBlock = block.number;\n            return;\n        }\n        if (tokenPerBlock <= 0) {\n            return;\n        }\n        uint256 mul = block.number.sub(pool.lastRewardBlock);\n        uint256 tokenReward = tokenPerBlock.mul(mul).mul(pool.allocPoint).div(totalAllocPoint);\n        //todo duration\n        bool minRet = swapToken.mint(address(this), tokenReward.mul(duration));\n        if (minRet) {\n            IGauge(gauges[pool.lpToken]).notifyRewardAmount(address(swapToken), tokenPerBlock.mul(pool.allocPoint).div(totalAllocPoint));\n        }\n        pool.lastRewardBlock = block.number;\n    }\n\n\n    function attachTokenToGauge(uint tokenId, address account) external {\n        require(isGauge[msg.sender]);\n        if (tokenId > 0) IVeToken(veToken).used(tokenId);\n        emit Attach(account, msg.sender, tokenId);\n    }\n\n    function emitDeposit(uint tokenId, address account, uint amount) external {\n        require(isGauge[msg.sender]);\n        emit Deposit(account, msg.sender, tokenId, amount);\n    }\n\n    function detachTokenFromGauge(uint tokenId, address account) external {\n        require(isGauge[msg.sender]);\n        if (tokenId > 0) IVeToken(veToken).detach(tokenId);\n        emit Detach(account, msg.sender, tokenId);\n    }\n\n    function emitWithdraw(uint tokenId, address account, uint amount) external {\n        require(isGauge[msg.sender]);\n        emit Withdraw(account, msg.sender, tokenId, amount);\n    }\n\n    function updateAll() external {\n        for (uint i = 0; i < poolLength(); i++) {\n            PoolInfo memory pool = poolInfo[i];\n            _updateForGauge(gauges[pool.lpToken]);\n        }\n    }\n\n    function _updateForGauge(address _gauge) internal {\n        address _pool = poolForGauge[_gauge];\n        updatePool(LpOfPid[_pool]);\n    }\n\n    function claimRewards(address[] memory _gauges, address[][] memory _tokens) external {\n        for (uint i = 0; i < _gauges.length; i++) {\n            IGauge(_gauges[i]).getReward(msg.sender, _tokens[i]);\n        }\n    }\n\n    function distribute(address _gauge) public {\n        _updateForGauge(_gauge);\n\n    }\n\n    function _updatePoolInfo(address _pool) internal override {\n        _updateForGauge(gauges[_pool]);\n    }\n\n    function isGaugeForPool(address _pool) internal override view returns (bool){\n        return isGauge[gauges[_pool]];\n    }\n\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Boost.sol": {
				"AbstractBoost": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "weight",
									"type": "int256"
								}
							],
							"name": "Abstained",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "point",
									"type": "uint256"
								}
							],
							"name": "AddPool",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "gauge",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Attach",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "gauge",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Detach",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldOperator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOperator",
									"type": "address"
								}
							],
							"name": "SetOperatorContract",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "point",
									"type": "uint256"
								}
							],
							"name": "SetPool",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "voter",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "weight",
									"type": "int256"
								}
							],
							"name": "Voted",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getPoolVote",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "massUpdatePools",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minTokenReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mintMulti",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "operatable",
							"outputs": [
								{
									"internalType": "contract Operatable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "operator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "period",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "periodEndBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "poke",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "poolVote",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "reset",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_block",
									"type": "uint256"
								}
							],
							"name": "setHalvingPeriod",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_reward",
									"type": "uint256"
								}
							],
							"name": "setMinTokenReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_multi",
									"type": "uint256"
								}
							],
							"name": "setMintMulti",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_oper",
									"type": "address"
								}
							],
							"name": "setOperContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newPerBlock",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_withUpdate",
									"type": "bool"
								}
							],
							"name": "setTokenPerBlock",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "swapToken",
							"outputs": [
								{
									"internalType": "contract IToken",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenPerBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalWeight",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "usedWeights",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "veToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "_poolVote",
									"type": "address[]"
								},
								{
									"internalType": "int256[]",
									"name": "_weights",
									"type": "int256[]"
								}
							],
							"name": "vote",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "votes",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "weights",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getPoolVote(uint256)": "146650df",
							"massUpdatePools()": "630b5ba1",
							"minTokenReward()": "812632ec",
							"mintMulti()": "37550684",
							"operatable()": "48ee26a3",
							"operator()": "570ca735",
							"owner()": "8da5cb5b",
							"period()": "ef78d4fd",
							"periodEndBlock()": "442da82f",
							"poke(uint256)": "32145f90",
							"poolVote(uint256,uint256)": "a86a366d",
							"reset(uint256)": "310bd74b",
							"setHalvingPeriod(uint256)": "b5ec5c99",
							"setMinTokenReward(uint256)": "aa70fb98",
							"setMintMulti(uint256)": "71dd4bda",
							"setOperContract(address)": "0f589d63",
							"setTokenPerBlock(uint256,bool)": "4ade739b",
							"startBlock()": "48cd4cb1",
							"swapToken()": "dc73e49c",
							"tokenPerBlock()": "4198709a",
							"totalWeight()": "96c82e57",
							"usedWeights(uint256)": "79e93824",
							"veToken()": "3b92eb23",
							"vote(uint256,address[],int256[])": "fecdad60",
							"votes(uint256,address)": "d23254b4",
							"weights(address)": "a7cac846"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"weight\",\"type\":\"int256\"}],\"name\":\"Abstained\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"point\",\"type\":\"uint256\"}],\"name\":\"AddPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"gauge\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Attach\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"gauge\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Detach\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOperator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOperator\",\"type\":\"address\"}],\"name\":\"SetOperatorContract\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"point\",\"type\":\"uint256\"}],\"name\":\"SetPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"weight\",\"type\":\"int256\"}],\"name\":\"Voted\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getPoolVote\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minTokenReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintMulti\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operatable\",\"outputs\":[{\"internalType\":\"contract Operatable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"period\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"periodEndBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"poke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolVote\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"reset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_block\",\"type\":\"uint256\"}],\"name\":\"setHalvingPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_reward\",\"type\":\"uint256\"}],\"name\":\"setMinTokenReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_multi\",\"type\":\"uint256\"}],\"name\":\"setMintMulti\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oper\",\"type\":\"address\"}],\"name\":\"setOperContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"setTokenPerBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapToken\",\"outputs\":[{\"internalType\":\"contract IToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"usedWeights\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"veToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_poolVote\",\"type\":\"address[]\"},{\"internalType\":\"int256[]\",\"name\":\"_weights\",\"type\":\"int256[]\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"votes\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"weights\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Boost.sol\":\"AbstractBoost\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Boost.sol\":{\"keccak256\":\"0x51890f50b6dafdea68176c9872b64a7e1e3600d6953fba67131a979bf5896a4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5823f5aa5cdd3ab82cc93d673ef6f672609120ed18f3f76e079eb74fdf9bae0a\",\"dweb:/ipfs/QmW3EYcqJKHLo6e6VgxxHmjDkyns4etxkBkYYzGVajGHBx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2042,
								"contract": "contracts/Boost.sol:AbstractBoost",
								"label": "operatable",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(Operatable)2024"
							},
							{
								"astId": 2195,
								"contract": "contracts/Boost.sol:AbstractBoost",
								"label": "swapToken",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IToken)2170"
							},
							{
								"astId": 2197,
								"contract": "contracts/Boost.sol:AbstractBoost",
								"label": "tokenPerBlock",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 2201,
								"contract": "contracts/Boost.sol:AbstractBoost",
								"label": "periodEndBlock",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 2203,
								"contract": "contracts/Boost.sol:AbstractBoost",
								"label": "period",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 2205,
								"contract": "contracts/Boost.sol:AbstractBoost",
								"label": "mintMulti",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 2208,
								"contract": "contracts/Boost.sol:AbstractBoost",
								"label": "minTokenReward",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 2555,
								"contract": "contracts/Boost.sol:AbstractBoost",
								"label": "totalWeight",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 2563,
								"contract": "contracts/Boost.sol:AbstractBoost",
								"label": "weights",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_int256)"
							},
							{
								"astId": 2569,
								"contract": "contracts/Boost.sol:AbstractBoost",
								"label": "votes",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_int256))"
							},
							{
								"astId": 2574,
								"contract": "contracts/Boost.sol:AbstractBoost",
								"label": "poolVote",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)"
							},
							{
								"astId": 2578,
								"contract": "contracts/Boost.sol:AbstractBoost",
								"label": "usedWeights",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_uint256,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_contract(IToken)2170": {
								"encoding": "inplace",
								"label": "contract IToken",
								"numberOfBytes": "20"
							},
							"t_contract(Operatable)2024": {
								"encoding": "inplace",
								"label": "contract Operatable",
								"numberOfBytes": "20"
							},
							"t_int256": {
								"encoding": "inplace",
								"label": "int256",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_int256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => int256)",
								"numberOfBytes": "32",
								"value": "t_int256"
							},
							"t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address[])",
								"numberOfBytes": "32",
								"value": "t_array(t_address)dyn_storage"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_int256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => int256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_int256)"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Boost.sol\":10950:19011  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Boost.sol\":10950:19011  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d9f5bd7686d7586753ba64892b3bfbe8cf625bb81b61cdd01059652e4c4dfb4d64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d9f5bd7686d7586753ba64892b3bfbe8cf625bb81b61cdd01059652e4c4dfb4d64736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 CREATE2 0xBD PUSH23 0x86D7586753BA64892B3BFBE8CF625BB81B61CDD0105965 0x2E 0x4C 0x4D 0xFB 0x4D PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "10950:8061:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;10950:8061:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d9f5bd7686d7586753ba64892b3bfbe8cf625bb81b61cdd01059652e4c4dfb4d64736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 CREATE2 0xBD PUSH23 0x86D7586753BA64892B3BFBE8CF625BB81B61CDD0105965 0x2E 0x4C 0x4D 0xFB 0x4D PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "10950:8061:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 10950,
									"end": 19011,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10950,
									"end": 19011,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 10950,
									"end": 19011,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 10950,
									"end": 19011,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 10950,
									"end": 19011,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 10950,
									"end": 19011,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 10950,
									"end": 19011,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 10950,
									"end": 19011,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10950,
									"end": 19011,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 10950,
									"end": 19011,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10950,
									"end": 19011,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 10950,
									"end": 19011,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 10950,
									"end": 19011,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 10950,
									"end": 19011,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 10950,
									"end": 19011,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 10950,
									"end": 19011,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10950,
									"end": 19011,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 10950,
									"end": 19011,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10950,
									"end": 19011,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 10950,
									"end": 19011,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 10950,
									"end": 19011,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 10950,
									"end": 19011,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10950,
									"end": 19011,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 10950,
									"end": 19011,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 10950,
									"end": 19011,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 10950,
									"end": 19011,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 10950,
									"end": 19011,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10950,
									"end": 19011,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 10950,
									"end": 19011,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 10950,
									"end": 19011,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10950,
									"end": 19011,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 10950,
									"end": 19011,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 10950,
									"end": 19011,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10950,
									"end": 19011,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d9f5bd7686d7586753ba64892b3bfbe8cf625bb81b61cdd01059652e4c4dfb4d64736f6c634300080a0033",
									".code": [
										{
											"begin": 10950,
											"end": 19011,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 10950,
											"end": 19011,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 10950,
											"end": 19011,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 10950,
											"end": 19011,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 10950,
											"end": 19011,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10950,
											"end": 19011,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10950,
											"end": 19011,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10950,
											"end": 19011,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10950,
											"end": 19011,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Boost.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Boost.sol\":{\"keccak256\":\"0x51890f50b6dafdea68176c9872b64a7e1e3600d6953fba67131a979bf5896a4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5823f5aa5cdd3ab82cc93d673ef6f672609120ed18f3f76e079eb74fdf9bae0a\",\"dweb:/ipfs/QmW3EYcqJKHLo6e6VgxxHmjDkyns4etxkBkYYzGVajGHBx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Boost": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operatorMsg",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "__ve",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_gauges",
									"type": "address"
								},
								{
									"internalType": "contract IToken",
									"name": "_swapToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenPerBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_startBlock",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_period",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "weight",
									"type": "int256"
								}
							],
							"name": "Abstained",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "point",
									"type": "uint256"
								}
							],
							"name": "AddPool",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "gauge",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Attach",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "lp",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "gauge",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "gauge",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Detach",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "gauge",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "DistributeReward",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "gauge",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "creator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "GaugeCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "reward",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "NotifyReward",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldOperator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOperator",
									"type": "address"
								}
							],
							"name": "SetOperatorContract",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "point",
									"type": "uint256"
								}
							],
							"name": "SetPool",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "voter",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "weight",
									"type": "int256"
								}
							],
							"name": "Voted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "lp",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "gauge",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "LpOfPid",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "attachTokenToGauge",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "_gauges",
									"type": "address[]"
								},
								{
									"internalType": "address[][]",
									"name": "_tokens",
									"type": "address[][]"
								}
							],
							"name": "claimRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_pool",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_withUpdate",
									"type": "bool"
								}
							],
							"name": "createGauge",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "detachTokenFromGauge",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_gauge",
									"type": "address"
								}
							],
							"name": "distribute",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "duration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "emitDeposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "emitWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "gaugeFactory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "gauges",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getPoolVote",
							"outputs": [
								{
									"internalType": "address[]",
									"name": "",
									"type": "address[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isGauge",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "massUpdatePools",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minTokenReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mintMulti",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "operatable",
							"outputs": [
								{
									"internalType": "contract Operatable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "operator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "period",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "periodEndBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "poke",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "poolForGauge",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "poolInfo",
							"outputs": [
								{
									"internalType": "address",
									"name": "lpToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "lastRewardBlock",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "poolVote",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "pools",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "reset",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_allocPoint",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_withUpdate",
									"type": "bool"
								}
							],
							"name": "set",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_block",
									"type": "uint256"
								}
							],
							"name": "setHalvingPeriod",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_reward",
									"type": "uint256"
								}
							],
							"name": "setMinTokenReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_multi",
									"type": "uint256"
								}
							],
							"name": "setMintMulti",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_oper",
									"type": "address"
								}
							],
							"name": "setOperContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newPerBlock",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_withUpdate",
									"type": "bool"
								}
							],
							"name": "setTokenPerBlock",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "swapToken",
							"outputs": [
								{
									"internalType": "contract IToken",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenPerBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalAllocPoint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalWeight",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "updateAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_pid",
									"type": "uint256"
								}
							],
							"name": "updatePool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "usedWeights",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "veToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address[]",
									"name": "_poolVote",
									"type": "address[]"
								},
								{
									"internalType": "int256[]",
									"name": "_weights",
									"type": "int256[]"
								}
							],
							"name": "vote",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "votes",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "weights",
							"outputs": [
								{
									"internalType": "int256",
									"name": "",
									"type": "int256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Boost.sol\":54066:59920  contract Boost is ReentrancyGuard, AbstractBoost {... */\n  mstore(0x40, 0x0100)\n    /* \"contracts/Boost.sol\":46449:46456  1.75e17 */\n  0x026db992a3b18000\n    /* \"contracts/Boost.sol\":46417:46456  uint256 public minTokenReward = 1.75e17 */\n  0x07\n  sstore\n    /* \"contracts/Boost.sol\":54811:54812  0 */\n  0x00\n    /* \"contracts/Boost.sol\":54778:54812  uint256 public totalAllocPoint = 0 */\n  0x0d\n  sstore\n    /* \"contracts/Boost.sol\":55257:55559  constructor(address _operatorMsg, address __ve, address _gauges,... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Boost.sol\":3090:3091  1 */\n  0x01\n    /* \"contracts/Boost.sol\":3195:3202  _status */\n  0x00\n    /* \"contracts/Boost.sol\":3195:3217  _status = _NOT_ENTERED */\n  dup2\n  dup2\n  sstore\n    /* \"contracts/Boost.sol\":44833:44863  operatable = Operatable(_oper) */\n  dup2\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup11\n  and\n  swap1\n  dup2\n  or\n  swap1\n  swap3\n  sstore\n    /* \"contracts/Boost.sol\":44878:44916  SetOperatorContract(address(0), _oper) */\n  mload(0x40)\n    /* \"contracts/Boost.sol\":44833:44863  operatable = Operatable(_oper) */\n  dup10\n  swap3\n    /* \"contracts/Boost.sol\":55462:55466  __ve */\n  dup10\n  swap3\n    /* \"contracts/Boost.sol\":55468:55478  _swapToken */\n  dup9\n  swap3\n    /* \"contracts/Boost.sol\":55480:55494  _tokenPerBlock */\n  dup9\n  swap3\n    /* \"contracts/Boost.sol\":55496:55507  _startBlock */\n  dup9\n  swap3\n    /* \"contracts/Boost.sol\":55509:55516  _period */\n  dup9\n  swap3\n    /* \"contracts/Boost.sol\":44833:44863  operatable = Operatable(_oper) */\n  dup9\n  swap3\n    /* \"contracts/Boost.sol\":55468:55478  _swapToken */\n  dup8\n  swap3\n    /* \"contracts/Boost.sol\":55480:55494  _tokenPerBlock */\n  dup8\n  swap3\n    /* \"contracts/Boost.sol\":55496:55507  _startBlock */\n  dup8\n  swap3\n    /* \"contracts/Boost.sol\":55509:55516  _period */\n  dup8\n  swap3\n    /* \"contracts/Boost.sol\":44833:44863  operatable = Operatable(_oper) */\n  dup8\n  swap3\n    /* \"contracts/Boost.sol\":44878:44916  SetOperatorContract(address(0), _oper) */\n  0x3ccbb406b985dd76fe05e172b432487a2ff9fe4257642d3acc350f167cb1d577\n  swap1\n    /* \"contracts/Boost.sol\":3195:3202  _status */\n  dup3\n  swap1\n    /* \"contracts/Boost.sol\":44878:44916  SetOperatorContract(address(0), _oper) */\n  log3\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/Boost.sol\":46666:46699  address(_swapToken) != address(0) */\n  dup5\n  and\n    /* \"contracts/Boost.sol\":46658:46718  require(address(_swapToken) != address(0), \"swapToken is 0\") */\n  tag_12\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1212:1214   */\n  0x20\n    /* \"contracts/Boost.sol\":46658:46718  require(address(_swapToken) != address(0), \"swapToken is 0\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1194:1215   */\n  mstore\n    /* \"#utility.yul\":1251:1253   */\n  0x0e\n    /* \"#utility.yul\":1231:1249   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1224:1254   */\n  mstore\n  shl(0x94, 0x073776170546f6b656e206973203)\n    /* \"#utility.yul\":1270:1288   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1263:1307   */\n  mstore\n    /* \"#utility.yul\":1324:1342   */\n  0x64\n  add\n    /* \"contracts/Boost.sol\":46658:46718  require(address(_swapToken) != address(0), \"swapToken is 0\") */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_12:\n    /* \"contracts/Boost.sol\":46728:46737  swapToken */\n  0x02\n    /* \"contracts/Boost.sol\":46728:46750  swapToken = _swapToken */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup7\n  and\n  or\n  swap1\n  sstore\n    /* \"contracts/Boost.sol\":46760:46773  tokenPerBlock */\n  0x03\n    /* \"contracts/Boost.sol\":46760:46790  tokenPerBlock = _tokenPerBlock */\n  dup4\n  swap1\n  sstore\n    /* \"contracts/Boost.sol\":46800:46824  startBlock = _startBlock */\n  0x80\n  dup3\n  swap1\n  mstore\n    /* \"contracts/Boost.sol\":46834:46840  period */\n  0x05\n    /* \"contracts/Boost.sol\":46834:46850  period = _period */\n  dup2\n  swap1\n  sstore\n    /* \"contracts/Boost.sol\":46877:46901  _startBlock.add(_period) */\n  tag_15\n    /* \"contracts/Boost.sol\":46800:46824  startBlock = _startBlock */\n  dup3\n    /* \"contracts/Boost.sol\":46834:46850  period = _period */\n  dup3\n    /* \"contracts/Boost.sol\":46877:46892  _startBlock.add */\n  tag_16\n  0x20\n  swap1\n  dup2\n  shl\n  tag_0_222\n  or\n    /* \"contracts/Boost.sol\":46877:46901  _startBlock.add(_period) */\n  swap1\n  shr\n  jump\t// in\ntag_15:\n    /* \"contracts/Boost.sol\":46860:46874  periodEndBlock */\n  0x04\n    /* \"contracts/Boost.sol\":46860:46901  periodEndBlock = _startBlock.add(_period) */\n  swap1\n  dup2\n  sstore\n    /* \"contracts/Boost.sol\":46923:46927  1000 */\n  0x03e8\n    /* \"contracts/Boost.sol\":46911:46920  mintMulti */\n  0x06\n    /* \"contracts/Boost.sol\":46911:46927  mintMulti = 1000 */\n  sstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/Boost.sol\":50468:50482  veToken = __ve */\n  dup12\n  and\n  0xa0\n  dup2\n  swap1\n  mstore\n    /* \"contracts/Boost.sol\":50499:50521  IVeToken(__ve).token() */\n  0x40\n  dup1\n  mload\n  shl(0xe1, 0x7e062a35)\n  dup2\n  mstore\n  swap1\n  mload\n    /* \"contracts/Boost.sol\":50468:50482  veToken = __ve */\n  swap2\n  swap8\n  pop\n    /* \"contracts/Boost.sol\":50499:50519  IVeToken(__ve).token */\n  0xfc0c546a\n  swap7\n  pop\n    /* \"contracts/Boost.sol\":50499:50521  IVeToken(__ve).token() */\n  dup1\n  dup4\n  add\n  swap6\n  pop\n  0x20\n  swap5\n  pop\n  swap1\n  swap3\n  pop\n  dup3\n  swap1\n  sub\n  add\n  dup2\n    /* \"contracts/Boost.sol\":50468:50482  veToken = __ve */\n  dup7\n    /* \"contracts/Boost.sol\":50499:50521  IVeToken(__ve).token() */\n  gas\n  staticcall\n  iszero\n  dup1\n  iszero\n  tag_19\n  jumpi\n  returndatasize\n  0x00\n  dup1\n  returndatacopy\n  revert(0x00, returndatasize)\ntag_19:\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_20\n  swap2\n  swap1\n  tag_21\n  jump\t// in\ntag_20:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/Boost.sol\":50492:50521  base = IVeToken(__ve).token() */\n  swap1\n  dup2\n  and\n  0xc0\n  mstore\n    /* \"contracts/Boost.sol\":55529:55551  gaugeFactory = _gauges */\n  swap11\n  swap1\n  swap11\n  and\n  0xe0\n  mstore\n  pop\n    /* \"contracts/Boost.sol\":54066:59920  contract Boost is ReentrancyGuard, AbstractBoost {... */\n  tag_28\n  swap11\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  jump\n    /* \"contracts/Boost.sol\":25686:25782  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\ntag_16:\n    /* \"contracts/Boost.sol\":25744:25751  uint256 */\n  0x00\n    /* \"contracts/Boost.sol\":25770:25775  a + b */\n  tag_25\n    /* \"contracts/Boost.sol\":25774:25775  b */\n  dup3\n    /* \"contracts/Boost.sol\":25770:25771  a */\n  dup5\n    /* \"contracts/Boost.sol\":25770:25775  a + b */\n  tag_26\n  jump\t// in\ntag_25:\n    /* \"contracts/Boost.sol\":25763:25775  return a + b */\n  swap4\n    /* \"contracts/Boost.sol\":25686:25782  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:145   */\ntag_27:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":89:120   */\n  dup2\n  and\n    /* \"#utility.yul\":79:121   */\n  dup2\n  eq\n    /* \"#utility.yul\":69:139   */\n  tag_30\n  jumpi\n    /* \"#utility.yul\":135:136   */\n  0x00\n    /* \"#utility.yul\":132:133   */\n  dup1\n    /* \"#utility.yul\":125:137   */\n  revert\n    /* \"#utility.yul\":69:139   */\ntag_30:\n    /* \"#utility.yul\":14:145   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":150:1005   */\ntag_3:\n    /* \"#utility.yul\":289:295   */\n  0x00\n    /* \"#utility.yul\":297:303   */\n  dup1\n    /* \"#utility.yul\":305:311   */\n  0x00\n    /* \"#utility.yul\":313:319   */\n  dup1\n    /* \"#utility.yul\":321:327   */\n  0x00\n    /* \"#utility.yul\":329:335   */\n  dup1\n    /* \"#utility.yul\":337:343   */\n  0x00\n    /* \"#utility.yul\":390:393   */\n  0xe0\n    /* \"#utility.yul\":378:387   */\n  dup9\n    /* \"#utility.yul\":369:376   */\n  dup11\n    /* \"#utility.yul\":365:388   */\n  sub\n    /* \"#utility.yul\":361:394   */\n  slt\n    /* \"#utility.yul\":358:411   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":407:408   */\n  0x00\n    /* \"#utility.yul\":404:405   */\n  dup1\n    /* \"#utility.yul\":397:409   */\n  revert\n    /* \"#utility.yul\":358:411   */\ntag_32:\n    /* \"#utility.yul\":439:448   */\n  dup8\n    /* \"#utility.yul\":433:449   */\n  mload\n    /* \"#utility.yul\":458:489   */\n  tag_33\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":458:489   */\n  tag_27\n  jump\t// in\ntag_33:\n    /* \"#utility.yul\":558:560   */\n  0x20\n    /* \"#utility.yul\":543:561   */\n  dup10\n  add\n    /* \"#utility.yul\":537:562   */\n  mload\n    /* \"#utility.yul\":508:513   */\n  swap1\n  swap8\n  pop\n    /* \"#utility.yul\":571:604   */\n  tag_34\n    /* \"#utility.yul\":537:562   */\n  dup2\n    /* \"#utility.yul\":571:604   */\n  tag_27\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":675:677   */\n  0x40\n    /* \"#utility.yul\":660:678   */\n  dup10\n  add\n    /* \"#utility.yul\":654:679   */\n  mload\n    /* \"#utility.yul\":623:630   */\n  swap1\n  swap7\n  pop\n    /* \"#utility.yul\":688:721   */\n  tag_35\n    /* \"#utility.yul\":654:679   */\n  dup2\n    /* \"#utility.yul\":688:721   */\n  tag_27\n  jump\t// in\ntag_35:\n    /* \"#utility.yul\":792:794   */\n  0x60\n    /* \"#utility.yul\":777:795   */\n  dup10\n  add\n    /* \"#utility.yul\":771:796   */\n  mload\n    /* \"#utility.yul\":740:747   */\n  swap1\n  swap6\n  pop\n    /* \"#utility.yul\":805:838   */\n  tag_36\n    /* \"#utility.yul\":771:796   */\n  dup2\n    /* \"#utility.yul\":805:838   */\n  tag_27\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":857:864   */\n  dup1\n    /* \"#utility.yul\":847:864   */\n  swap5\n  pop\n  pop\n    /* \"#utility.yul\":904:907   */\n  0x80\n    /* \"#utility.yul\":893:902   */\n  dup9\n    /* \"#utility.yul\":889:908   */\n  add\n    /* \"#utility.yul\":883:909   */\n  mload\n    /* \"#utility.yul\":873:909   */\n  swap3\n  pop\n    /* \"#utility.yul\":949:952   */\n  0xa0\n    /* \"#utility.yul\":938:947   */\n  dup9\n    /* \"#utility.yul\":934:953   */\n  add\n    /* \"#utility.yul\":928:954   */\n  mload\n    /* \"#utility.yul\":918:954   */\n  swap2\n  pop\n    /* \"#utility.yul\":994:997   */\n  0xc0\n    /* \"#utility.yul\":983:992   */\n  dup9\n    /* \"#utility.yul\":979:998   */\n  add\n    /* \"#utility.yul\":973:999   */\n  mload\n    /* \"#utility.yul\":963:999   */\n  swap1\n  pop\n    /* \"#utility.yul\":150:1005   */\n  swap3\n  swap6\n  swap9\n  swap2\n  swap5\n  swap8\n  pop\n  swap3\n  swap6\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1353:1604   */\ntag_21:\n    /* \"#utility.yul\":1423:1429   */\n  0x00\n    /* \"#utility.yul\":1476:1478   */\n  0x20\n    /* \"#utility.yul\":1464:1473   */\n  dup3\n    /* \"#utility.yul\":1455:1462   */\n  dup5\n    /* \"#utility.yul\":1451:1474   */\n  sub\n    /* \"#utility.yul\":1447:1479   */\n  slt\n    /* \"#utility.yul\":1444:1496   */\n  iszero\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1492:1493   */\n  0x00\n    /* \"#utility.yul\":1489:1490   */\n  dup1\n    /* \"#utility.yul\":1482:1494   */\n  revert\n    /* \"#utility.yul\":1444:1496   */\ntag_39:\n    /* \"#utility.yul\":1524:1533   */\n  dup2\n    /* \"#utility.yul\":1518:1534   */\n  mload\n    /* \"#utility.yul\":1543:1574   */\n  tag_25\n    /* \"#utility.yul\":1568:1573   */\n  dup2\n    /* \"#utility.yul\":1543:1574   */\n  tag_27\n  jump\t// in\n    /* \"#utility.yul\":1609:1834   */\ntag_26:\n    /* \"#utility.yul\":1649:1652   */\n  0x00\n    /* \"#utility.yul\":1680:1681   */\n  dup3\n    /* \"#utility.yul\":1676:1682   */\n  not\n    /* \"#utility.yul\":1673:1674   */\n  dup3\n    /* \"#utility.yul\":1670:1683   */\n  gt\n    /* \"#utility.yul\":1667:1803   */\n  iszero\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1725:1735   */\n  0x4e487b71\n    /* \"#utility.yul\":1720:1723   */\n  0xe0\n    /* \"#utility.yul\":1716:1736   */\n  shl\n    /* \"#utility.yul\":1713:1714   */\n  0x00\n    /* \"#utility.yul\":1706:1737   */\n  mstore\n    /* \"#utility.yul\":1760:1764   */\n  0x11\n    /* \"#utility.yul\":1757:1758   */\n  0x04\n    /* \"#utility.yul\":1750:1765   */\n  mstore\n    /* \"#utility.yul\":1788:1792   */\n  0x24\n    /* \"#utility.yul\":1785:1786   */\n  0x00\n    /* \"#utility.yul\":1778:1793   */\n  revert\n    /* \"#utility.yul\":1667:1803   */\ntag_42:\n  pop\n    /* \"#utility.yul\":1819:1828   */\n  add\n  swap1\n    /* \"#utility.yul\":1609:1834   */\n  jump\t// out\ntag_28:\n    /* \"contracts/Boost.sol\":54066:59920  contract Boost is ReentrancyGuard, AbstractBoost {... */\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  mload(0xe0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xd9739df46dfdd521a391746f00fdacc0c205dbe0bf8fd2fb0318555a37670272\")\n  0x00\n  assignImmutable(\"0xe286daea00804cb622cafc785bc7a2be58437b5a6c7dc9a1d58591e6a2221fb2\")\n  0x00\n  assignImmutable(\"0xeb87824f736d67edaf3560d951b0b69190da7967ad8d2ed342933b58834b3812\")\n  0x00\n  assignImmutable(\"0xb82071edfff134ff1052b654ae69c3c67bf3f8b35ce6706309fa7f2bcffe5e17\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/Boost.sol\":54066:59920  contract Boost is ReentrancyGuard, AbstractBoost {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x630b5ba1\n      gt\n      tag_49\n      jumpi\n      dup1\n      0xa86a366d\n      gt\n      tag_50\n      jumpi\n      dup1\n      0xb9a09fd5\n      gt\n      tag_51\n      jumpi\n      dup1\n      0xb9a09fd5\n      eq\n      tag_43\n      jumpi\n      dup1\n      0xd23254b4\n      eq\n      tag_44\n      jumpi\n      dup1\n      0xdc73e49c\n      eq\n      tag_45\n      jumpi\n      dup1\n      0xea94ee44\n      eq\n      tag_46\n      jumpi\n      dup1\n      0xef78d4fd\n      eq\n      tag_47\n      jumpi\n      dup1\n      0xfecdad60\n      eq\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      dup1\n      0xa86a366d\n      eq\n      tag_37\n      jumpi\n      dup1\n      0xaa70fb98\n      eq\n      tag_38\n      jumpi\n      dup1\n      0xaa79979b\n      eq\n      tag_39\n      jumpi\n      dup1\n      0xac4afa38\n      eq\n      tag_40\n      jumpi\n      dup1\n      0xb0c7044b\n      eq\n      tag_41\n      jumpi\n      dup1\n      0xb5ec5c99\n      eq\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      dup1\n      0x79e93824\n      gt\n      tag_52\n      jumpi\n      dup1\n      0x79e93824\n      eq\n      tag_31\n      jumpi\n      dup1\n      0x812632ec\n      eq\n      tag_32\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_33\n      jumpi\n      dup1\n      0x96c82e57\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xa61c713a\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xa7cac846\n      eq\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      dup1\n      0x630b5ba1\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x63453ae1\n      eq\n      tag_27\n      jumpi\n      dup1\n      0x64482f79\n      eq\n      tag_28\n      jumpi\n      dup1\n      0x698473e3\n      eq\n      tag_29\n      jumpi\n      dup1\n      0x71dd4bda\n      eq\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      dup1\n      0x32145f90\n      gt\n      tag_53\n      jumpi\n      dup1\n      0x48cd4cb1\n      gt\n      tag_54\n      jumpi\n      dup1\n      0x48cd4cb1\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x48ee26a3\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x4ade739b\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x51eb05a6\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x53d78693\n      eq\n      tag_24\n      jumpi\n      dup1\n      0x570ca735\n      eq\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      dup1\n      0x32145f90\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x37550684\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x3b92eb23\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x411b1f77\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x4198709a\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x442da82f\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      dup1\n      0x0fb5a6b4\n      gt\n      tag_55\n      jumpi\n      dup1\n      0x0fb5a6b4\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x146650df\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x1526fe27\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x17caf6f1\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x20b1cb6f\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x310bd74b\n      eq\n      tag_13\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      dup1\n      0x06d6a1b2\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x081e3eda\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0c9c7ef5\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x0d52333c\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x0f589d63\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Boost.sol\":55141:55188  mapping(address => address) public poolForGauge */\n    tag_3:\n      tag_56\n      tag_57\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_57:\n      mstore(0x20, 0x12)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_56:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":566:598   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":548:599   */\n      dup2\n      mstore\n        /* \"#utility.yul\":536:538   */\n      0x20\n        /* \"#utility.yul\":521:539   */\n      add\n        /* \"contracts/Boost.sol\":55141:55188  mapping(address => address) public poolForGauge */\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Boost.sol\":55565:55656  function poolLength() public view returns (uint256) {... */\n    tag_4:\n        /* \"contracts/Boost.sol\":55634:55642  poolInfo */\n      0x0e\n        /* \"contracts/Boost.sol\":55634:55649  poolInfo.length */\n      sload\n        /* \"contracts/Boost.sol\":55565:55656  function poolLength() public view returns (uint256) {... */\n    tag_62:\n      mload(0x40)\n        /* \"#utility.yul\":756:781   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":744:746   */\n      0x20\n        /* \"#utility.yul\":729:747   */\n      add\n        /* \"contracts/Boost.sol\":55565:55656  function poolLength() public view returns (uint256) {... */\n      tag_60\n        /* \"#utility.yul\":610:787   */\n      jump\n        /* \"contracts/Boost.sol\":55662:56688  function createGauge(address _pool, uint256 _allocPoint, bool _withUpdate) external returns (address) {... */\n    tag_5:\n      tag_56\n      tag_67\n      calldatasize\n      0x04\n      tag_68\n      jump\t// in\n    tag_67:\n      tag_69\n      jump\t// in\n        /* \"contracts/Boost.sol\":54735:54772  address public immutable gaugeFactory */\n    tag_6:\n      tag_56\n      immutable(\"0xd9739df46dfdd521a391746f00fdacc0c205dbe0bf8fd2fb0318555a37670272\")\n      dup2\n      jump\n        /* \"contracts/Boost.sol\":45393:45646  function setOperContract(address _oper) public onlyOwner {... */\n    tag_7:\n      tag_74\n      tag_75\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n    tag_74:\n      stop\n        /* \"contracts/Boost.sol\":54933:54971  uint public constant duration = 7 days */\n    tag_8:\n      tag_62\n        /* \"contracts/Boost.sol\":54965:54971  7 days */\n      0x093a80\n        /* \"contracts/Boost.sol\":54933:54971  uint public constant duration = 7 days */\n      dup2\n      jump\n        /* \"contracts/Boost.sol\":50535:50652  function getPoolVote(uint256 tokenId) public view returns (address[] memory){... */\n    tag_9:\n      tag_80\n      tag_81\n      calldatasize\n      0x04\n      tag_82\n      jump\t// in\n    tag_81:\n      tag_83\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n        /* \"contracts/Boost.sol\":54818:54844  PoolInfo[] public poolInfo */\n    tag_10:\n      tag_86\n      tag_87\n      calldatasize\n      0x04\n      tag_82\n      jump\t// in\n    tag_87:\n      tag_88\n      jump\t// in\n    tag_86:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2507:2539   */\n      swap1\n      swap5\n      and\n        /* \"#utility.yul\":2489:2540   */\n      dup5\n      mstore\n        /* \"#utility.yul\":2571:2573   */\n      0x20\n        /* \"#utility.yul\":2556:2574   */\n      dup5\n      add\n        /* \"#utility.yul\":2549:2583   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":2599:2617   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":2592:2626   */\n      mstore\n        /* \"#utility.yul\":2477:2479   */\n      0x60\n        /* \"#utility.yul\":2462:2480   */\n      add\n        /* \"contracts/Boost.sol\":54818:54844  PoolInfo[] public poolInfo */\n      tag_60\n        /* \"#utility.yul\":2287:2632   */\n      jump\n        /* \"contracts/Boost.sol\":54778:54812  uint256 public totalAllocPoint = 0 */\n    tag_11:\n      tag_62\n      sload(0x0d)\n      dup2\n      jump\n        /* \"contracts/Boost.sol\":59368:59588  function claimRewards(address[] memory _gauges, address[][] memory _tokens) external {... */\n    tag_12:\n      tag_74\n      tag_95\n      calldatasize\n      0x04\n      tag_96\n      jump\t// in\n    tag_95:\n      tag_97\n      jump\t// in\n        /* \"contracts/Boost.sol\":50658:50851  function reset(uint _tokenId) external {... */\n    tag_13:\n      tag_74\n      tag_99\n      calldatasize\n      0x04\n      tag_82\n      jump\t// in\n    tag_99:\n      tag_100\n      jump\t// in\n        /* \"contracts/Boost.sol\":53204:53569  function poke(uint _tokenId) external {... */\n    tag_14:\n      tag_74\n      tag_102\n      calldatasize\n      0x04\n      tag_82\n      jump\t// in\n    tag_102:\n      tag_103\n      jump\t// in\n        /* \"contracts/Boost.sol\":46386:46410  uint256 public mintMulti */\n    tag_15:\n      tag_62\n      sload(0x06)\n      dup2\n      jump\n        /* \"contracts/Boost.sol\":49799:49831  address public immutable veToken */\n    tag_16:\n      tag_56\n      immutable(\"0xeb87824f736d67edaf3560d951b0b69190da7967ad8d2ed342933b58834b3812\")\n      dup2\n      jump\n        /* \"contracts/Boost.sol\":58602:58828  function detachTokenFromGauge(uint tokenId, address account) external {... */\n    tag_17:\n      tag_74\n      tag_111\n      calldatasize\n      0x04\n      tag_112\n      jump\t// in\n    tag_111:\n      tag_113\n      jump\t// in\n        /* \"contracts/Boost.sol\":46196:46224  uint256 public tokenPerBlock */\n    tag_18:\n      tag_62\n      sload(0x03)\n      dup2\n      jump\n        /* \"contracts/Boost.sol\":46271:46300  uint256 public periodEndBlock */\n    tag_19:\n      tag_62\n      sload(0x04)\n      dup2\n      jump\n        /* \"contracts/Boost.sol\":46230:46265  uint256 public immutable startBlock */\n    tag_20:\n      tag_62\n      immutable(\"0xb82071edfff134ff1052b654ae69c3c67bf3f8b35ce6706309fa7f2bcffe5e17\")\n      dup2\n      jump\n        /* \"contracts/Boost.sol\":44672:44700  Operatable public operatable */\n    tag_21:\n      sload(0x01)\n      tag_56\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/Boost.sol\":47736:47935  function setTokenPerBlock(uint256 _newPerBlock, bool _withUpdate) public onlyOperator {... */\n    tag_22:\n      tag_74\n      tag_128\n      calldatasize\n      0x04\n      tag_129\n      jump\t// in\n    tag_128:\n      tag_130\n      jump\t// in\n        /* \"contracts/Boost.sol\":57256:58182  function updatePool(uint256 _pid) public reduceBlockReward {... */\n    tag_23:\n      tag_74\n      tag_132\n      calldatasize\n      0x04\n      tag_82\n      jump\t// in\n    tag_132:\n      tag_133\n      jump\t// in\n        /* \"contracts/Boost.sol\":59021:59217  function updateAll() external {... */\n    tag_24:\n      tag_74\n      tag_135\n      jump\t// in\n        /* \"contracts/Boost.sol\":45179:45283  function operator() public view override returns (address) {... */\n    tag_25:\n      tag_56\n      tag_137\n      jump\t// in\n        /* \"contracts/Boost.sol\":56999:57183  function massUpdatePools() public override {... */\n    tag_26:\n      tag_74\n      tag_140\n      jump\t// in\n        /* \"contracts/Boost.sol\":59594:59678  function distribute(address _gauge) public {... */\n    tag_27:\n      tag_74\n      tag_142\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_142:\n      tag_143\n      jump\t// in\n        /* \"contracts/Boost.sol\":56694:56993  function set(uint256 _pid, uint256 _allocPoint, bool _withUpdate) public onlyOwner {... */\n    tag_28:\n      tag_74\n      tag_145\n      calldatasize\n      0x04\n      tag_146\n      jump\t// in\n    tag_145:\n      tag_147\n      jump\t// in\n        /* \"contracts/Boost.sol\":58189:58411  function attachTokenToGauge(uint tokenId, address account) external {... */\n    tag_29:\n      tag_74\n      tag_149\n      calldatasize\n      0x04\n      tag_112\n      jump\t// in\n    tag_149:\n      tag_150\n      jump\t// in\n        /* \"contracts/Boost.sol\":47473:47566  function setMintMulti(uint256 _multi) public onlyOperator {... */\n    tag_30:\n      tag_74\n      tag_152\n      calldatasize\n      0x04\n      tag_82\n      jump\t// in\n    tag_152:\n      tag_153\n      jump\t// in\n        /* \"contracts/Boost.sol\":50135:50175  mapping(uint => uint) public usedWeights */\n    tag_31:\n      tag_62\n      tag_155\n      calldatasize\n      0x04\n      tag_82\n      jump\t// in\n    tag_155:\n      mstore(0x20, 0x0c)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/Boost.sol\":46417:46456  uint256 public minTokenReward = 1.75e17 */\n    tag_32:\n      tag_62\n      sload(0x07)\n      dup2\n      jump\n        /* \"contracts/Boost.sol\":45289:45387  function owner() public view override returns (address) {... */\n    tag_33:\n      tag_56\n      tag_162\n      jump\t// in\n        /* \"contracts/Boost.sol\":49746:49769  uint public totalWeight */\n    tag_34:\n      tag_62\n      sload(0x08)\n      dup2\n      jump\n        /* \"contracts/Boost.sol\":58417:58596  function emitDeposit(uint tokenId, address account, uint amount) external {... */\n    tag_35:\n      tag_74\n      tag_168\n      calldatasize\n      0x04\n      tag_169\n      jump\t// in\n    tag_168:\n      tag_170\n      jump\t// in\n        /* \"contracts/Boost.sol\":49920:49961  mapping(address => int256) public weights */\n    tag_36:\n      tag_62\n      tag_172\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_172:\n      mstore(0x20, 0x09)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/Boost.sol\":50071:50113  mapping(uint => address[]) public poolVote */\n    tag_37:\n      tag_56\n      tag_177\n      calldatasize\n      0x04\n      tag_178\n      jump\t// in\n    tag_177:\n      tag_179\n      jump\t// in\n        /* \"contracts/Boost.sol\":47572:47677  function setMinTokenReward(uint256 _reward) public onlyOperator {... */\n    tag_38:\n      tag_74\n      tag_182\n      calldatasize\n      0x04\n      tag_82\n      jump\t// in\n    tag_182:\n      tag_183\n      jump\t// in\n        /* \"contracts/Boost.sol\":55211:55250  mapping(address => bool) public isGauge */\n    tag_39:\n      tag_184\n      tag_185\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_185:\n      mstore(0x20, 0x13)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n    tag_184:\n      mload(0x40)\n        /* \"#utility.yul\":7598:7612   */\n      swap1\n      iszero\n        /* \"#utility.yul\":7591:7613   */\n      iszero\n        /* \"#utility.yul\":7573:7614   */\n      dup2\n      mstore\n        /* \"#utility.yul\":7561:7563   */\n      0x20\n        /* \"#utility.yul\":7546:7564   */\n      add\n        /* \"contracts/Boost.sol\":55211:55250  mapping(address => bool) public isGauge */\n      tag_60\n        /* \"#utility.yul\":7433:7620   */\n      jump\n        /* \"contracts/Boost.sol\":55014:55036  address[] public pools */\n    tag_40:\n      tag_56\n      tag_190\n      calldatasize\n      0x04\n      tag_82\n      jump\t// in\n    tag_190:\n      tag_191\n      jump\t// in\n        /* \"contracts/Boost.sol\":54883:54925  mapping(address => uint256) public LpOfPid */\n    tag_41:\n      tag_62\n      tag_194\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_194:\n      mstore(0x20, 0x0f)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/Boost.sol\":47373:47467  function setHalvingPeriod(uint256 _block) public onlyOperator {... */\n    tag_42:\n      tag_74\n      tag_198\n      calldatasize\n      0x04\n      tag_82\n      jump\t// in\n    tag_198:\n      tag_199\n      jump\t// in\n        /* \"contracts/Boost.sol\":55077:55118  mapping(address => address) public gauges */\n    tag_43:\n      tag_56\n      tag_201\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_201:\n      mstore(0x20, 0x11)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/Boost.sol\":49985:50041  mapping(uint => mapping(address => int256)) public votes */\n    tag_44:\n      tag_62\n      tag_205\n      calldatasize\n      0x04\n      tag_112\n      jump\t// in\n    tag_205:\n      0x0a\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/Boost.sol\":46166:46189  IToken public swapToken */\n    tag_45:\n      sload(0x02)\n      tag_56\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"contracts/Boost.sol\":58834:59015  function emitWithdraw(uint tokenId, address account, uint amount) external {... */\n    tag_46:\n      tag_74\n      tag_213\n      calldatasize\n      0x04\n      tag_169\n      jump\t// in\n    tag_213:\n      tag_214\n      jump\t// in\n        /* \"contracts/Boost.sol\":46358:46379  uint256 public period */\n    tag_47:\n      tag_62\n      sload(0x05)\n      dup2\n      jump\n        /* \"contracts/Boost.sol\":53576:53852  function vote(uint tokenId, address[] calldata _poolVote, int256[] calldata _weights) external {... */\n    tag_48:\n      tag_74\n      tag_219\n      calldatasize\n      0x04\n      tag_220\n      jump\t// in\n    tag_219:\n      tag_221\n      jump\t// in\n        /* \"contracts/Boost.sol\":55662:56688  function createGauge(address _pool, uint256 _allocPoint, bool _withUpdate) external returns (address) {... */\n    tag_69:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Boost.sol\":55782:55795  gauges[_pool] */\n      dup4\n      dup2\n      and\n        /* \"contracts/Boost.sol\":55755:55762  address */\n      0x00\n        /* \"contracts/Boost.sol\":55782:55795  gauges[_pool] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Boost.sol\":55782:55788  gauges */\n      0x11\n        /* \"contracts/Boost.sol\":55782:55795  gauges[_pool] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/Boost.sol\":55755:55762  address */\n      swap1\n      swap2\n        /* \"contracts/Boost.sol\":55782:55795  gauges[_pool] */\n      and\n        /* \"contracts/Boost.sol\":55782:55811  gauges[_pool] == address(0x0) */\n      iszero\n        /* \"contracts/Boost.sol\":55774:55822  require(gauges[_pool] == address(0x0), \"exists\") */\n      tag_225\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9267:9269   */\n      0x20\n        /* \"contracts/Boost.sol\":55774:55822  require(gauges[_pool] == address(0x0), \"exists\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9249:9270   */\n      mstore\n        /* \"#utility.yul\":9306:9307   */\n      0x06\n        /* \"#utility.yul\":9286:9304   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9279:9308   */\n      mstore\n      shl(0xd0, 0x657869737473)\n        /* \"#utility.yul\":9324:9342   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9317:9353   */\n      mstore\n        /* \"#utility.yul\":9370:9388   */\n      0x64\n      add\n        /* \"contracts/Boost.sol\":55774:55822  require(gauges[_pool] == address(0x0), \"exists\") */\n    tag_226:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_225:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Boost.sol\":55841:55869  address(_pool) != address(0) */\n      dup5\n      and\n        /* \"contracts/Boost.sol\":55833:55902  require(address(_pool) != address(0), \"_lpToken is the zero address\") */\n      tag_228\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9601:9603   */\n      0x20\n        /* \"contracts/Boost.sol\":55833:55902  require(address(_pool) != address(0), \"_lpToken is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9583:9604   */\n      mstore\n        /* \"#utility.yul\":9640:9642   */\n      0x1c\n        /* \"#utility.yul\":9620:9638   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9613:9643   */\n      mstore\n        /* \"#utility.yul\":9679:9709   */\n      0x5f6c70546f6b656e20697320746865207a65726f206164647265737300000000\n        /* \"#utility.yul\":9659:9677   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9652:9710   */\n      mstore\n        /* \"#utility.yul\":9727:9745   */\n      0x64\n      add\n        /* \"contracts/Boost.sol\":55833:55902  require(address(_pool) != address(0), \"_lpToken is the zero address\") */\n      tag_226\n        /* \"#utility.yul\":9399:9751   */\n      jump\n        /* \"contracts/Boost.sol\":55833:55902  require(address(_pool) != address(0), \"_lpToken is the zero address\") */\n    tag_228:\n        /* \"contracts/Boost.sol\":55916:55927  _withUpdate */\n      dup2\n        /* \"contracts/Boost.sol\":55912:55971  if (_withUpdate) {... */\n      iszero\n      tag_232\n      jumpi\n        /* \"contracts/Boost.sol\":55943:55960  massUpdatePools() */\n      tag_232\n        /* \"contracts/Boost.sol\":55943:55958  massUpdatePools */\n      tag_140\n        /* \"contracts/Boost.sol\":55943:55960  massUpdatePools() */\n      jump\t// in\n    tag_232:\n        /* \"contracts/Boost.sol\":55980:56003  uint256 lastRewardBlock */\n      0x00\n        /* \"contracts/Boost.sol\":56021:56031  startBlock */\n      immutable(\"0xb82071edfff134ff1052b654ae69c3c67bf3f8b35ce6706309fa7f2bcffe5e17\")\n        /* \"contracts/Boost.sol\":56006:56018  block.number */\n      number\n        /* \"contracts/Boost.sol\":56006:56031  block.number > startBlock */\n      gt\n        /* \"contracts/Boost.sol\":56006:56059  block.number > startBlock ? block.number : startBlock */\n      tag_233\n      jumpi\n        /* \"contracts/Boost.sol\":56049:56059  startBlock */\n      immutable(\"0xb82071edfff134ff1052b654ae69c3c67bf3f8b35ce6706309fa7f2bcffe5e17\")\n        /* \"contracts/Boost.sol\":56006:56059  block.number > startBlock ? block.number : startBlock */\n      jump(tag_234)\n    tag_233:\n        /* \"contracts/Boost.sol\":56034:56046  block.number */\n      number\n        /* \"contracts/Boost.sol\":56006:56059  block.number > startBlock ? block.number : startBlock */\n    tag_234:\n        /* \"contracts/Boost.sol\":56087:56102  totalAllocPoint */\n      sload(0x0d)\n        /* \"contracts/Boost.sol\":55980:56059  uint256 lastRewardBlock = block.number > startBlock ? block.number : startBlock */\n      swap1\n      swap2\n      pop\n        /* \"contracts/Boost.sol\":56087:56119  totalAllocPoint.add(_allocPoint) */\n      tag_235\n      swap1\n        /* \"contracts/Boost.sol\":56107:56118  _allocPoint */\n      dup6\n        /* \"contracts/Boost.sol\":56087:56106  totalAllocPoint.add */\n      tag_222\n        /* \"contracts/Boost.sol\":56087:56119  totalAllocPoint.add(_allocPoint) */\n      jump\t// in\n    tag_235:\n        /* \"contracts/Boost.sol\":56069:56084  totalAllocPoint */\n      0x0d\n        /* \"contracts/Boost.sol\":56069:56119  totalAllocPoint = totalAllocPoint.add(_allocPoint) */\n      sstore\n        /* \"contracts/Boost.sol\":56143:56265  PoolInfo({... */\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup8\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      dup8\n      dup2\n      mstore\n      swap3\n      dup3\n      add\n      dup5\n      dup2\n      mstore\n        /* \"contracts/Boost.sol\":56129:56137  poolInfo */\n      0x0e\n        /* \"contracts/Boost.sol\":56129:56266  poolInfo.push(PoolInfo({... */\n      dup1\n      sload\n      0x01\n      dup1\n      dup3\n      add\n      dup4\n      sstore\n      0x00\n      dup4\n      swap1\n      mstore\n      swap5\n      mload\n      0xbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd\n      0x03\n      swap1\n      swap3\n      mul\n      swap2\n      dup3\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap2\n      swap1\n      swap6\n      and\n      or\n      swap1\n      swap4\n      sstore\n      swap4\n      mload\n      0xbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fe\n      dup4\n      add\n      sstore\n      mload\n      0xbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3ff\n      swap1\n      swap2\n      add\n      sstore\n        /* \"contracts/Boost.sol\":55634:55649  poolInfo.length */\n      swap1\n      sload\n        /* \"contracts/Boost.sol\":56302:56318  poolLength() - 1 */\n      tag_238\n      swap2\n      swap1\n      tag_239\n      jump\t// in\n    tag_238:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Boost.sol\":56276:56299  LpOfPid[address(_pool)] */\n      dup7\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Boost.sol\":56276:56283  LpOfPid */\n      0x0f\n        /* \"contracts/Boost.sol\":56276:56299  LpOfPid[address(_pool)] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/Boost.sol\":56276:56318  LpOfPid[address(_pool)] = poolLength() - 1 */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"contracts/Boost.sol\":56346:56401  IGaugeFactory(gaugeFactory).createGauge(_pool, veToken) */\n      swap3\n      mload\n      shl(0xe2, 0x1e533a8f)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":10230:10264   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/Boost.sol\":56393:56400  veToken */\n      immutable(\"0xeb87824f736d67edaf3560d951b0b69190da7967ad8d2ed342933b58834b3812\")\n        /* \"#utility.yul\":10300:10315   */\n      dup3\n      and\n        /* \"#utility.yul\":10280:10298   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10273:10316   */\n      mstore\n        /* \"contracts/Boost.sol\":56360:56372  gaugeFactory */\n      immutable(\"0xd9739df46dfdd521a391746f00fdacc0c205dbe0bf8fd2fb0318555a37670272\")\n        /* \"contracts/Boost.sol\":56346:56385  IGaugeFactory(gaugeFactory).createGauge */\n      swap1\n      swap2\n      and\n      swap1\n      0x794cea3c\n      swap1\n        /* \"#utility.yul\":10165:10183   */\n      0x44\n      add\n        /* \"contracts/Boost.sol\":56346:56401  IGaugeFactory(gaugeFactory).createGauge(_pool, veToken) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_243\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_243:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_244\n      swap2\n      swap1\n      tag_245\n      jump\t// in\n    tag_244:\n        /* \"contracts/Boost.sol\":56426:56435  swapToken */\n      sload(0x02)\n        /* \"contracts/Boost.sol\":56411:56469  IERC20(address(swapToken)).approve(_gauge, type(uint).max) */\n      mload(0x40)\n      shl(0xe0, 0x095ea7b3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10775:10807   */\n      dup1\n      dup5\n      and\n        /* \"contracts/Boost.sol\":56411:56469  IERC20(address(swapToken)).approve(_gauge, type(uint).max) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":10757:10808   */\n      mstore\n      not(0x00)\n        /* \"#utility.yul\":10824:10842   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":10817:10851   */\n      mstore\n        /* \"contracts/Boost.sol\":56329:56401  address _gauge = IGaugeFactory(gaugeFactory).createGauge(_pool, veToken) */\n      swap3\n      swap4\n      pop\n        /* \"contracts/Boost.sol\":56426:56435  swapToken */\n      swap2\n      and\n      swap1\n        /* \"contracts/Boost.sol\":56411:56445  IERC20(address(swapToken)).approve */\n      0x095ea7b3\n      swap1\n        /* \"#utility.yul\":10730:10748   */\n      0x44\n      add\n        /* \"contracts/Boost.sol\":56411:56469  IERC20(address(swapToken)).approve(_gauge, type(uint).max) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_249\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_249:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_250\n      swap2\n      swap1\n      tag_251\n      jump\t// in\n    tag_250:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Boost.sol\":56479:56492  gauges[_pool] */\n      dup1\n      dup8\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Boost.sol\":56479:56485  gauges */\n      0x11\n        /* \"contracts/Boost.sol\":56479:56492  gauges[_pool] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Boost.sol\":56479:56501  gauges[_pool] = _gauge */\n      dup1\n      sload\n      swap6\n      dup8\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap7\n      dup8\n      and\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Boost.sol\":56511:56531  poolForGauge[_gauge] */\n      dup4\n      mstore\n        /* \"contracts/Boost.sol\":56511:56523  poolForGauge */\n      0x12\n        /* \"contracts/Boost.sol\":56511:56531  poolForGauge[_gauge] */\n      dup3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Boost.sol\":56511:56539  poolForGauge[_gauge] = _pool */\n      dup1\n      sload\n      swap1\n      swap6\n      and\n      swap1\n      swap4\n      or\n      swap1\n      swap4\n      sstore\n        /* \"contracts/Boost.sol\":56549:56556  isGauge */\n      0x13\n        /* \"contracts/Boost.sol\":56549:56564  isGauge[_gauge] */\n      swap1\n      swap3\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/Boost.sol\":56549:56571  isGauge[_gauge] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/Boost.sol\":56479:56501  gauges[_pool] = _gauge */\n      0x01\n        /* \"contracts/Boost.sol\":56549:56571  isGauge[_gauge] = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/Boost.sol\":56581:56604  _updateForGauge(_gauge) */\n      tag_252\n        /* \"contracts/Boost.sol\":56495:56501  _gauge */\n      dup2\n        /* \"contracts/Boost.sol\":56581:56596  _updateForGauge */\n      tag_253\n        /* \"contracts/Boost.sol\":56581:56604  _updateForGauge(_gauge) */\n      jump\t// in\n    tag_252:\n        /* \"contracts/Boost.sol\":56619:56658  GaugeCreated(_gauge, msg.sender, _pool) */\n      mload(0x40)\n        /* \"contracts/Boost.sol\":56640:56650  msg.sender */\n      caller\n        /* \"#utility.yul\":548:599   */\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Boost.sol\":56619:56658  GaugeCreated(_gauge, msg.sender, _pool) */\n      dup1\n      dup9\n      and\n      swap2\n      swap1\n      dup4\n      and\n      swap1\n      0x9b8203efe7fe42185a7755b0510f87c8b693971d6a7c22520aaf683e6b124261\n      swap1\n        /* \"#utility.yul\":536:538   */\n      0x20\n        /* \"#utility.yul\":521:539   */\n      add\n        /* \"contracts/Boost.sol\":56619:56658  GaugeCreated(_gauge, msg.sender, _pool) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Boost.sol\":56675:56681  _gauge */\n      swap6\n        /* \"contracts/Boost.sol\":55662:56688  function createGauge(address _pool, uint256 _allocPoint, bool _withUpdate) external returns (address) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Boost.sol\":45393:45646  function setOperContract(address _oper) public onlyOwner {... */\n    tag_76:\n        /* \"contracts/Boost.sol\":45086:45096  operatable */\n      sload(0x01)\n        /* \"contracts/Boost.sol\":45086:45104  operatable.owner() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x8da5cb5b)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/Boost.sol\":45108:45118  msg.sender */\n      caller\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Boost.sol\":45086:45096  operatable */\n      and\n      swap2\n        /* \"contracts/Boost.sol\":45086:45102  operatable.owner */\n      0x8da5cb5b\n      swap2\n        /* \"contracts/Boost.sol\":45086:45104  operatable.owner() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/Boost.sol\":45086:45096  operatable */\n      dup7\n        /* \"contracts/Boost.sol\":45086:45104  operatable.owner() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_257\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_257:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_258\n      swap2\n      swap1\n      tag_245\n      jump\t// in\n    tag_258:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Boost.sol\":45086:45118  operatable.owner() == msg.sender */\n      and\n      eq\n        /* \"contracts/Boost.sol\":45078:45155  require(operatable.owner() == msg.sender, 'Ownable: caller is not the owner') */\n      tag_259\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11314:11316   */\n      0x20\n        /* \"contracts/Boost.sol\":45078:45155  require(operatable.owner() == msg.sender, 'Ownable: caller is not the owner') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11296:11317   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":11333:11351   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11326:11356   */\n      mstore\n        /* \"#utility.yul\":11392:11426   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":11372:11390   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11365:11427   */\n      mstore\n        /* \"#utility.yul\":11444:11462   */\n      0x64\n      add\n        /* \"contracts/Boost.sol\":45078:45155  require(operatable.owner() == msg.sender, 'Ownable: caller is not the owner') */\n      tag_226\n        /* \"#utility.yul\":11112:11468   */\n      jump\n        /* \"contracts/Boost.sol\":45078:45155  require(operatable.owner() == msg.sender, 'Ownable: caller is not the owner') */\n    tag_259:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Boost.sol\":45468:45487  _oper != address(0) */\n      dup2\n      and\n        /* \"contracts/Boost.sol\":45460:45508  require(_oper != address(0), 'bad new operator') */\n      tag_263\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11675:11677   */\n      0x20\n        /* \"contracts/Boost.sol\":45460:45508  require(_oper != address(0), 'bad new operator') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11657:11678   */\n      mstore\n        /* \"#utility.yul\":11714:11716   */\n      0x10\n        /* \"#utility.yul\":11694:11712   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11687:11717   */\n      mstore\n      shl(0x81, 0x3130b2103732bb9037b832b930ba37b9)\n        /* \"#utility.yul\":11733:11751   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11726:11772   */\n      mstore\n        /* \"#utility.yul\":11789:11807   */\n      0x64\n      add\n        /* \"contracts/Boost.sol\":45460:45508  require(_oper != address(0), 'bad new operator') */\n      tag_226\n        /* \"#utility.yul\":11473:11813   */\n      jump\n        /* \"contracts/Boost.sol\":45460:45508  require(_oper != address(0), 'bad new operator') */\n    tag_263:\n        /* \"contracts/Boost.sol\":45555:45565  operatable */\n      0x01\n        /* \"contracts/Boost.sol\":45555:45585  operatable = Operatable(_oper) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Boost.sol\":45600:45639  SetOperatorContract(oldOperator, _oper) */\n      mload(0x40)\n        /* \"contracts/Boost.sol\":45555:45585  operatable = Operatable(_oper) */\n      dup3\n      swap2\n      swap1\n      dup2\n      swap1\n        /* \"contracts/Boost.sol\":45600:45639  SetOperatorContract(oldOperator, _oper) */\n      0x3ccbb406b985dd76fe05e172b432487a2ff9fe4257642d3acc350f167cb1d577\n      swap1\n      0x00\n      swap1\n      log3\n        /* \"contracts/Boost.sol\":45450:45646  {... */\n      pop\n        /* \"contracts/Boost.sol\":45393:45646  function setOperContract(address _oper) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Boost.sol\":50535:50652  function getPoolVote(uint256 tokenId) public view returns (address[] memory){... */\n    tag_83:\n        /* \"contracts/Boost.sol\":50628:50645  poolVote[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Boost.sol\":50628:50636  poolVote */\n      0x0b\n        /* \"contracts/Boost.sol\":50628:50645  poolVote[tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/Boost.sol\":50621:50645  return poolVote[tokenId] */\n      dup1\n      sload\n      dup4\n      mload\n      dup2\n      dup5\n      mul\n      dup2\n      add\n      dup5\n      add\n      swap1\n      swap5\n      mstore\n      dup1\n      dup5\n      mstore\n        /* \"contracts/Boost.sol\":50594:50610  address[] memory */\n      0x60\n      swap4\n        /* \"contracts/Boost.sol\":50621:50645  return poolVote[tokenId] */\n      swap3\n      dup4\n      add\n        /* \"contracts/Boost.sol\":50628:50645  poolVote[tokenId] */\n      dup3\n        /* \"contracts/Boost.sol\":50621:50645  return poolVote[tokenId] */\n      dup3\n      dup1\n      iszero\n      tag_267\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_268:\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_268\n      jumpi\n    tag_267:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/Boost.sol\":50535:50652  function getPoolVote(uint256 tokenId) public view returns (address[] memory){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Boost.sol\":54818:54844  PoolInfo[] public poolInfo */\n    tag_88:\n      0x0e\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_269\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_269:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x03\n      swap1\n      swap2\n      mul\n      add\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      swap1\n      swap3\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      swap3\n      pop\n      dup4\n      jump\t// out\n        /* \"contracts/Boost.sol\":59368:59588  function claimRewards(address[] memory _gauges, address[][] memory _tokens) external {... */\n    tag_97:\n        /* \"contracts/Boost.sol\":59468:59474  uint i */\n      0x00\n        /* \"contracts/Boost.sol\":59463:59582  for (uint i = 0; i < _gauges.length; i++) {... */\n    tag_272:\n        /* \"contracts/Boost.sol\":59484:59491  _gauges */\n      dup3\n        /* \"contracts/Boost.sol\":59484:59498  _gauges.length */\n      mload\n        /* \"contracts/Boost.sol\":59480:59481  i */\n      dup2\n        /* \"contracts/Boost.sol\":59480:59498  i < _gauges.length */\n      lt\n        /* \"contracts/Boost.sol\":59463:59582  for (uint i = 0; i < _gauges.length; i++) {... */\n      iszero\n      tag_273\n      jumpi\n        /* \"contracts/Boost.sol\":59526:59533  _gauges */\n      dup3\n        /* \"contracts/Boost.sol\":59534:59535  i */\n      dup2\n        /* \"contracts/Boost.sol\":59526:59536  _gauges[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_276\n      jumpi\n      tag_276\n      tag_277\n      jump\t// in\n    tag_276:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Boost.sol\":59519:59547  IGauge(_gauges[i]).getReward */\n      and\n      0x31279d3d\n        /* \"contracts/Boost.sol\":59548:59558  msg.sender */\n      caller\n        /* \"contracts/Boost.sol\":59560:59567  _tokens */\n      dup5\n        /* \"contracts/Boost.sol\":59568:59569  i */\n      dup5\n        /* \"contracts/Boost.sol\":59560:59570  _tokens[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_279\n      jumpi\n      tag_279\n      tag_277\n      jump\t// in\n    tag_279:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Boost.sol\":59519:59571  IGauge(_gauges[i]).getReward(msg.sender, _tokens[i]) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_280\n      swap3\n      swap2\n      swap1\n      tag_281\n      jump\t// in\n    tag_280:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_282\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_282:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_284\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_284:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Boost.sol\":59500:59503  i++ */\n      dup1\n      dup1\n      tag_285\n      swap1\n      tag_286\n      jump\t// in\n    tag_285:\n      swap2\n      pop\n      pop\n        /* \"contracts/Boost.sol\":59463:59582  for (uint i = 0; i < _gauges.length; i++) {... */\n      jump(tag_272)\n    tag_273:\n      pop\n        /* \"contracts/Boost.sol\":59368:59588  function claimRewards(address[] memory _gauges, address[][] memory _tokens) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Boost.sol\":50658:50851  function reset(uint _tokenId) external {... */\n    tag_100:\n        /* \"contracts/Boost.sol\":50715:50772  IVeToken(veToken).isApprovedOrOwner(msg.sender, _tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x430c2081)\n      dup2\n      mstore\n        /* \"contracts/Boost.sol\":50751:50761  msg.sender */\n      caller\n        /* \"contracts/Boost.sol\":50715:50772  IVeToken(veToken).isApprovedOrOwner(msg.sender, _tokenId) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10757:10808   */\n      mstore\n        /* \"#utility.yul\":10824:10842   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":10817:10851   */\n      dup3\n      swap1\n      mstore\n        /* \"contracts/Boost.sol\":50724:50731  veToken */\n      immutable(\"0xeb87824f736d67edaf3560d951b0b69190da7967ad8d2ed342933b58834b3812\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Boost.sol\":50715:50750  IVeToken(veToken).isApprovedOrOwner */\n      and\n      swap1\n      0x430c2081\n      swap1\n        /* \"#utility.yul\":10730:10748   */\n      0x44\n      add\n        /* \"contracts/Boost.sol\":50715:50772  IVeToken(veToken).isApprovedOrOwner(msg.sender, _tokenId) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_290\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_290:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_291\n      swap2\n      swap1\n      tag_251\n      jump\t// in\n    tag_291:\n        /* \"contracts/Boost.sol\":50707:50773  require(IVeToken(veToken).isApprovedOrOwner(msg.sender, _tokenId)) */\n      tag_292\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_292:\n        /* \"contracts/Boost.sol\":50783:50799  _reset(_tokenId) */\n      tag_293\n        /* \"contracts/Boost.sol\":50790:50798  _tokenId */\n      dup2\n        /* \"contracts/Boost.sol\":50783:50789  _reset */\n      tag_294\n        /* \"contracts/Boost.sol\":50783:50799  _reset(_tokenId) */\n      jump\t// in\n    tag_293:\n        /* \"contracts/Boost.sol\":50809:50844  IVeToken(veToken).abstain(_tokenId) */\n      mload(0x40)\n      shl(0xe0, 0xc1f0fb9f)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":756:781   */\n      dup3\n      swap1\n      mstore\n        /* \"contracts/Boost.sol\":50818:50825  veToken */\n      immutable(\"0xeb87824f736d67edaf3560d951b0b69190da7967ad8d2ed342933b58834b3812\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Boost.sol\":50809:50834  IVeToken(veToken).abstain */\n      and\n      swap1\n      0xc1f0fb9f\n      swap1\n        /* \"#utility.yul\":729:747   */\n      0x24\n      add\n        /* \"contracts/Boost.sol\":50809:50844  IVeToken(veToken).abstain(_tokenId) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_296\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_296:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_298\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_298:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Boost.sol\":50658:50851  function reset(uint _tokenId) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/Boost.sol\":53204:53569  function poke(uint _tokenId) external {... */\n    tag_103:\n        /* \"contracts/Boost.sol\":53252:53278  address[] memory _poolVote */\n      0x00\n        /* \"contracts/Boost.sol\":53281:53299  poolVote[_tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Boost.sol\":53281:53289  poolVote */\n      0x0b\n        /* \"contracts/Boost.sol\":53281:53299  poolVote[_tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Boost.sol\":53252:53299  address[] memory _poolVote = poolVote[_tokenId] */\n      dup1\n      sload\n      dup3\n      mload\n      dup2\n      dup6\n      mul\n      dup2\n      add\n      dup6\n      add\n      swap1\n      swap4\n      mstore\n      dup1\n      dup4\n      mstore\n      swap2\n      swap3\n        /* \"contracts/Boost.sol\":53281:53299  poolVote[_tokenId] */\n      swap1\n      swap2\n        /* \"contracts/Boost.sol\":53252:53299  address[] memory _poolVote = poolVote[_tokenId] */\n      swap1\n      dup4\n      add\n        /* \"contracts/Boost.sol\":53281:53299  poolVote[_tokenId] */\n      dup3\n        /* \"contracts/Boost.sol\":53252:53299  address[] memory _poolVote = poolVote[_tokenId] */\n      dup3\n      dup1\n      iszero\n      tag_300\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_301:\n      dup2\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_301\n      jumpi\n    tag_300:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/Boost.sol\":53309:53322  uint _poolCnt */\n      0x00\n        /* \"contracts/Boost.sol\":53325:53334  _poolVote */\n      dup2\n        /* \"contracts/Boost.sol\":53325:53341  _poolVote.length */\n      mload\n        /* \"contracts/Boost.sol\":53309:53341  uint _poolCnt = _poolVote.length */\n      swap1\n      pop\n        /* \"contracts/Boost.sol\":53351:53375  int256[] memory _weights */\n      0x00\n        /* \"contracts/Boost.sol\":53391:53399  _poolCnt */\n      dup2\n        /* \"contracts/Boost.sol\":53378:53400  new int256[](_poolCnt) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_303\n      jumpi\n      tag_303\n      tag_304\n      jump\t// in\n    tag_303:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_305\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_305:\n      pop\n        /* \"contracts/Boost.sol\":53351:53400  int256[] memory _weights = new int256[](_poolCnt) */\n      swap1\n      pop\n        /* \"contracts/Boost.sol\":53416:53422  uint i */\n      0x00\n        /* \"contracts/Boost.sol\":53411:53516  for (uint i = 0; i < _poolCnt; i ++) {... */\n    tag_306:\n        /* \"contracts/Boost.sol\":53432:53440  _poolCnt */\n      dup3\n        /* \"contracts/Boost.sol\":53428:53429  i */\n      dup2\n        /* \"contracts/Boost.sol\":53428:53440  i < _poolCnt */\n      lt\n        /* \"contracts/Boost.sol\":53411:53516  for (uint i = 0; i < _poolCnt; i ++) {... */\n      iszero\n      tag_307\n      jumpi\n        /* \"contracts/Boost.sol\":53476:53481  votes */\n      0x0a\n        /* \"contracts/Boost.sol\":53476:53491  votes[_tokenId] */\n      0x00\n        /* \"contracts/Boost.sol\":53482:53490  _tokenId */\n      dup7\n        /* \"contracts/Boost.sol\":53476:53491  votes[_tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Boost.sol\":53476:53505  votes[_tokenId][_poolVote[i]] */\n      0x00\n        /* \"contracts/Boost.sol\":53492:53501  _poolVote */\n      dup6\n        /* \"contracts/Boost.sol\":53502:53503  i */\n      dup4\n        /* \"contracts/Boost.sol\":53492:53504  _poolVote[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_310\n      jumpi\n      tag_310\n      tag_277\n      jump\t// in\n    tag_310:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Boost.sol\":53476:53505  votes[_tokenId][_poolVote[i]] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Boost.sol\":53462:53470  _weights */\n      dup3\n        /* \"contracts/Boost.sol\":53471:53472  i */\n      dup3\n        /* \"contracts/Boost.sol\":53462:53473  _weights[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_312\n      jumpi\n      tag_312\n      tag_277\n      jump\t// in\n    tag_312:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/Boost.sol\":53462:53505  _weights[i] = votes[_tokenId][_poolVote[i]] */\n      mstore\n        /* \"contracts/Boost.sol\":53442:53446  i ++ */\n      dup1\n      tag_313\n      dup2\n      tag_286\n      jump\t// in\n    tag_313:\n      swap2\n      pop\n      pop\n        /* \"contracts/Boost.sol\":53411:53516  for (uint i = 0; i < _poolCnt; i ++) {... */\n      jump(tag_306)\n    tag_307:\n      pop\n        /* \"contracts/Boost.sol\":53526:53562  _vote(_tokenId, _poolVote, _weights) */\n      tag_314\n        /* \"contracts/Boost.sol\":53532:53540  _tokenId */\n      dup5\n        /* \"contracts/Boost.sol\":53542:53551  _poolVote */\n      dup5\n        /* \"contracts/Boost.sol\":53553:53561  _weights */\n      dup4\n        /* \"contracts/Boost.sol\":53526:53531  _vote */\n      tag_315\n        /* \"contracts/Boost.sol\":53526:53562  _vote(_tokenId, _poolVote, _weights) */\n      jump\t// in\n    tag_314:\n        /* \"contracts/Boost.sol\":53242:53569  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/Boost.sol\":53204:53569  function poke(uint _tokenId) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/Boost.sol\":58602:58828  function detachTokenFromGauge(uint tokenId, address account) external {... */\n    tag_113:\n        /* \"contracts/Boost.sol\":58698:58708  msg.sender */\n      caller\n        /* \"contracts/Boost.sol\":58690:58709  isGauge[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Boost.sol\":58690:58697  isGauge */\n      0x13\n        /* \"contracts/Boost.sol\":58690:58709  isGauge[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/Boost.sol\":58682:58710  require(isGauge[msg.sender]) */\n      tag_317\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_317:\n        /* \"contracts/Boost.sol\":58724:58735  tokenId > 0 */\n      dup2\n      iszero\n        /* \"contracts/Boost.sol\":58720:58770  if (tokenId > 0) IVeToken(veToken).detach(tokenId) */\n      tag_318\n      jumpi\n        /* \"contracts/Boost.sol\":58737:58770  IVeToken(veToken).detach(tokenId) */\n      mload(0x40)\n      shl(0xe1, 0x4c35bec5)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":756:781   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/Boost.sol\":58746:58753  veToken */\n      immutable(\"0xeb87824f736d67edaf3560d951b0b69190da7967ad8d2ed342933b58834b3812\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Boost.sol\":58737:58761  IVeToken(veToken).detach */\n      and\n      swap1\n      0x986b7d8a\n      swap1\n        /* \"#utility.yul\":729:747   */\n      0x24\n      add\n        /* \"contracts/Boost.sol\":58737:58770  IVeToken(veToken).detach(tokenId) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_320\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_320:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_322\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_322:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Boost.sol\":58720:58770  if (tokenId > 0) IVeToken(veToken).detach(tokenId) */\n    tag_318:\n        /* \"contracts/Boost.sol\":58785:58821  Detach(account, msg.sender, tokenId) */\n      mload(0x40)\n        /* \"#utility.yul\":756:781   */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/Boost.sol\":58801:58811  msg.sender */\n      caller\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Boost.sol\":58785:58821  Detach(account, msg.sender, tokenId) */\n      dup4\n      and\n      swap1\n      0xae268d9aab12f3605f58efd74fd3801fa812b03fdb44317eb70f46dff0e19e22\n      swap1\n        /* \"#utility.yul\":744:746   */\n      0x20\n        /* \"#utility.yul\":729:747   */\n      add\n        /* \"contracts/Boost.sol\":58785:58821  Detach(account, msg.sender, tokenId) */\n    tag_323:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Boost.sol\":58602:58828  function detachTokenFromGauge(uint tokenId, address account) external {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Boost.sol\":47736:47935  function setTokenPerBlock(uint256 _newPerBlock, bool _withUpdate) public onlyOperator {... */\n    tag_130:\n        /* \"contracts/Boost.sol\":44971:44981  operatable */\n      sload(0x01)\n        /* \"contracts/Boost.sol\":44971:44992  operatable.operator() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x570ca735)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/Boost.sol\":44996:45006  msg.sender */\n      caller\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Boost.sol\":44971:44981  operatable */\n      and\n      swap2\n        /* \"contracts/Boost.sol\":44971:44990  operatable.operator */\n      0x570ca735\n      swap2\n        /* \"contracts/Boost.sol\":44971:44992  operatable.operator() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/Boost.sol\":44971:44981  operatable */\n      dup7\n        /* \"contracts/Boost.sol\":44971:44992  operatable.operator() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_326\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_326:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_327\n      swap2\n      swap1\n      tag_245\n      jump\t// in\n    tag_327:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Boost.sol\":44971:45006  operatable.operator() == msg.sender */\n      and\n      eq\n        /* \"contracts/Boost.sol\":44963:45023  require(operatable.operator() == msg.sender, 'not operator') */\n      tag_328\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_226\n      swap1\n      tag_330\n      jump\t// in\n    tag_328:\n        /* \"contracts/Boost.sol\":47836:47847  _withUpdate */\n      dup1\n        /* \"contracts/Boost.sol\":47832:47891  if (_withUpdate) {... */\n      iszero\n      tag_333\n      jumpi\n        /* \"contracts/Boost.sol\":47863:47880  massUpdatePools() */\n      tag_333\n        /* \"contracts/Boost.sol\":47863:47878  massUpdatePools */\n      tag_140\n        /* \"contracts/Boost.sol\":47863:47880  massUpdatePools() */\n      jump\t// in\n    tag_333:\n      pop\n        /* \"contracts/Boost.sol\":47900:47913  tokenPerBlock */\n      0x03\n        /* \"contracts/Boost.sol\":47900:47928  tokenPerBlock = _newPerBlock */\n      sstore\n        /* \"contracts/Boost.sol\":47736:47935  function setTokenPerBlock(uint256 _newPerBlock, bool _withUpdate) public onlyOperator {... */\n      jump\t// out\n        /* \"contracts/Boost.sol\":57256:58182  function updatePool(uint256 _pid) public reduceBlockReward {... */\n    tag_133:\n        /* \"contracts/Boost.sol\":46998:47008  startBlock */\n      immutable(\"0xb82071edfff134ff1052b654ae69c3c67bf3f8b35ce6706309fa7f2bcffe5e17\")\n        /* \"contracts/Boost.sol\":46983:46995  block.number */\n      number\n        /* \"contracts/Boost.sol\":46983:47008  block.number > startBlock */\n      gt\n        /* \"contracts/Boost.sol\":46983:47042  block.number > startBlock && block.number >= periodEndBlock */\n      dup1\n      iszero\n      tag_335\n      jumpi\n      pop\n        /* \"contracts/Boost.sol\":47028:47042  periodEndBlock */\n      sload(0x04)\n        /* \"contracts/Boost.sol\":47012:47024  block.number */\n      number\n        /* \"contracts/Boost.sol\":47012:47042  block.number >= periodEndBlock */\n      lt\n      iszero\n        /* \"contracts/Boost.sol\":46983:47042  block.number > startBlock && block.number >= periodEndBlock */\n    tag_335:\n        /* \"contracts/Boost.sol\":46979:47350  if (block.number > startBlock && block.number >= periodEndBlock) {... */\n      iszero\n      tag_336\n      jumpi\n        /* \"contracts/Boost.sol\":47078:47092  minTokenReward */\n      sload(0x07)\n        /* \"contracts/Boost.sol\":47062:47075  tokenPerBlock */\n      sload(0x03)\n        /* \"contracts/Boost.sol\":47062:47092  tokenPerBlock > minTokenReward */\n      gt\n        /* \"contracts/Boost.sol\":47058:47173  if (tokenPerBlock > minTokenReward) {... */\n      iszero\n      tag_337\n      jumpi\n        /* \"contracts/Boost.sol\":47128:47158  tokenPerBlock.mul(80).div(100) */\n      tag_338\n        /* \"contracts/Boost.sol\":47154:47157  100 */\n      0x64\n        /* \"contracts/Boost.sol\":47128:47149  tokenPerBlock.mul(80) */\n      tag_339\n        /* \"contracts/Boost.sol\":47146:47148  80 */\n      0x50\n        /* \"contracts/Boost.sol\":47128:47141  tokenPerBlock */\n      sload(0x03)\n        /* \"contracts/Boost.sol\":47128:47145  tokenPerBlock.mul */\n      tag_340\n      swap1\n        /* \"contracts/Boost.sol\":47128:47149  tokenPerBlock.mul(80) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_339:\n        /* \"contracts/Boost.sol\":47128:47153  tokenPerBlock.mul(80).div */\n      swap1\n      tag_341\n        /* \"contracts/Boost.sol\":47128:47158  tokenPerBlock.mul(80).div(100) */\n      jump\t// in\n    tag_338:\n        /* \"contracts/Boost.sol\":47112:47125  tokenPerBlock */\n      0x03\n        /* \"contracts/Boost.sol\":47112:47158  tokenPerBlock = tokenPerBlock.mul(80).div(100) */\n      sstore\n        /* \"contracts/Boost.sol\":47058:47173  if (tokenPerBlock > minTokenReward) {... */\n    tag_337:\n        /* \"contracts/Boost.sol\":47206:47220  minTokenReward */\n      sload(0x07)\n        /* \"contracts/Boost.sol\":47190:47203  tokenPerBlock */\n      sload(0x03)\n        /* \"contracts/Boost.sol\":47190:47220  tokenPerBlock < minTokenReward */\n      lt\n        /* \"contracts/Boost.sol\":47186:47285  if (tokenPerBlock < minTokenReward) {... */\n      iszero\n      tag_342\n      jumpi\n        /* \"contracts/Boost.sol\":47256:47270  minTokenReward */\n      sload(0x07)\n        /* \"contracts/Boost.sol\":47240:47253  tokenPerBlock */\n      0x03\n        /* \"contracts/Boost.sol\":47240:47270  tokenPerBlock = minTokenReward */\n      sstore\n        /* \"contracts/Boost.sol\":47186:47285  if (tokenPerBlock < minTokenReward) {... */\n    tag_342:\n        /* \"contracts/Boost.sol\":47332:47338  period */\n      sload(0x05)\n        /* \"contracts/Boost.sol\":47315:47339  block.number.add(period) */\n      tag_343\n      swap1\n        /* \"contracts/Boost.sol\":47315:47327  block.number */\n      number\n      swap1\n        /* \"contracts/Boost.sol\":47315:47331  block.number.add */\n      tag_222\n        /* \"contracts/Boost.sol\":47315:47339  block.number.add(period) */\n      jump\t// in\n    tag_343:\n        /* \"contracts/Boost.sol\":47298:47312  periodEndBlock */\n      0x04\n        /* \"contracts/Boost.sol\":47298:47339  periodEndBlock = block.number.add(period) */\n      sstore\n        /* \"contracts/Boost.sol\":46979:47350  if (block.number > startBlock && block.number >= periodEndBlock) {... */\n    tag_336:\n        /* \"contracts/Boost.sol\":57325:57346  PoolInfo storage pool */\n      0x00\n        /* \"contracts/Boost.sol\":57349:57357  poolInfo */\n      0x0e\n        /* \"contracts/Boost.sol\":57358:57362  _pid */\n      dup3\n        /* \"contracts/Boost.sol\":57349:57363  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_346\n      jumpi\n      tag_346\n      tag_277\n      jump\t// in\n    tag_346:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n        /* \"contracts/Boost.sol\":57325:57363  PoolInfo storage pool = poolInfo[_pid] */\n      swap1\n      pop\n        /* \"contracts/Boost.sol\":57393:57397  pool */\n      dup1\n        /* \"contracts/Boost.sol\":57393:57413  pool.lastRewardBlock */\n      0x02\n      add\n      sload\n        /* \"contracts/Boost.sol\":57377:57389  block.number */\n      number\n        /* \"contracts/Boost.sol\":57377:57413  block.number <= pool.lastRewardBlock */\n      gt\n        /* \"contracts/Boost.sol\":57373:57446  if (block.number <= pool.lastRewardBlock) {... */\n      tag_348\n      jumpi\n        /* \"contracts/Boost.sol\":57429:57436  return; */\n      pop\n        /* \"contracts/Boost.sol\":57256:58182  function updatePool(uint256 _pid) public reduceBlockReward {... */\n      pop\n      jump\t// out\n        /* \"contracts/Boost.sol\":57373:57446  if (block.number <= pool.lastRewardBlock) {... */\n    tag_348:\n        /* \"contracts/Boost.sol\":57481:57493  pool.lpToken */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/Boost.sol\":57455:57471  uint256 lpSupply */\n      0x00\n        /* \"contracts/Boost.sol\":57505:57525  gauges[pool.lpToken] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Boost.sol\":57505:57511  gauges */\n      0x11\n        /* \"contracts/Boost.sol\":57505:57525  gauges[pool.lpToken] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sload\n        /* \"contracts/Boost.sol\":57474:57526  IERC20(pool.lpToken).balanceOf(gauges[pool.lpToken]) */\n      swap1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/Boost.sol\":57505:57525  gauges[pool.lpToken] */\n      swap4\n      and\n        /* \"contracts/Boost.sol\":57474:57526  IERC20(pool.lpToken).balanceOf(gauges[pool.lpToken]) */\n      0x04\n      dup5\n      add\n        /* \"#utility.yul\":548:599   */\n      mstore\n        /* \"contracts/Boost.sol\":57455:57471  uint256 lpSupply */\n      swap2\n        /* \"contracts/Boost.sol\":57474:57504  IERC20(pool.lpToken).balanceOf */\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":521:539   */\n      0x24\n      add\n        /* \"contracts/Boost.sol\":57474:57526  IERC20(pool.lpToken).balanceOf(gauges[pool.lpToken]) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_351\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_351:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_352\n      swap2\n      swap1\n      tag_353\n      jump\t// in\n    tag_352:\n        /* \"contracts/Boost.sol\":57455:57526  uint256 lpSupply = IERC20(pool.lpToken).balanceOf(gauges[pool.lpToken]) */\n      swap1\n      pop\n        /* \"contracts/Boost.sol\":57540:57553  lpSupply == 0 */\n      dup1\n        /* \"contracts/Boost.sol\":57536:57635  if (lpSupply == 0) {... */\n      tag_354\n      jumpi\n      pop\n        /* \"contracts/Boost.sol\":57592:57604  block.number */\n      number\n        /* \"contracts/Boost.sol\":57569:57589  pool.lastRewardBlock */\n      0x02\n      swap1\n      swap2\n      add\n        /* \"contracts/Boost.sol\":57569:57604  pool.lastRewardBlock = block.number */\n      sstore\n        /* \"contracts/Boost.sol\":57256:58182  function updatePool(uint256 _pid) public reduceBlockReward {... */\n      pop\n      jump\t// out\n        /* \"contracts/Boost.sol\":57536:57635  if (lpSupply == 0) {... */\n    tag_354:\n        /* \"contracts/Boost.sol\":57665:57666  0 */\n      0x00\n        /* \"contracts/Boost.sol\":57648:57661  tokenPerBlock */\n      sload(0x03)\n        /* \"contracts/Boost.sol\":57648:57666  tokenPerBlock <= 0 */\n      gt\n        /* \"contracts/Boost.sol\":57644:57699  if (tokenPerBlock <= 0) {... */\n      tag_355\n      jumpi\n        /* \"contracts/Boost.sol\":57682:57689  return; */\n      pop\n      pop\n        /* \"contracts/Boost.sol\":57256:58182  function updatePool(uint256 _pid) public reduceBlockReward {... */\n      pop\n      jump\t// out\n        /* \"contracts/Boost.sol\":57644:57699  if (tokenPerBlock <= 0) {... */\n    tag_355:\n        /* \"contracts/Boost.sol\":57708:57719  uint256 mul */\n      0x00\n        /* \"contracts/Boost.sol\":57722:57760  block.number.sub(pool.lastRewardBlock) */\n      tag_356\n        /* \"contracts/Boost.sol\":57739:57743  pool */\n      dup4\n        /* \"contracts/Boost.sol\":57739:57759  pool.lastRewardBlock */\n      0x02\n      add\n      sload\n        /* \"contracts/Boost.sol\":57722:57734  block.number */\n      number\n        /* \"contracts/Boost.sol\":57722:57738  block.number.sub */\n      tag_357\n      swap1\n        /* \"contracts/Boost.sol\":57722:57760  block.number.sub(pool.lastRewardBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_356:\n        /* \"contracts/Boost.sol\":57708:57760  uint256 mul = block.number.sub(pool.lastRewardBlock) */\n      swap1\n      pop\n        /* \"contracts/Boost.sol\":57770:57789  uint256 tokenReward */\n      0x00\n        /* \"contracts/Boost.sol\":57792:57856  tokenPerBlock.mul(mul).mul(pool.allocPoint).div(totalAllocPoint) */\n      tag_358\n        /* \"contracts/Boost.sol\":57840:57855  totalAllocPoint */\n      sload(0x0d)\n        /* \"contracts/Boost.sol\":57792:57835  tokenPerBlock.mul(mul).mul(pool.allocPoint) */\n      tag_339\n        /* \"contracts/Boost.sol\":57819:57823  pool */\n      dup7\n        /* \"contracts/Boost.sol\":57819:57834  pool.allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/Boost.sol\":57792:57814  tokenPerBlock.mul(mul) */\n      tag_360\n        /* \"contracts/Boost.sol\":57810:57813  mul */\n      dup7\n        /* \"contracts/Boost.sol\":57792:57805  tokenPerBlock */\n      sload(0x03)\n        /* \"contracts/Boost.sol\":57792:57809  tokenPerBlock.mul */\n      tag_340\n      swap1\n        /* \"contracts/Boost.sol\":57792:57814  tokenPerBlock.mul(mul) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_360:\n        /* \"contracts/Boost.sol\":57792:57818  tokenPerBlock.mul(mul).mul */\n      swap1\n      tag_340\n        /* \"contracts/Boost.sol\":57792:57835  tokenPerBlock.mul(mul).mul(pool.allocPoint) */\n      jump\t// in\n        /* \"contracts/Boost.sol\":57792:57856  tokenPerBlock.mul(mul).mul(pool.allocPoint).div(totalAllocPoint) */\n    tag_358:\n        /* \"contracts/Boost.sol\":57904:57913  swapToken */\n      sload(0x02)\n        /* \"contracts/Boost.sol\":57770:57856  uint256 tokenReward = tokenPerBlock.mul(mul).mul(pool.allocPoint).div(totalAllocPoint) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/Boost.sol\":57890:57901  bool minRet */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Boost.sol\":57904:57913  swapToken */\n      and\n        /* \"contracts/Boost.sol\":57904:57918  swapToken.mint */\n      0x40c10f19\n        /* \"contracts/Boost.sol\":57927:57931  this */\n      address\n        /* \"contracts/Boost.sol\":57934:57959  tokenReward.mul(duration) */\n      tag_361\n        /* \"contracts/Boost.sol\":57770:57856  uint256 tokenReward = tokenPerBlock.mul(mul).mul(pool.allocPoint).div(totalAllocPoint) */\n      dup6\n        /* \"contracts/Boost.sol\":54965:54971  7 days */\n      0x093a80\n        /* \"contracts/Boost.sol\":57934:57949  tokenReward.mul */\n      tag_340\n        /* \"contracts/Boost.sol\":57934:57959  tokenReward.mul(duration) */\n      jump\t// in\n    tag_361:\n        /* \"contracts/Boost.sol\":57904:57960  swapToken.mint(address(this), tokenReward.mul(duration)) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup6\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10775:10807   */\n      swap1\n      swap3\n      and\n        /* \"contracts/Boost.sol\":57904:57960  swapToken.mint(address(this), tokenReward.mul(duration)) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":10757:10808   */\n      mstore\n        /* \"#utility.yul\":10824:10842   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10817:10851   */\n      mstore\n        /* \"#utility.yul\":10730:10748   */\n      0x44\n      add\n        /* \"contracts/Boost.sol\":57904:57960  swapToken.mint(address(this), tokenReward.mul(duration)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_364\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_364:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_365\n      swap2\n      swap1\n      tag_251\n      jump\t// in\n    tag_365:\n        /* \"contracts/Boost.sol\":57890:57960  bool minRet = swapToken.mint(address(this), tokenReward.mul(duration)) */\n      swap1\n      pop\n        /* \"contracts/Boost.sol\":57974:57980  minRet */\n      dup1\n        /* \"contracts/Boost.sol\":57970:58131  if (minRet) {... */\n      iszero\n      tag_366\n      jumpi\n        /* \"contracts/Boost.sol\":58010:58022  pool.lpToken */\n      dup5\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"contracts/Boost.sol\":58003:58023  gauges[pool.lpToken] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Boost.sol\":58003:58009  gauges */\n      0x11\n        /* \"contracts/Boost.sol\":58003:58023  gauges[pool.lpToken] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Boost.sol\":58052:58061  swapToken */\n      sload(0x02)\n        /* \"contracts/Boost.sol\":58103:58118  totalAllocPoint */\n      sload(0x0d)\n        /* \"contracts/Boost.sol\":58010:58022  pool.lpToken */\n      0x01\n        /* \"contracts/Boost.sol\":58082:58097  pool.allocPoint */\n      dup10\n      add\n      sload\n        /* \"contracts/Boost.sol\":58064:58077  tokenPerBlock */\n      sload(0x03)\n        /* \"contracts/Boost.sol\":58003:58023  gauges[pool.lpToken] */\n      swap4\n      dup6\n      and\n      swap5\n        /* \"contracts/Boost.sol\":57996:58043  IGauge(gauges[pool.lpToken]).notifyRewardAmount */\n      0xb66503cf\n      swap5\n        /* \"contracts/Boost.sol\":58052:58061  swapToken */\n      swap4\n      and\n      swap3\n        /* \"contracts/Boost.sol\":58064:58119  tokenPerBlock.mul(pool.allocPoint).div(totalAllocPoint) */\n      tag_367\n      swap3\n        /* \"contracts/Boost.sol\":58103:58118  totalAllocPoint */\n      swap2\n        /* \"contracts/Boost.sol\":58064:58098  tokenPerBlock.mul(pool.allocPoint) */\n      tag_339\n      swap2\n        /* \"contracts/Boost.sol\":58064:58077  tokenPerBlock */\n      swap1\n        /* \"contracts/Boost.sol\":58064:58081  tokenPerBlock.mul */\n      tag_340\n        /* \"contracts/Boost.sol\":58064:58098  tokenPerBlock.mul(pool.allocPoint) */\n      jump\t// in\n        /* \"contracts/Boost.sol\":58064:58119  tokenPerBlock.mul(pool.allocPoint).div(totalAllocPoint) */\n    tag_367:\n        /* \"contracts/Boost.sol\":57996:58120  IGauge(gauges[pool.lpToken]).notifyRewardAmount(address(swapToken), tokenPerBlock.mul(pool.allocPoint).div(totalAllocPoint)) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup6\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10775:10807   */\n      swap1\n      swap3\n      and\n        /* \"contracts/Boost.sol\":57996:58120  IGauge(gauges[pool.lpToken]).notifyRewardAmount(address(swapToken), tokenPerBlock.mul(pool.allocPoint).div(totalAllocPoint)) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":10757:10808   */\n      mstore\n        /* \"#utility.yul\":10824:10842   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10817:10851   */\n      mstore\n        /* \"#utility.yul\":10730:10748   */\n      0x44\n      add\n        /* \"contracts/Boost.sol\":57996:58120  IGauge(gauges[pool.lpToken]).notifyRewardAmount(address(swapToken), tokenPerBlock.mul(pool.allocPoint).div(totalAllocPoint)) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_370\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_370:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_372\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_372:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Boost.sol\":57970:58131  if (minRet) {... */\n    tag_366:\n        /* \"contracts/Boost.sol\":58163:58175  block.number */\n      number\n        /* \"contracts/Boost.sol\":58140:58144  pool */\n      dup6\n        /* \"contracts/Boost.sol\":58140:58160  pool.lastRewardBlock */\n      0x02\n      add\n        /* \"contracts/Boost.sol\":58140:58175  pool.lastRewardBlock = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Boost.sol\":57315:58182  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Boost.sol\":47359:47360  _ */\n    tag_344:\n        /* \"contracts/Boost.sol\":57256:58182  function updatePool(uint256 _pid) public reduceBlockReward {... */\n      pop\n      jump\t// out\n        /* \"contracts/Boost.sol\":59021:59217  function updateAll() external {... */\n    tag_135:\n        /* \"contracts/Boost.sol\":59066:59072  uint i */\n      0x00\n        /* \"contracts/Boost.sol\":59061:59211  for (uint i = 0; i < poolLength(); i++) {... */\n    tag_374:\n        /* \"contracts/Boost.sol\":55634:55642  poolInfo */\n      0x0e\n        /* \"contracts/Boost.sol\":55634:55649  poolInfo.length */\n      sload\n        /* \"contracts/Boost.sol\":59078:59079  i */\n      dup2\n        /* \"contracts/Boost.sol\":59078:59094  i < poolLength() */\n      lt\n        /* \"contracts/Boost.sol\":59061:59211  for (uint i = 0; i < poolLength(); i++) {... */\n      iszero\n      tag_344\n      jumpi\n        /* \"contracts/Boost.sol\":59115:59135  PoolInfo memory pool */\n      0x00\n        /* \"contracts/Boost.sol\":59138:59146  poolInfo */\n      0x0e\n        /* \"contracts/Boost.sol\":59147:59148  i */\n      dup3\n        /* \"contracts/Boost.sol\":59138:59149  poolInfo[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_379\n      jumpi\n      tag_379\n      tag_277\n      jump\t// in\n    tag_379:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Boost.sol\":59115:59149  PoolInfo memory pool = poolInfo[i] */\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      dup3\n      mstore\n        /* \"contracts/Boost.sol\":59138:59149  poolInfo[i] */\n      0x03\n      swap1\n      swap5\n      mul\n      swap1\n      swap2\n      add\n        /* \"contracts/Boost.sol\":59115:59149  PoolInfo memory pool = poolInfo[i] */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n      dup1\n      dup7\n      mstore\n      0x01\n      dup4\n      add\n      sload\n      dup7\n      dup7\n      add\n      mstore\n      0x02\n      swap1\n      swap3\n      add\n      sload\n      dup6\n      dup5\n      add\n      mstore\n        /* \"contracts/Boost.sol\":59179:59199  gauges[pool.lpToken] */\n      swap1\n      dup6\n      mstore\n        /* \"contracts/Boost.sol\":59179:59185  gauges */\n      0x11\n        /* \"contracts/Boost.sol\":59179:59199  gauges[pool.lpToken] */\n      swap1\n      swap3\n      mstore\n      swap1\n      swap3\n      keccak256\n      sload\n        /* \"contracts/Boost.sol\":59115:59149  PoolInfo memory pool = poolInfo[i] */\n      swap1\n      swap3\n      pop\n        /* \"contracts/Boost.sol\":59163:59200  _updateForGauge(gauges[pool.lpToken]) */\n      tag_381\n      swap2\n        /* \"contracts/Boost.sol\":59179:59199  gauges[pool.lpToken] */\n      and\n        /* \"contracts/Boost.sol\":59163:59178  _updateForGauge */\n      tag_253\n        /* \"contracts/Boost.sol\":59163:59200  _updateForGauge(gauges[pool.lpToken]) */\n      jump\t// in\n    tag_381:\n      pop\n        /* \"contracts/Boost.sol\":59096:59099  i++ */\n      dup1\n      tag_382\n      dup2\n      tag_286\n      jump\t// in\n    tag_382:\n      swap2\n      pop\n      pop\n        /* \"contracts/Boost.sol\":59061:59211  for (uint i = 0; i < poolLength(); i++) {... */\n      jump(tag_374)\n        /* \"contracts/Boost.sol\":45179:45283  function operator() public view override returns (address) {... */\n    tag_137:\n        /* \"contracts/Boost.sol\":45255:45265  operatable */\n      sload(0x01)\n        /* \"contracts/Boost.sol\":45255:45276  operatable.operator() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x570ca735)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/Boost.sol\":45229:45236  address */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Boost.sol\":45255:45265  operatable */\n      and\n      swap2\n        /* \"contracts/Boost.sol\":45255:45274  operatable.operator */\n      0x570ca735\n      swap2\n        /* \"contracts/Boost.sol\":45255:45276  operatable.operator() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/Boost.sol\":45255:45265  operatable */\n      dup7\n        /* \"contracts/Boost.sol\":45255:45276  operatable.operator() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_385\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_385:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_386\n      swap2\n      swap1\n      tag_245\n      jump\t// in\n    tag_386:\n        /* \"contracts/Boost.sol\":45248:45276  return operatable.operator() */\n      swap1\n      pop\n        /* \"contracts/Boost.sol\":45179:45283  function operator() public view override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Boost.sol\":56999:57183  function massUpdatePools() public override {... */\n    tag_140:\n        /* \"contracts/Boost.sol\":57069:57077  poolInfo */\n      0x0e\n        /* \"contracts/Boost.sol\":57069:57084  poolInfo.length */\n      sload\n        /* \"contracts/Boost.sol\":57052:57066  uint256 length */\n      0x00\n        /* \"contracts/Boost.sol\":57094:57177  for (uint256 pid = 0; pid < length; ++pid) {... */\n    tag_388:\n        /* \"contracts/Boost.sol\":57122:57128  length */\n      dup2\n        /* \"contracts/Boost.sol\":57116:57119  pid */\n      dup2\n        /* \"contracts/Boost.sol\":57116:57128  pid < length */\n      lt\n        /* \"contracts/Boost.sol\":57094:57177  for (uint256 pid = 0; pid < length; ++pid) {... */\n      iszero\n      tag_389\n      jumpi\n        /* \"contracts/Boost.sol\":57151:57166  updatePool(pid) */\n      tag_391\n        /* \"contracts/Boost.sol\":57162:57165  pid */\n      dup2\n        /* \"contracts/Boost.sol\":57151:57161  updatePool */\n      tag_133\n        /* \"contracts/Boost.sol\":57151:57166  updatePool(pid) */\n      jump\t// in\n    tag_391:\n        /* \"contracts/Boost.sol\":57130:57135  ++pid */\n      tag_392\n      dup2\n      tag_286\n      jump\t// in\n    tag_392:\n      swap1\n      pop\n        /* \"contracts/Boost.sol\":57094:57177  for (uint256 pid = 0; pid < length; ++pid) {... */\n      jump(tag_388)\n    tag_389:\n      pop\n        /* \"contracts/Boost.sol\":57042:57183  {... */\n      pop\n        /* \"contracts/Boost.sol\":56999:57183  function massUpdatePools() public override {... */\n      jump\t// out\n        /* \"contracts/Boost.sol\":59594:59678  function distribute(address _gauge) public {... */\n    tag_143:\n        /* \"contracts/Boost.sol\":59647:59670  _updateForGauge(_gauge) */\n      tag_344\n        /* \"contracts/Boost.sol\":59663:59669  _gauge */\n      dup2\n        /* \"contracts/Boost.sol\":59647:59662  _updateForGauge */\n      tag_253\n        /* \"contracts/Boost.sol\":59647:59670  _updateForGauge(_gauge) */\n      jump\t// in\n        /* \"contracts/Boost.sol\":56694:56993  function set(uint256 _pid, uint256 _allocPoint, bool _withUpdate) public onlyOwner {... */\n    tag_147:\n        /* \"contracts/Boost.sol\":45086:45096  operatable */\n      sload(0x01)\n        /* \"contracts/Boost.sol\":45086:45104  operatable.owner() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x8da5cb5b)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/Boost.sol\":45108:45118  msg.sender */\n      caller\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Boost.sol\":45086:45096  operatable */\n      and\n      swap2\n        /* \"contracts/Boost.sol\":45086:45102  operatable.owner */\n      0x8da5cb5b\n      swap2\n        /* \"contracts/Boost.sol\":45086:45104  operatable.owner() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/Boost.sol\":45086:45096  operatable */\n      dup7\n        /* \"contracts/Boost.sol\":45086:45104  operatable.owner() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_397\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_397:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_398\n      swap2\n      swap1\n      tag_245\n      jump\t// in\n    tag_398:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Boost.sol\":45086:45118  operatable.owner() == msg.sender */\n      and\n      eq\n        /* \"contracts/Boost.sol\":45078:45155  require(operatable.owner() == msg.sender, 'Ownable: caller is not the owner') */\n      tag_399\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11314:11316   */\n      0x20\n        /* \"contracts/Boost.sol\":45078:45155  require(operatable.owner() == msg.sender, 'Ownable: caller is not the owner') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11296:11317   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":11333:11351   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11326:11356   */\n      mstore\n        /* \"#utility.yul\":11392:11426   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":11372:11390   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11365:11427   */\n      mstore\n        /* \"#utility.yul\":11444:11462   */\n      0x64\n      add\n        /* \"contracts/Boost.sol\":45078:45155  require(operatable.owner() == msg.sender, 'Ownable: caller is not the owner') */\n      tag_226\n        /* \"#utility.yul\":11112:11468   */\n      jump\n        /* \"contracts/Boost.sol\":45078:45155  require(operatable.owner() == msg.sender, 'Ownable: caller is not the owner') */\n    tag_399:\n        /* \"contracts/Boost.sol\":56806:56869  totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) */\n      tag_402\n        /* \"contracts/Boost.sol\":56857:56868  _allocPoint */\n      dup3\n        /* \"contracts/Boost.sol\":56806:56852  totalAllocPoint.sub(poolInfo[_pid].allocPoint) */\n      tag_403\n        /* \"contracts/Boost.sol\":56826:56834  poolInfo */\n      0x0e\n        /* \"contracts/Boost.sol\":56835:56839  _pid */\n      dup7\n        /* \"contracts/Boost.sol\":56826:56840  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_405\n      jumpi\n      tag_405\n      tag_277\n      jump\t// in\n    tag_405:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n        /* \"contracts/Boost.sol\":56826:56851  poolInfo[_pid].allocPoint */\n      0x01\n      add\n      sload\n        /* \"contracts/Boost.sol\":56806:56821  totalAllocPoint */\n      sload(0x0d)\n        /* \"contracts/Boost.sol\":56806:56825  totalAllocPoint.sub */\n      tag_357\n      swap1\n        /* \"contracts/Boost.sol\":56806:56852  totalAllocPoint.sub(poolInfo[_pid].allocPoint) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_403:\n        /* \"contracts/Boost.sol\":56806:56856  totalAllocPoint.sub(poolInfo[_pid].allocPoint).add */\n      swap1\n      tag_222\n        /* \"contracts/Boost.sol\":56806:56869  totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) */\n      jump\t// in\n    tag_402:\n        /* \"contracts/Boost.sol\":56788:56803  totalAllocPoint */\n      0x0d\n        /* \"contracts/Boost.sol\":56788:56869  totalAllocPoint = totalAllocPoint.sub(poolInfo[_pid].allocPoint).add(_allocPoint) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Boost.sol\":56907:56918  _allocPoint */\n      dup2\n        /* \"contracts/Boost.sol\":56879:56887  poolInfo */\n      0x0e\n        /* \"contracts/Boost.sol\":56888:56892  _pid */\n      dup5\n        /* \"contracts/Boost.sol\":56879:56893  poolInfo[_pid] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_408\n      jumpi\n      tag_408\n      tag_277\n      jump\t// in\n    tag_408:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x03\n      mul\n      add\n        /* \"contracts/Boost.sol\":56879:56904  poolInfo[_pid].allocPoint */\n      0x01\n      add\n        /* \"contracts/Boost.sol\":56879:56918  poolInfo[_pid].allocPoint = _allocPoint */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Boost.sol\":56932:56943  _withUpdate */\n      dup1\n        /* \"contracts/Boost.sol\":56928:56987  if (_withUpdate) {... */\n      iszero\n      tag_273\n      jumpi\n        /* \"contracts/Boost.sol\":56959:56976  massUpdatePools() */\n      tag_273\n        /* \"contracts/Boost.sol\":56959:56974  massUpdatePools */\n      tag_140\n        /* \"contracts/Boost.sol\":56959:56976  massUpdatePools() */\n      jump\t// in\n        /* \"contracts/Boost.sol\":58189:58411  function attachTokenToGauge(uint tokenId, address account) external {... */\n    tag_150:\n        /* \"contracts/Boost.sol\":58283:58293  msg.sender */\n      caller\n        /* \"contracts/Boost.sol\":58275:58294  isGauge[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Boost.sol\":58275:58282  isGauge */\n      0x13\n        /* \"contracts/Boost.sol\":58275:58294  isGauge[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/Boost.sol\":58267:58295  require(isGauge[msg.sender]) */\n      tag_413\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_413:\n        /* \"contracts/Boost.sol\":58309:58320  tokenId > 0 */\n      dup2\n      iszero\n        /* \"contracts/Boost.sol\":58305:58353  if (tokenId > 0) IVeToken(veToken).used(tokenId) */\n      tag_414\n      jumpi\n        /* \"contracts/Boost.sol\":58322:58353  IVeToken(veToken).used(tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x020fe6e5)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":756:781   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/Boost.sol\":58331:58338  veToken */\n      immutable(\"0xeb87824f736d67edaf3560d951b0b69190da7967ad8d2ed342933b58834b3812\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Boost.sol\":58322:58344  IVeToken(veToken).used */\n      and\n      swap1\n      0x020fe6e5\n      swap1\n        /* \"#utility.yul\":729:747   */\n      0x24\n      add\n        /* \"contracts/Boost.sol\":58322:58353  IVeToken(veToken).used(tokenId) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_416\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_416:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_418\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_418:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Boost.sol\":58305:58353  if (tokenId > 0) IVeToken(veToken).used(tokenId) */\n    tag_414:\n        /* \"contracts/Boost.sol\":58368:58404  Attach(account, msg.sender, tokenId) */\n      mload(0x40)\n        /* \"#utility.yul\":756:781   */\n      dup3\n      dup2\n      mstore\n        /* \"contracts/Boost.sol\":58384:58394  msg.sender */\n      caller\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Boost.sol\":58368:58404  Attach(account, msg.sender, tokenId) */\n      dup4\n      and\n      swap1\n      0x60940192810a6fb3bce3fd3e2e3a13fd6ccc7605e963fb87ee971aba829989bd\n      swap1\n        /* \"#utility.yul\":744:746   */\n      0x20\n        /* \"#utility.yul\":729:747   */\n      add\n        /* \"contracts/Boost.sol\":58368:58404  Attach(account, msg.sender, tokenId) */\n      tag_323\n        /* \"#utility.yul\":610:787   */\n      jump\n        /* \"contracts/Boost.sol\":47473:47566  function setMintMulti(uint256 _multi) public onlyOperator {... */\n    tag_153:\n        /* \"contracts/Boost.sol\":44971:44981  operatable */\n      sload(0x01)\n        /* \"contracts/Boost.sol\":44971:44992  operatable.operator() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x570ca735)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/Boost.sol\":44996:45006  msg.sender */\n      caller\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Boost.sol\":44971:44981  operatable */\n      and\n      swap2\n        /* \"contracts/Boost.sol\":44971:44990  operatable.operator */\n      0x570ca735\n      swap2\n        /* \"contracts/Boost.sol\":44971:44992  operatable.operator() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/Boost.sol\":44971:44981  operatable */\n      dup7\n        /* \"contracts/Boost.sol\":44971:44992  operatable.operator() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_422\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_422:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_423\n      swap2\n      swap1\n      tag_245\n      jump\t// in\n    tag_423:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Boost.sol\":44971:45006  operatable.operator() == msg.sender */\n      and\n      eq\n        /* \"contracts/Boost.sol\":44963:45023  require(operatable.operator() == msg.sender, 'not operator') */\n      tag_424\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_226\n      swap1\n      tag_330\n      jump\t// in\n    tag_424:\n        /* \"contracts/Boost.sol\":47541:47550  mintMulti */\n      0x06\n        /* \"contracts/Boost.sol\":47541:47559  mintMulti = _multi */\n      sstore\n        /* \"contracts/Boost.sol\":47473:47566  function setMintMulti(uint256 _multi) public onlyOperator {... */\n      jump\t// out\n        /* \"contracts/Boost.sol\":45289:45387  function owner() public view override returns (address) {... */\n    tag_162:\n        /* \"contracts/Boost.sol\":45362:45372  operatable */\n      sload(0x01)\n        /* \"contracts/Boost.sol\":45362:45380  operatable.owner() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x8da5cb5b)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/Boost.sol\":45336:45343  address */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Boost.sol\":45362:45372  operatable */\n      and\n      swap2\n        /* \"contracts/Boost.sol\":45362:45378  operatable.owner */\n      0x8da5cb5b\n      swap2\n        /* \"contracts/Boost.sol\":45362:45380  operatable.owner() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/Boost.sol\":45362:45372  operatable */\n      dup7\n        /* \"contracts/Boost.sol\":45362:45380  operatable.owner() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_385\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n        /* \"contracts/Boost.sol\":58417:58596  function emitDeposit(uint tokenId, address account, uint amount) external {... */\n    tag_170:\n        /* \"contracts/Boost.sol\":58517:58527  msg.sender */\n      caller\n        /* \"contracts/Boost.sol\":58509:58528  isGauge[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Boost.sol\":58509:58516  isGauge */\n      0x13\n        /* \"contracts/Boost.sol\":58509:58528  isGauge[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/Boost.sol\":58501:58529  require(isGauge[msg.sender]) */\n      tag_432\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_432:\n        /* \"contracts/Boost.sol\":58544:58589  Deposit(account, msg.sender, tokenId, amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":13157:13182   */\n      dup5\n      dup2\n      mstore\n        /* \"#utility.yul\":13213:13215   */\n      0x20\n        /* \"#utility.yul\":13198:13216   */\n      dup2\n      add\n        /* \"#utility.yul\":13191:13225   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/Boost.sol\":58561:58571  msg.sender */\n      caller\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Boost.sol\":58544:58589  Deposit(account, msg.sender, tokenId, amount) */\n      dup6\n      and\n      swap2\n      0xdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d7\n      swap2\n        /* \"#utility.yul\":13130:13148   */\n      add\n        /* \"contracts/Boost.sol\":58544:58589  Deposit(account, msg.sender, tokenId, amount) */\n    tag_433:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Boost.sol\":58417:58596  function emitDeposit(uint tokenId, address account, uint amount) external {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Boost.sol\":50071:50113  mapping(uint => address[]) public poolVote */\n    tag_179:\n      mstore(0x20, 0x0b)\n      dup2\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_435\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_435:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap2\n      pop\n      dup3\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Boost.sol\":47572:47677  function setMinTokenReward(uint256 _reward) public onlyOperator {... */\n    tag_183:\n        /* \"contracts/Boost.sol\":44971:44981  operatable */\n      sload(0x01)\n        /* \"contracts/Boost.sol\":44971:44992  operatable.operator() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x570ca735)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/Boost.sol\":44996:45006  msg.sender */\n      caller\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Boost.sol\":44971:44981  operatable */\n      and\n      swap2\n        /* \"contracts/Boost.sol\":44971:44990  operatable.operator */\n      0x570ca735\n      swap2\n        /* \"contracts/Boost.sol\":44971:44992  operatable.operator() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/Boost.sol\":44971:44981  operatable */\n      dup7\n        /* \"contracts/Boost.sol\":44971:44992  operatable.operator() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_439\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_439:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_440\n      swap2\n      swap1\n      tag_245\n      jump\t// in\n    tag_440:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Boost.sol\":44971:45006  operatable.operator() == msg.sender */\n      and\n      eq\n        /* \"contracts/Boost.sol\":44963:45023  require(operatable.operator() == msg.sender, 'not operator') */\n      tag_441\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_226\n      swap1\n      tag_330\n      jump\t// in\n    tag_441:\n        /* \"contracts/Boost.sol\":47646:47660  minTokenReward */\n      0x07\n        /* \"contracts/Boost.sol\":47646:47670  minTokenReward = _reward */\n      sstore\n        /* \"contracts/Boost.sol\":47572:47677  function setMinTokenReward(uint256 _reward) public onlyOperator {... */\n      jump\t// out\n        /* \"contracts/Boost.sol\":55014:55036  address[] public pools */\n    tag_191:\n      0x10\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_444\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_444:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/Boost.sol\":47373:47467  function setHalvingPeriod(uint256 _block) public onlyOperator {... */\n    tag_199:\n        /* \"contracts/Boost.sol\":44971:44981  operatable */\n      sload(0x01)\n        /* \"contracts/Boost.sol\":44971:44992  operatable.operator() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x570ca735)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/Boost.sol\":44996:45006  msg.sender */\n      caller\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Boost.sol\":44971:44981  operatable */\n      and\n      swap2\n        /* \"contracts/Boost.sol\":44971:44990  operatable.operator */\n      0x570ca735\n      swap2\n        /* \"contracts/Boost.sol\":44971:44992  operatable.operator() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/Boost.sol\":44971:44981  operatable */\n      dup7\n        /* \"contracts/Boost.sol\":44971:44992  operatable.operator() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_448\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_448:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_449\n      swap2\n      swap1\n      tag_245\n      jump\t// in\n    tag_449:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Boost.sol\":44971:45006  operatable.operator() == msg.sender */\n      and\n      eq\n        /* \"contracts/Boost.sol\":44963:45023  require(operatable.operator() == msg.sender, 'not operator') */\n      tag_450\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_226\n      swap1\n      tag_330\n      jump\t// in\n    tag_450:\n        /* \"contracts/Boost.sol\":47445:47451  period */\n      0x05\n        /* \"contracts/Boost.sol\":47445:47460  period = _block */\n      sstore\n        /* \"contracts/Boost.sol\":47373:47467  function setHalvingPeriod(uint256 _block) public onlyOperator {... */\n      jump\t// out\n        /* \"contracts/Boost.sol\":58834:59015  function emitWithdraw(uint tokenId, address account, uint amount) external {... */\n    tag_214:\n        /* \"contracts/Boost.sol\":58935:58945  msg.sender */\n      caller\n        /* \"contracts/Boost.sol\":58927:58946  isGauge[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Boost.sol\":58927:58934  isGauge */\n      0x13\n        /* \"contracts/Boost.sol\":58927:58946  isGauge[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n        /* \"contracts/Boost.sol\":58919:58947  require(isGauge[msg.sender]) */\n      tag_454\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_454:\n        /* \"contracts/Boost.sol\":58962:59008  Withdraw(account, msg.sender, tokenId, amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":13157:13182   */\n      dup5\n      dup2\n      mstore\n        /* \"#utility.yul\":13213:13215   */\n      0x20\n        /* \"#utility.yul\":13198:13216   */\n      dup2\n      add\n        /* \"#utility.yul\":13191:13225   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/Boost.sol\":58980:58990  msg.sender */\n      caller\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Boost.sol\":58962:59008  Withdraw(account, msg.sender, tokenId, amount) */\n      dup6\n      and\n      swap2\n      0xf341246adaac6f497bc2a656f546ab9e182111d630394f0c57c710a59a2cb567\n      swap2\n        /* \"#utility.yul\":13130:13148   */\n      add\n        /* \"contracts/Boost.sol\":58962:59008  Withdraw(account, msg.sender, tokenId, amount) */\n      tag_433\n        /* \"#utility.yul\":12983:13231   */\n      jump\n        /* \"contracts/Boost.sol\":53576:53852  function vote(uint tokenId, address[] calldata _poolVote, int256[] calldata _weights) external {... */\n    tag_221:\n        /* \"contracts/Boost.sol\":53689:53745  IVeToken(veToken).isApprovedOrOwner(msg.sender, tokenId) */\n      mload(0x40)\n      shl(0xe0, 0x430c2081)\n      dup2\n      mstore\n        /* \"contracts/Boost.sol\":53725:53735  msg.sender */\n      caller\n        /* \"contracts/Boost.sol\":53689:53745  IVeToken(veToken).isApprovedOrOwner(msg.sender, tokenId) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10757:10808   */\n      mstore\n        /* \"#utility.yul\":10824:10842   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":10817:10851   */\n      dup7\n      swap1\n      mstore\n        /* \"contracts/Boost.sol\":53698:53705  veToken */\n      immutable(\"0xeb87824f736d67edaf3560d951b0b69190da7967ad8d2ed342933b58834b3812\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Boost.sol\":53689:53724  IVeToken(veToken).isApprovedOrOwner */\n      and\n      swap1\n      0x430c2081\n      swap1\n        /* \"#utility.yul\":10730:10748   */\n      0x44\n      add\n        /* \"contracts/Boost.sol\":53689:53745  IVeToken(veToken).isApprovedOrOwner(msg.sender, tokenId) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_459\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_459:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_460\n      swap2\n      swap1\n      tag_251\n      jump\t// in\n    tag_460:\n        /* \"contracts/Boost.sol\":53681:53746  require(IVeToken(veToken).isApprovedOrOwner(msg.sender, tokenId)) */\n      tag_461\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_461:\n        /* \"contracts/Boost.sol\":53764:53799  _poolVote.length == _weights.length */\n      dup3\n      dup2\n      eq\n        /* \"contracts/Boost.sol\":53756:53800  require(_poolVote.length == _weights.length) */\n      tag_462\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_462:\n        /* \"contracts/Boost.sol\":53810:53845  _vote(tokenId, _poolVote, _weights) */\n      tag_298\n        /* \"contracts/Boost.sol\":53816:53823  tokenId */\n      dup6\n        /* \"contracts/Boost.sol\":53825:53834  _poolVote */\n      dup6\n      dup6\n        /* \"contracts/Boost.sol\":53810:53845  _vote(tokenId, _poolVote, _weights) */\n      dup1\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap4\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup4\n      dup4\n      0x20\n      mul\n      dup1\n      dup3\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n      pop\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup10\n      mul\n      dup3\n      dup2\n      add\n      dup3\n      add\n      swap1\n      swap4\n      mstore\n      dup9\n      dup3\n      mstore\n      swap1\n      swap4\n      pop\n        /* \"contracts/Boost.sol\":53836:53844  _weights */\n      dup9\n      swap3\n      pop\n      dup8\n      swap2\n      dup3\n      swap2\n        /* \"contracts/Boost.sol\":53810:53845  _vote(tokenId, _poolVote, _weights) */\n      dup6\n      add\n      swap1\n        /* \"contracts/Boost.sol\":53836:53844  _weights */\n      dup5\n      swap1\n        /* \"contracts/Boost.sol\":53810:53845  _vote(tokenId, _poolVote, _weights) */\n      dup1\n        /* \"contracts/Boost.sol\":53836:53844  _weights */\n      dup3\n        /* \"contracts/Boost.sol\":53810:53845  _vote(tokenId, _poolVote, _weights) */\n      dup5\n      calldatacopy\n      0x00\n      swap3\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      pop\n        /* \"contracts/Boost.sol\":53810:53815  _vote */\n      tag_315\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/Boost.sol\":53810:53845  _vote(tokenId, _poolVote, _weights) */\n      jump\t// in\n        /* \"contracts/Boost.sol\":25686:25782  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_222:\n        /* \"contracts/Boost.sol\":25744:25751  uint256 */\n      0x00\n        /* \"contracts/Boost.sol\":25770:25775  a + b */\n      tag_465\n        /* \"contracts/Boost.sol\":25774:25775  b */\n      dup3\n        /* \"contracts/Boost.sol\":25770:25771  a */\n      dup5\n        /* \"contracts/Boost.sol\":25770:25775  a + b */\n      tag_466\n      jump\t// in\n    tag_465:\n        /* \"contracts/Boost.sol\":25763:25775  return a + b */\n      swap4\n        /* \"contracts/Boost.sol\":25686:25782  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Boost.sol\":59223:59362  function _updateForGauge(address _gauge) internal {... */\n    tag_253:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Boost.sol\":59299:59319  poolForGauge[_gauge] */\n      dup1\n      dup3\n      and\n        /* \"contracts/Boost.sol\":59283:59296  address _pool */\n      0x00\n        /* \"contracts/Boost.sol\":59299:59319  poolForGauge[_gauge] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Boost.sol\":59299:59311  poolForGauge */\n      0x12\n        /* \"contracts/Boost.sol\":59299:59319  poolForGauge[_gauge] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n      swap1\n      swap4\n      and\n        /* \"contracts/Boost.sol\":59340:59354  LpOfPid[_pool] */\n      dup1\n      dup4\n      mstore\n        /* \"contracts/Boost.sol\":59340:59347  LpOfPid */\n      0x0f\n        /* \"contracts/Boost.sol\":59340:59354  LpOfPid[_pool] */\n      swap1\n      swap2\n      mstore\n      swap2\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Boost.sol\":59329:59355  updatePool(LpOfPid[_pool]) */\n      tag_389\n      swap1\n        /* \"contracts/Boost.sol\":59329:59339  updatePool */\n      tag_133\n        /* \"contracts/Boost.sol\":59329:59355  updatePool(LpOfPid[_pool]) */\n      jump\t// in\n        /* \"contracts/Boost.sol\":50857:51706  function _reset(uint _tokenId) internal {... */\n    tag_294:\n        /* \"contracts/Boost.sol\":50907:50934  address[] storage _poolVote */\n      0x00\n        /* \"contracts/Boost.sol\":50937:50955  poolVote[_tokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/Boost.sol\":50937:50945  poolVote */\n      0x0b\n        /* \"contracts/Boost.sol\":50937:50955  poolVote[_tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Boost.sol\":50985:51001  _poolVote.length */\n      dup1\n      sload\n        /* \"contracts/Boost.sol\":50937:50955  poolVote[_tokenId] */\n      swap1\n      swap2\n        /* \"contracts/Boost.sol\":50907:50934  address[] storage _poolVote */\n      dup1\n        /* \"contracts/Boost.sol\":51045:51584  for (uint i = 0; i < _poolVoteCnt; i ++) {... */\n    tag_470:\n        /* \"contracts/Boost.sol\":51066:51078  _poolVoteCnt */\n      dup3\n        /* \"contracts/Boost.sol\":51062:51063  i */\n      dup2\n        /* \"contracts/Boost.sol\":51062:51078  i < _poolVoteCnt */\n      lt\n        /* \"contracts/Boost.sol\":51045:51584  for (uint i = 0; i < _poolVoteCnt; i ++) {... */\n      iszero\n      tag_471\n      jumpi\n        /* \"contracts/Boost.sol\":51100:51113  address _pool */\n      0x00\n        /* \"contracts/Boost.sol\":51116:51125  _poolVote */\n      dup5\n        /* \"contracts/Boost.sol\":51126:51127  i */\n      dup3\n        /* \"contracts/Boost.sol\":51116:51128  _poolVote[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_474\n      jumpi\n      tag_474\n      tag_277\n      jump\t// in\n    tag_474:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n        /* \"contracts/Boost.sol\":51158:51173  votes[_tokenId] */\n      dup9\n      dup4\n      mstore\n        /* \"contracts/Boost.sol\":51158:51163  votes */\n      0x0a\n        /* \"contracts/Boost.sol\":51158:51173  votes[_tokenId] */\n      dup3\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Boost.sol\":51116:51128  _poolVote[i] */\n      swap1\n      swap3\n      and\n        /* \"contracts/Boost.sol\":51158:51180  votes[_tokenId][_pool] */\n      dup1\n      dup6\n      mstore\n      swap2\n      swap1\n      swap3\n      mstore\n      swap2\n      keccak256\n      sload\n        /* \"contracts/Boost.sol\":51116:51128  _poolVote[i] */\n      swap1\n      swap2\n      pop\n        /* \"contracts/Boost.sol\":51199:51210  _votes != 0 */\n      dup1\n      iszero\n        /* \"contracts/Boost.sol\":51195:51574  if (_votes != 0) {... */\n      tag_476\n      jumpi\n        /* \"contracts/Boost.sol\":51230:51252  _updatePoolInfo(_pool) */\n      tag_477\n        /* \"contracts/Boost.sol\":51246:51251  _pool */\n      dup3\n        /* \"contracts/Boost.sol\":51230:51245  _updatePoolInfo */\n      tag_478\n        /* \"contracts/Boost.sol\":51230:51252  _updatePoolInfo(_pool) */\n      jump\t// in\n    tag_477:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Boost.sol\":51270:51284  weights[_pool] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Boost.sol\":51270:51277  weights */\n      0x09\n        /* \"contracts/Boost.sol\":51270:51284  weights[_pool] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Boost.sol\":51270:51294  weights[_pool] -= _votes */\n      dup1\n      sload\n        /* \"contracts/Boost.sol\":51288:51294  _votes */\n      dup4\n      swap3\n        /* \"contracts/Boost.sol\":51270:51284  weights[_pool] */\n      swap1\n        /* \"contracts/Boost.sol\":51270:51294  weights[_pool] -= _votes */\n      tag_479\n      swap1\n        /* \"contracts/Boost.sol\":51288:51294  _votes */\n      dup5\n      swap1\n        /* \"contracts/Boost.sol\":51270:51294  weights[_pool] -= _votes */\n      tag_480\n      jump\t// in\n    tag_479:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/Boost.sol\":51312:51327  votes[_tokenId] */\n      0x00\n      dup8\n      dup2\n      mstore\n        /* \"contracts/Boost.sol\":51312:51317  votes */\n      0x0a\n        /* \"contracts/Boost.sol\":51312:51327  votes[_tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Boost.sol\":51312:51334  votes[_tokenId][_pool] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/Boost.sol\":51312:51344  votes[_tokenId][_pool] -= _votes */\n      dup1\n      sload\n        /* \"contracts/Boost.sol\":51338:51344  _votes */\n      dup4\n      swap3\n        /* \"contracts/Boost.sol\":51312:51327  votes[_tokenId] */\n      swap1\n        /* \"contracts/Boost.sol\":51312:51344  votes[_tokenId][_pool] -= _votes */\n      tag_481\n      swap1\n        /* \"contracts/Boost.sol\":51338:51344  _votes */\n      dup5\n      swap1\n        /* \"contracts/Boost.sol\":51312:51344  votes[_tokenId][_pool] -= _votes */\n      tag_480\n      jump\t// in\n    tag_481:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/Boost.sol\":51375:51376  0 */\n      0x00\n        /* \"contracts/Boost.sol\":51366:51376  _votes > 0 */\n      dup2\n      sgt\n        /* \"contracts/Boost.sol\":51362:51510  if (_votes > 0) {... */\n      iszero\n      tag_482\n      jumpi\n        /* \"contracts/Boost.sol\":51400:51422  _totalWeight += _votes */\n      tag_483\n        /* \"contracts/Boost.sol\":51416:51422  _votes */\n      dup2\n        /* \"contracts/Boost.sol\":51400:51422  _totalWeight += _votes */\n      dup6\n      tag_484\n      jump\t// in\n    tag_483:\n      swap4\n      pop\n        /* \"contracts/Boost.sol\":51362:51510  if (_votes > 0) {... */\n      jump(tag_485)\n    tag_482:\n        /* \"contracts/Boost.sol\":51469:51491  _totalWeight -= _votes */\n      tag_486\n        /* \"contracts/Boost.sol\":51485:51491  _votes */\n      dup2\n        /* \"contracts/Boost.sol\":51469:51491  _totalWeight -= _votes */\n      dup6\n      tag_480\n      jump\t// in\n    tag_486:\n      swap4\n      pop\n        /* \"contracts/Boost.sol\":51362:51510  if (_votes > 0) {... */\n    tag_485:\n        /* \"contracts/Boost.sol\":51532:51559  Abstained(_tokenId, _votes) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":13157:13182   */\n      dup9\n      dup2\n      mstore\n        /* \"#utility.yul\":13213:13215   */\n      0x20\n        /* \"#utility.yul\":13198:13216   */\n      dup2\n      add\n        /* \"#utility.yul\":13191:13225   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/Boost.sol\":51532:51559  Abstained(_tokenId, _votes) */\n      0x6b3894ce60b9bbe9d93f1a4e6fc25b6b93cd8222e73ab6348d79c596f5b51de9\n      swap2\n        /* \"#utility.yul\":13130:13148   */\n      add\n        /* \"contracts/Boost.sol\":51532:51559  Abstained(_tokenId, _votes) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/Boost.sol\":51195:51574  if (_votes != 0) {... */\n    tag_476:\n        /* \"contracts/Boost.sol\":51086:51584  {... */\n      pop\n      pop\n        /* \"contracts/Boost.sol\":51080:51084  i ++ */\n      dup1\n      dup1\n      tag_489\n      swap1\n      tag_286\n      jump\t// in\n    tag_489:\n      swap2\n      pop\n      pop\n        /* \"contracts/Boost.sol\":51045:51584  for (uint i = 0; i < _poolVoteCnt; i ++) {... */\n      jump(tag_470)\n    tag_471:\n      pop\n        /* \"contracts/Boost.sol\":51616:51628  _totalWeight */\n      dup1\n        /* \"contracts/Boost.sol\":51593:51604  totalWeight */\n      0x08\n      0x00\n        /* \"contracts/Boost.sol\":51593:51629  totalWeight -= uint256(_totalWeight) */\n      dup3\n      dup3\n      sload\n      tag_490\n      swap2\n      swap1\n      tag_239\n      jump\t// in\n    tag_490:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/Boost.sol\":51663:51664  0 */\n      0x00\n        /* \"contracts/Boost.sol\":51639:51660  usedWeights[_tokenId] */\n      dup5\n      dup2\n      mstore\n        /* \"contracts/Boost.sol\":51639:51650  usedWeights */\n      0x0c\n        /* \"contracts/Boost.sol\":51639:51660  usedWeights[_tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Boost.sol\":51639:51664  usedWeights[_tokenId] = 0 */\n      dup4\n      swap1\n      sstore\n        /* \"contracts/Boost.sol\":51681:51689  poolVote */\n      0x0b\n        /* \"contracts/Boost.sol\":51681:51699  poolVote[_tokenId] */\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/Boost.sol\":51674:51699  delete poolVote[_tokenId] */\n      tag_314\n      swap2\n      tag_492\n      jump\t// in\n        /* \"contracts/Boost.sol\":51712:53198  function _vote(uint _tokenId, address[] memory _poolVote, int256[] memory _weights) internal {... */\n    tag_315:\n        /* \"contracts/Boost.sol\":51815:51831  _reset(_tokenId) */\n      tag_494\n        /* \"contracts/Boost.sol\":51822:51830  _tokenId */\n      dup4\n        /* \"contracts/Boost.sol\":51815:51821  _reset */\n      tag_294\n        /* \"contracts/Boost.sol\":51815:51831  _reset(_tokenId) */\n      jump\t// in\n    tag_494:\n        /* \"contracts/Boost.sol\":51857:51873  _poolVote.length */\n      dup2\n      mload\n        /* \"contracts/Boost.sol\":51907:51947  IVeToken(veToken).balanceOfNFT(_tokenId) */\n      mload(0x40)\n      shl(0xe2, 0x39f890b5)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":756:781   */\n      dup6\n      swap1\n      mstore\n        /* \"contracts/Boost.sol\":51841:51854  uint _poolCnt */\n      0x00\n      swap1\n        /* \"contracts/Boost.sol\":51916:51923  veToken */\n      immutable(\"0xeb87824f736d67edaf3560d951b0b69190da7967ad8d2ed342933b58834b3812\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Boost.sol\":51907:51937  IVeToken(veToken).balanceOfNFT */\n      and\n      swap1\n      0xe7e242d4\n      swap1\n        /* \"#utility.yul\":729:747   */\n      0x24\n      add\n        /* \"contracts/Boost.sol\":51907:51947  IVeToken(veToken).balanceOfNFT(_tokenId) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_497\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_497:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_498\n      swap2\n      swap1\n      tag_353\n      jump\t// in\n    tag_498:\n        /* \"contracts/Boost.sol\":51883:51948  int256 _weight = int256(IVeToken(veToken).balanceOfNFT(_tokenId)) */\n      swap1\n      pop\n        /* \"contracts/Boost.sol\":51958:51981  int256 _totalVoteWeight */\n      0x00\n        /* \"contracts/Boost.sol\":51995:52014  int256 _totalWeight */\n      dup1\n        /* \"contracts/Boost.sol\":52028:52046  int256 _usedWeight */\n      0x00\n        /* \"contracts/Boost.sol\":52066:52072  uint i */\n      dup1\n        /* \"contracts/Boost.sol\":52061:52187  for (uint i = 0; i < _poolCnt; i++) {... */\n    tag_499:\n        /* \"contracts/Boost.sol\":52082:52090  _poolCnt */\n      dup6\n        /* \"contracts/Boost.sol\":52078:52079  i */\n      dup2\n        /* \"contracts/Boost.sol\":52078:52090  i < _poolCnt */\n      lt\n        /* \"contracts/Boost.sol\":52061:52187  for (uint i = 0; i < _poolCnt; i++) {... */\n      iszero\n      tag_500\n      jumpi\n        /* \"contracts/Boost.sol\":52145:52146  0 */\n      0x00\n        /* \"contracts/Boost.sol\":52131:52139  _weights */\n      dup8\n        /* \"contracts/Boost.sol\":52140:52141  i */\n      dup3\n        /* \"contracts/Boost.sol\":52131:52142  _weights[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_503\n      jumpi\n      tag_503\n      tag_277\n      jump\t// in\n    tag_503:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Boost.sol\":52131:52146  _weights[i] > 0 */\n      sgt\n        /* \"contracts/Boost.sol\":52131:52176  _weights[i] > 0 ? _weights[i] : - _weights[i] */\n      tag_504\n      jumpi\n        /* \"contracts/Boost.sol\":52165:52173  _weights */\n      dup7\n        /* \"contracts/Boost.sol\":52174:52175  i */\n      dup2\n        /* \"contracts/Boost.sol\":52165:52176  _weights[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_506\n      jumpi\n      tag_506\n      tag_277\n      jump\t// in\n    tag_506:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Boost.sol\":52163:52176  - _weights[i] */\n      tag_507\n      swap1\n      tag_508\n      jump\t// in\n    tag_507:\n        /* \"contracts/Boost.sol\":52131:52176  _weights[i] > 0 ? _weights[i] : - _weights[i] */\n      jump(tag_509)\n    tag_504:\n        /* \"contracts/Boost.sol\":52149:52157  _weights */\n      dup7\n        /* \"contracts/Boost.sol\":52158:52159  i */\n      dup2\n        /* \"contracts/Boost.sol\":52149:52160  _weights[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_511\n      jumpi\n      tag_511\n      tag_277\n      jump\t// in\n    tag_511:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Boost.sol\":52131:52176  _weights[i] > 0 ? _weights[i] : - _weights[i] */\n    tag_509:\n        /* \"contracts/Boost.sol\":52111:52176  _totalVoteWeight += _weights[i] > 0 ? _weights[i] : - _weights[i] */\n      tag_512\n      swap1\n      dup6\n      tag_484\n      jump\t// in\n    tag_512:\n      swap4\n      pop\n        /* \"contracts/Boost.sol\":52092:52095  i++ */\n      dup1\n      tag_513\n      dup2\n      tag_286\n      jump\t// in\n    tag_513:\n      swap2\n      pop\n      pop\n        /* \"contracts/Boost.sol\":52061:52187  for (uint i = 0; i < _poolCnt; i++) {... */\n      jump(tag_499)\n    tag_500:\n      pop\n        /* \"contracts/Boost.sol\":52202:52208  uint i */\n      0x00\n        /* \"contracts/Boost.sol\":52197:53027  for (uint i = 0; i < _poolCnt; i++) {... */\n    tag_514:\n        /* \"contracts/Boost.sol\":52218:52226  _poolCnt */\n      dup6\n        /* \"contracts/Boost.sol\":52214:52215  i */\n      dup2\n        /* \"contracts/Boost.sol\":52214:52226  i < _poolCnt */\n      lt\n        /* \"contracts/Boost.sol\":52197:53027  for (uint i = 0; i < _poolCnt; i++) {... */\n      iszero\n      tag_515\n      jumpi\n        /* \"contracts/Boost.sol\":52247:52260  address _pool */\n      0x00\n        /* \"contracts/Boost.sol\":52263:52272  _poolVote */\n      dup9\n        /* \"contracts/Boost.sol\":52273:52274  i */\n      dup3\n        /* \"contracts/Boost.sol\":52263:52275  _poolVote[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_518\n      jumpi\n      tag_518\n      tag_277\n      jump\t// in\n    tag_518:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Boost.sol\":52247:52275  address _pool = _poolVote[i] */\n      swap1\n      pop\n        /* \"contracts/Boost.sol\":52294:52315  isGaugeForPool(_pool) */\n      tag_519\n        /* \"contracts/Boost.sol\":52309:52314  _pool */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Boost.sol\":59896:59909  gauges[_pool] */\n      swap1\n      dup2\n      and\n        /* \"contracts/Boost.sol\":59866:59870  bool */\n      0x00\n        /* \"contracts/Boost.sol\":59896:59909  gauges[_pool] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Boost.sol\":59896:59902  gauges */\n      0x11\n        /* \"contracts/Boost.sol\":59896:59909  gauges[_pool] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sload\n      swap1\n      swap4\n      and\n        /* \"contracts/Boost.sol\":59888:59910  isGauge[gauges[_pool]] */\n      dup3\n      mstore\n        /* \"contracts/Boost.sol\":59888:59895  isGauge */\n      0x13\n        /* \"contracts/Boost.sol\":59888:59910  isGauge[gauges[_pool]] */\n      swap1\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/Boost.sol\":59795:59917  function isGaugeForPool(address _pool) internal override view returns (bool){... */\n      jump\n        /* \"contracts/Boost.sol\":52294:52315  isGaugeForPool(_pool) */\n    tag_519:\n        /* \"contracts/Boost.sol\":52290:53017  if (isGaugeForPool(_pool)) {... */\n      iszero\n      tag_521\n      jumpi\n        /* \"contracts/Boost.sol\":52335:52353  int256 _poolWeight */\n      0x00\n        /* \"contracts/Boost.sol\":52380:52396  _totalVoteWeight */\n      dup6\n        /* \"contracts/Boost.sol\":52370:52377  _weight */\n      dup8\n        /* \"contracts/Boost.sol\":52356:52364  _weights */\n      dup11\n        /* \"contracts/Boost.sol\":52365:52366  i */\n      dup6\n        /* \"contracts/Boost.sol\":52356:52367  _weights[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_523\n      jumpi\n      tag_523\n      tag_277\n      jump\t// in\n    tag_523:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/Boost.sol\":52356:52377  _weights[i] * _weight */\n      tag_524\n      swap2\n      swap1\n      tag_525\n      jump\t// in\n    tag_524:\n        /* \"contracts/Boost.sol\":52356:52396  _weights[i] * _weight / _totalVoteWeight */\n      tag_526\n      swap2\n      swap1\n      tag_527\n      jump\t// in\n    tag_526:\n        /* \"contracts/Boost.sol\":52422:52437  votes[_tokenId] */\n      0x00\n      dup13\n      dup2\n      mstore\n        /* \"contracts/Boost.sol\":52422:52427  votes */\n      0x0a\n        /* \"contracts/Boost.sol\":52422:52437  votes[_tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Boost.sol\":52422:52444  votes[_tokenId][_pool] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Boost.sol\":52335:52396  int256 _poolWeight = _weights[i] * _weight / _totalVoteWeight */\n      swap1\n      swap2\n      pop\n        /* \"contracts/Boost.sol\":52422:52449  votes[_tokenId][_pool] == 0 */\n      iszero\n        /* \"contracts/Boost.sol\":52414:52469  require(votes[_tokenId][_pool] == 0, \"token pool is 0\") */\n      tag_528\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15393:15395   */\n      0x20\n        /* \"contracts/Boost.sol\":52414:52469  require(votes[_tokenId][_pool] == 0, \"token pool is 0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15375:15396   */\n      mstore\n        /* \"#utility.yul\":15432:15434   */\n      0x0f\n        /* \"#utility.yul\":15412:15430   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15405:15435   */\n      mstore\n      shl(0x8c, 0x0746f6b656e20706f6f6c206973203)\n        /* \"#utility.yul\":15451:15469   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15444:15489   */\n      mstore\n        /* \"#utility.yul\":15506:15524   */\n      0x64\n      add\n        /* \"contracts/Boost.sol\":52414:52469  require(votes[_tokenId][_pool] == 0, \"token pool is 0\") */\n      tag_226\n        /* \"#utility.yul\":15191:15530   */\n      jump\n        /* \"contracts/Boost.sol\":52414:52469  require(votes[_tokenId][_pool] == 0, \"token pool is 0\") */\n    tag_528:\n        /* \"contracts/Boost.sol\":52495:52511  _poolWeight != 0 */\n      dup1\n        /* \"contracts/Boost.sol\":52487:52527  require(_poolWeight != 0, \"weight is 0\") */\n      tag_531\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15737:15739   */\n      0x20\n        /* \"contracts/Boost.sol\":52487:52527  require(_poolWeight != 0, \"weight is 0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15719:15740   */\n      mstore\n        /* \"#utility.yul\":15776:15778   */\n      0x0b\n        /* \"#utility.yul\":15756:15774   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15749:15779   */\n      mstore\n      shl(0xac, 0x0776569676874206973203)\n        /* \"#utility.yul\":15795:15813   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15788:15829   */\n      mstore\n        /* \"#utility.yul\":15846:15864   */\n      0x64\n      add\n        /* \"contracts/Boost.sol\":52487:52527  require(_poolWeight != 0, \"weight is 0\") */\n      tag_226\n        /* \"#utility.yul\":15535:15870   */\n      jump\n        /* \"contracts/Boost.sol\":52487:52527  require(_poolWeight != 0, \"weight is 0\") */\n    tag_531:\n        /* \"contracts/Boost.sol\":52545:52567  _updatePoolInfo(_pool) */\n      tag_534\n        /* \"contracts/Boost.sol\":52561:52566  _pool */\n      dup3\n        /* \"contracts/Boost.sol\":52545:52560  _updatePoolInfo */\n      tag_478\n        /* \"contracts/Boost.sol\":52545:52567  _updatePoolInfo(_pool) */\n      jump\t// in\n    tag_534:\n        /* \"contracts/Boost.sol\":52586:52604  poolVote[_tokenId] */\n      0x00\n      dup12\n      dup2\n      mstore\n        /* \"contracts/Boost.sol\":52586:52594  poolVote */\n      0x0b\n        /* \"contracts/Boost.sol\":52586:52604  poolVote[_tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/Boost.sol\":52586:52616  poolVote[_tokenId].push(_pool) */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      dup3\n      sstore\n      swap1\n      dup5\n      mstore\n      dup3\n      dup5\n      keccak256\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup8\n      and\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/Boost.sol\":52635:52649  weights[_pool] */\n      dup4\n      mstore\n        /* \"contracts/Boost.sol\":52635:52642  weights */\n      0x09\n        /* \"contracts/Boost.sol\":52635:52649  weights[_pool] */\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/Boost.sol\":52635:52664  weights[_pool] += _poolWeight */\n      dup1\n      sload\n        /* \"contracts/Boost.sol\":52653:52664  _poolWeight */\n      dup4\n      swap3\n        /* \"contracts/Boost.sol\":52586:52604  poolVote[_tokenId] */\n      swap1\n        /* \"contracts/Boost.sol\":52635:52664  weights[_pool] += _poolWeight */\n      tag_536\n      swap1\n        /* \"contracts/Boost.sol\":52653:52664  _poolWeight */\n      dup5\n      swap1\n        /* \"contracts/Boost.sol\":52635:52664  weights[_pool] += _poolWeight */\n      tag_484\n      jump\t// in\n    tag_536:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/Boost.sol\":52682:52697  votes[_tokenId] */\n      0x00\n      dup12\n      dup2\n      mstore\n        /* \"contracts/Boost.sol\":52682:52687  votes */\n      0x0a\n        /* \"contracts/Boost.sol\":52682:52697  votes[_tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Boost.sol\":52682:52704  votes[_tokenId][_pool] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/Boost.sol\":52682:52719  votes[_tokenId][_pool] += _poolWeight */\n      dup1\n      sload\n        /* \"contracts/Boost.sol\":52708:52719  _poolWeight */\n      dup4\n      swap3\n        /* \"contracts/Boost.sol\":52682:52697  votes[_tokenId] */\n      swap1\n        /* \"contracts/Boost.sol\":52682:52719  votes[_tokenId][_pool] += _poolWeight */\n      tag_537\n      swap1\n        /* \"contracts/Boost.sol\":52708:52719  _poolWeight */\n      dup5\n      swap1\n        /* \"contracts/Boost.sol\":52682:52719  votes[_tokenId][_pool] += _poolWeight */\n      tag_484\n      jump\t// in\n    tag_537:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/Boost.sol\":52755:52756  0 */\n      0x00\n        /* \"contracts/Boost.sol\":52741:52756  _poolWeight > 0 */\n      dup2\n      sgt\n        /* \"contracts/Boost.sol\":52737:52851  if (_poolWeight > 0) {... */\n      iszero\n      tag_538\n      jumpi\n      jump(tag_539)\n    tag_538:\n        /* \"contracts/Boost.sol\":52819:52832  - _poolWeight */\n      tag_540\n        /* \"contracts/Boost.sol\":52821:52832  _poolWeight */\n      dup2\n        /* \"contracts/Boost.sol\":52819:52832  - _poolWeight */\n      tag_508\n      jump\t// in\n    tag_540:\n        /* \"contracts/Boost.sol\":52805:52832  _poolWeight = - _poolWeight */\n      swap1\n      pop\n        /* \"contracts/Boost.sol\":52737:52851  if (_poolWeight > 0) {... */\n    tag_539:\n        /* \"contracts/Boost.sol\":52868:52894  _usedWeight += _poolWeight */\n      tag_541\n        /* \"contracts/Boost.sol\":52883:52894  _poolWeight */\n      dup2\n        /* \"contracts/Boost.sol\":52868:52894  _usedWeight += _poolWeight */\n      dup6\n      tag_484\n      jump\t// in\n    tag_541:\n      swap4\n      pop\n        /* \"contracts/Boost.sol\":52912:52939  _totalWeight += _poolWeight */\n      tag_542\n        /* \"contracts/Boost.sol\":52928:52939  _poolWeight */\n      dup2\n        /* \"contracts/Boost.sol\":52912:52939  _totalWeight += _poolWeight */\n      dup7\n      tag_484\n      jump\t// in\n    tag_542:\n        /* \"contracts/Boost.sol\":52962:53002  Voted(msg.sender, _tokenId, _poolWeight) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":13157:13182   */\n      dup14\n      dup2\n      mstore\n        /* \"#utility.yul\":13213:13215   */\n      0x20\n        /* \"#utility.yul\":13198:13216   */\n      dup2\n      add\n        /* \"#utility.yul\":13191:13225   */\n      dup5\n      swap1\n      mstore\n        /* \"contracts/Boost.sol\":52912:52939  _totalWeight += _poolWeight */\n      swap2\n      swap7\n      pop\n        /* \"contracts/Boost.sol\":52968:52978  msg.sender */\n      caller\n      swap2\n        /* \"contracts/Boost.sol\":52962:53002  Voted(msg.sender, _tokenId, _poolWeight) */\n      0x1263a2295e53acd6ef8f655b8afc11fa0f2cf11925be7aa1757d741ef32a926c\n      swap2\n        /* \"#utility.yul\":13130:13148   */\n      add\n        /* \"contracts/Boost.sol\":52962:53002  Voted(msg.sender, _tokenId, _poolWeight) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/Boost.sol\":52317:53017  {... */\n      pop\n        /* \"contracts/Boost.sol\":52290:53017  if (isGaugeForPool(_pool)) {... */\n    tag_521:\n      pop\n        /* \"contracts/Boost.sol\":52228:52231  i++ */\n      dup1\n      tag_544\n      dup2\n      tag_286\n      jump\t// in\n    tag_544:\n      swap2\n      pop\n      pop\n        /* \"contracts/Boost.sol\":52197:53027  for (uint i = 0; i < _poolCnt; i++) {... */\n      jump(tag_514)\n    tag_515:\n      pop\n        /* \"contracts/Boost.sol\":53054:53055  0 */\n      0x00\n        /* \"contracts/Boost.sol\":53040:53051  _usedWeight */\n      dup2\n        /* \"contracts/Boost.sol\":53040:53055  _usedWeight > 0 */\n      sgt\n        /* \"contracts/Boost.sol\":53036:53091  if (_usedWeight > 0) IVeToken(veToken).voting(_tokenId) */\n      iszero\n      tag_545\n      jumpi\n        /* \"contracts/Boost.sol\":53057:53091  IVeToken(veToken).voting(_tokenId) */\n      mload(0x40)\n      shl(0xe0, 0xfd4a77f1)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":756:781   */\n      dup10\n      swap1\n      mstore\n        /* \"contracts/Boost.sol\":53066:53073  veToken */\n      immutable(\"0xeb87824f736d67edaf3560d951b0b69190da7967ad8d2ed342933b58834b3812\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Boost.sol\":53057:53081  IVeToken(veToken).voting */\n      and\n      swap1\n      0xfd4a77f1\n      swap1\n        /* \"#utility.yul\":729:747   */\n      0x24\n      add\n        /* \"contracts/Boost.sol\":53057:53091  IVeToken(veToken).voting(_tokenId) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_547\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_547:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_549\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_549:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Boost.sol\":53036:53091  if (_usedWeight > 0) IVeToken(veToken).voting(_tokenId) */\n    tag_545:\n        /* \"contracts/Boost.sol\":53124:53136  _totalWeight */\n      dup2\n        /* \"contracts/Boost.sol\":53101:53112  totalWeight */\n      0x08\n      0x00\n        /* \"contracts/Boost.sol\":53101:53137  totalWeight += uint256(_totalWeight) */\n      dup3\n      dup3\n      sload\n      tag_550\n      swap2\n      swap1\n      tag_466\n      jump\t// in\n    tag_550:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/Boost.sol\":53147:53168  usedWeights[_tokenId] */\n      0x00\n      swap8\n      dup9\n      mstore\n        /* \"contracts/Boost.sol\":53147:53158  usedWeights */\n      0x0c\n        /* \"contracts/Boost.sol\":53147:53168  usedWeights[_tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      swap8\n      keccak256\n        /* \"contracts/Boost.sol\":53147:53191  usedWeights[_tokenId] = uint256(_usedWeight) */\n      swap7\n      swap1\n      swap7\n      sstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Boost.sol\":51712:53198  function _vote(uint _tokenId, address[] memory _poolVote, int256[] memory _weights) internal {... */\n      jump\t// out\n        /* \"contracts/Boost.sol\":26396:26492  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_340:\n        /* \"contracts/Boost.sol\":26454:26461  uint256 */\n      0x00\n        /* \"contracts/Boost.sol\":26480:26485  a * b */\n      tag_465\n        /* \"contracts/Boost.sol\":26484:26485  b */\n      dup3\n        /* \"contracts/Boost.sol\":26480:26481  a */\n      dup5\n        /* \"contracts/Boost.sol\":26480:26485  a * b */\n      tag_553\n      jump\t// in\n        /* \"contracts/Boost.sol\":26781:26877  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_341:\n        /* \"contracts/Boost.sol\":26839:26846  uint256 */\n      0x00\n        /* \"contracts/Boost.sol\":26865:26870  a / b */\n      tag_465\n        /* \"contracts/Boost.sol\":26869:26870  b */\n      dup3\n        /* \"contracts/Boost.sol\":26865:26866  a */\n      dup5\n        /* \"contracts/Boost.sol\":26865:26870  a / b */\n      tag_556\n      jump\t// in\n        /* \"contracts/Boost.sol\":26053:26149  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_357:\n        /* \"contracts/Boost.sol\":26111:26118  uint256 */\n      0x00\n        /* \"contracts/Boost.sol\":26137:26142  a - b */\n      tag_465\n        /* \"contracts/Boost.sol\":26141:26142  b */\n      dup3\n        /* \"contracts/Boost.sol\":26137:26138  a */\n      dup5\n        /* \"contracts/Boost.sol\":26137:26142  a - b */\n      tag_239\n      jump\t// in\n        /* \"contracts/Boost.sol\":59684:59789  function _updatePoolInfo(address _pool) internal override {... */\n    tag_478:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Boost.sol\":59768:59781  gauges[_pool] */\n      dup1\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Boost.sol\":59768:59774  gauges */\n      0x11\n        /* \"contracts/Boost.sol\":59768:59781  gauges[_pool] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Boost.sol\":59752:59782  _updateForGauge(gauges[_pool]) */\n      tag_344\n      swap2\n        /* \"contracts/Boost.sol\":59768:59781  gauges[_pool] */\n      and\n        /* \"contracts/Boost.sol\":59752:59767  _updateForGauge */\n      tag_253\n        /* \"contracts/Boost.sol\":59752:59782  _updateForGauge(gauges[_pool]) */\n      jump\t// in\n    tag_492:\n      pop\n      dup1\n      sload\n      0x00\n      dup3\n      sstore\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap1\n      tag_344\n      swap2\n      swap1\n    tag_565:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_566\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_565)\n    tag_566:\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14:145   */\n    tag_567:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":89:120   */\n      dup2\n      and\n        /* \"#utility.yul\":79:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":69:139   */\n      tag_344\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":150:397   */\n    tag_58:\n        /* \"#utility.yul\":209:215   */\n      0x00\n        /* \"#utility.yul\":262:264   */\n      0x20\n        /* \"#utility.yul\":250:259   */\n      dup3\n        /* \"#utility.yul\":241:248   */\n      dup5\n        /* \"#utility.yul\":237:260   */\n      sub\n        /* \"#utility.yul\":233:265   */\n      slt\n        /* \"#utility.yul\":230:282   */\n      iszero\n      tag_580\n      jumpi\n        /* \"#utility.yul\":278:279   */\n      0x00\n        /* \"#utility.yul\":275:276   */\n      dup1\n        /* \"#utility.yul\":268:280   */\n      revert\n        /* \"#utility.yul\":230:282   */\n    tag_580:\n        /* \"#utility.yul\":317:326   */\n      dup2\n        /* \"#utility.yul\":304:327   */\n      calldataload\n        /* \"#utility.yul\":336:367   */\n      tag_465\n        /* \"#utility.yul\":361:366   */\n      dup2\n        /* \"#utility.yul\":336:367   */\n      tag_567\n      jump\t// in\n        /* \"#utility.yul\":792:910   */\n    tag_568:\n        /* \"#utility.yul\":878:883   */\n      dup1\n        /* \"#utility.yul\":871:884   */\n      iszero\n        /* \"#utility.yul\":864:885   */\n      iszero\n        /* \"#utility.yul\":857:862   */\n      dup2\n        /* \"#utility.yul\":854:886   */\n      eq\n        /* \"#utility.yul\":844:904   */\n      tag_344\n      jumpi\n        /* \"#utility.yul\":900:901   */\n      0x00\n        /* \"#utility.yul\":897:898   */\n      dup1\n        /* \"#utility.yul\":890:902   */\n      revert\n        /* \"#utility.yul\":915:1365   */\n    tag_68:\n        /* \"#utility.yul\":989:995   */\n      0x00\n        /* \"#utility.yul\":997:1003   */\n      dup1\n        /* \"#utility.yul\":1005:1011   */\n      0x00\n        /* \"#utility.yul\":1058:1060   */\n      0x60\n        /* \"#utility.yul\":1046:1055   */\n      dup5\n        /* \"#utility.yul\":1037:1044   */\n      dup7\n        /* \"#utility.yul\":1033:1056   */\n      sub\n        /* \"#utility.yul\":1029:1061   */\n      slt\n        /* \"#utility.yul\":1026:1078   */\n      iszero\n      tag_587\n      jumpi\n        /* \"#utility.yul\":1074:1075   */\n      0x00\n        /* \"#utility.yul\":1071:1072   */\n      dup1\n        /* \"#utility.yul\":1064:1076   */\n      revert\n        /* \"#utility.yul\":1026:1078   */\n    tag_587:\n        /* \"#utility.yul\":1113:1122   */\n      dup4\n        /* \"#utility.yul\":1100:1123   */\n      calldataload\n        /* \"#utility.yul\":1132:1163   */\n      tag_588\n        /* \"#utility.yul\":1157:1162   */\n      dup2\n        /* \"#utility.yul\":1132:1163   */\n      tag_567\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":1182:1187   */\n      swap3\n      pop\n        /* \"#utility.yul\":1234:1236   */\n      0x20\n        /* \"#utility.yul\":1219:1237   */\n      dup5\n      add\n        /* \"#utility.yul\":1206:1238   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":1290:1292   */\n      0x40\n        /* \"#utility.yul\":1275:1293   */\n      dup5\n      add\n        /* \"#utility.yul\":1262:1294   */\n      calldataload\n        /* \"#utility.yul\":1303:1333   */\n      tag_589\n        /* \"#utility.yul\":1262:1294   */\n      dup2\n        /* \"#utility.yul\":1303:1333   */\n      tag_568\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":1352:1359   */\n      dup1\n        /* \"#utility.yul\":1342:1359   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":915:1365   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1370:1550   */\n    tag_82:\n        /* \"#utility.yul\":1429:1435   */\n      0x00\n        /* \"#utility.yul\":1482:1484   */\n      0x20\n        /* \"#utility.yul\":1470:1479   */\n      dup3\n        /* \"#utility.yul\":1461:1468   */\n      dup5\n        /* \"#utility.yul\":1457:1480   */\n      sub\n        /* \"#utility.yul\":1453:1485   */\n      slt\n        /* \"#utility.yul\":1450:1502   */\n      iszero\n      tag_591\n      jumpi\n        /* \"#utility.yul\":1498:1499   */\n      0x00\n        /* \"#utility.yul\":1495:1496   */\n      dup1\n        /* \"#utility.yul\":1488:1500   */\n      revert\n        /* \"#utility.yul\":1450:1502   */\n    tag_591:\n      pop\n        /* \"#utility.yul\":1521:1544   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1370:1550   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1555:2016   */\n    tag_569:\n        /* \"#utility.yul\":1608:1611   */\n      0x00\n        /* \"#utility.yul\":1646:1651   */\n      dup2\n        /* \"#utility.yul\":1640:1652   */\n      mload\n        /* \"#utility.yul\":1673:1679   */\n      dup1\n        /* \"#utility.yul\":1668:1671   */\n      dup5\n        /* \"#utility.yul\":1661:1680   */\n      mstore\n        /* \"#utility.yul\":1699:1703   */\n      0x20\n        /* \"#utility.yul\":1728:1730   */\n      dup1\n        /* \"#utility.yul\":1723:1726   */\n      dup6\n        /* \"#utility.yul\":1719:1731   */\n      add\n        /* \"#utility.yul\":1712:1731   */\n      swap5\n      pop\n        /* \"#utility.yul\":1765:1767   */\n      dup1\n        /* \"#utility.yul\":1758:1763   */\n      dup5\n        /* \"#utility.yul\":1754:1768   */\n      add\n        /* \"#utility.yul\":1786:1787   */\n      0x00\n        /* \"#utility.yul\":1796:1991   */\n    tag_593:\n        /* \"#utility.yul\":1810:1816   */\n      dup4\n        /* \"#utility.yul\":1807:1808   */\n      dup2\n        /* \"#utility.yul\":1804:1817   */\n      lt\n        /* \"#utility.yul\":1796:1991   */\n      iszero\n      tag_595\n      jumpi\n        /* \"#utility.yul\":1875:1888   */\n      dup2\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1871:1910   */\n      and\n        /* \"#utility.yul\":1859:1911   */\n      dup8\n      mstore\n        /* \"#utility.yul\":1931:1943   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":1966:1981   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":1907:1908   */\n      0x01\n        /* \"#utility.yul\":1825:1834   */\n      add\n        /* \"#utility.yul\":1796:1991   */\n      jump(tag_593)\n    tag_595:\n      pop\n        /* \"#utility.yul\":2007:2010   */\n      swap5\n      swap6\n        /* \"#utility.yul\":1555:2016   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2021:2282   */\n    tag_85:\n        /* \"#utility.yul\":2200:2202   */\n      0x20\n        /* \"#utility.yul\":2189:2198   */\n      dup2\n        /* \"#utility.yul\":2182:2203   */\n      mstore\n        /* \"#utility.yul\":2163:2167   */\n      0x00\n        /* \"#utility.yul\":2220:2276   */\n      tag_465\n        /* \"#utility.yul\":2272:2274   */\n      0x20\n        /* \"#utility.yul\":2261:2270   */\n      dup4\n        /* \"#utility.yul\":2257:2275   */\n      add\n        /* \"#utility.yul\":2249:2255   */\n      dup5\n        /* \"#utility.yul\":2220:2276   */\n      tag_569\n      jump\t// in\n        /* \"#utility.yul\":2637:2764   */\n    tag_304:\n        /* \"#utility.yul\":2698:2708   */\n      0x4e487b71\n        /* \"#utility.yul\":2693:2696   */\n      0xe0\n        /* \"#utility.yul\":2689:2709   */\n      shl\n        /* \"#utility.yul\":2686:2687   */\n      0x00\n        /* \"#utility.yul\":2679:2710   */\n      mstore\n        /* \"#utility.yul\":2729:2733   */\n      0x41\n        /* \"#utility.yul\":2726:2727   */\n      0x04\n        /* \"#utility.yul\":2719:2734   */\n      mstore\n        /* \"#utility.yul\":2753:2757   */\n      0x24\n        /* \"#utility.yul\":2750:2751   */\n      0x00\n        /* \"#utility.yul\":2743:2758   */\n      revert\n        /* \"#utility.yul\":2769:3044   */\n    tag_570:\n        /* \"#utility.yul\":2840:2842   */\n      0x40\n        /* \"#utility.yul\":2834:2843   */\n      mload\n        /* \"#utility.yul\":2905:2907   */\n      0x1f\n        /* \"#utility.yul\":2886:2899   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2882:2909   */\n      and\n        /* \"#utility.yul\":2870:2910   */\n      dup2\n      add\n        /* \"#utility.yul\":2940:2958   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2925:2959   */\n      dup2\n      gt\n        /* \"#utility.yul\":2961:2983   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":2922:2984   */\n      or\n        /* \"#utility.yul\":2919:3007   */\n      iszero\n      tag_602\n      jumpi\n        /* \"#utility.yul\":2987:3005   */\n      tag_602\n      tag_304\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":3023:3025   */\n      0x40\n        /* \"#utility.yul\":3016:3038   */\n      mstore\n        /* \"#utility.yul\":2769:3044   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3049:3232   */\n    tag_571:\n        /* \"#utility.yul\":3109:3113   */\n      0x00\n        /* \"#utility.yul\":3142:3160   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3134:3140   */\n      dup3\n        /* \"#utility.yul\":3131:3161   */\n      gt\n        /* \"#utility.yul\":3128:3184   */\n      iszero\n      tag_605\n      jumpi\n        /* \"#utility.yul\":3164:3182   */\n      tag_605\n      tag_304\n      jump\t// in\n    tag_605:\n      pop\n        /* \"#utility.yul\":3209:3210   */\n      0x05\n        /* \"#utility.yul\":3205:3219   */\n      shl\n        /* \"#utility.yul\":3221:3225   */\n      0x20\n        /* \"#utility.yul\":3201:3226   */\n      add\n      swap1\n        /* \"#utility.yul\":3049:3232   */\n      jump\t// out\n        /* \"#utility.yul\":3237:3974   */\n    tag_572:\n        /* \"#utility.yul\":3291:3296   */\n      0x00\n        /* \"#utility.yul\":3344:3347   */\n      dup3\n        /* \"#utility.yul\":3337:3341   */\n      0x1f\n        /* \"#utility.yul\":3329:3335   */\n      dup4\n        /* \"#utility.yul\":3325:3342   */\n      add\n        /* \"#utility.yul\":3321:3348   */\n      slt\n        /* \"#utility.yul\":3311:3366   */\n      tag_607\n      jumpi\n        /* \"#utility.yul\":3362:3363   */\n      0x00\n        /* \"#utility.yul\":3359:3360   */\n      dup1\n        /* \"#utility.yul\":3352:3364   */\n      revert\n        /* \"#utility.yul\":3311:3366   */\n    tag_607:\n        /* \"#utility.yul\":3398:3404   */\n      dup2\n        /* \"#utility.yul\":3385:3405   */\n      calldataload\n        /* \"#utility.yul\":3424:3428   */\n      0x20\n        /* \"#utility.yul\":3448:3508   */\n      tag_608\n        /* \"#utility.yul\":3464:3507   */\n      tag_609\n        /* \"#utility.yul\":3504:3506   */\n      dup4\n        /* \"#utility.yul\":3464:3507   */\n      tag_571\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":3448:3508   */\n      tag_570\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":3542:3557   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":3628:3629   */\n      0x05\n        /* \"#utility.yul\":3624:3634   */\n      swap3\n      swap1\n      swap3\n      shl\n        /* \"#utility.yul\":3612:3635   */\n      dup5\n      add\n        /* \"#utility.yul\":3608:3640   */\n      dup2\n      add\n      swap2\n        /* \"#utility.yul\":3573:3585   */\n      dup2\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":3652:3667   */\n      dup7\n      dup5\n      gt\n        /* \"#utility.yul\":3649:3684   */\n      iszero\n      tag_610\n      jumpi\n        /* \"#utility.yul\":3680:3681   */\n      0x00\n        /* \"#utility.yul\":3677:3678   */\n      dup1\n        /* \"#utility.yul\":3670:3682   */\n      revert\n        /* \"#utility.yul\":3649:3684   */\n    tag_610:\n        /* \"#utility.yul\":3716:3718   */\n      dup3\n        /* \"#utility.yul\":3708:3714   */\n      dup7\n        /* \"#utility.yul\":3704:3719   */\n      add\n        /* \"#utility.yul\":3728:3945   */\n    tag_611:\n        /* \"#utility.yul\":3744:3750   */\n      dup5\n        /* \"#utility.yul\":3739:3742   */\n      dup2\n        /* \"#utility.yul\":3736:3751   */\n      lt\n        /* \"#utility.yul\":3728:3945   */\n      iszero\n      tag_613\n      jumpi\n        /* \"#utility.yul\":3824:3827   */\n      dup1\n        /* \"#utility.yul\":3811:3828   */\n      calldataload\n        /* \"#utility.yul\":3841:3872   */\n      tag_614\n        /* \"#utility.yul\":3866:3871   */\n      dup2\n        /* \"#utility.yul\":3841:3872   */\n      tag_567\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":3885:3903   */\n      dup4\n      mstore\n        /* \"#utility.yul\":3923:3935   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":3761:3773   */\n      dup4\n      add\n        /* \"#utility.yul\":3728:3945   */\n      jump(tag_611)\n    tag_613:\n      pop\n        /* \"#utility.yul\":3963:3968   */\n      swap7\n        /* \"#utility.yul\":3237:3974   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3979:5364   */\n    tag_96:\n        /* \"#utility.yul\":4122:4128   */\n      0x00\n        /* \"#utility.yul\":4130:4136   */\n      dup1\n        /* \"#utility.yul\":4183:4185   */\n      0x40\n        /* \"#utility.yul\":4171:4180   */\n      dup4\n        /* \"#utility.yul\":4162:4169   */\n      dup6\n        /* \"#utility.yul\":4158:4181   */\n      sub\n        /* \"#utility.yul\":4154:4186   */\n      slt\n        /* \"#utility.yul\":4151:4203   */\n      iszero\n      tag_616\n      jumpi\n        /* \"#utility.yul\":4199:4200   */\n      0x00\n        /* \"#utility.yul\":4196:4197   */\n      dup1\n        /* \"#utility.yul\":4189:4201   */\n      revert\n        /* \"#utility.yul\":4151:4203   */\n    tag_616:\n        /* \"#utility.yul\":4239:4248   */\n      dup3\n        /* \"#utility.yul\":4226:4249   */\n      calldataload\n        /* \"#utility.yul\":4268:4286   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4309:4311   */\n      dup1\n        /* \"#utility.yul\":4301:4307   */\n      dup3\n        /* \"#utility.yul\":4298:4312   */\n      gt\n        /* \"#utility.yul\":4295:4329   */\n      iszero\n      tag_617\n      jumpi\n        /* \"#utility.yul\":4325:4326   */\n      0x00\n        /* \"#utility.yul\":4322:4323   */\n      dup1\n        /* \"#utility.yul\":4315:4327   */\n      revert\n        /* \"#utility.yul\":4295:4329   */\n    tag_617:\n        /* \"#utility.yul\":4348:4409   */\n      tag_618\n        /* \"#utility.yul\":4401:4408   */\n      dup7\n        /* \"#utility.yul\":4392:4398   */\n      dup4\n        /* \"#utility.yul\":4381:4390   */\n      dup8\n        /* \"#utility.yul\":4377:4399   */\n      add\n        /* \"#utility.yul\":4348:4409   */\n      tag_572\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":4338:4409   */\n      swap4\n      pop\n        /* \"#utility.yul\":4428:4430   */\n      0x20\n        /* \"#utility.yul\":4418:4430   */\n      swap2\n      pop\n        /* \"#utility.yul\":4483:4485   */\n      dup2\n        /* \"#utility.yul\":4472:4481   */\n      dup6\n        /* \"#utility.yul\":4468:4486   */\n      add\n        /* \"#utility.yul\":4455:4487   */\n      calldataload\n        /* \"#utility.yul\":4512:4514   */\n      dup2\n        /* \"#utility.yul\":4502:4510   */\n      dup2\n        /* \"#utility.yul\":4499:4515   */\n      gt\n        /* \"#utility.yul\":4496:4532   */\n      iszero\n      tag_619\n      jumpi\n        /* \"#utility.yul\":4528:4529   */\n      0x00\n        /* \"#utility.yul\":4525:4526   */\n      dup1\n        /* \"#utility.yul\":4518:4530   */\n      revert\n        /* \"#utility.yul\":4496:4532   */\n    tag_619:\n        /* \"#utility.yul\":4551:4575   */\n      dup6\n      add\n        /* \"#utility.yul\":4606:4610   */\n      0x1f\n        /* \"#utility.yul\":4598:4611   */\n      dup2\n      add\n        /* \"#utility.yul\":4594:4621   */\n      dup8\n      sgt\n        /* \"#utility.yul\":4584:4639   */\n      tag_620\n      jumpi\n        /* \"#utility.yul\":4635:4636   */\n      0x00\n        /* \"#utility.yul\":4632:4633   */\n      dup1\n        /* \"#utility.yul\":4625:4637   */\n      revert\n        /* \"#utility.yul\":4584:4639   */\n    tag_620:\n        /* \"#utility.yul\":4671:4673   */\n      dup1\n        /* \"#utility.yul\":4658:4674   */\n      calldataload\n        /* \"#utility.yul\":4694:4754   */\n      tag_621\n        /* \"#utility.yul\":4710:4753   */\n      tag_609\n        /* \"#utility.yul\":4750:4752   */\n      dup3\n        /* \"#utility.yul\":4710:4753   */\n      tag_571\n      jump\t// in\n        /* \"#utility.yul\":4694:4754   */\n    tag_621:\n        /* \"#utility.yul\":4788:4803   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":4870:4871   */\n      0x05\n        /* \"#utility.yul\":4866:4876   */\n      swap2\n      swap1\n      swap2\n      shl\n        /* \"#utility.yul\":4858:4877   */\n      dup3\n      add\n        /* \"#utility.yul\":4854:4882   */\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":4819:4831   */\n      dup5\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":4894:4913   */\n      dup10\n      dup4\n      gt\n        /* \"#utility.yul\":4891:4930   */\n      iszero\n      tag_623\n      jumpi\n        /* \"#utility.yul\":4926:4927   */\n      0x00\n        /* \"#utility.yul\":4923:4924   */\n      dup1\n        /* \"#utility.yul\":4916:4928   */\n      revert\n        /* \"#utility.yul\":4891:4930   */\n    tag_623:\n        /* \"#utility.yul\":4958:4960   */\n      dup6\n        /* \"#utility.yul\":4954:4956   */\n      dup5\n        /* \"#utility.yul\":4950:4961   */\n      add\n        /* \"#utility.yul\":4970:5334   */\n    tag_624:\n        /* \"#utility.yul\":4986:4992   */\n      dup4\n        /* \"#utility.yul\":4981:4984   */\n      dup2\n        /* \"#utility.yul\":4978:4993   */\n      lt\n        /* \"#utility.yul\":4970:5334   */\n      iszero\n      tag_626\n      jumpi\n        /* \"#utility.yul\":5072:5075   */\n      dup1\n        /* \"#utility.yul\":5059:5076   */\n      calldataload\n        /* \"#utility.yul\":5108:5110   */\n      dup7\n        /* \"#utility.yul\":5095:5106   */\n      dup2\n        /* \"#utility.yul\":5092:5111   */\n      gt\n        /* \"#utility.yul\":5089:5198   */\n      iszero\n      tag_627\n      jumpi\n        /* \"#utility.yul\":5152:5153   */\n      0x00\n        /* \"#utility.yul\":5181:5183   */\n      dup1\n        /* \"#utility.yul\":5177:5179   */\n      dup2\n        /* \"#utility.yul\":5170:5184   */\n      revert\n        /* \"#utility.yul\":5089:5198   */\n    tag_627:\n        /* \"#utility.yul\":5223:5291   */\n      tag_628\n        /* \"#utility.yul\":5283:5290   */\n      dup13\n        /* \"#utility.yul\":5278:5280   */\n      dup10\n        /* \"#utility.yul\":5264:5275   */\n      dup4\n        /* \"#utility.yul\":5260:5262   */\n      dup10\n        /* \"#utility.yul\":5256:5276   */\n      add\n        /* \"#utility.yul\":5252:5281   */\n      add\n        /* \"#utility.yul\":5223:5291   */\n      tag_572\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":5211:5292   */\n      dup5\n      mstore\n      pop\n        /* \"#utility.yul\":5312:5324   */\n      swap2\n      dup7\n      add\n      swap2\n        /* \"#utility.yul\":5003:5015   */\n      dup7\n      add\n        /* \"#utility.yul\":4970:5334   */\n      jump(tag_624)\n    tag_626:\n        /* \"#utility.yul\":4974:4977   */\n      pop\n        /* \"#utility.yul\":5353:5358   */\n      dup1\n        /* \"#utility.yul\":5343:5358   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3979:5364   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5369:5684   */\n    tag_112:\n        /* \"#utility.yul\":5437:5443   */\n      0x00\n        /* \"#utility.yul\":5445:5451   */\n      dup1\n        /* \"#utility.yul\":5498:5500   */\n      0x40\n        /* \"#utility.yul\":5486:5495   */\n      dup4\n        /* \"#utility.yul\":5477:5484   */\n      dup6\n        /* \"#utility.yul\":5473:5496   */\n      sub\n        /* \"#utility.yul\":5469:5501   */\n      slt\n        /* \"#utility.yul\":5466:5518   */\n      iszero\n      tag_630\n      jumpi\n        /* \"#utility.yul\":5514:5515   */\n      0x00\n        /* \"#utility.yul\":5511:5512   */\n      dup1\n        /* \"#utility.yul\":5504:5516   */\n      revert\n        /* \"#utility.yul\":5466:5518   */\n    tag_630:\n        /* \"#utility.yul\":5550:5559   */\n      dup3\n        /* \"#utility.yul\":5537:5560   */\n      calldataload\n        /* \"#utility.yul\":5527:5560   */\n      swap2\n      pop\n        /* \"#utility.yul\":5610:5612   */\n      0x20\n        /* \"#utility.yul\":5599:5608   */\n      dup4\n        /* \"#utility.yul\":5595:5613   */\n      add\n        /* \"#utility.yul\":5582:5614   */\n      calldataload\n        /* \"#utility.yul\":5623:5654   */\n      tag_631\n        /* \"#utility.yul\":5648:5653   */\n      dup2\n        /* \"#utility.yul\":5623:5654   */\n      tag_567\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":5673:5678   */\n      dup1\n        /* \"#utility.yul\":5663:5678   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":5369:5684   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5916:6225   */\n    tag_129:\n        /* \"#utility.yul\":5981:5987   */\n      0x00\n        /* \"#utility.yul\":5989:5995   */\n      dup1\n        /* \"#utility.yul\":6042:6044   */\n      0x40\n        /* \"#utility.yul\":6030:6039   */\n      dup4\n        /* \"#utility.yul\":6021:6028   */\n      dup6\n        /* \"#utility.yul\":6017:6040   */\n      sub\n        /* \"#utility.yul\":6013:6045   */\n      slt\n        /* \"#utility.yul\":6010:6062   */\n      iszero\n      tag_634\n      jumpi\n        /* \"#utility.yul\":6058:6059   */\n      0x00\n        /* \"#utility.yul\":6055:6056   */\n      dup1\n        /* \"#utility.yul\":6048:6060   */\n      revert\n        /* \"#utility.yul\":6010:6062   */\n    tag_634:\n        /* \"#utility.yul\":6094:6103   */\n      dup3\n        /* \"#utility.yul\":6081:6104   */\n      calldataload\n        /* \"#utility.yul\":6071:6104   */\n      swap2\n      pop\n        /* \"#utility.yul\":6154:6156   */\n      0x20\n        /* \"#utility.yul\":6143:6152   */\n      dup4\n        /* \"#utility.yul\":6139:6157   */\n      add\n        /* \"#utility.yul\":6126:6158   */\n      calldataload\n        /* \"#utility.yul\":6167:6195   */\n      tag_631\n        /* \"#utility.yul\":6189:6194   */\n      dup2\n        /* \"#utility.yul\":6167:6195   */\n      tag_568\n      jump\t// in\n        /* \"#utility.yul\":6230:6607   */\n    tag_146:\n        /* \"#utility.yul\":6304:6310   */\n      0x00\n        /* \"#utility.yul\":6312:6318   */\n      dup1\n        /* \"#utility.yul\":6320:6326   */\n      0x00\n        /* \"#utility.yul\":6373:6375   */\n      0x60\n        /* \"#utility.yul\":6361:6370   */\n      dup5\n        /* \"#utility.yul\":6352:6359   */\n      dup7\n        /* \"#utility.yul\":6348:6371   */\n      sub\n        /* \"#utility.yul\":6344:6376   */\n      slt\n        /* \"#utility.yul\":6341:6393   */\n      iszero\n      tag_637\n      jumpi\n        /* \"#utility.yul\":6389:6390   */\n      0x00\n        /* \"#utility.yul\":6386:6387   */\n      dup1\n        /* \"#utility.yul\":6379:6391   */\n      revert\n        /* \"#utility.yul\":6341:6393   */\n    tag_637:\n        /* \"#utility.yul\":6425:6434   */\n      dup4\n        /* \"#utility.yul\":6412:6435   */\n      calldataload\n        /* \"#utility.yul\":6402:6435   */\n      swap3\n      pop\n        /* \"#utility.yul\":6482:6484   */\n      0x20\n        /* \"#utility.yul\":6471:6480   */\n      dup5\n        /* \"#utility.yul\":6467:6485   */\n      add\n        /* \"#utility.yul\":6454:6486   */\n      calldataload\n        /* \"#utility.yul\":6444:6486   */\n      swap2\n      pop\n        /* \"#utility.yul\":6536:6538   */\n      0x40\n        /* \"#utility.yul\":6525:6534   */\n      dup5\n        /* \"#utility.yul\":6521:6539   */\n      add\n        /* \"#utility.yul\":6508:6540   */\n      calldataload\n        /* \"#utility.yul\":6549:6577   */\n      tag_589\n        /* \"#utility.yul\":6571:6576   */\n      dup2\n        /* \"#utility.yul\":6549:6577   */\n      tag_568\n      jump\t// in\n        /* \"#utility.yul\":6612:6995   */\n    tag_169:\n        /* \"#utility.yul\":6689:6695   */\n      0x00\n        /* \"#utility.yul\":6697:6703   */\n      dup1\n        /* \"#utility.yul\":6705:6711   */\n      0x00\n        /* \"#utility.yul\":6758:6760   */\n      0x60\n        /* \"#utility.yul\":6746:6755   */\n      dup5\n        /* \"#utility.yul\":6737:6744   */\n      dup7\n        /* \"#utility.yul\":6733:6756   */\n      sub\n        /* \"#utility.yul\":6729:6761   */\n      slt\n        /* \"#utility.yul\":6726:6778   */\n      iszero\n      tag_640\n      jumpi\n        /* \"#utility.yul\":6774:6775   */\n      0x00\n        /* \"#utility.yul\":6771:6772   */\n      dup1\n        /* \"#utility.yul\":6764:6776   */\n      revert\n        /* \"#utility.yul\":6726:6778   */\n    tag_640:\n        /* \"#utility.yul\":6810:6819   */\n      dup4\n        /* \"#utility.yul\":6797:6820   */\n      calldataload\n        /* \"#utility.yul\":6787:6820   */\n      swap3\n      pop\n        /* \"#utility.yul\":6870:6872   */\n      0x20\n        /* \"#utility.yul\":6859:6868   */\n      dup5\n        /* \"#utility.yul\":6855:6873   */\n      add\n        /* \"#utility.yul\":6842:6874   */\n      calldataload\n        /* \"#utility.yul\":6883:6914   */\n      tag_641\n        /* \"#utility.yul\":6908:6913   */\n      dup2\n        /* \"#utility.yul\":6883:6914   */\n      tag_567\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":6612:6995   */\n      swap3\n      swap6\n        /* \"#utility.yul\":6933:6938   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":6985:6987   */\n      0x40\n        /* \"#utility.yul\":6970:6988   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":6957:6989   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":6612:6995   */\n      jump\t// out\n        /* \"#utility.yul\":7180:7428   */\n    tag_178:\n        /* \"#utility.yul\":7248:7254   */\n      0x00\n        /* \"#utility.yul\":7256:7262   */\n      dup1\n        /* \"#utility.yul\":7309:7311   */\n      0x40\n        /* \"#utility.yul\":7297:7306   */\n      dup4\n        /* \"#utility.yul\":7288:7295   */\n      dup6\n        /* \"#utility.yul\":7284:7307   */\n      sub\n        /* \"#utility.yul\":7280:7312   */\n      slt\n        /* \"#utility.yul\":7277:7329   */\n      iszero\n      tag_644\n      jumpi\n        /* \"#utility.yul\":7325:7326   */\n      0x00\n        /* \"#utility.yul\":7322:7323   */\n      dup1\n        /* \"#utility.yul\":7315:7327   */\n      revert\n        /* \"#utility.yul\":7277:7329   */\n    tag_644:\n      pop\n      pop\n        /* \"#utility.yul\":7348:7371   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":7418:7420   */\n      0x20\n        /* \"#utility.yul\":7403:7421   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":7390:7422   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":7180:7428   */\n      jump\t// out\n        /* \"#utility.yul\":7848:8215   */\n    tag_573:\n        /* \"#utility.yul\":7911:7919   */\n      0x00\n        /* \"#utility.yul\":7921:7927   */\n      dup1\n        /* \"#utility.yul\":7975:7978   */\n      dup4\n        /* \"#utility.yul\":7968:7972   */\n      0x1f\n        /* \"#utility.yul\":7960:7966   */\n      dup5\n        /* \"#utility.yul\":7956:7973   */\n      add\n        /* \"#utility.yul\":7952:7979   */\n      slt\n        /* \"#utility.yul\":7942:7997   */\n      tag_648\n      jumpi\n        /* \"#utility.yul\":7993:7994   */\n      0x00\n        /* \"#utility.yul\":7990:7991   */\n      dup1\n        /* \"#utility.yul\":7983:7995   */\n      revert\n        /* \"#utility.yul\":7942:7997   */\n    tag_648:\n      pop\n        /* \"#utility.yul\":8016:8036   */\n      dup2\n      calldataload\n        /* \"#utility.yul\":8059:8077   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8048:8078   */\n      dup2\n      gt\n        /* \"#utility.yul\":8045:8095   */\n      iszero\n      tag_649\n      jumpi\n        /* \"#utility.yul\":8091:8092   */\n      0x00\n        /* \"#utility.yul\":8088:8089   */\n      dup1\n        /* \"#utility.yul\":8081:8093   */\n      revert\n        /* \"#utility.yul\":8045:8095   */\n    tag_649:\n        /* \"#utility.yul\":8128:8132   */\n      0x20\n        /* \"#utility.yul\":8120:8126   */\n      dup4\n        /* \"#utility.yul\":8116:8133   */\n      add\n        /* \"#utility.yul\":8104:8133   */\n      swap2\n      pop\n        /* \"#utility.yul\":8188:8191   */\n      dup4\n        /* \"#utility.yul\":8181:8185   */\n      0x20\n        /* \"#utility.yul\":8171:8177   */\n      dup3\n        /* \"#utility.yul\":8168:8169   */\n      0x05\n        /* \"#utility.yul\":8164:8178   */\n      shl\n        /* \"#utility.yul\":8156:8162   */\n      dup6\n        /* \"#utility.yul\":8152:8179   */\n      add\n        /* \"#utility.yul\":8148:8186   */\n      add\n        /* \"#utility.yul\":8145:8192   */\n      gt\n        /* \"#utility.yul\":8142:8209   */\n      iszero\n      tag_650\n      jumpi\n        /* \"#utility.yul\":8205:8206   */\n      0x00\n        /* \"#utility.yul\":8202:8203   */\n      dup1\n        /* \"#utility.yul\":8195:8207   */\n      revert\n        /* \"#utility.yul\":8142:8209   */\n    tag_650:\n        /* \"#utility.yul\":7848:8215   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8220:9060   */\n    tag_220:\n        /* \"#utility.yul\":8350:8356   */\n      0x00\n        /* \"#utility.yul\":8358:8364   */\n      dup1\n        /* \"#utility.yul\":8366:8372   */\n      0x00\n        /* \"#utility.yul\":8374:8380   */\n      dup1\n        /* \"#utility.yul\":8382:8388   */\n      0x00\n        /* \"#utility.yul\":8435:8437   */\n      0x60\n        /* \"#utility.yul\":8423:8432   */\n      dup7\n        /* \"#utility.yul\":8414:8421   */\n      dup9\n        /* \"#utility.yul\":8410:8433   */\n      sub\n        /* \"#utility.yul\":8406:8438   */\n      slt\n        /* \"#utility.yul\":8403:8455   */\n      iszero\n      tag_652\n      jumpi\n        /* \"#utility.yul\":8451:8452   */\n      0x00\n        /* \"#utility.yul\":8448:8449   */\n      dup1\n        /* \"#utility.yul\":8441:8453   */\n      revert\n        /* \"#utility.yul\":8403:8455   */\n    tag_652:\n        /* \"#utility.yul\":8487:8496   */\n      dup6\n        /* \"#utility.yul\":8474:8497   */\n      calldataload\n        /* \"#utility.yul\":8464:8497   */\n      swap5\n      pop\n        /* \"#utility.yul\":8548:8550   */\n      0x20\n        /* \"#utility.yul\":8537:8546   */\n      dup7\n        /* \"#utility.yul\":8533:8551   */\n      add\n        /* \"#utility.yul\":8520:8552   */\n      calldataload\n        /* \"#utility.yul\":8571:8589   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8612:8614   */\n      dup1\n        /* \"#utility.yul\":8604:8610   */\n      dup3\n        /* \"#utility.yul\":8601:8615   */\n      gt\n        /* \"#utility.yul\":8598:8632   */\n      iszero\n      tag_653\n      jumpi\n        /* \"#utility.yul\":8628:8629   */\n      0x00\n        /* \"#utility.yul\":8625:8626   */\n      dup1\n        /* \"#utility.yul\":8618:8630   */\n      revert\n        /* \"#utility.yul\":8598:8632   */\n    tag_653:\n        /* \"#utility.yul\":8667:8737   */\n      tag_654\n        /* \"#utility.yul\":8729:8736   */\n      dup10\n        /* \"#utility.yul\":8720:8726   */\n      dup4\n        /* \"#utility.yul\":8709:8718   */\n      dup11\n        /* \"#utility.yul\":8705:8727   */\n      add\n        /* \"#utility.yul\":8667:8737   */\n      tag_573\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":8756:8764   */\n      swap1\n      swap7\n      pop\n        /* \"#utility.yul\":8641:8737   */\n      swap5\n      pop\n        /* \"#utility.yul\":8844:8846   */\n      0x40\n        /* \"#utility.yul\":8829:8847   */\n      dup9\n      add\n        /* \"#utility.yul\":8816:8848   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":8860:8876   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":8857:8893   */\n      iszero\n      tag_655\n      jumpi\n        /* \"#utility.yul\":8889:8890   */\n      0x00\n        /* \"#utility.yul\":8886:8887   */\n      dup1\n        /* \"#utility.yul\":8879:8891   */\n      revert\n        /* \"#utility.yul\":8857:8893   */\n    tag_655:\n      pop\n        /* \"#utility.yul\":8928:9000   */\n      tag_656\n        /* \"#utility.yul\":8992:8999   */\n      dup9\n        /* \"#utility.yul\":8981:8989   */\n      dup3\n        /* \"#utility.yul\":8970:8979   */\n      dup10\n        /* \"#utility.yul\":8966:8990   */\n      add\n        /* \"#utility.yul\":8928:9000   */\n      tag_573\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":8220:9060   */\n      swap7\n      swap10\n      swap6\n      swap9\n      pop\n      swap4\n      swap7\n      pop\n        /* \"#utility.yul\":9019:9027   */\n      swap3\n      swap5\n        /* \"#utility.yul\":8902:9000   */\n      swap4\n        /* \"#utility.yul\":8220:9060   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9756:9883   */\n    tag_574:\n        /* \"#utility.yul\":9817:9827   */\n      0x4e487b71\n        /* \"#utility.yul\":9812:9815   */\n      0xe0\n        /* \"#utility.yul\":9808:9828   */\n      shl\n        /* \"#utility.yul\":9805:9806   */\n      0x00\n        /* \"#utility.yul\":9798:9829   */\n      mstore\n        /* \"#utility.yul\":9848:9852   */\n      0x11\n        /* \"#utility.yul\":9845:9846   */\n      0x04\n        /* \"#utility.yul\":9838:9853   */\n      mstore\n        /* \"#utility.yul\":9872:9876   */\n      0x24\n        /* \"#utility.yul\":9869:9870   */\n      0x00\n        /* \"#utility.yul\":9862:9877   */\n      revert\n        /* \"#utility.yul\":9888:10013   */\n    tag_239:\n        /* \"#utility.yul\":9928:9932   */\n      0x00\n        /* \"#utility.yul\":9956:9957   */\n      dup3\n        /* \"#utility.yul\":9953:9954   */\n      dup3\n        /* \"#utility.yul\":9950:9958   */\n      lt\n        /* \"#utility.yul\":9947:9981   */\n      iszero\n      tag_662\n      jumpi\n        /* \"#utility.yul\":9961:9979   */\n      tag_662\n      tag_574\n      jump\t// in\n    tag_662:\n      pop\n        /* \"#utility.yul\":9998:10007   */\n      sub\n      swap1\n        /* \"#utility.yul\":9888:10013   */\n      jump\t// out\n        /* \"#utility.yul\":10327:10578   */\n    tag_245:\n        /* \"#utility.yul\":10397:10403   */\n      0x00\n        /* \"#utility.yul\":10450:10452   */\n      0x20\n        /* \"#utility.yul\":10438:10447   */\n      dup3\n        /* \"#utility.yul\":10429:10436   */\n      dup5\n        /* \"#utility.yul\":10425:10448   */\n      sub\n        /* \"#utility.yul\":10421:10453   */\n      slt\n        /* \"#utility.yul\":10418:10470   */\n      iszero\n      tag_665\n      jumpi\n        /* \"#utility.yul\":10466:10467   */\n      0x00\n        /* \"#utility.yul\":10463:10464   */\n      dup1\n        /* \"#utility.yul\":10456:10468   */\n      revert\n        /* \"#utility.yul\":10418:10470   */\n    tag_665:\n        /* \"#utility.yul\":10498:10507   */\n      dup2\n        /* \"#utility.yul\":10492:10508   */\n      mload\n        /* \"#utility.yul\":10517:10548   */\n      tag_465\n        /* \"#utility.yul\":10542:10547   */\n      dup2\n        /* \"#utility.yul\":10517:10548   */\n      tag_567\n      jump\t// in\n        /* \"#utility.yul\":10862:11107   */\n    tag_251:\n        /* \"#utility.yul\":10929:10935   */\n      0x00\n        /* \"#utility.yul\":10982:10984   */\n      0x20\n        /* \"#utility.yul\":10970:10979   */\n      dup3\n        /* \"#utility.yul\":10961:10968   */\n      dup5\n        /* \"#utility.yul\":10957:10980   */\n      sub\n        /* \"#utility.yul\":10953:10985   */\n      slt\n        /* \"#utility.yul\":10950:11002   */\n      iszero\n      tag_669\n      jumpi\n        /* \"#utility.yul\":10998:10999   */\n      0x00\n        /* \"#utility.yul\":10995:10996   */\n      dup1\n        /* \"#utility.yul\":10988:11000   */\n      revert\n        /* \"#utility.yul\":10950:11002   */\n    tag_669:\n        /* \"#utility.yul\":11030:11039   */\n      dup2\n        /* \"#utility.yul\":11024:11040   */\n      mload\n        /* \"#utility.yul\":11049:11077   */\n      tag_465\n        /* \"#utility.yul\":11071:11076   */\n      dup2\n        /* \"#utility.yul\":11049:11077   */\n      tag_568\n      jump\t// in\n        /* \"#utility.yul\":11818:11945   */\n    tag_277:\n        /* \"#utility.yul\":11879:11889   */\n      0x4e487b71\n        /* \"#utility.yul\":11874:11877   */\n      0xe0\n        /* \"#utility.yul\":11870:11890   */\n      shl\n        /* \"#utility.yul\":11867:11868   */\n      0x00\n        /* \"#utility.yul\":11860:11891   */\n      mstore\n        /* \"#utility.yul\":11910:11914   */\n      0x32\n        /* \"#utility.yul\":11907:11908   */\n      0x04\n        /* \"#utility.yul\":11900:11915   */\n      mstore\n        /* \"#utility.yul\":11934:11938   */\n      0x24\n        /* \"#utility.yul\":11931:11932   */\n      0x00\n        /* \"#utility.yul\":11924:11939   */\n      revert\n        /* \"#utility.yul\":11950:12308   */\n    tag_281:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":12157:12189   */\n      dup4\n      and\n        /* \"#utility.yul\":12139:12190   */\n      dup2\n      mstore\n        /* \"#utility.yul\":12226:12228   */\n      0x40\n        /* \"#utility.yul\":12221:12223   */\n      0x20\n        /* \"#utility.yul\":12206:12224   */\n      dup3\n      add\n        /* \"#utility.yul\":12199:12229   */\n      dup2\n      swap1\n      mstore\n      0x00\n      swap1\n        /* \"#utility.yul\":12246:12302   */\n      tag_675\n      swap1\n        /* \"#utility.yul\":12283:12301   */\n      dup4\n      add\n        /* \"#utility.yul\":12275:12281   */\n      dup5\n        /* \"#utility.yul\":12246:12302   */\n      tag_569\n      jump\t// in\n    tag_675:\n        /* \"#utility.yul\":12238:12302   */\n      swap5\n        /* \"#utility.yul\":11950:12308   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12313:12448   */\n    tag_286:\n        /* \"#utility.yul\":12352:12355   */\n      0x00\n      not(0x00)\n        /* \"#utility.yul\":12373:12390   */\n      dup3\n      eq\n        /* \"#utility.yul\":12370:12413   */\n      iszero\n      tag_678\n      jumpi\n        /* \"#utility.yul\":12393:12411   */\n      tag_678\n      tag_574\n      jump\t// in\n    tag_678:\n      pop\n        /* \"#utility.yul\":12440:12441   */\n      0x01\n        /* \"#utility.yul\":12429:12442   */\n      add\n      swap1\n        /* \"#utility.yul\":12313:12448   */\n      jump\t// out\n        /* \"#utility.yul\":12453:12789   */\n    tag_330:\n        /* \"#utility.yul\":12655:12657   */\n      0x20\n        /* \"#utility.yul\":12637:12658   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":12694:12696   */\n      0x0c\n        /* \"#utility.yul\":12674:12692   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":12667:12697   */\n      mstore\n      shl(0xa1, 0x3737ba1037b832b930ba37b9)\n        /* \"#utility.yul\":12728:12730   */\n      0x40\n        /* \"#utility.yul\":12713:12731   */\n      dup3\n      add\n        /* \"#utility.yul\":12706:12748   */\n      mstore\n        /* \"#utility.yul\":12780:12782   */\n      0x60\n        /* \"#utility.yul\":12765:12783   */\n      add\n      swap1\n        /* \"#utility.yul\":12453:12789   */\n      jump\t// out\n        /* \"#utility.yul\":12794:12978   */\n    tag_353:\n        /* \"#utility.yul\":12864:12870   */\n      0x00\n        /* \"#utility.yul\":12917:12919   */\n      0x20\n        /* \"#utility.yul\":12905:12914   */\n      dup3\n        /* \"#utility.yul\":12896:12903   */\n      dup5\n        /* \"#utility.yul\":12892:12915   */\n      sub\n        /* \"#utility.yul\":12888:12920   */\n      slt\n        /* \"#utility.yul\":12885:12937   */\n      iszero\n      tag_681\n      jumpi\n        /* \"#utility.yul\":12933:12934   */\n      0x00\n        /* \"#utility.yul\":12930:12931   */\n      dup1\n        /* \"#utility.yul\":12923:12935   */\n      revert\n        /* \"#utility.yul\":12885:12937   */\n    tag_681:\n      pop\n        /* \"#utility.yul\":12956:12972   */\n      mload\n      swap2\n        /* \"#utility.yul\":12794:12978   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13236:13364   */\n    tag_466:\n        /* \"#utility.yul\":13276:13279   */\n      0x00\n        /* \"#utility.yul\":13307:13308   */\n      dup3\n        /* \"#utility.yul\":13303:13309   */\n      not\n        /* \"#utility.yul\":13300:13301   */\n      dup3\n        /* \"#utility.yul\":13297:13310   */\n      gt\n        /* \"#utility.yul\":13294:13333   */\n      iszero\n      tag_685\n      jumpi\n        /* \"#utility.yul\":13313:13331   */\n      tag_685\n      tag_574\n      jump\t// in\n    tag_685:\n      pop\n        /* \"#utility.yul\":13349:13358   */\n      add\n      swap1\n        /* \"#utility.yul\":13236:13364   */\n      jump\t// out\n        /* \"#utility.yul\":13369:13636   */\n    tag_480:\n        /* \"#utility.yul\":13408:13412   */\n      0x00\n        /* \"#utility.yul\":13437:13446   */\n      dup1\n      dup4\n      slt\n        /* \"#utility.yul\":13462:13472   */\n      dup1\n      iszero\n      shl(0xff, 0x01)\n        /* \"#utility.yul\":13481:13500   */\n      dup6\n      add\n        /* \"#utility.yul\":13474:13501   */\n      dup5\n      slt\n        /* \"#utility.yul\":13458:13502   */\n      and\n        /* \"#utility.yul\":13455:13525   */\n      iszero\n      tag_688\n      jumpi\n        /* \"#utility.yul\":13505:13523   */\n      tag_688\n      tag_574\n      jump\t// in\n    tag_688:\n      sub(shl(0xff, 0x01), 0x01)\n        /* \"#utility.yul\":13552:13579   */\n      dup5\n      add\n        /* \"#utility.yul\":13545:13580   */\n      dup4\n      sgt\n        /* \"#utility.yul\":13537:13581   */\n      dup2\n      and\n        /* \"#utility.yul\":13534:13604   */\n      iszero\n      tag_690\n      jumpi\n        /* \"#utility.yul\":13584:13602   */\n      tag_690\n      tag_574\n      jump\t// in\n    tag_690:\n      pop\n      pop\n        /* \"#utility.yul\":13621:13630   */\n      sub\n      swap1\n        /* \"#utility.yul\":13369:13636   */\n      jump\t// out\n        /* \"#utility.yul\":13641:13906   */\n    tag_484:\n        /* \"#utility.yul\":13680:13683   */\n      0x00\n        /* \"#utility.yul\":13708:13717   */\n      dup1\n      dup3\n      slt\n        /* \"#utility.yul\":13733:13743   */\n      dup1\n      iszero\n      sub(shl(0xff, 0x01), 0x01)\n        /* \"#utility.yul\":13752:13779   */\n      dup5\n      swap1\n      sub\n        /* \"#utility.yul\":13745:13780   */\n      dup6\n      sgt\n        /* \"#utility.yul\":13729:13781   */\n      and\n        /* \"#utility.yul\":13726:13804   */\n      iszero\n      tag_693\n      jumpi\n        /* \"#utility.yul\":13784:13802   */\n      tag_693\n      tag_574\n      jump\t// in\n    tag_693:\n      shl(0xff, 0x01)\n        /* \"#utility.yul\":13831:13850   */\n      dup4\n      swap1\n      sub\n        /* \"#utility.yul\":13824:13851   */\n      dup5\n      slt\n        /* \"#utility.yul\":13816:13852   */\n      dup2\n      and\n        /* \"#utility.yul\":13813:13875   */\n      iszero\n      tag_695\n      jumpi\n        /* \"#utility.yul\":13855:13873   */\n      tag_695\n      tag_574\n      jump\t// in\n    tag_695:\n      pop\n      pop\n        /* \"#utility.yul\":13891:13900   */\n      add\n      swap1\n        /* \"#utility.yul\":13641:13906   */\n      jump\t// out\n        /* \"#utility.yul\":14162:14298   */\n    tag_508:\n        /* \"#utility.yul\":14197:14200   */\n      0x00\n      shl(0xff, 0x01)\n        /* \"#utility.yul\":14218:14240   */\n      dup3\n      eq\n        /* \"#utility.yul\":14215:14263   */\n      iszero\n      tag_699\n      jumpi\n        /* \"#utility.yul\":14243:14261   */\n      tag_699\n      tag_574\n      jump\t// in\n    tag_699:\n      pop\n        /* \"#utility.yul\":14283:14284   */\n      0x00\n        /* \"#utility.yul\":14279:14292   */\n      sub\n      swap1\n        /* \"#utility.yul\":14162:14298   */\n      jump\t// out\n        /* \"#utility.yul\":14303:14856   */\n    tag_525:\n        /* \"#utility.yul\":14342:14349   */\n      0x00\n      sub(shl(0xff, 0x01), 0x01)\n        /* \"#utility.yul\":14412:14421   */\n      dup2\n      dup5\n      sgt\n        /* \"#utility.yul\":14440:14449   */\n      dup3\n      dup5\n      sgt\n        /* \"#utility.yul\":14465:14476   */\n      dup1\n      dup3\n      and\n        /* \"#utility.yul\":14484:14494   */\n      dup7\n      dup5\n      div\n        /* \"#utility.yul\":14478:14495   */\n      dup7\n      gt\n        /* \"#utility.yul\":14461:14496   */\n      and\n        /* \"#utility.yul\":14458:14519   */\n      iszero\n      tag_702\n      jumpi\n        /* \"#utility.yul\":14499:14517   */\n      tag_702\n      tag_574\n      jump\t// in\n    tag_702:\n      shl(0xff, 0x01)\n        /* \"#utility.yul\":14575:14576   */\n      0x00\n        /* \"#utility.yul\":14568:14577   */\n      dup8\n      slt\n        /* \"#utility.yul\":14593:14604   */\n      dup3\n      dup2\n      and\n        /* \"#utility.yul\":14613:14624   */\n      dup8\n      dup4\n      sdiv\n        /* \"#utility.yul\":14606:14625   */\n      dup10\n      slt\n        /* \"#utility.yul\":14589:14626   */\n      and\n        /* \"#utility.yul\":14586:14649   */\n      iszero\n      tag_704\n      jumpi\n        /* \"#utility.yul\":14629:14647   */\n      tag_704\n      tag_574\n      jump\t// in\n    tag_704:\n        /* \"#utility.yul\":14675:14676   */\n      0x00\n        /* \"#utility.yul\":14672:14673   */\n      dup8\n        /* \"#utility.yul\":14668:14677   */\n      slt\n        /* \"#utility.yul\":14658:14677   */\n      swap3\n      pop\n        /* \"#utility.yul\":14722:14723   */\n      dup8\n        /* \"#utility.yul\":14718:14720   */\n      dup3\n        /* \"#utility.yul\":14713:14724   */\n      sdiv\n        /* \"#utility.yul\":14710:14711   */\n      dup8\n        /* \"#utility.yul\":14706:14725   */\n      slt\n        /* \"#utility.yul\":14701:14703   */\n      dup5\n        /* \"#utility.yul\":14697:14699   */\n      dup5\n        /* \"#utility.yul\":14693:14704   */\n      and\n        /* \"#utility.yul\":14689:14726   */\n      and\n        /* \"#utility.yul\":14686:14749   */\n      iszero\n      tag_706\n      jumpi\n        /* \"#utility.yul\":14729:14747   */\n      tag_706\n      tag_574\n      jump\t// in\n    tag_706:\n        /* \"#utility.yul\":14794:14795   */\n      dup8\n        /* \"#utility.yul\":14790:14792   */\n      dup6\n        /* \"#utility.yul\":14785:14796   */\n      sdiv\n        /* \"#utility.yul\":14782:14783   */\n      dup8\n        /* \"#utility.yul\":14778:14797   */\n      slt\n        /* \"#utility.yul\":14773:14775   */\n      dup2\n        /* \"#utility.yul\":14769:14771   */\n      dup5\n        /* \"#utility.yul\":14765:14776   */\n      and\n        /* \"#utility.yul\":14761:14798   */\n      and\n        /* \"#utility.yul\":14758:14821   */\n      iszero\n      tag_708\n      jumpi\n        /* \"#utility.yul\":14801:14819   */\n      tag_708\n      tag_574\n      jump\t// in\n    tag_708:\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14841:14850   */\n      swap3\n      swap1\n      swap4\n      mul\n      swap4\n        /* \"#utility.yul\":14303:14856   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14861:14988   */\n    tag_575:\n        /* \"#utility.yul\":14922:14932   */\n      0x4e487b71\n        /* \"#utility.yul\":14917:14920   */\n      0xe0\n        /* \"#utility.yul\":14913:14933   */\n      shl\n        /* \"#utility.yul\":14910:14911   */\n      0x00\n        /* \"#utility.yul\":14903:14934   */\n      mstore\n        /* \"#utility.yul\":14953:14957   */\n      0x12\n        /* \"#utility.yul\":14950:14951   */\n      0x04\n        /* \"#utility.yul\":14943:14958   */\n      mstore\n        /* \"#utility.yul\":14977:14981   */\n      0x24\n        /* \"#utility.yul\":14974:14975   */\n      0x00\n        /* \"#utility.yul\":14967:14982   */\n      revert\n        /* \"#utility.yul\":14993:15186   */\n    tag_527:\n        /* \"#utility.yul\":15032:15033   */\n      0x00\n        /* \"#utility.yul\":15058:15059   */\n      dup3\n        /* \"#utility.yul\":15048:15083   */\n      tag_712\n      jumpi\n        /* \"#utility.yul\":15063:15081   */\n      tag_712\n      tag_575\n      jump\t// in\n    tag_712:\n      shl(0xff, 0x01)\n        /* \"#utility.yul\":15099:15117   */\n      dup3\n      eq\n      not(0x00)\n        /* \"#utility.yul\":15119:15132   */\n      dup5\n      eq\n        /* \"#utility.yul\":15095:15133   */\n      and\n        /* \"#utility.yul\":15092:15156   */\n      iszero\n      tag_714\n      jumpi\n        /* \"#utility.yul\":15136:15154   */\n      tag_714\n      tag_574\n      jump\t// in\n    tag_714:\n      pop\n        /* \"#utility.yul\":15170:15180   */\n      sdiv\n      swap1\n        /* \"#utility.yul\":14993:15186   */\n      jump\t// out\n        /* \"#utility.yul\":15875:16043   */\n    tag_553:\n        /* \"#utility.yul\":15915:15922   */\n      0x00\n        /* \"#utility.yul\":15981:15982   */\n      dup2\n        /* \"#utility.yul\":15977:15978   */\n      0x00\n        /* \"#utility.yul\":15973:15979   */\n      not\n        /* \"#utility.yul\":15969:15983   */\n      div\n        /* \"#utility.yul\":15966:15967   */\n      dup4\n        /* \"#utility.yul\":15963:15984   */\n      gt\n        /* \"#utility.yul\":15958:15959   */\n      dup3\n        /* \"#utility.yul\":15951:15960   */\n      iszero\n        /* \"#utility.yul\":15944:15961   */\n      iszero\n        /* \"#utility.yul\":15940:15985   */\n      and\n        /* \"#utility.yul\":15937:16008   */\n      iszero\n      tag_719\n      jumpi\n        /* \"#utility.yul\":15988:16006   */\n      tag_719\n      tag_574\n      jump\t// in\n    tag_719:\n      pop\n        /* \"#utility.yul\":16028:16037   */\n      mul\n      swap1\n        /* \"#utility.yul\":15875:16043   */\n      jump\t// out\n        /* \"#utility.yul\":16048:16168   */\n    tag_556:\n        /* \"#utility.yul\":16088:16089   */\n      0x00\n        /* \"#utility.yul\":16114:16115   */\n      dup3\n        /* \"#utility.yul\":16104:16139   */\n      tag_722\n      jumpi\n        /* \"#utility.yul\":16119:16137   */\n      tag_722\n      tag_575\n      jump\t// in\n    tag_722:\n      pop\n        /* \"#utility.yul\":16153:16162   */\n      div\n      swap1\n        /* \"#utility.yul\":16048:16168   */\n      jump\t// out\n\n    auxdata: 0xa264697066735822122081b25789b0e839f922afc225bcf3022ee4a0358b7f60aa32eb4ab6a884bb1e5164736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_105": {
									"entryPoint": null,
									"id": 105,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_2068": {
									"entryPoint": null,
									"id": 2068,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_2266": {
									"entryPoint": null,
									"id": 2266,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_2614": {
									"entryPoint": null,
									"id": 2614,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_3199": {
									"entryPoint": null,
									"id": 3199,
									"parameterSlots": 7,
									"returnSlots": 0
								},
								"@add_1059": {
									"entryPoint": 480,
									"id": 1059,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 661,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_contract$_IToken_$2170t_uint256t_uint256t_uint256_fromMemory": {
									"entryPoint": 526,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 7
								},
								"abi_encode_tuple_t_stringliteral_dc1ce9b0d64aa8a8fc4d593ee211091e00184a9db3de628d6647e445c5a24103__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 693,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"validator_revert_address": {
									"entryPoint": 501,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1836:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:86:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "123:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "132:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "135:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "82:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "93:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "108:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "113:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "104:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "104:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "117:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "100:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "100:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "89:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "89:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "79:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "79:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "72:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "72:50:1"
															},
															"nodeType": "YulIf",
															"src": "69:70:1"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "48:5:1",
														"type": ""
													}
												],
												"src": "14:131:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "348:657:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "395:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "404:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "407:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "397:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "397:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "397:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "369:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "378:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "365:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "365:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "390:3:1",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "361:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "361:33:1"
															},
															"nodeType": "YulIf",
															"src": "358:53:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "420:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "439:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "433:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "433:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "424:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "483:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "458:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "458:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "458:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "498:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "508:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "498:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "522:40:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "547:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "558:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "543:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "543:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "537:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "537:25:1"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "526:7:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "596:7:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "571:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "571:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "571:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "613:17:1",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "623:7:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "613:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "639:40:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "664:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "675:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "660:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "660:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "654:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "654:25:1"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nodeType": "YulTypedName",
																	"src": "643:7:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nodeType": "YulIdentifier",
																		"src": "713:7:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "688:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "688:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "688:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "730:17:1",
															"value": {
																"name": "value_2",
																"nodeType": "YulIdentifier",
																"src": "740:7:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "730:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "756:40:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "781:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "792:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "777:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "777:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "771:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "771:25:1"
															},
															"variables": [
																{
																	"name": "value_3",
																	"nodeType": "YulTypedName",
																	"src": "760:7:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_3",
																		"nodeType": "YulIdentifier",
																		"src": "830:7:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "805:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "805:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "805:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "847:17:1",
															"value": {
																"name": "value_3",
																"nodeType": "YulIdentifier",
																"src": "857:7:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "873:36:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "893:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "904:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "889:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "889:19:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "883:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "883:26:1"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "873:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "918:36:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "938:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "949:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "934:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "934:19:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "928:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "928:26:1"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "918:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "963:36:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "983:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "994:3:1",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "979:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "979:19:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "973:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "973:26:1"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nodeType": "YulIdentifier",
																	"src": "963:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_contract$_IToken_$2170t_uint256t_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "266:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "277:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "289:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "297:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "305:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "313:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "321:6:1",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "329:6:1",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "337:6:1",
														"type": ""
													}
												],
												"src": "150:855:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1184:164:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1201:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1212:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1194:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1194:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1235:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1246:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1231:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1231:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1251:2:1",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1224:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1224:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1224:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1274:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1285:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1270:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1270:18:1"
																	},
																	{
																		"hexValue": "73776170546f6b656e2069732030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1290:16:1",
																		"type": "",
																		"value": "swapToken is 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1263:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1263:44:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1263:44:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1316:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1328:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1339:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1324:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1324:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1316:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dc1ce9b0d64aa8a8fc4d593ee211091e00184a9db3de628d6647e445c5a24103__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1161:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1175:4:1",
														"type": ""
													}
												],
												"src": "1010:338:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1434:170:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1480:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1489:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1492:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1482:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1482:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1482:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1455:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1464:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1451:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1451:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1476:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1447:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1447:32:1"
															},
															"nodeType": "YulIf",
															"src": "1444:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1505:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1524:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1518:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1518:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1509:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1568:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1543:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1543:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1543:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1583:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1593:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1583:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1400:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1411:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1423:6:1",
														"type": ""
													}
												],
												"src": "1353:251:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1657:177:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1692:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1713:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1720:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1725:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1716:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1716:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1706:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1706:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1706:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1757:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1760:4:1",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1750:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1750:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1750:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1785:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1788:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1778:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1778:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1778:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1673:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "1680:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1676:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1676:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1670:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1670:13:1"
															},
															"nodeType": "YulIf",
															"src": "1667:136:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1812:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1823:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1826:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1819:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1819:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "1812:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1640:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1643:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "1649:3:1",
														"type": ""
													}
												],
												"src": "1609:225:1"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_contract$_IToken_$2170t_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := mload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n        let value_3 := mload(add(headStart, 96))\n        validator_revert_address(value_3)\n        value3 := value_3\n        value4 := mload(add(headStart, 128))\n        value5 := mload(add(headStart, 160))\n        value6 := mload(add(headStart, 192))\n    }\n    function abi_encode_tuple_t_stringliteral_dc1ce9b0d64aa8a8fc4d593ee211091e00184a9db3de628d6647e445c5a24103__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"swapToken is 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "61010060405267026db992a3b180006007556000600d553480156200002357600080fd5b5060405162002ccc38038062002ccc83398101604081905262000046916200020e565b6001600081815581546001600160a01b0319166001600160a01b038a169081179092556040518992899288928892889288928892879287928792879287927f3ccbb406b985dd76fe05e172b432487a2ff9fe4257642d3acc350f167cb1d577908290a3506001600160a01b038416620000f65760405162461bcd60e51b815260206004820152600e60248201526d073776170546f6b656e20697320360941b604482015260640160405180910390fd5b600280546001600160a01b0319166001600160a01b038616179055600383905560808290526005819055620001388282620001e0602090811b62001bb817901c565b60049081556103e86006556001600160a01b038b1660a081905260408051637e062a3560e11b8152905191975063fc0c546a96508083019550602094509092508290030181865afa15801562000192573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001b8919062000295565b6001600160a01b0390811660c0529a909a1660e05250620002dc9a5050505050505050505050565b6000620001ee8284620002b5565b9392505050565b6001600160a01b03811681146200020b57600080fd5b50565b600080600080600080600060e0888a0312156200022a57600080fd5b87516200023781620001f5565b60208901519097506200024a81620001f5565b60408901519096506200025d81620001f5565b60608901519095506200027081620001f5565b809450506080880151925060a0880151915060c0880151905092959891949750929550565b600060208284031215620002a857600080fd5b8151620001ee81620001f5565b60008219821115620002d757634e487b7160e01b600052601160045260246000fd5b500190565b60805160a05160c05160e05161296562000367600039600081816102ff01526108dc015260005050600081816103e8015281816108b401528181610d4a01528181610de501528181610fd4015281816116c901528181611ac201528181611dab0152612121015260008181610434015281816107550152818161077c015261112701526129656000f3fe608060405234801561001057600080fd5b506004361061028a5760003560e01c8063630b5ba11161015c578063a86a366d116100ce578063b9a09fd511610087578063b9a09fd5146105ff578063d23254b414610628578063dc73e49c14610653578063ea94ee4414610666578063ef78d4fd14610679578063fecdad601461068257600080fd5b8063a86a366d14610560578063aa70fb9814610573578063aa79979b14610586578063ac4afa38146105b9578063b0c7044b146105cc578063b5ec5c99146105ec57600080fd5b806379e938241161012057806379e93824146104f3578063812632ec146105135780638da5cb5b1461051c57806396c82e5714610524578063a61c713a1461052d578063a7cac8461461054057600080fd5b8063630b5ba11461049f57806363453ae1146104a757806364482f79146104ba578063698473e3146104cd57806371dd4bda146104e057600080fd5b806332145f901161020057806348cd4cb1116101b957806348cd4cb11461042f57806348ee26a3146104565780634ade739b1461046957806351eb05a61461047c57806353d786931461048f578063570ca7351461049757600080fd5b806332145f90146103c757806337550684146103da5780633b92eb23146103e3578063411b1f771461040a5780634198709a1461041d578063442da82f1461042657600080fd5b80630fb5a6b4116102525780630fb5a6b414610336578063146650df146103405780631526fe271461036057806317caf6f11461039857806320b1cb6f146103a1578063310bd74b146103b457600080fd5b806306d6a1b21461028f578063081e3eda146102d55780630c9c7ef5146102e75780630d52333c146102fa5780630f589d6314610321575b600080fd5b6102b861029d366004612247565b6012602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b600e545b6040519081526020016102cc565b6102b86102f5366004612272565b610695565b6102b87f000000000000000000000000000000000000000000000000000000000000000081565b61033461032f366004612247565b610a73565b005b6102d962093a8081565b61035361034e3660046122b4565b610bcf565b6040516102cc9190612311565b61037361036e3660046122b4565b610c3b565b604080516001600160a01b0390941684526020840192909252908201526060016102cc565b6102d9600d5481565b6103346103af366004612403565b610c78565b6103346103c23660046122b4565b610d2e565b6103346103d53660046122b4565b610e4c565b6102d960065481565b6102b87f000000000000000000000000000000000000000000000000000000000000000081565b6103346104183660046124d8565b610f9c565b6102d960035481565b6102d960045481565b6102d97f000000000000000000000000000000000000000000000000000000000000000081565b6001546102b8906001600160a01b031681565b610334610477366004612508565b61107e565b61033461048a3660046122b4565b611125565b61033461141a565b6102b86114a7565b61033461151a565b6103346104b5366004612247565b611545565b6103346104c836600461252d565b61154e565b6103346104db3660046124d8565b611691565b6103346104ee3660046122b4565b61176b565b6102d96105013660046122b4565b600c6020526000908152604090205481565b6102d960075481565b6102b8611803565b6102d960085481565b61033461053b36600461255b565b61184d565b6102d961054e366004612247565b60096020526000908152604090205481565b6102b861056e366004612593565b6118b5565b6103346105813660046122b4565b6118ed565b6105a9610594366004612247565b60136020526000908152604090205460ff1681565b60405190151581526020016102cc565b6102b86105c73660046122b4565b611985565b6102d96105da366004612247565b600f6020526000908152604090205481565b6103346105fa3660046122b4565b6119af565b6102b861060d366004612247565b6011602052600090815260409020546001600160a01b031681565b6102d96106363660046124d8565b600a60209081526000928352604080842090915290825290205481565b6002546102b8906001600160a01b031681565b61033461067436600461255b565b611a47565b6102d960055481565b610334610690366004612601565b611aa6565b6001600160a01b03838116600090815260116020526040812054909116156106ed5760405162461bcd60e51b815260206004820152600660248201526565786973747360d01b60448201526064015b60405180910390fd5b6001600160a01b0384166107435760405162461bcd60e51b815260206004820152601c60248201527f5f6c70546f6b656e20697320746865207a65726f20616464726573730000000060448201526064016106e4565b81156107515761075161151a565b60007f000000000000000000000000000000000000000000000000000000000000000043116107a0577f00000000000000000000000000000000000000000000000000000000000000006107a2565b435b600d549091506107b29085611bb8565b600d55604080516060810182526001600160a01b03878116825260208201878152928201848152600e805460018082018355600083905294517fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd600390920291820180546001600160a01b031916919095161790935593517fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fe830155517fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3ff9091015590546108809190612691565b6001600160a01b038681166000818152600f6020526040808220949094559251631e533a8f60e21b815260048101919091527f0000000000000000000000000000000000000000000000000000000000000000821660248201527f00000000000000000000000000000000000000000000000000000000000000009091169063794cea3c906044016020604051808303816000875af1158015610927573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094b91906126a8565b60025460405163095ea7b360e01b81526001600160a01b038084166004830152600019602483015292935091169063095ea7b3906044016020604051808303816000875af11580156109a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c591906126c5565b506001600160a01b03808716600081815260116020908152604080832080549587166001600160a01b03199687168117909155835260128252808320805490951690931790935560139092529020805460ff19166001179055610a2781611bcb565b6040513381526001600160a01b0380881691908316907f9b8203efe7fe42185a7755b0510f87c8b693971d6a7c22520aaf683e6b1242619060200160405180910390a395945050505050565b60015460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b9160048083019260209291908290030181865afa158015610abc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae091906126a8565b6001600160a01b031614610b365760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106e4565b6001600160a01b038116610b7f5760405162461bcd60e51b815260206004820152601060248201526f3130b2103732bb9037b832b930ba37b960811b60448201526064016106e4565b600180546001600160a01b0319166001600160a01b03831690811790915560405182919081907f3ccbb406b985dd76fe05e172b432487a2ff9fe4257642d3acc350f167cb1d57790600090a35050565b6000818152600b6020908152604091829020805483518184028101840190945280845260609392830182828015610c2f57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610c11575b50505050509050919050565b600e8181548110610c4b57600080fd5b60009182526020909120600390910201805460018201546002909201546001600160a01b03909116925083565b60005b8251811015610d2957828181518110610c9657610c966126e2565b60200260200101516001600160a01b03166331279d3d33848481518110610cbf57610cbf6126e2565b60200260200101516040518363ffffffff1660e01b8152600401610ce49291906126f8565b600060405180830381600087803b158015610cfe57600080fd5b505af1158015610d12573d6000803e3d6000fd5b505050508080610d2190612724565b915050610c7b565b505050565b60405163430c208160e01b8152336004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063430c208190604401602060405180830381865afa158015610d99573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dbd91906126c5565b610dc657600080fd5b610dcf81611c00565b60405163c1f0fb9f60e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063c1f0fb9f90602401600060405180830381600087803b158015610e3157600080fd5b505af1158015610e45573d6000803e3d6000fd5b5050505050565b6000818152600b6020908152604080832080548251818502810185019093528083529192909190830182828015610eac57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610e8e575b5050505050905060008151905060008167ffffffffffffffff811115610ed457610ed4612324565b604051908082528060200260200182016040528015610efd578160200160208202803683370190505b50905060005b82811015610f8a57600a60008681526020019081526020016000206000858381518110610f3257610f326126e2565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002054828281518110610f6d57610f6d6126e2565b602090810291909101015280610f8281612724565b915050610f03565b50610f96848483611d87565b50505050565b3360009081526013602052604090205460ff16610fb857600080fd5b811561103957604051634c35bec560e11b8152600481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063986b7d8a90602401600060405180830381600087803b15801561102057600080fd5b505af1158015611034573d6000803e3d6000fd5b505050505b60405182815233906001600160a01b038316907fae268d9aab12f3605f58efd74fd3801fa812b03fdb44317eb70f46dff0e19e22906020015b60405180910390a35050565b6001546040805163570ca73560e01b8152905133926001600160a01b03169163570ca7359160048083019260209291908290030181865afa1580156110c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110eb91906126a8565b6001600160a01b0316146111115760405162461bcd60e51b81526004016106e49061273f565b801561111f5761111f61151a565b50600355565b7f00000000000000000000000000000000000000000000000000000000000000004311801561115657506004544310155b156111b157600754600354111561118c57611188606461118260506003546121b890919063ffffffff16565b906121c4565b6003555b600754600354101561119f576007546003555b6005546111ad904390611bb8565b6004555b6000600e82815481106111c6576111c66126e2565b90600052602060002090600302019050806002015443116111e5575050565b80546001600160a01b039081166000818152601160205260408082205490516370a0823160e01b815293166004840152916370a0823190602401602060405180830381865afa15801561123c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112609190612765565b90508061127257504360029091015550565b60006003541161128157505050565b600061129a8360020154436121d090919063ffffffff16565b905060006112c7600d5461118286600101546112c1866003546121b890919063ffffffff16565b906121b8565b6002549091506000906001600160a01b03166340c10f19306112ec8562093a806121b8565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015611337573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061135b91906126c5565b905080156114085784546001600160a01b03908116600090815260116020526040902054600254600d5460018901546003549385169463b66503cf949316926113a9929161118291906121b8565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b1580156113ef57600080fd5b505af1158015611403573d6000803e3d6000fd5b505050505b43856002018190555050505050505b50565b60005b600e54811015611417576000600e828154811061143c5761143c6126e2565b6000918252602080832060408051606081018252600390940290910180546001600160a01b03908116808652600183015486860152600290920154858401529085526011909252909220549092506114949116611bcb565b508061149f81612724565b91505061141d565b6001546040805163570ca73560e01b815290516000926001600160a01b03169163570ca7359160048083019260209291908290030181865afa1580156114f1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061151591906126a8565b905090565b600e5460005b818110156115415761153181611125565b61153a81612724565b9050611520565b5050565b61141781611bcb565b60015460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b9160048083019260209291908290030181865afa158015611597573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115bb91906126a8565b6001600160a01b0316146116115760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106e4565b6116548261164e600e868154811061162b5761162b6126e2565b906000526020600020906003020160010154600d546121d090919063ffffffff16565b90611bb8565b600d8190555081600e848154811061166e5761166e6126e2565b9060005260206000209060030201600101819055508015610d2957610d2961151a565b3360009081526013602052604090205460ff166116ad57600080fd5b811561172e5760405163020fe6e560e01b8152600481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063020fe6e590602401600060405180830381600087803b15801561171557600080fd5b505af1158015611729573d6000803e3d6000fd5b505050505b60405182815233906001600160a01b038316907f60940192810a6fb3bce3fd3e2e3a13fd6ccc7605e963fb87ee971aba829989bd90602001611072565b6001546040805163570ca73560e01b8152905133926001600160a01b03169163570ca7359160048083019260209291908290030181865afa1580156117b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117d891906126a8565b6001600160a01b0316146117fe5760405162461bcd60e51b81526004016106e49061273f565b600655565b60015460408051638da5cb5b60e01b815290516000926001600160a01b031691638da5cb5b9160048083019260209291908290030181865afa1580156114f1573d6000803e3d6000fd5b3360009081526013602052604090205460ff1661186957600080fd5b604080518481526020810183905233916001600160a01b038516917fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d791015b60405180910390a3505050565b600b60205281600052604060002081815481106118d157600080fd5b6000918252602090912001546001600160a01b03169150829050565b6001546040805163570ca73560e01b8152905133926001600160a01b03169163570ca7359160048083019260209291908290030181865afa158015611936573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061195a91906126a8565b6001600160a01b0316146119805760405162461bcd60e51b81526004016106e49061273f565b600755565b6010818154811061199557600080fd5b6000918252602090912001546001600160a01b0316905081565b6001546040805163570ca73560e01b8152905133926001600160a01b03169163570ca7359160048083019260209291908290030181865afa1580156119f8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a1c91906126a8565b6001600160a01b031614611a425760405162461bcd60e51b81526004016106e49061273f565b600555565b3360009081526013602052604090205460ff16611a6357600080fd5b604080518481526020810183905233916001600160a01b038516917ff341246adaac6f497bc2a656f546ab9e182111d630394f0c57c710a59a2cb56791016118a8565b60405163430c208160e01b8152336004820152602481018690527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063430c208190604401602060405180830381865afa158015611b11573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b3591906126c5565b611b3e57600080fd5b828114611b4a57600080fd5b610e458585858080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808902828101820190935288825290935088925087918291850190849080828437600092019190915250611d8792505050565b6000611bc4828461277e565b9392505050565b6001600160a01b03808216600090815260126020908152604080832054909316808352600f9091529190205461154190611125565b6000818152600b6020526040812080549091805b82811015611d4b576000848281548110611c3057611c306126e2565b6000918252602080832090910154888352600a825260408084206001600160a01b03909216808552919092529120549091508015611d3657611c71826121dc565b6001600160a01b03821660009081526009602052604081208054839290611c99908490612796565b90915550506000878152600a602090815260408083206001600160a01b038616845290915281208054839290611cd0908490612796565b90915550506000811315611cef57611ce881856127d5565b9350611cfc565b611cf98185612796565b93505b60408051888152602081018390527f6b3894ce60b9bbe9d93f1a4e6fc25b6b93cd8222e73ab6348d79c596f5b51de9910160405180910390a15b50508080611d4390612724565b915050611c14565b508060086000828254611d5e9190612691565b90915550506000848152600c60209081526040808320839055600b9091528120610f9691612200565b611d9083611c00565b81516040516339f890b560e21b8152600481018590526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063e7e242d490602401602060405180830381865afa158015611dfa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e1e9190612765565b90506000806000805b85811015611eb1576000878281518110611e4357611e436126e2565b602002602001015113611e7857868181518110611e6257611e626126e2565b6020026020010151611e7390612816565b611e93565b868181518110611e8a57611e8a6126e2565b60200260200101515b611e9d90856127d5565b935080611ea981612724565b915050611e27565b5060005b85811015612101576000888281518110611ed157611ed16126e2565b60200260200101519050611f0d816001600160a01b03908116600090815260116020908152604080832054909316825260139052205460ff1690565b156120ee57600085878a8581518110611f2857611f286126e2565b6020026020010151611f3a9190612833565b611f4491906128ce565b60008c8152600a602090815260408083206001600160a01b038716845290915290205490915015611fa95760405162461bcd60e51b815260206004820152600f60248201526e0746f6b656e20706f6f6c206973203608c1b60448201526064016106e4565b80611fe45760405162461bcd60e51b815260206004820152600b60248201526a077656967687420697320360ac1b60448201526064016106e4565b611fed826121dc565b60008b8152600b6020908152604080832080546001810182559084528284200180546001600160a01b0319166001600160a01b03871690811790915583526009909152812080548392906120429084906127d5565b909155505060008b8152600a602090815260408083206001600160a01b0386168452909152812080548392906120799084906127d5565b9091555050600081131561208c57612098565b61209581612816565b90505b6120a281856127d5565b93506120ae81866127d5565b604080518d81526020810184905291965033917f1263a2295e53acd6ef8f655b8afc11fa0f2cf11925be7aa1757d741ef32a926c910160405180910390a2505b50806120f981612724565b915050611eb5565b5060008113156121865760405163fd4a77f160e01b8152600481018990527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063fd4a77f190602401600060405180830381600087803b15801561216d57600080fd5b505af1158015612181573d6000803e3d6000fd5b505050505b8160086000828254612198919061277e565b90915550506000978852600c602052604090972096909655505050505050565b6000611bc482846128fc565b6000611bc4828461291b565b6000611bc48284612691565b6001600160a01b038082166000908152601160205260409020546114179116611bcb565b508054600082559060005260206000209081019061141791905b8082111561222e576000815560010161221a565b5090565b6001600160a01b038116811461141757600080fd5b60006020828403121561225957600080fd5b8135611bc481612232565b801515811461141757600080fd5b60008060006060848603121561228757600080fd5b833561229281612232565b92506020840135915060408401356122a981612264565b809150509250925092565b6000602082840312156122c657600080fd5b5035919050565b600081518084526020808501945080840160005b838110156123065781516001600160a01b0316875295820195908201906001016122e1565b509495945050505050565b602081526000611bc460208301846122cd565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561236357612363612324565b604052919050565b600067ffffffffffffffff82111561238557612385612324565b5060051b60200190565b600082601f8301126123a057600080fd5b813560206123b56123b08361236b565b61233a565b82815260059290921b840181019181810190868411156123d457600080fd5b8286015b848110156123f85780356123eb81612232565b83529183019183016123d8565b509695505050505050565b6000806040838503121561241657600080fd5b823567ffffffffffffffff8082111561242e57600080fd5b61243a8683870161238f565b935060209150818501358181111561245157600080fd5b8501601f8101871361246257600080fd5b80356124706123b08261236b565b81815260059190911b8201840190848101908983111561248f57600080fd5b8584015b838110156124c7578035868111156124ab5760008081fd5b6124b98c898389010161238f565b845250918601918601612493565b508096505050505050509250929050565b600080604083850312156124eb57600080fd5b8235915060208301356124fd81612232565b809150509250929050565b6000806040838503121561251b57600080fd5b8235915060208301356124fd81612264565b60008060006060848603121561254257600080fd5b833592506020840135915060408401356122a981612264565b60008060006060848603121561257057600080fd5b83359250602084013561258281612232565b929592945050506040919091013590565b600080604083850312156125a657600080fd5b50508035926020909101359150565b60008083601f8401126125c757600080fd5b50813567ffffffffffffffff8111156125df57600080fd5b6020830191508360208260051b85010111156125fa57600080fd5b9250929050565b60008060008060006060868803121561261957600080fd5b85359450602086013567ffffffffffffffff8082111561263857600080fd5b61264489838a016125b5565b9096509450604088013591508082111561265d57600080fd5b5061266a888289016125b5565b969995985093965092949392505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156126a3576126a361267b565b500390565b6000602082840312156126ba57600080fd5b8151611bc481612232565b6000602082840312156126d757600080fd5b8151611bc481612264565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b038316815260406020820181905260009061271c908301846122cd565b949350505050565b60006000198214156127385761273861267b565b5060010190565b6020808252600c908201526b3737ba1037b832b930ba37b960a11b604082015260600190565b60006020828403121561277757600080fd5b5051919050565b600082198211156127915761279161267b565b500190565b60008083128015600160ff1b8501841216156127b4576127b461267b565b6001600160ff1b03840183138116156127cf576127cf61267b565b50500390565b600080821280156001600160ff1b03849003851316156127f7576127f761267b565b600160ff1b83900384128116156128105761281061267b565b50500190565b6000600160ff1b82141561282c5761282c61267b565b5060000390565b60006001600160ff1b03818413828413808216868404861116156128595761285961267b565b600160ff1b60008712828116878305891216156128785761287861267b565b600087129250878205871284841616156128945761289461267b565b878505871281841616156128aa576128aa61267b565b505050929093029392505050565b634e487b7160e01b600052601260045260246000fd5b6000826128dd576128dd6128b8565b600160ff1b8214600019841416156128f7576128f761267b565b500590565b60008160001904831182151516156129165761291661267b565b500290565b60008261292a5761292a6128b8565b50049056fea264697066735822122081b25789b0e839f922afc225bcf3022ee4a0358b7f60aa32eb4ab6a884bb1e5164736f6c634300080a0033",
							"opcodes": "PUSH2 0x100 PUSH1 0x40 MSTORE PUSH8 0x26DB992A3B18000 PUSH1 0x7 SSTORE PUSH1 0x0 PUSH1 0xD SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2CCC CODESIZE SUB DUP1 PUSH3 0x2CCC DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x46 SWAP2 PUSH3 0x20E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 DUP2 SSTORE DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP1 DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x40 MLOAD DUP10 SWAP3 DUP10 SWAP3 DUP9 SWAP3 DUP9 SWAP3 DUP9 SWAP3 DUP9 SWAP3 DUP9 SWAP3 DUP8 SWAP3 DUP8 SWAP3 DUP8 SWAP3 DUP8 SWAP3 DUP8 SWAP3 PUSH32 0x3CCBB406B985DD76FE05E172B432487A2FF9FE4257642D3ACC350F167CB1D577 SWAP1 DUP3 SWAP1 LOG3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH3 0xF6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x73776170546F6B656E206973203 PUSH1 0x94 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND OR SWAP1 SSTORE PUSH1 0x3 DUP4 SWAP1 SSTORE PUSH1 0x80 DUP3 SWAP1 MSTORE PUSH1 0x5 DUP2 SWAP1 SSTORE PUSH3 0x138 DUP3 DUP3 PUSH3 0x1E0 PUSH1 0x20 SWAP1 DUP2 SHL PUSH3 0x1BB8 OR SWAP1 SHR JUMP JUMPDEST PUSH1 0x4 SWAP1 DUP2 SSTORE PUSH2 0x3E8 PUSH1 0x6 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND PUSH1 0xA0 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x7E062A35 PUSH1 0xE1 SHL DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP8 POP PUSH4 0xFC0C546A SWAP7 POP DUP1 DUP4 ADD SWAP6 POP PUSH1 0x20 SWAP5 POP SWAP1 SWAP3 POP DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x192 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x1B8 SWAP2 SWAP1 PUSH3 0x295 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0xC0 MSTORE SWAP11 SWAP1 SWAP11 AND PUSH1 0xE0 MSTORE POP PUSH3 0x2DC SWAP11 POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1EE DUP3 DUP5 PUSH3 0x2B5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH3 0x22A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 MLOAD PUSH3 0x237 DUP2 PUSH3 0x1F5 JUMP JUMPDEST PUSH1 0x20 DUP10 ADD MLOAD SWAP1 SWAP8 POP PUSH3 0x24A DUP2 PUSH3 0x1F5 JUMP JUMPDEST PUSH1 0x40 DUP10 ADD MLOAD SWAP1 SWAP7 POP PUSH3 0x25D DUP2 PUSH3 0x1F5 JUMP JUMPDEST PUSH1 0x60 DUP10 ADD MLOAD SWAP1 SWAP6 POP PUSH3 0x270 DUP2 PUSH3 0x1F5 JUMP JUMPDEST DUP1 SWAP5 POP POP PUSH1 0x80 DUP9 ADD MLOAD SWAP3 POP PUSH1 0xA0 DUP9 ADD MLOAD SWAP2 POP PUSH1 0xC0 DUP9 ADD MLOAD SWAP1 POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x2A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x1EE DUP2 PUSH3 0x1F5 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x2D7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x2965 PUSH3 0x367 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x2FF ADD MSTORE PUSH2 0x8DC ADD MSTORE PUSH1 0x0 POP POP PUSH1 0x0 DUP2 DUP2 PUSH2 0x3E8 ADD MSTORE DUP2 DUP2 PUSH2 0x8B4 ADD MSTORE DUP2 DUP2 PUSH2 0xD4A ADD MSTORE DUP2 DUP2 PUSH2 0xDE5 ADD MSTORE DUP2 DUP2 PUSH2 0xFD4 ADD MSTORE DUP2 DUP2 PUSH2 0x16C9 ADD MSTORE DUP2 DUP2 PUSH2 0x1AC2 ADD MSTORE DUP2 DUP2 PUSH2 0x1DAB ADD MSTORE PUSH2 0x2121 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x434 ADD MSTORE DUP2 DUP2 PUSH2 0x755 ADD MSTORE DUP2 DUP2 PUSH2 0x77C ADD MSTORE PUSH2 0x1127 ADD MSTORE PUSH2 0x2965 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x28A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x630B5BA1 GT PUSH2 0x15C JUMPI DUP1 PUSH4 0xA86A366D GT PUSH2 0xCE JUMPI DUP1 PUSH4 0xB9A09FD5 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xB9A09FD5 EQ PUSH2 0x5FF JUMPI DUP1 PUSH4 0xD23254B4 EQ PUSH2 0x628 JUMPI DUP1 PUSH4 0xDC73E49C EQ PUSH2 0x653 JUMPI DUP1 PUSH4 0xEA94EE44 EQ PUSH2 0x666 JUMPI DUP1 PUSH4 0xEF78D4FD EQ PUSH2 0x679 JUMPI DUP1 PUSH4 0xFECDAD60 EQ PUSH2 0x682 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA86A366D EQ PUSH2 0x560 JUMPI DUP1 PUSH4 0xAA70FB98 EQ PUSH2 0x573 JUMPI DUP1 PUSH4 0xAA79979B EQ PUSH2 0x586 JUMPI DUP1 PUSH4 0xAC4AFA38 EQ PUSH2 0x5B9 JUMPI DUP1 PUSH4 0xB0C7044B EQ PUSH2 0x5CC JUMPI DUP1 PUSH4 0xB5EC5C99 EQ PUSH2 0x5EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x79E93824 GT PUSH2 0x120 JUMPI DUP1 PUSH4 0x79E93824 EQ PUSH2 0x4F3 JUMPI DUP1 PUSH4 0x812632EC EQ PUSH2 0x513 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x51C JUMPI DUP1 PUSH4 0x96C82E57 EQ PUSH2 0x524 JUMPI DUP1 PUSH4 0xA61C713A EQ PUSH2 0x52D JUMPI DUP1 PUSH4 0xA7CAC846 EQ PUSH2 0x540 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x49F JUMPI DUP1 PUSH4 0x63453AE1 EQ PUSH2 0x4A7 JUMPI DUP1 PUSH4 0x64482F79 EQ PUSH2 0x4BA JUMPI DUP1 PUSH4 0x698473E3 EQ PUSH2 0x4CD JUMPI DUP1 PUSH4 0x71DD4BDA EQ PUSH2 0x4E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x32145F90 GT PUSH2 0x200 JUMPI DUP1 PUSH4 0x48CD4CB1 GT PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x48CD4CB1 EQ PUSH2 0x42F JUMPI DUP1 PUSH4 0x48EE26A3 EQ PUSH2 0x456 JUMPI DUP1 PUSH4 0x4ADE739B EQ PUSH2 0x469 JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x47C JUMPI DUP1 PUSH4 0x53D78693 EQ PUSH2 0x48F JUMPI DUP1 PUSH4 0x570CA735 EQ PUSH2 0x497 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x32145F90 EQ PUSH2 0x3C7 JUMPI DUP1 PUSH4 0x37550684 EQ PUSH2 0x3DA JUMPI DUP1 PUSH4 0x3B92EB23 EQ PUSH2 0x3E3 JUMPI DUP1 PUSH4 0x411B1F77 EQ PUSH2 0x40A JUMPI DUP1 PUSH4 0x4198709A EQ PUSH2 0x41D JUMPI DUP1 PUSH4 0x442DA82F EQ PUSH2 0x426 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xFB5A6B4 GT PUSH2 0x252 JUMPI DUP1 PUSH4 0xFB5A6B4 EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0x146650DF EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0x398 JUMPI DUP1 PUSH4 0x20B1CB6F EQ PUSH2 0x3A1 JUMPI DUP1 PUSH4 0x310BD74B EQ PUSH2 0x3B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6D6A1B2 EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0xC9C7EF5 EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0xD52333C EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0xF589D63 EQ PUSH2 0x321 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2B8 PUSH2 0x29D CALLDATASIZE PUSH1 0x4 PUSH2 0x2247 JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0xE SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2CC JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x2F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2272 JUMP JUMPDEST PUSH2 0x695 JUMP JUMPDEST PUSH2 0x2B8 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x334 PUSH2 0x32F CALLDATASIZE PUSH1 0x4 PUSH2 0x2247 JUMP JUMPDEST PUSH2 0xA73 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D9 PUSH3 0x93A80 DUP2 JUMP JUMPDEST PUSH2 0x353 PUSH2 0x34E CALLDATASIZE PUSH1 0x4 PUSH2 0x22B4 JUMP JUMPDEST PUSH2 0xBCF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x2311 JUMP JUMPDEST PUSH2 0x373 PUSH2 0x36E CALLDATASIZE PUSH1 0x4 PUSH2 0x22B4 JUMP JUMPDEST PUSH2 0xC3B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x2CC JUMP JUMPDEST PUSH2 0x2D9 PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH2 0x334 PUSH2 0x3AF CALLDATASIZE PUSH1 0x4 PUSH2 0x2403 JUMP JUMPDEST PUSH2 0xC78 JUMP JUMPDEST PUSH2 0x334 PUSH2 0x3C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x22B4 JUMP JUMPDEST PUSH2 0xD2E JUMP JUMPDEST PUSH2 0x334 PUSH2 0x3D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x22B4 JUMP JUMPDEST PUSH2 0xE4C JUMP JUMPDEST PUSH2 0x2D9 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2B8 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x334 PUSH2 0x418 CALLDATASIZE PUSH1 0x4 PUSH2 0x24D8 JUMP JUMPDEST PUSH2 0xF9C JUMP JUMPDEST PUSH2 0x2D9 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2D9 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2D9 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x2B8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x334 PUSH2 0x477 CALLDATASIZE PUSH1 0x4 PUSH2 0x2508 JUMP JUMPDEST PUSH2 0x107E JUMP JUMPDEST PUSH2 0x334 PUSH2 0x48A CALLDATASIZE PUSH1 0x4 PUSH2 0x22B4 JUMP JUMPDEST PUSH2 0x1125 JUMP JUMPDEST PUSH2 0x334 PUSH2 0x141A JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x14A7 JUMP JUMPDEST PUSH2 0x334 PUSH2 0x151A JUMP JUMPDEST PUSH2 0x334 PUSH2 0x4B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2247 JUMP JUMPDEST PUSH2 0x1545 JUMP JUMPDEST PUSH2 0x334 PUSH2 0x4C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x252D JUMP JUMPDEST PUSH2 0x154E JUMP JUMPDEST PUSH2 0x334 PUSH2 0x4DB CALLDATASIZE PUSH1 0x4 PUSH2 0x24D8 JUMP JUMPDEST PUSH2 0x1691 JUMP JUMPDEST PUSH2 0x334 PUSH2 0x4EE CALLDATASIZE PUSH1 0x4 PUSH2 0x22B4 JUMP JUMPDEST PUSH2 0x176B JUMP JUMPDEST PUSH2 0x2D9 PUSH2 0x501 CALLDATASIZE PUSH1 0x4 PUSH2 0x22B4 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2D9 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x1803 JUMP JUMPDEST PUSH2 0x2D9 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x334 PUSH2 0x53B CALLDATASIZE PUSH1 0x4 PUSH2 0x255B JUMP JUMPDEST PUSH2 0x184D JUMP JUMPDEST PUSH2 0x2D9 PUSH2 0x54E CALLDATASIZE PUSH1 0x4 PUSH2 0x2247 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x56E CALLDATASIZE PUSH1 0x4 PUSH2 0x2593 JUMP JUMPDEST PUSH2 0x18B5 JUMP JUMPDEST PUSH2 0x334 PUSH2 0x581 CALLDATASIZE PUSH1 0x4 PUSH2 0x22B4 JUMP JUMPDEST PUSH2 0x18ED JUMP JUMPDEST PUSH2 0x5A9 PUSH2 0x594 CALLDATASIZE PUSH1 0x4 PUSH2 0x2247 JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2CC JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x5C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x22B4 JUMP JUMPDEST PUSH2 0x1985 JUMP JUMPDEST PUSH2 0x2D9 PUSH2 0x5DA CALLDATASIZE PUSH1 0x4 PUSH2 0x2247 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x334 PUSH2 0x5FA CALLDATASIZE PUSH1 0x4 PUSH2 0x22B4 JUMP JUMPDEST PUSH2 0x19AF JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x60D CALLDATASIZE PUSH1 0x4 PUSH2 0x2247 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2D9 PUSH2 0x636 CALLDATASIZE PUSH1 0x4 PUSH2 0x24D8 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x2B8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x334 PUSH2 0x674 CALLDATASIZE PUSH1 0x4 PUSH2 0x255B JUMP JUMPDEST PUSH2 0x1A47 JUMP JUMPDEST PUSH2 0x2D9 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x334 PUSH2 0x690 CALLDATASIZE PUSH1 0x4 PUSH2 0x2601 JUMP JUMPDEST PUSH2 0x1AA6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND ISZERO PUSH2 0x6ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x6 PUSH1 0x24 DUP3 ADD MSTORE PUSH6 0x657869737473 PUSH1 0xD0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x743 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5F6C70546F6B656E20697320746865207A65726F206164647265737300000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E4 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x751 JUMPI PUSH2 0x751 PUSH2 0x151A JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 NUMBER GT PUSH2 0x7A0 JUMPI PUSH32 0x0 PUSH2 0x7A2 JUMP JUMPDEST NUMBER JUMPDEST PUSH1 0xD SLOAD SWAP1 SWAP2 POP PUSH2 0x7B2 SWAP1 DUP6 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0xD SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP8 DUP2 MSTORE SWAP3 DUP3 ADD DUP5 DUP2 MSTORE PUSH1 0xE DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE PUSH1 0x0 DUP4 SWAP1 MSTORE SWAP5 MLOAD PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD PUSH1 0x3 SWAP1 SWAP3 MUL SWAP2 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP6 AND OR SWAP1 SWAP4 SSTORE SWAP4 MLOAD PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FE DUP4 ADD SSTORE MLOAD PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FF SWAP1 SWAP2 ADD SSTORE SWAP1 SLOAD PUSH2 0x880 SWAP2 SWAP1 PUSH2 0x2691 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP3 MLOAD PUSH4 0x1E533A8F PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x794CEA3C SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x927 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x94B SWAP2 SWAP1 PUSH2 0x26A8 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 NOT PUSH1 0x24 DUP4 ADD MSTORE SWAP3 SWAP4 POP SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9A1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9C5 SWAP2 SWAP1 PUSH2 0x26C5 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD SWAP6 DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP7 DUP8 AND DUP2 OR SWAP1 SWAP2 SSTORE DUP4 MSTORE PUSH1 0x12 DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD SWAP1 SWAP6 AND SWAP1 SWAP4 OR SWAP1 SWAP4 SSTORE PUSH1 0x13 SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xA27 DUP2 PUSH2 0x1BCB JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND SWAP2 SWAP1 DUP4 AND SWAP1 PUSH32 0x9B8203EFE7FE42185A7755B0510F87C8B693971D6A7C22520AAF683E6B124261 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x8DA5CB5B PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD CALLER SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x8DA5CB5B SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xABC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAE0 SWAP2 SWAP1 PUSH2 0x26A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xB36 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB7F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x3130B2103732BB9037B832B930BA37B9 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD DUP3 SWAP2 SWAP1 DUP2 SWAP1 PUSH32 0x3CCBB406B985DD76FE05E172B432487A2FF9FE4257642D3ACC350F167CB1D577 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xC2F JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC11 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xE DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xC4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP DUP4 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xD29 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xC96 JUMPI PUSH2 0xC96 PUSH2 0x26E2 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x31279D3D CALLER DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xCBF JUMPI PUSH2 0xCBF PUSH2 0x26E2 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCE4 SWAP3 SWAP2 SWAP1 PUSH2 0x26F8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD12 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0xD21 SWAP1 PUSH2 0x2724 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC7B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x430C2081 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x430C2081 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD99 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDBD SWAP2 SWAP1 PUSH2 0x26C5 JUMP JUMPDEST PUSH2 0xDC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDCF DUP2 PUSH2 0x1C00 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xC1F0FB9F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xC1F0FB9F SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE45 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xEAC JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE8E JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xED4 JUMPI PUSH2 0xED4 PUSH2 0x2324 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xEFD JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xF8A JUMPI PUSH1 0xA PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xF32 JUMPI PUSH2 0xF32 PUSH2 0x26E2 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xF6D JUMPI PUSH2 0xF6D PUSH2 0x26E2 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0xF82 DUP2 PUSH2 0x2724 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xF03 JUMP JUMPDEST POP PUSH2 0xF96 DUP5 DUP5 DUP4 PUSH2 0x1D87 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xFB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1039 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C35BEC5 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x986B7D8A SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1020 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1034 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xAE268D9AAB12F3605F58EFD74FD3801FA812B03FDB44317EB70F46DFF0E19E22 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x570CA735 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD CALLER SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x570CA735 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10C7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10EB SWAP2 SWAP1 PUSH2 0x26A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1111 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E4 SWAP1 PUSH2 0x273F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x111F JUMPI PUSH2 0x111F PUSH2 0x151A JUMP JUMPDEST POP PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH32 0x0 NUMBER GT DUP1 ISZERO PUSH2 0x1156 JUMPI POP PUSH1 0x4 SLOAD NUMBER LT ISZERO JUMPDEST ISZERO PUSH2 0x11B1 JUMPI PUSH1 0x7 SLOAD PUSH1 0x3 SLOAD GT ISZERO PUSH2 0x118C JUMPI PUSH2 0x1188 PUSH1 0x64 PUSH2 0x1182 PUSH1 0x50 PUSH1 0x3 SLOAD PUSH2 0x21B8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x21C4 JUMP JUMPDEST PUSH1 0x3 SSTORE JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x3 SLOAD LT ISZERO PUSH2 0x119F JUMPI PUSH1 0x7 SLOAD PUSH1 0x3 SSTORE JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x11AD SWAP1 NUMBER SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x4 SSTORE JUMPDEST PUSH1 0x0 PUSH1 0xE DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x11C6 JUMPI PUSH2 0x11C6 PUSH2 0x26E2 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD NUMBER GT PUSH2 0x11E5 JUMPI POP POP JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP4 AND PUSH1 0x4 DUP5 ADD MSTORE SWAP2 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x123C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1260 SWAP2 SWAP1 PUSH2 0x2765 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1272 JUMPI POP NUMBER PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD GT PUSH2 0x1281 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x129A DUP4 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0x21D0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x12C7 PUSH1 0xD SLOAD PUSH2 0x1182 DUP7 PUSH1 0x1 ADD SLOAD PUSH2 0x12C1 DUP7 PUSH1 0x3 SLOAD PUSH2 0x21B8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x21B8 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x40C10F19 ADDRESS PUSH2 0x12EC DUP6 PUSH3 0x93A80 PUSH2 0x21B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1337 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x135B SWAP2 SWAP1 PUSH2 0x26C5 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1408 JUMPI DUP5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x2 SLOAD PUSH1 0xD SLOAD PUSH1 0x1 DUP10 ADD SLOAD PUSH1 0x3 SLOAD SWAP4 DUP6 AND SWAP5 PUSH4 0xB66503CF SWAP5 SWAP4 AND SWAP3 PUSH2 0x13A9 SWAP3 SWAP2 PUSH2 0x1182 SWAP2 SWAP1 PUSH2 0x21B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1403 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST NUMBER DUP6 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xE SLOAD DUP2 LT ISZERO PUSH2 0x1417 JUMPI PUSH1 0x0 PUSH1 0xE DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x143C JUMPI PUSH2 0x143C PUSH2 0x26E2 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x3 SWAP1 SWAP5 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x1 DUP4 ADD SLOAD DUP7 DUP7 ADD MSTORE PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD DUP6 DUP5 ADD MSTORE SWAP1 DUP6 MSTORE PUSH1 0x11 SWAP1 SWAP3 MSTORE SWAP1 SWAP3 KECCAK256 SLOAD SWAP1 SWAP3 POP PUSH2 0x1494 SWAP2 AND PUSH2 0x1BCB JUMP JUMPDEST POP DUP1 PUSH2 0x149F DUP2 PUSH2 0x2724 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x141D JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x570CA735 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x570CA735 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14F1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1515 SWAP2 SWAP1 PUSH2 0x26A8 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1541 JUMPI PUSH2 0x1531 DUP2 PUSH2 0x1125 JUMP JUMPDEST PUSH2 0x153A DUP2 PUSH2 0x2724 JUMP JUMPDEST SWAP1 POP PUSH2 0x1520 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1417 DUP2 PUSH2 0x1BCB JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x8DA5CB5B PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD CALLER SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x8DA5CB5B SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1597 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15BB SWAP2 SWAP1 PUSH2 0x26A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1611 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E4 JUMP JUMPDEST PUSH2 0x1654 DUP3 PUSH2 0x164E PUSH1 0xE DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x162B JUMPI PUSH2 0x162B PUSH2 0x26E2 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0xD SLOAD PUSH2 0x21D0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0xD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xE DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x166E JUMPI PUSH2 0x166E PUSH2 0x26E2 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xD29 JUMPI PUSH2 0xD29 PUSH2 0x151A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x16AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x172E JUMPI PUSH1 0x40 MLOAD PUSH4 0x20FE6E5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x20FE6E5 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1715 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1729 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x60940192810A6FB3BCE3FD3E2E3A13FD6CCC7605E963FB87EE971ABA829989BD SWAP1 PUSH1 0x20 ADD PUSH2 0x1072 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x570CA735 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD CALLER SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x570CA735 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17D8 SWAP2 SWAP1 PUSH2 0x26A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x17FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E4 SWAP1 PUSH2 0x273F JUMP JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x8DA5CB5B PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x8DA5CB5B SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14F1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1869 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0xDCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x18D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP DUP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x570CA735 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD CALLER SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x570CA735 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1936 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x195A SWAP2 SWAP1 PUSH2 0x26A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1980 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E4 SWAP1 PUSH2 0x273F JUMP JUMPDEST PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH1 0x10 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1995 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x570CA735 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD CALLER SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x570CA735 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19F8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A1C SWAP2 SWAP1 PUSH2 0x26A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1A42 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E4 SWAP1 PUSH2 0x273F JUMP JUMPDEST PUSH1 0x5 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1A63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0xF341246ADAAC6F497BC2A656F546AB9E182111D630394F0C57C710A59A2CB567 SWAP2 ADD PUSH2 0x18A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x430C2081 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x430C2081 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B11 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B35 SWAP2 SWAP1 PUSH2 0x26C5 JUMP JUMPDEST PUSH2 0x1B3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP2 EQ PUSH2 0x1B4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE45 DUP6 DUP6 DUP6 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP10 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP9 DUP3 MSTORE SWAP1 SWAP4 POP DUP9 SWAP3 POP DUP8 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x1D87 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BC4 DUP3 DUP5 PUSH2 0x277E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD SWAP1 SWAP4 AND DUP1 DUP4 MSTORE PUSH1 0xF SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SLOAD PUSH2 0x1541 SWAP1 PUSH2 0x1125 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1D4B JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1C30 JUMPI PUSH2 0x1C30 PUSH2 0x26E2 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP9 DUP4 MSTORE PUSH1 0xA DUP3 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP1 DUP6 MSTORE SWAP2 SWAP1 SWAP3 MSTORE SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 ISZERO PUSH2 0x1D36 JUMPI PUSH2 0x1C71 DUP3 PUSH2 0x21DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1C99 SWAP1 DUP5 SWAP1 PUSH2 0x2796 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1CD0 SWAP1 DUP5 SWAP1 PUSH2 0x2796 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 SGT ISZERO PUSH2 0x1CEF JUMPI PUSH2 0x1CE8 DUP2 DUP6 PUSH2 0x27D5 JUMP JUMPDEST SWAP4 POP PUSH2 0x1CFC JUMP JUMPDEST PUSH2 0x1CF9 DUP2 DUP6 PUSH2 0x2796 JUMP JUMPDEST SWAP4 POP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x6B3894CE60B9BBE9D93F1A4E6FC25B6B93CD8222E73AB6348D79C596F5B51DE9 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP DUP1 DUP1 PUSH2 0x1D43 SWAP1 PUSH2 0x2724 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1C14 JUMP JUMPDEST POP DUP1 PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1D5E SWAP2 SWAP1 PUSH2 0x2691 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0xB SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH2 0xF96 SWAP2 PUSH2 0x2200 JUMP JUMPDEST PUSH2 0x1D90 DUP4 PUSH2 0x1C00 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x40 MLOAD PUSH4 0x39F890B5 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xE7E242D4 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1DFA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E1E SWAP2 SWAP1 PUSH2 0x2765 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1EB1 JUMPI PUSH1 0x0 DUP8 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1E43 JUMPI PUSH2 0x1E43 PUSH2 0x26E2 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SGT PUSH2 0x1E78 JUMPI DUP7 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1E62 JUMPI PUSH2 0x1E62 PUSH2 0x26E2 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1E73 SWAP1 PUSH2 0x2816 JUMP JUMPDEST PUSH2 0x1E93 JUMP JUMPDEST DUP7 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1E8A JUMPI PUSH2 0x1E8A PUSH2 0x26E2 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD JUMPDEST PUSH2 0x1E9D SWAP1 DUP6 PUSH2 0x27D5 JUMP JUMPDEST SWAP4 POP DUP1 PUSH2 0x1EA9 DUP2 PUSH2 0x2724 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1E27 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x2101 JUMPI PUSH1 0x0 DUP9 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1ED1 JUMPI PUSH2 0x1ED1 PUSH2 0x26E2 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x1F0D DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD SWAP1 SWAP4 AND DUP3 MSTORE PUSH1 0x13 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x20EE JUMPI PUSH1 0x0 DUP6 DUP8 DUP11 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1F28 JUMPI PUSH2 0x1F28 PUSH2 0x26E2 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1F3A SWAP2 SWAP1 PUSH2 0x2833 JUMP JUMPDEST PUSH2 0x1F44 SWAP2 SWAP1 PUSH2 0x28CE JUMP JUMPDEST PUSH1 0x0 DUP13 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1FA9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x746F6B656E20706F6F6C206973203 PUSH1 0x8C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E4 JUMP JUMPDEST DUP1 PUSH2 0x1FE4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x776569676874206973203 PUSH1 0xAC SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E4 JUMP JUMPDEST PUSH2 0x1FED DUP3 PUSH2 0x21DC JUMP JUMPDEST PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP5 MSTORE DUP3 DUP5 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP4 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x2042 SWAP1 DUP5 SWAP1 PUSH2 0x27D5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x2079 SWAP1 DUP5 SWAP1 PUSH2 0x27D5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 SGT ISZERO PUSH2 0x208C JUMPI PUSH2 0x2098 JUMP JUMPDEST PUSH2 0x2095 DUP2 PUSH2 0x2816 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x20A2 DUP2 DUP6 PUSH2 0x27D5 JUMP JUMPDEST SWAP4 POP PUSH2 0x20AE DUP2 DUP7 PUSH2 0x27D5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP14 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE SWAP2 SWAP7 POP CALLER SWAP2 PUSH32 0x1263A2295E53ACD6EF8F655B8AFC11FA0F2CF11925BE7AA1757D741EF32A926C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMPDEST POP DUP1 PUSH2 0x20F9 DUP2 PUSH2 0x2724 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1EB5 JUMP JUMPDEST POP PUSH1 0x0 DUP2 SGT ISZERO PUSH2 0x2186 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFD4A77F1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP10 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xFD4A77F1 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x216D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2181 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST DUP2 PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2198 SWAP2 SWAP1 PUSH2 0x277E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 SWAP8 DUP9 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP8 KECCAK256 SWAP7 SWAP1 SWAP7 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BC4 DUP3 DUP5 PUSH2 0x28FC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BC4 DUP3 DUP5 PUSH2 0x291B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BC4 DUP3 DUP5 PUSH2 0x2691 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1417 SWAP2 AND PUSH2 0x1BCB JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1417 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x222E JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x221A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1417 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2259 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1BC4 DUP2 PUSH2 0x2232 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1417 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2287 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x2292 DUP2 PUSH2 0x2232 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x22A9 DUP2 PUSH2 0x2264 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2306 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x22E1 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1BC4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x22CD JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2363 JUMPI PUSH2 0x2363 PUSH2 0x2324 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2385 JUMPI PUSH2 0x2385 PUSH2 0x2324 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x23A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x23B5 PUSH2 0x23B0 DUP4 PUSH2 0x236B JUMP JUMPDEST PUSH2 0x233A JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x23D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x23F8 JUMPI DUP1 CALLDATALOAD PUSH2 0x23EB DUP2 PUSH2 0x2232 JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x23D8 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2416 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x242E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x243A DUP7 DUP4 DUP8 ADD PUSH2 0x238F JUMP JUMPDEST SWAP4 POP PUSH1 0x20 SWAP2 POP DUP2 DUP6 ADD CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2451 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x2462 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x2470 PUSH2 0x23B0 DUP3 PUSH2 0x236B JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP5 ADD SWAP1 DUP5 DUP2 ADD SWAP1 DUP10 DUP4 GT ISZERO PUSH2 0x248F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP5 ADD JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x24C7 JUMPI DUP1 CALLDATALOAD DUP7 DUP2 GT ISZERO PUSH2 0x24AB JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x24B9 DUP13 DUP10 DUP4 DUP10 ADD ADD PUSH2 0x238F JUMP JUMPDEST DUP5 MSTORE POP SWAP2 DUP7 ADD SWAP2 DUP7 ADD PUSH2 0x2493 JUMP JUMPDEST POP DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x24FD DUP2 PUSH2 0x2232 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x251B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x24FD DUP2 PUSH2 0x2264 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2542 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x22A9 DUP2 PUSH2 0x2264 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2570 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x2582 DUP2 PUSH2 0x2232 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x25C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x25DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x25FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2619 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2638 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2644 DUP10 DUP4 DUP11 ADD PUSH2 0x25B5 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x265D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x266A DUP9 DUP3 DUP10 ADD PUSH2 0x25B5 JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x26A3 JUMPI PUSH2 0x26A3 PUSH2 0x267B JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1BC4 DUP2 PUSH2 0x2232 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1BC4 DUP2 PUSH2 0x2264 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x271C SWAP1 DUP4 ADD DUP5 PUSH2 0x22CD JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x2738 JUMPI PUSH2 0x2738 PUSH2 0x267B JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xC SWAP1 DUP3 ADD MSTORE PUSH12 0x3737BA1037B832B930BA37B9 PUSH1 0xA1 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2777 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2791 JUMPI PUSH2 0x2791 PUSH2 0x267B JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SLT DUP1 ISZERO PUSH1 0x1 PUSH1 0xFF SHL DUP6 ADD DUP5 SLT AND ISZERO PUSH2 0x27B4 JUMPI PUSH2 0x27B4 PUSH2 0x267B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP5 ADD DUP4 SGT DUP2 AND ISZERO PUSH2 0x27CF JUMPI PUSH2 0x27CF PUSH2 0x267B JUMP JUMPDEST POP POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT DUP1 ISZERO PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP5 SWAP1 SUB DUP6 SGT AND ISZERO PUSH2 0x27F7 JUMPI PUSH2 0x27F7 PUSH2 0x267B JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF SHL DUP4 SWAP1 SUB DUP5 SLT DUP2 AND ISZERO PUSH2 0x2810 JUMPI PUSH2 0x2810 PUSH2 0x267B JUMP JUMPDEST POP POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0xFF SHL DUP3 EQ ISZERO PUSH2 0x282C JUMPI PUSH2 0x282C PUSH2 0x267B JUMP JUMPDEST POP PUSH1 0x0 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP2 DUP5 SGT DUP3 DUP5 SGT DUP1 DUP3 AND DUP7 DUP5 DIV DUP7 GT AND ISZERO PUSH2 0x2859 JUMPI PUSH2 0x2859 PUSH2 0x267B JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF SHL PUSH1 0x0 DUP8 SLT DUP3 DUP2 AND DUP8 DUP4 SDIV DUP10 SLT AND ISZERO PUSH2 0x2878 JUMPI PUSH2 0x2878 PUSH2 0x267B JUMP JUMPDEST PUSH1 0x0 DUP8 SLT SWAP3 POP DUP8 DUP3 SDIV DUP8 SLT DUP5 DUP5 AND AND ISZERO PUSH2 0x2894 JUMPI PUSH2 0x2894 PUSH2 0x267B JUMP JUMPDEST DUP8 DUP6 SDIV DUP8 SLT DUP2 DUP5 AND AND ISZERO PUSH2 0x28AA JUMPI PUSH2 0x28AA PUSH2 0x267B JUMP JUMPDEST POP POP POP SWAP3 SWAP1 SWAP4 MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x28DD JUMPI PUSH2 0x28DD PUSH2 0x28B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF SHL DUP3 EQ PUSH1 0x0 NOT DUP5 EQ AND ISZERO PUSH2 0x28F7 JUMPI PUSH2 0x28F7 PUSH2 0x267B JUMP JUMPDEST POP SDIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2916 JUMPI PUSH2 0x2916 PUSH2 0x267B JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x292A JUMPI PUSH2 0x292A PUSH2 0x28B8 JUMP JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 0xB2 JUMPI DUP10 0xB0 0xE8 CODECOPY 0xF9 0x22 0xAF 0xC2 0x25 0xBC RETURN MUL 0x2E 0xE4 LOG0 CALLDATALOAD DUP12 PUSH32 0x60AA32EB4AB6A884BB1E5164736F6C634300080A003300000000000000000000 ",
							"sourceMap": "54066:5854:0:-:0;;;46449:7;46417:39;;54811:1;54778:34;;55257:302;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3090:1;3195:7;:22;;;44833:30;;-1:-1:-1;;;;;;44833:30:0;-1:-1:-1;;;;;44833:30:0;;;;;;;;44878:38;;44833:30;;55462:4;;55468:10;;55480:14;;55496:11;;55509:7;;44833:30;;55468:10;;55480:14;;55496:11;;55509:7;;44833:30;;44878:38;;3195:7;;44878:38;-1:-1:-1;;;;;;46666:33:0;::::1;46658:60;;;::::0;-1:-1:-1;;;46658:60:0;;1212:2:1;46658:60:0::1;::::0;::::1;1194:21:1::0;1251:2;1231:18;;;1224:30;-1:-1:-1;;;1270:18:1;;;1263:44;1324:18;;46658:60:0::1;;;;;;;;46728:9;:22:::0;;-1:-1:-1;;;;;;46728:22:0::1;-1:-1:-1::0;;;;;46728:22:0;::::1;;::::0;;46760:13:::1;:30:::0;;;46800:24:::1;::::0;;;46834:6:::1;:16:::0;;;46877:24:::1;46800::::0;46834:16;46877:15:::1;;::::0;;::::1;;;:24:::0;::::1;:::i;:::-;46860:14;:41:::0;;;46923:4:::1;46911:9;:16:::0;-1:-1:-1;;;;;50468:14:0;::::1;;::::0;;;50499:22:::1;::::0;;-1:-1:-1;;;50499:22:0;;;;50468:14;;-1:-1:-1;50499:20:0::1;::::0;-1:-1:-1;50499:22:0;;::::1;::::0;-1:-1:-1;50499:22:0::1;::::0;-1:-1:-1;50499:22:0;;-1:-1:-1;50499:22:0;;;;;50468:14;50499:22:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;50492:29:0;;::::1;;::::0;55529:22;;;::::1;;::::0;-1:-1:-1;54066:5854:0;;-1:-1:-1;;;;;;;;;;;54066:5854:0;25686:96;25744:7;25770:5;25774:1;25770;:5;:::i;:::-;25763:12;25686:96;-1:-1:-1;;;25686:96:0:o;14:131:1:-;-1:-1:-1;;;;;89:31:1;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:855::-;289:6;297;305;313;321;329;337;390:3;378:9;369:7;365:23;361:33;358:53;;;407:1;404;397:12;358:53;439:9;433:16;458:31;483:5;458:31;:::i;:::-;558:2;543:18;;537:25;508:5;;-1:-1:-1;571:33:1;537:25;571:33;:::i;:::-;675:2;660:18;;654:25;623:7;;-1:-1:-1;688:33:1;654:25;688:33;:::i;:::-;792:2;777:18;;771:25;740:7;;-1:-1:-1;805:33:1;771:25;805:33;:::i;:::-;857:7;847:17;;;904:3;893:9;889:19;883:26;873:36;;949:3;938:9;934:19;928:26;918:36;;994:3;983:9;979:19;973:26;963:36;;150:855;;;;;;;;;;:::o;1353:251::-;1423:6;1476:2;1464:9;1455:7;1451:23;1447:32;1444:52;;;1492:1;1489;1482:12;1444:52;1524:9;1518:16;1543:31;1568:5;1543:31;:::i;1609:225::-;1649:3;1680:1;1676:6;1673:1;1670:13;1667:136;;;1725:10;1720:3;1716:20;1713:1;1706:31;1760:4;1757:1;1750:15;1788:4;1785:1;1778:15;1667:136;-1:-1:-1;1819:9:1;;1609:225::o;:::-;54066:5854:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@LpOfPid_3150": {
									"entryPoint": null,
									"id": 3150,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_reset_2765": {
									"entryPoint": 7168,
									"id": 2765,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_updateForGauge_3699": {
									"entryPoint": 7115,
									"id": 3699,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_updatePoolInfo_3759": {
									"entryPoint": 8668,
									"id": 3759,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_vote_2967": {
									"entryPoint": 7559,
									"id": 2967,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@add_1059": {
									"entryPoint": 7096,
									"id": 1059,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@attachTokenToGauge_3567": {
									"entryPoint": 5777,
									"id": 3567,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@claimRewards_3736": {
									"entryPoint": 3192,
									"id": 3736,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@createGauge_3347": {
									"entryPoint": 1685,
									"id": 3347,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@detachTokenFromGauge_3625": {
									"entryPoint": 3996,
									"id": 3625,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@distribute_3746": {
									"entryPoint": 5445,
									"id": 3746,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@div_1104": {
									"entryPoint": 8644,
									"id": 1104,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@duration_3153": {
									"entryPoint": null,
									"id": 3153,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@emitDeposit_3592": {
									"entryPoint": 6221,
									"id": 3592,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@emitWithdraw_3650": {
									"entryPoint": 6727,
									"id": 3650,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@gaugeFactory_3139": {
									"entryPoint": null,
									"id": 3139,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@gauges_3160": {
									"entryPoint": null,
									"id": 3160,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getPoolVote_2627": {
									"entryPoint": 3023,
									"id": 2627,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isGaugeForPool_3774": {
									"entryPoint": null,
									"id": 3774,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isGauge_3168": {
									"entryPoint": null,
									"id": 3168,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@massUpdatePools_3411": {
									"entryPoint": 5402,
									"id": 3411,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@minTokenReward_2208": {
									"entryPoint": null,
									"id": 2208,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mintMulti_2205": {
									"entryPoint": null,
									"id": 2205,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@mul_1089": {
									"entryPoint": 8632,
									"id": 1089,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@operatable_2042": {
									"entryPoint": null,
									"id": 2042,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@operator_2107": {
									"entryPoint": 5287,
									"id": 2107,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_2118": {
									"entryPoint": 6147,
									"id": 2118,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@periodEndBlock_2201": {
									"entryPoint": null,
									"id": 2201,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@period_2203": {
									"entryPoint": null,
									"id": 2203,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@poke_3028": {
									"entryPoint": 3660,
									"id": 3028,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@poolForGauge_3164": {
									"entryPoint": null,
									"id": 3164,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@poolInfo_3146": {
									"entryPoint": 3131,
									"id": 3146,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@poolLength_3208": {
									"entryPoint": null,
									"id": 3208,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@poolVote_2574": {
									"entryPoint": 6325,
									"id": 2574,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@pools_3156": {
									"entryPoint": 6533,
									"id": 3156,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@reset_2655": {
									"entryPoint": 3374,
									"id": 2655,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setHalvingPeriod_2325": {
									"entryPoint": 6575,
									"id": 2325,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setMinTokenReward_2349": {
									"entryPoint": 6381,
									"id": 2349,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setMintMulti_2337": {
									"entryPoint": 5995,
									"id": 2337,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setOperContract_2151": {
									"entryPoint": 2675,
									"id": 2151,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@setTokenPerBlock_2369": {
									"entryPoint": 4222,
									"id": 2369,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@set_3385": {
									"entryPoint": 5454,
									"id": 3385,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@startBlock_2199": {
									"entryPoint": null,
									"id": 2199,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_1074": {
									"entryPoint": 8656,
									"id": 1074,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@swapToken_2195": {
									"entryPoint": null,
									"id": 2195,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenPerBlock_2197": {
									"entryPoint": null,
									"id": 2197,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalAllocPoint_3142": {
									"entryPoint": null,
									"id": 3142,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalWeight_2555": {
									"entryPoint": null,
									"id": 2555,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateAll_3681": {
									"entryPoint": 5146,
									"id": 3681,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updatePool_3534": {
									"entryPoint": 4389,
									"id": 3534,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@usedWeights_2578": {
									"entryPoint": null,
									"id": 2578,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@veToken_2557": {
									"entryPoint": null,
									"id": 2557,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@vote_3065": {
									"entryPoint": 6822,
									"id": 3065,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@votes_2569": {
									"entryPoint": null,
									"id": 2569,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@weights_2563": {
									"entryPoint": null,
									"id": 2563,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_array_address_dyn": {
									"entryPoint": 9103,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_array_address_dyn_calldata": {
									"entryPoint": 9653,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8775,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 9896,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256t_bool": {
									"entryPoint": 8818,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_array$_t_address_$dyn_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 9219,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 9925,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8884,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 10085,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 9432,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_addresst_uint256": {
									"entryPoint": 9563,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint256t_array$_t_address_$dyn_calldata_ptrt_array$_t_int256_$dyn_calldata_ptr": {
									"entryPoint": 9729,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_uint256t_bool": {
									"entryPoint": 9480,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 9619,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_bool": {
									"entryPoint": 9517,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_array_address_dyn": {
									"entryPoint": 8909,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_array$_t_address_$dyn_memory_ptr__to_t_address_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 9976,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 8977,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IToken_$2170__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_Operatable_$2024__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_01e37c7ed6a06a994c20fbd2f42bf29a9f5d6c8e3fc27051e5e2335817ef219a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0f59f276028eb3edbb11af1c87653139d4936680909681dab8fd16eda0979be8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bd8da5f7fa1b241e5cc51a80e871f13a4ea7aa28fe54091ef63906319b2ad5ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_dbaf3424ad2e7c16209d8ac14e463c2077844cc22131ae81d8b662c6ff9d007b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ea8abe427f1015fb733675f1d280781b0e3aca591785833d6bb4041dafc3e169__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10047,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_eefe2a51b746a11f8faffa0a886e61f8e4f519bdec38e798bdc8e449c78cd933__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_int256__to_t_uint256_t_int256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 9018,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_array_address_dyn": {
									"entryPoint": 9067,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_int256": {
									"entryPoint": 10197,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 10110,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_int256": {
									"entryPoint": 10446,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 10523,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_int256": {
									"entryPoint": 10291,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 10492,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_int256": {
									"entryPoint": 10134,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 9873,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 10020,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"negate_t_int256": {
									"entryPoint": 10262,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9851,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 10424,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 9954,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8996,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 8754,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_bool": {
									"entryPoint": 8804,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:16170:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:86:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "123:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "132:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "135:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "82:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "93:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "108:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "113:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "104:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "104:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "117:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "100:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "100:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "89:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "89:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "79:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "79:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "72:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "72:50:1"
															},
															"nodeType": "YulIf",
															"src": "69:70:1"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "48:5:1",
														"type": ""
													}
												],
												"src": "14:131:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "220:177:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "266:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "275:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "278:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "268:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "268:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "268:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "241:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "250:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "237:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "237:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "262:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "233:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "233:32:1"
															},
															"nodeType": "YulIf",
															"src": "230:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "291:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "317:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "304:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "304:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "295:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "361:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "336:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "336:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "336:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "376:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "386:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "376:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "186:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "197:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "209:6:1",
														"type": ""
													}
												],
												"src": "150:247:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "503:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "513:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "525:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "536:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "521:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "521:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "513:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "555:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "570:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "586:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "591:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "582:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "582:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "595:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "578:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "578:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "566:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "566:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "548:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "548:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "548:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "472:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "483:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "494:4:1",
														"type": ""
													}
												],
												"src": "402:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "711:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "721:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "733:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "744:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "729:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "729:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "721:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "763:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "774:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "756:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "756:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "756:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "680:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "691:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "702:4:1",
														"type": ""
													}
												],
												"src": "610:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "834:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "888:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "897:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "900:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "890:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "890:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "890:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "857:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "878:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "871:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "871:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "864:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "864:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "854:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "854:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "847:40:1"
															},
															"nodeType": "YulIf",
															"src": "844:60:1"
														}
													]
												},
												"name": "validator_revert_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "823:5:1",
														"type": ""
													}
												],
												"src": "792:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1016:349:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1062:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1071:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1074:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1064:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1064:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1064:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1037:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1046:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1033:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1033:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1058:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1029:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1029:32:1"
															},
															"nodeType": "YulIf",
															"src": "1026:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1087:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1113:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1100:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1100:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1091:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1157:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1132:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1132:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1132:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1172:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1182:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1172:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1196:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1223:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1234:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1219:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1219:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1206:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1206:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1196:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1247:47:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1279:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1290:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1275:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1275:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1262:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1262:32:1"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "1251:7:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "1325:7:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "1303:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1303:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1303:30:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1342:17:1",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "1352:7:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1342:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "966:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "977:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "989:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "997:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1005:6:1",
														"type": ""
													}
												],
												"src": "915:450:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1440:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1486:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1495:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1498:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1488:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1488:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1488:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1461:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1470:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1457:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1457:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1482:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1453:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1453:32:1"
															},
															"nodeType": "YulIf",
															"src": "1450:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1511:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1534:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1521:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1521:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1511:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1406:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1417:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1429:6:1",
														"type": ""
													}
												],
												"src": "1370:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1616:400:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1626:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1646:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1640:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1640:12:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1630:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1668:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1673:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1661:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1661:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1661:19:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1689:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1699:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "1693:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1712:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1723:3:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1728:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1719:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1719:12:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1712:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1740:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1758:5:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "1765:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1754:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1754:14:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "1744:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1777:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1786:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1781:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1845:146:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "1866:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "1881:6:1"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "1875:5:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1875:13:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "1898:3:1",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "1903:1:1",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "1894:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1894:11:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1907:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "1890:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1890:19:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "1871:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1871:39:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1859:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1859:52:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1859:52:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1924:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "1935:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1940:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1931:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1931:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1924:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1956:25:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "1970:6:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1978:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1966:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1966:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1956:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1807:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1810:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1804:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1804:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1818:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1820:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1829:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1832:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1825:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1825:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1820:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1800:3:1",
																"statements": []
															},
															"src": "1796:195:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2000:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "2007:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2000:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_address_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1593:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1600:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1608:3:1",
														"type": ""
													}
												],
												"src": "1555:461:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2172:110:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2189:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2200:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2182:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2182:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2182:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2212:64:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2249:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2261:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2272:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2257:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2257:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_address_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "2220:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2220:56:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2212:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2141:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2152:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2163:4:1",
														"type": ""
													}
												],
												"src": "2021:261:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2444:188:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2454:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2466:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2477:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2462:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2462:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2454:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2496:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2511:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2527:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2532:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "2523:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2523:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2536:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "2519:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2519:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2507:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2507:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2489:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2489:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2489:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2560:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2571:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2556:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2556:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "2576:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2549:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2549:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2549:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2603:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2614:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2599:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2599:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2619:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2592:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2592:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2592:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2397:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2408:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2416:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2424:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2435:4:1",
														"type": ""
													}
												],
												"src": "2287:345:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2669:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2686:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2693:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2698:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2689:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2689:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2679:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2679:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2679:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2726:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2729:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2719:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2719:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2719:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2750:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2753:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2743:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2743:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2743:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2637:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2814:230:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2824:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2840:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2834:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2834:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "2824:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2852:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2874:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "2890:4:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2896:2:1",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2886:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2886:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2905:2:1",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2901:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2901:7:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2882:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2882:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2870:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2870:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2856:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2985:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2987:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2987:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2987:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2928:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2940:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2925:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2925:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2964:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2976:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2961:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2961:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2922:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2922:62:1"
															},
															"nodeType": "YulIf",
															"src": "2919:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3023:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "3027:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3016:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3016:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3016:22:1"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2794:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2803:6:1",
														"type": ""
													}
												],
												"src": "2769:275:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3118:114:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3162:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3164:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3164:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3164:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3134:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3142:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3131:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3131:30:1"
															},
															"nodeType": "YulIf",
															"src": "3128:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3193:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3209:1:1",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "3212:6:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "3205:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3205:14:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3221:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3201:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3201:25:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "3193:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_address_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3098:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "3109:4:1",
														"type": ""
													}
												],
												"src": "3049:183:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3301:673:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3350:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3359:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3362:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3352:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3352:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3352:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3329:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3337:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3325:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3325:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3344:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3321:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3321:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3314:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3314:35:1"
															},
															"nodeType": "YulIf",
															"src": "3311:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3375:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3398:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3385:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3385:20:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3379:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3414:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3424:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3418:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3437:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3504:2:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_address_dyn",
																			"nodeType": "YulIdentifier",
																			"src": "3464:39:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3464:43:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3448:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3448:60:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "3441:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3517:16:1",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "3530:3:1"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "3521:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "3549:3:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3554:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3542:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3542:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3542:15:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3566:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "3577:3:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3582:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3573:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3573:12:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "3566:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3594:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3616:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3628:1:1",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3631:2:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "3624:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3624:10:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3612:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3612:23:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3637:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3608:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3608:32:1"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "3598:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3668:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3677:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3680:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3670:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3670:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3670:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3655:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3663:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3652:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3652:15:1"
															},
															"nodeType": "YulIf",
															"src": "3649:35:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3693:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3708:6:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3716:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3704:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3704:15:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "3697:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3784:161:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "3798:30:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "3824:3:1"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nodeType": "YulIdentifier",
																				"src": "3811:12:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3811:17:1"
																		},
																		"variables": [
																			{
																				"name": "value",
																				"nodeType": "YulTypedName",
																				"src": "3802:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "3866:5:1"
																				}
																			],
																			"functionName": {
																				"name": "validator_revert_address",
																				"nodeType": "YulIdentifier",
																				"src": "3841:24:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3841:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3841:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3892:3:1"
																				},
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "3897:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3885:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3885:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3885:18:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3916:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3927:3:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3932:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3923:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3923:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3916:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3739:3:1"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3744:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3736:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3736:15:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3752:23:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3754:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "3765:3:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3770:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3761:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3761:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "3754:3:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3732:3:1",
																"statements": []
															},
															"src": "3728:217:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3954:14:1",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "3963:5:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3954:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_address_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3275:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3283:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3291:5:1",
														"type": ""
													}
												],
												"src": "3237:737:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4141:1223:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4187:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4196:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4199:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4189:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4189:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4189:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4162:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4171:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4158:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4158:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4183:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4154:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4154:32:1"
															},
															"nodeType": "YulIf",
															"src": "4151:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4212:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4239:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4226:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4226:23:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4216:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4258:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4268:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4262:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4313:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4322:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4325:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4315:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4315:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4315:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4301:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4309:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4298:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4298:14:1"
															},
															"nodeType": "YulIf",
															"src": "4295:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4338:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4381:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4392:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4377:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4377:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4401:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4348:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4348:61:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4338:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4418:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4428:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "4422:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4439:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4472:9:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "4483:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4468:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4468:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4455:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4455:32:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "4443:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4516:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4525:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4528:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4518:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4518:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4518:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "4502:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4512:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4499:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4499:16:1"
															},
															"nodeType": "YulIf",
															"src": "4496:36:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4541:34:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4555:9:1"
																	},
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "4566:8:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4551:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4551:24:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "4545:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4623:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4632:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4635:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4625:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4625:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4625:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "4602:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4606:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4598:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4598:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4613:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4594:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4594:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "4587:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4587:35:1"
															},
															"nodeType": "YulIf",
															"src": "4584:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4648:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4671:2:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4658:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4658:16:1"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "4652:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4683:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "4750:2:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_array_address_dyn",
																			"nodeType": "YulIdentifier",
																			"src": "4710:39:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4710:43:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4694:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4694:60:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "4687:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4763:16:1",
															"value": {
																"name": "dst",
																"nodeType": "YulIdentifier",
																"src": "4776:3:1"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nodeType": "YulTypedName",
																	"src": "4767:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "4795:3:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "4800:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4788:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4788:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4788:15:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4812:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "4823:3:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4828:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4819:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4819:12:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "4812:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4840:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "4862:2:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4870:1:1",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "4873:2:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "4866:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4866:10:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4858:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4858:19:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4879:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4854:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4854:28:1"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "4844:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4914:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4923:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4926:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4916:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4916:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4916:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4897:6:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4905:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4894:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4894:19:1"
															},
															"nodeType": "YulIf",
															"src": "4891:39:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4939:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4954:2:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4958:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4950:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4950:11:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "4943:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5026:308:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "5040:36:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "5072:3:1"
																				}
																			],
																			"functionName": {
																				"name": "calldataload",
																				"nodeType": "YulIdentifier",
																				"src": "5059:12:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5059:17:1"
																		},
																		"variables": [
																			{
																				"name": "innerOffset",
																				"nodeType": "YulTypedName",
																				"src": "5044:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "5124:74:1",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "5142:11:1",
																					"value": {
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5152:1:1",
																						"type": "",
																						"value": "0"
																					},
																					"variables": [
																						{
																							"name": "_5",
																							"nodeType": "YulTypedName",
																							"src": "5146:2:1",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "_5",
																								"nodeType": "YulIdentifier",
																								"src": "5177:2:1"
																							},
																							{
																								"name": "_5",
																								"nodeType": "YulIdentifier",
																								"src": "5181:2:1"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "5170:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5170:14:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "5170:14:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "innerOffset",
																					"nodeType": "YulIdentifier",
																					"src": "5095:11:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "5108:2:1"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nodeType": "YulIdentifier",
																				"src": "5092:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5092:19:1"
																		},
																		"nodeType": "YulIf",
																		"src": "5089:109:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "5218:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_3",
																											"nodeType": "YulIdentifier",
																											"src": "5260:2:1"
																										},
																										{
																											"name": "innerOffset",
																											"nodeType": "YulIdentifier",
																											"src": "5264:11:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "5256:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "5256:20:1"
																								},
																								{
																									"name": "_2",
																									"nodeType": "YulIdentifier",
																									"src": "5278:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "5252:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5252:29:1"
																						},
																						{
																							"name": "dataEnd",
																							"nodeType": "YulIdentifier",
																							"src": "5283:7:1"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_array_address_dyn",
																						"nodeType": "YulIdentifier",
																						"src": "5223:28:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5223:68:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5211:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5211:81:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5211:81:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5305:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "5316:3:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "5321:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5312:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5312:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "5305:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "4981:3:1"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4986:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4978:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4978:15:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "4994:23:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "4996:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "5007:3:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "5012:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5003:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5003:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "4996:3:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "4974:3:1",
																"statements": []
															},
															"src": "4970:364:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5343:15:1",
															"value": {
																"name": "dst_1",
																"nodeType": "YulIdentifier",
																"src": "5353:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5343:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_array$_t_address_$dyn_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4099:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4110:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4122:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4130:6:1",
														"type": ""
													}
												],
												"src": "3979:1385:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5456:228:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5502:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5511:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5514:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5504:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5504:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5504:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5477:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5486:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5473:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5473:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5498:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5469:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5469:32:1"
															},
															"nodeType": "YulIf",
															"src": "5466:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5527:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5550:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5537:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5537:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5527:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5569:45:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5599:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5610:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5595:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5595:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5582:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5582:32:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5573:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5648:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "5623:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5623:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5623:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5663:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5673:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5663:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5414:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5425:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5437:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5445:6:1",
														"type": ""
													}
												],
												"src": "5369:315:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5809:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5819:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5831:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5842:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5827:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5827:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5819:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5861:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5876:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5892:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5897:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "5888:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5888:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5901:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "5884:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5884:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5872:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5872:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5854:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5854:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5854:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_Operatable_$2024__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5778:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5789:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5800:4:1",
														"type": ""
													}
												],
												"src": "5689:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6000:225:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6046:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6055:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6058:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6048:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6048:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6048:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6021:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6030:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6017:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6017:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6042:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6013:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6013:32:1"
															},
															"nodeType": "YulIf",
															"src": "6010:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6071:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6094:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6081:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6081:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6071:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6113:45:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6143:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6154:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6139:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6139:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6126:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6126:32:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "6117:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6189:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "6167:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6167:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6167:28:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6204:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6214:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "6204:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5958:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5969:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5981:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5989:6:1",
														"type": ""
													}
												],
												"src": "5916:309:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6331:276:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6377:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6386:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6389:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6379:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6379:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6379:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6352:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6361:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6348:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6348:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6373:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6344:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6344:32:1"
															},
															"nodeType": "YulIf",
															"src": "6341:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6402:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6425:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6412:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6412:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6402:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6444:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6471:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6482:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6467:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6467:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6454:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6454:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "6444:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6495:45:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6525:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6536:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6521:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6521:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6508:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6508:32:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "6499:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6571:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "6549:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6549:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6549:28:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6586:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6596:5:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "6586:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6281:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6292:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6304:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6312:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6320:6:1",
														"type": ""
													}
												],
												"src": "6230:377:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6716:279:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6762:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6771:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6774:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6764:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6764:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6764:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6737:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6746:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6733:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6733:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6758:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6729:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6729:32:1"
															},
															"nodeType": "YulIf",
															"src": "6726:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6787:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6810:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6797:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6797:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6787:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6829:45:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6859:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6870:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6855:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6855:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6842:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6842:32:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "6833:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6908:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "6883:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6883:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6883:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6923:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6933:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "6923:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6947:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6974:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6985:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6970:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6970:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6957:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6957:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "6947:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6666:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6677:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6689:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6697:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6705:6:1",
														"type": ""
													}
												],
												"src": "6612:383:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7099:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7109:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7121:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7132:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7117:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7117:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7109:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7151:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7162:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7144:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7144:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7144:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7068:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7079:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7090:4:1",
														"type": ""
													}
												],
												"src": "7000:175:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7267:161:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7313:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7322:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7325:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7315:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7315:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7315:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7288:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7297:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7284:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7284:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7309:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7280:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7280:32:1"
															},
															"nodeType": "YulIf",
															"src": "7277:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7338:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7361:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7348:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7348:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7338:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7380:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7407:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7418:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7403:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7403:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7390:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7390:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7380:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7225:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7236:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7248:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7256:6:1",
														"type": ""
													}
												],
												"src": "7180:248:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7528:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7538:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7550:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7561:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7546:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7546:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7538:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7580:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "7605:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "7598:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7598:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "7591:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7591:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7573:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7573:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7573:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7497:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7508:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7519:4:1",
														"type": ""
													}
												],
												"src": "7433:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7741:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7751:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7763:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7774:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7759:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7759:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7751:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7793:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7808:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7824:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7829:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "7820:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7820:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7833:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "7816:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7816:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7804:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7804:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7786:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7786:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7786:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IToken_$2170__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7710:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7721:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7732:4:1",
														"type": ""
													}
												],
												"src": "7625:218:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7932:283:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7981:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7990:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7993:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7983:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7983:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7983:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "7960:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7968:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "7956:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7956:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "7975:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "7952:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7952:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7945:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7945:35:1"
															},
															"nodeType": "YulIf",
															"src": "7942:55:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8006:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8029:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8016:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8016:20:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "8006:6:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8079:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8088:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8091:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8081:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8081:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8081:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8051:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8059:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8048:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8048:30:1"
															},
															"nodeType": "YulIf",
															"src": "8045:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8104:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8120:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8128:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8116:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8116:17:1"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nodeType": "YulIdentifier",
																	"src": "8104:8:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8193:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8202:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8205:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8195:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8195:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8195:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8156:6:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "8168:1:1",
																								"type": "",
																								"value": "5"
																							},
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "8171:6:1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "8164:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "8164:14:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8152:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8152:27:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8181:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8148:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8148:38:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "8188:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8145:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8145:47:1"
															},
															"nodeType": "YulIf",
															"src": "8142:67:1"
														}
													]
												},
												"name": "abi_decode_array_address_dyn_calldata",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "7895:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7903:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nodeType": "YulTypedName",
														"src": "7911:8:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7921:6:1",
														"type": ""
													}
												],
												"src": "7848:367:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8393:667:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8439:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8448:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8451:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8441:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8441:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8441:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8414:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8423:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8410:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8410:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8435:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8406:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8406:32:1"
															},
															"nodeType": "YulIf",
															"src": "8403:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8464:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8487:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8474:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8474:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "8464:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8506:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8537:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8548:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8533:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8533:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8520:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8520:32:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "8510:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8561:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8571:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "8565:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8616:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8625:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8628:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8618:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8618:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8618:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8604:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "8612:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8601:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8601:14:1"
															},
															"nodeType": "YulIf",
															"src": "8598:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8641:96:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8709:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8720:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8705:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8705:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "8729:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "8667:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8667:70:1"
															},
															"variables": [
																{
																	"name": "value1_1",
																	"nodeType": "YulTypedName",
																	"src": "8645:8:1",
																	"type": ""
																},
																{
																	"name": "value2_1",
																	"nodeType": "YulTypedName",
																	"src": "8655:8:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8746:18:1",
															"value": {
																"name": "value1_1",
																"nodeType": "YulIdentifier",
																"src": "8756:8:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "8746:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8773:18:1",
															"value": {
																"name": "value2_1",
																"nodeType": "YulIdentifier",
																"src": "8783:8:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "8773:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8800:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8833:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8844:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8829:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8829:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8816:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8816:32:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "8804:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8877:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8886:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8889:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8879:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8879:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8879:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "8863:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "8873:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8860:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8860:16:1"
															},
															"nodeType": "YulIf",
															"src": "8857:36:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8902:98:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8970:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "8981:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8966:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8966:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "8992:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_address_dyn_calldata",
																	"nodeType": "YulIdentifier",
																	"src": "8928:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8928:72:1"
															},
															"variables": [
																{
																	"name": "value3_1",
																	"nodeType": "YulTypedName",
																	"src": "8906:8:1",
																	"type": ""
																},
																{
																	"name": "value4_1",
																	"nodeType": "YulTypedName",
																	"src": "8916:8:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9009:18:1",
															"value": {
																"name": "value3_1",
																"nodeType": "YulIdentifier",
																"src": "9019:8:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "9009:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9036:18:1",
															"value": {
																"name": "value4_1",
																"nodeType": "YulIdentifier",
																"src": "9046:8:1"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "9036:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_array$_t_address_$dyn_calldata_ptrt_array$_t_int256_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8327:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8338:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8350:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8358:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8366:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8374:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "8382:6:1",
														"type": ""
													}
												],
												"src": "8220:840:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9239:155:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9256:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9267:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9249:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9249:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9249:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9290:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9301:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9286:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9286:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9306:1:1",
																		"type": "",
																		"value": "6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9279:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9279:29:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9279:29:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9328:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9339:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9324:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9324:18:1"
																	},
																	{
																		"hexValue": "657869737473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9344:8:1",
																		"type": "",
																		"value": "exists"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9317:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9317:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9317:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9362:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9374:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9385:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9370:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9370:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9362:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_01e37c7ed6a06a994c20fbd2f42bf29a9f5d6c8e3fc27051e5e2335817ef219a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9216:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9230:4:1",
														"type": ""
													}
												],
												"src": "9065:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9573:178:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9590:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9601:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9583:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9583:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9583:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9624:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9635:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9620:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9620:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9640:2:1",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9613:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9613:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9613:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9663:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9674:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9659:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9659:18:1"
																	},
																	{
																		"hexValue": "5f6c70546f6b656e20697320746865207a65726f2061646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9679:30:1",
																		"type": "",
																		"value": "_lpToken is the zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9652:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9652:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9652:58:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9719:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9731:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9742:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9727:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9727:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9719:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_eefe2a51b746a11f8faffa0a886e61f8e4f519bdec38e798bdc8e449c78cd933__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9550:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9564:4:1",
														"type": ""
													}
												],
												"src": "9399:352:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9788:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9805:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9812:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9817:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9808:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9808:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9798:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9798:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9798:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9845:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9848:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9838:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9838:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9838:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9869:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9872:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9862:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9862:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9862:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "9756:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9937:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9959:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9961:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9961:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9961:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9953:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9956:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "9950:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9950:8:1"
															},
															"nodeType": "YulIf",
															"src": "9947:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9990:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "10002:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "10005:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "9998:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9998:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "9990:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9919:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9922:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "9928:4:1",
														"type": ""
													}
												],
												"src": "9888:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10147:175:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10157:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10169:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10180:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10165:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10165:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10157:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10192:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10210:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10215:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "10206:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10206:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10219:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "10202:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10202:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "10196:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10237:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "10252:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10260:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10248:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10248:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10230:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10230:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10230:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10284:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10295:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10280:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10280:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "10304:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10312:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10300:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10300:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10273:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10273:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10273:43:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10108:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10119:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10127:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10138:4:1",
														"type": ""
													}
												],
												"src": "10018:304:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10408:170:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10454:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10463:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10466:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10456:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10456:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10456:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10429:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10438:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10425:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10425:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10450:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10421:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10421:32:1"
															},
															"nodeType": "YulIf",
															"src": "10418:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10479:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10498:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "10492:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10492:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "10483:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10542:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "10517:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10517:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10517:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10557:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "10567:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "10557:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10374:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10385:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10397:6:1",
														"type": ""
													}
												],
												"src": "10327:251:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10712:145:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10722:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10734:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10745:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10730:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10730:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10722:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10764:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "10779:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10795:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "10800:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "10791:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "10791:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "10804:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "10787:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10787:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10775:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10775:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10757:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10757:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10757:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10828:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10839:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10824:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10824:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "10844:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10817:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10817:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10817:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10673:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10684:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10692:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10703:4:1",
														"type": ""
													}
												],
												"src": "10583:274:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10940:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10986:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10995:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10998:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10988:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10988:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10988:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10961:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10970:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10957:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10957:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10982:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10953:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10953:32:1"
															},
															"nodeType": "YulIf",
															"src": "10950:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11011:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11030:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11024:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11024:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "11015:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "11071:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bool",
																	"nodeType": "YulIdentifier",
																	"src": "11049:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11049:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11049:28:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11086:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "11096:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "11086:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10906:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10917:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10929:6:1",
														"type": ""
													}
												],
												"src": "10862:245:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11286:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11303:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11314:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11296:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11296:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11296:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11337:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11348:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11333:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11333:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11353:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11326:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11326:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11326:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11376:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11387:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11372:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11372:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11392:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11365:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11365:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11365:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11436:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11448:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11459:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11444:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11444:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11436:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11263:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11277:4:1",
														"type": ""
													}
												],
												"src": "11112:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11647:166:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11664:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11675:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11657:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11657:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11657:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11698:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11709:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11694:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11694:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11714:2:1",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11687:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11687:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11687:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11737:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11748:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11733:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11733:18:1"
																	},
																	{
																		"hexValue": "626164206e6577206f70657261746f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11753:18:1",
																		"type": "",
																		"value": "bad new operator"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11726:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11726:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11726:46:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11781:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11793:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11804:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11789:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11789:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11781:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bd8da5f7fa1b241e5cc51a80e871f13a4ea7aa28fe54091ef63906319b2ad5ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11624:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11638:4:1",
														"type": ""
													}
												],
												"src": "11473:340:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11850:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11867:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11874:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11879:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "11870:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11870:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11860:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11860:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11860:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11907:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11910:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11900:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11900:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11900:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11931:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11934:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11924:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11924:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11924:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "11818:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12129:179:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12146:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "12161:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "12177:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "12182:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "12173:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "12173:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "12186:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "12169:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12169:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12157:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12157:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12139:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12139:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12139:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12210:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12221:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12206:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12206:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12226:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12199:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12199:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12199:30:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12238:64:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12275:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12287:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12298:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12283:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12283:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_address_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "12246:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12246:56:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12238:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_array$_t_address_$dyn_memory_ptr__to_t_address_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12090:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12101:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12109:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12120:4:1",
														"type": ""
													}
												],
												"src": "11950:358:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12360:88:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12391:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "12393:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12393:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12393:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12376:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12387:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "12383:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12383:6:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "12373:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12373:17:1"
															},
															"nodeType": "YulIf",
															"src": "12370:43:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12422:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "12433:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12440:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12429:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12429:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "12422:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12342:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "12352:3:1",
														"type": ""
													}
												],
												"src": "12313:135:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12627:162:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12644:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12655:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12637:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12637:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12637:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12678:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12689:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12674:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12674:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12694:2:1",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12667:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12667:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12667:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12717:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12728:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12713:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12713:18:1"
																	},
																	{
																		"hexValue": "6e6f74206f70657261746f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12733:14:1",
																		"type": "",
																		"value": "not operator"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12706:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12706:42:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12706:42:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12757:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12769:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12780:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12765:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12765:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12757:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ea8abe427f1015fb733675f1d280781b0e3aca591785833d6bb4041dafc3e169__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12604:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12618:4:1",
														"type": ""
													}
												],
												"src": "12453:336:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12875:103:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12921:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12930:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12933:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12923:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12923:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12923:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12896:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12905:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12892:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12892:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12917:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "12888:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12888:32:1"
															},
															"nodeType": "YulIf",
															"src": "12885:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12946:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12962:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12956:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12956:16:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "12946:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12841:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "12852:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12864:6:1",
														"type": ""
													}
												],
												"src": "12794:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13112:119:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13122:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13134:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13145:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13130:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13130:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13122:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13164:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13175:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13157:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13157:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13157:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13202:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13213:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13198:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13198:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "13218:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13191:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13191:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13191:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13073:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13084:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13092:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13103:4:1",
														"type": ""
													}
												],
												"src": "12983:248:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13284:80:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13311:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13313:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13313:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13313:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13300:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "13307:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "13303:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13303:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13297:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13297:13:1"
															},
															"nodeType": "YulIf",
															"src": "13294:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13342:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13353:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13356:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13349:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13349:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "13342:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13267:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13270:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "13276:3:1",
														"type": ""
													}
												],
												"src": "13236:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13417:219:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13427:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13441:1:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13444:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "13437:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13437:9:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "13431:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13503:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13505:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13505:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13505:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "13469:2:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "13462:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13462:10:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "13478:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "13489:3:1",
																								"type": "",
																								"value": "255"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "13494:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "13485:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13485:11:1"
																					},
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "13498:1:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13481:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13481:19:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "13474:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13474:27:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13458:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13458:44:1"
															},
															"nodeType": "YulIf",
															"src": "13455:70:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13582:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13584:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13584:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13584:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "13541:2:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "13549:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "13564:3:1",
																										"type": "",
																										"value": "255"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "13569:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "13560:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "13560:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "13573:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "13556:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13556:19:1"
																					},
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "13577:1:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13552:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13552:27:1"
																			}
																		],
																		"functionName": {
																			"name": "sgt",
																			"nodeType": "YulIdentifier",
																			"src": "13545:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13545:35:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13537:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13537:44:1"
															},
															"nodeType": "YulIf",
															"src": "13534:70:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13613:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13625:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13628:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "13621:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13621:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "13613:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13399:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13402:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "13408:4:1",
														"type": ""
													}
												],
												"src": "13369:267:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13688:218:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13698:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13712:1:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13715:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "13708:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13708:9:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "13702:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13782:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13784:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13784:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13784:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "13740:2:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "13733:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13733:10:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "13749:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "13764:3:1",
																										"type": "",
																										"value": "255"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "13769:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "13760:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "13760:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "13773:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "13756:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13756:19:1"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "13777:1:1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "13752:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13752:27:1"
																			}
																		],
																		"functionName": {
																			"name": "sgt",
																			"nodeType": "YulIdentifier",
																			"src": "13745:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13745:35:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13729:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13729:52:1"
															},
															"nodeType": "YulIf",
															"src": "13726:78:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13853:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13855:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13855:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13855:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "13820:2:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "13828:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "13839:3:1",
																								"type": "",
																								"value": "255"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "13844:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "13835:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13835:11:1"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "13848:1:1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "13831:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13831:19:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "13824:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13824:27:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13816:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13816:36:1"
															},
															"nodeType": "YulIf",
															"src": "13813:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13884:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13895:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13898:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13891:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13891:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "13884:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13671:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13674:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "13680:3:1",
														"type": ""
													}
												],
												"src": "13641:265:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14038:119:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14048:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14060:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14071:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14056:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14056:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14048:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14090:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "14101:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14083:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14083:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14083:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14128:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14139:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14124:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14124:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "14144:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14117:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14117:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14117:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_int256__to_t_uint256_t_int256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13999:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "14010:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14018:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14029:4:1",
														"type": ""
													}
												],
												"src": "13911:246:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14205:93:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14241:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14243:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14243:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14243:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14221:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14232:3:1",
																				"type": "",
																				"value": "255"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14237:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "14228:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14228:11:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "14218:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14218:22:1"
															},
															"nodeType": "YulIf",
															"src": "14215:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14272:20:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14283:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "14286:5:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "14279:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14279:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "14272:3:1"
																}
															]
														}
													]
												},
												"name": "negate_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "14187:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "14197:3:1",
														"type": ""
													}
												],
												"src": "14162:136:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14354:502:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14364:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14382:3:1",
																				"type": "",
																				"value": "255"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14387:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "14378:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14378:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14391:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "14374:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14374:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "14368:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14402:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14416:1:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14419:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "sgt",
																	"nodeType": "YulIdentifier",
																	"src": "14412:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14412:9:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "14406:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14430:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14444:1:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14447:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "sgt",
																	"nodeType": "YulIdentifier",
																	"src": "14440:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14440:9:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "14434:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14497:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14499:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14499:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14499:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "14469:2:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "14473:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14465:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14465:11:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "14481:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "14488:2:1"
																					},
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "14492:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "14484:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14484:10:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "14478:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14478:17:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14461:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14461:35:1"
															},
															"nodeType": "YulIf",
															"src": "14458:61:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14528:21:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14542:3:1",
																		"type": "",
																		"value": "255"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14547:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "14538:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14538:11:1"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "14532:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14558:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14572:1:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14575:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "14568:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14568:9:1"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "14562:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14627:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14629:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14629:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14629:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "14597:2:1"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "14601:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14593:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14593:11:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "14610:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "14618:2:1"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "14622:1:1"
																					}
																				],
																				"functionName": {
																					"name": "sdiv",
																					"nodeType": "YulIdentifier",
																					"src": "14613:4:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14613:11:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "14606:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14606:19:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14589:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14589:37:1"
															},
															"nodeType": "YulIf",
															"src": "14586:63:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14658:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14672:1:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14675:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "14668:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14668:9:1"
															},
															"variables": [
																{
																	"name": "_6",
																	"nodeType": "YulTypedName",
																	"src": "14662:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14727:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14729:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14729:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14729:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_6",
																				"nodeType": "YulIdentifier",
																				"src": "14697:2:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "14701:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14693:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14693:11:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "14710:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "14718:2:1"
																					},
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "14722:1:1"
																					}
																				],
																				"functionName": {
																					"name": "sdiv",
																					"nodeType": "YulIdentifier",
																					"src": "14713:4:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14713:11:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "14706:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14706:19:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14689:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14689:37:1"
															},
															"nodeType": "YulIf",
															"src": "14686:63:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14799:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14801:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14801:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14801:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_6",
																				"nodeType": "YulIdentifier",
																				"src": "14769:2:1"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "14773:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "14765:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14765:11:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "14782:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "14790:2:1"
																					},
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "14794:1:1"
																					}
																				],
																				"functionName": {
																					"name": "sdiv",
																					"nodeType": "YulIdentifier",
																					"src": "14785:4:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14785:11:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "14778:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14778:19:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14761:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14761:37:1"
															},
															"nodeType": "YulIf",
															"src": "14758:63:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14830:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14845:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14848:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "14841:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14841:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "14830:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14333:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14336:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "14342:7:1",
														"type": ""
													}
												],
												"src": "14303:553:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14893:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14910:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14917:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14922:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "14913:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14913:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14903:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14903:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14903:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14950:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14953:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14943:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14943:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14943:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14974:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14977:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14967:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14967:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14967:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "14861:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15038:148:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15061:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "15063:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15063:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15063:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15058:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15051:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15051:9:1"
															},
															"nodeType": "YulIf",
															"src": "15048:35:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15134:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15136:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15136:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15136:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "15102:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15109:3:1",
																						"type": "",
																						"value": "255"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15114:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "15105:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15105:11:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "15099:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15099:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "15122:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15129:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "15125:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15125:6:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "15119:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15119:13:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "15095:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15095:38:1"
															},
															"nodeType": "YulIf",
															"src": "15092:64:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15165:15:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "15175:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "15178:1:1"
																	}
																],
																"functionName": {
																	"name": "sdiv",
																	"nodeType": "YulIdentifier",
																	"src": "15170:4:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15170:10:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "15165:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_int256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15023:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15026:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "15032:1:1",
														"type": ""
													}
												],
												"src": "14993:193:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15365:165:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15382:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15393:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15375:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15375:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15375:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15416:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15427:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15412:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15412:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15432:2:1",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15405:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15405:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15405:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15455:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15466:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15451:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15451:18:1"
																	},
																	{
																		"hexValue": "746f6b656e20706f6f6c2069732030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15471:17:1",
																		"type": "",
																		"value": "token pool is 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15444:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15444:45:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15444:45:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15498:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15510:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15521:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15506:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15506:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15498:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0f59f276028eb3edbb11af1c87653139d4936680909681dab8fd16eda0979be8__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15342:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15356:4:1",
														"type": ""
													}
												],
												"src": "15191:339:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15709:161:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15726:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15737:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15719:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15719:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15719:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15760:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15771:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15756:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15756:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15776:2:1",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15749:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15749:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15749:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15799:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15810:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15795:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15795:18:1"
																	},
																	{
																		"hexValue": "7765696768742069732030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15815:13:1",
																		"type": "",
																		"value": "weight is 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15788:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15788:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15788:41:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15838:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15850:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15861:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15846:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15846:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15838:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dbaf3424ad2e7c16209d8ac14e463c2077844cc22131ae81d8b662c6ff9d007b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15686:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15700:4:1",
														"type": ""
													}
												],
												"src": "15535:335:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15927:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15986:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "15988:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15988:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15988:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "15958:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "15951:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15951:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "15944:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15944:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "15966:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "15977:1:1",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "15973:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "15973:6:1"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "15981:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "15969:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15969:14:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "15963:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15963:21:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "15940:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15940:45:1"
															},
															"nodeType": "YulIf",
															"src": "15937:71:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16017:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16032:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16035:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "16028:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16028:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "16017:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "15906:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "15909:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "15915:7:1",
														"type": ""
													}
												],
												"src": "15875:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16094:74:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16117:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "16119:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16119:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16119:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16114:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16107:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16107:9:1"
															},
															"nodeType": "YulIf",
															"src": "16104:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16148:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "16157:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "16160:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "16153:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16153:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "16148:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "16079:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "16082:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "16088:1:1",
														"type": ""
													}
												],
												"src": "16048:120:1"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256t_bool(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        let value_1 := calldataload(add(headStart, 64))\n        validator_revert_bool(value_1)\n        value2 := value_1\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_array_address_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_address_$dyn_memory_ptr__to_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_address_dyn(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_address_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_address_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            let value := calldataload(src)\n            validator_revert_address(value)\n            mstore(dst, value)\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_array$_t_address_$dyn_memory_ptr_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_array_address_dyn(add(headStart, offset), dataEnd)\n        let _2 := 32\n        let offset_1 := calldataload(add(headStart, _2))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let _3 := add(headStart, offset_1)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := calldataload(_3)\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_4))\n        let dst_1 := dst\n        mstore(dst, _4)\n        dst := add(dst, _2)\n        let srcEnd := add(add(_3, shl(5, _4)), _2)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            let innerOffset := calldataload(src)\n            if gt(innerOffset, _1)\n            {\n                let _5 := 0\n                revert(_5, _5)\n            }\n            mstore(dst, abi_decode_array_address_dyn(add(add(_3, innerOffset), _2), dataEnd))\n            dst := add(dst, _2)\n        }\n        value1 := dst_1\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_encode_tuple_t_contract$_Operatable_$2024__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256t_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_bool(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let value := calldataload(add(headStart, 64))\n        validator_revert_bool(value)\n        value2 := value\n    }\n    function abi_decode_tuple_t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_int256__to_t_int256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_contract$_IToken_$2170__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_array_address_dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_array$_t_address_$dyn_calldata_ptrt_array$_t_int256_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value1_1, value2_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset), dataEnd)\n        value1 := value1_1\n        value2 := value2_1\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value3_1, value4_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset_1), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n    }\n    function abi_encode_tuple_t_stringliteral_01e37c7ed6a06a994c20fbd2f42bf29a9f5d6c8e3fc27051e5e2335817ef219a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 6)\n        mstore(add(headStart, 64), \"exists\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_eefe2a51b746a11f8faffa0a886e61f8e4f519bdec38e798bdc8e449c78cd933__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"_lpToken is the zero address\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bool(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_bd8da5f7fa1b241e5cc51a80e871f13a4ea7aa28fe54091ef63906319b2ad5ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"bad new operator\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_address_t_array$_t_address_$dyn_memory_ptr__to_t_address_t_array$_t_address_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_array_address_dyn(value1, add(headStart, 64))\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_ea8abe427f1015fb733675f1d280781b0e3aca591785833d6bb4041dafc3e169__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"not operator\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_sub_t_int256(x, y) -> diff\n    {\n        let _1 := slt(y, 0)\n        if and(iszero(_1), slt(x, add(shl(255, 1), y))) { panic_error_0x11() }\n        if and(_1, sgt(x, add(sub(shl(255, 1), 1), y))) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_add_t_int256(x, y) -> sum\n    {\n        let _1 := slt(x, 0)\n        if and(iszero(_1), sgt(y, sub(sub(shl(255, 1), 1), x))) { panic_error_0x11() }\n        if and(_1, slt(y, sub(shl(255, 1), x))) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_uint256_t_int256__to_t_uint256_t_int256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function negate_t_int256(value) -> ret\n    {\n        if eq(value, shl(255, 1)) { panic_error_0x11() }\n        ret := sub(0, value)\n    }\n    function checked_mul_t_int256(x, y) -> product\n    {\n        let _1 := sub(shl(255, 1), 1)\n        let _2 := sgt(y, 0)\n        let _3 := sgt(x, 0)\n        if and(and(_3, _2), gt(x, div(_1, y))) { panic_error_0x11() }\n        let _4 := shl(255, 1)\n        let _5 := slt(y, 0)\n        if and(and(_3, _5), slt(y, sdiv(_4, x))) { panic_error_0x11() }\n        let _6 := slt(x, 0)\n        if and(and(_6, _2), slt(x, sdiv(_4, y))) { panic_error_0x11() }\n        if and(and(_6, _5), slt(x, sdiv(_1, y))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_int256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        if and(eq(x, shl(255, 1)), eq(y, not(0))) { panic_error_0x11() }\n        r := sdiv(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_0f59f276028eb3edbb11af1c87653139d4936680909681dab8fd16eda0979be8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"token pool is 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_dbaf3424ad2e7c16209d8ac14e463c2077844cc22131ae81d8b662c6ff9d007b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"weight is 0\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"2199": [
									{
										"length": 32,
										"start": 1076
									},
									{
										"length": 32,
										"start": 1877
									},
									{
										"length": 32,
										"start": 1916
									},
									{
										"length": 32,
										"start": 4391
									}
								],
								"2557": [
									{
										"length": 32,
										"start": 1000
									},
									{
										"length": 32,
										"start": 2228
									},
									{
										"length": 32,
										"start": 3402
									},
									{
										"length": 32,
										"start": 3557
									},
									{
										"length": 32,
										"start": 4052
									},
									{
										"length": 32,
										"start": 5833
									},
									{
										"length": 32,
										"start": 6850
									},
									{
										"length": 32,
										"start": 7595
									},
									{
										"length": 32,
										"start": 8481
									}
								],
								"3139": [
									{
										"length": 32,
										"start": 767
									},
									{
										"length": 32,
										"start": 2268
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061028a5760003560e01c8063630b5ba11161015c578063a86a366d116100ce578063b9a09fd511610087578063b9a09fd5146105ff578063d23254b414610628578063dc73e49c14610653578063ea94ee4414610666578063ef78d4fd14610679578063fecdad601461068257600080fd5b8063a86a366d14610560578063aa70fb9814610573578063aa79979b14610586578063ac4afa38146105b9578063b0c7044b146105cc578063b5ec5c99146105ec57600080fd5b806379e938241161012057806379e93824146104f3578063812632ec146105135780638da5cb5b1461051c57806396c82e5714610524578063a61c713a1461052d578063a7cac8461461054057600080fd5b8063630b5ba11461049f57806363453ae1146104a757806364482f79146104ba578063698473e3146104cd57806371dd4bda146104e057600080fd5b806332145f901161020057806348cd4cb1116101b957806348cd4cb11461042f57806348ee26a3146104565780634ade739b1461046957806351eb05a61461047c57806353d786931461048f578063570ca7351461049757600080fd5b806332145f90146103c757806337550684146103da5780633b92eb23146103e3578063411b1f771461040a5780634198709a1461041d578063442da82f1461042657600080fd5b80630fb5a6b4116102525780630fb5a6b414610336578063146650df146103405780631526fe271461036057806317caf6f11461039857806320b1cb6f146103a1578063310bd74b146103b457600080fd5b806306d6a1b21461028f578063081e3eda146102d55780630c9c7ef5146102e75780630d52333c146102fa5780630f589d6314610321575b600080fd5b6102b861029d366004612247565b6012602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b600e545b6040519081526020016102cc565b6102b86102f5366004612272565b610695565b6102b87f000000000000000000000000000000000000000000000000000000000000000081565b61033461032f366004612247565b610a73565b005b6102d962093a8081565b61035361034e3660046122b4565b610bcf565b6040516102cc9190612311565b61037361036e3660046122b4565b610c3b565b604080516001600160a01b0390941684526020840192909252908201526060016102cc565b6102d9600d5481565b6103346103af366004612403565b610c78565b6103346103c23660046122b4565b610d2e565b6103346103d53660046122b4565b610e4c565b6102d960065481565b6102b87f000000000000000000000000000000000000000000000000000000000000000081565b6103346104183660046124d8565b610f9c565b6102d960035481565b6102d960045481565b6102d97f000000000000000000000000000000000000000000000000000000000000000081565b6001546102b8906001600160a01b031681565b610334610477366004612508565b61107e565b61033461048a3660046122b4565b611125565b61033461141a565b6102b86114a7565b61033461151a565b6103346104b5366004612247565b611545565b6103346104c836600461252d565b61154e565b6103346104db3660046124d8565b611691565b6103346104ee3660046122b4565b61176b565b6102d96105013660046122b4565b600c6020526000908152604090205481565b6102d960075481565b6102b8611803565b6102d960085481565b61033461053b36600461255b565b61184d565b6102d961054e366004612247565b60096020526000908152604090205481565b6102b861056e366004612593565b6118b5565b6103346105813660046122b4565b6118ed565b6105a9610594366004612247565b60136020526000908152604090205460ff1681565b60405190151581526020016102cc565b6102b86105c73660046122b4565b611985565b6102d96105da366004612247565b600f6020526000908152604090205481565b6103346105fa3660046122b4565b6119af565b6102b861060d366004612247565b6011602052600090815260409020546001600160a01b031681565b6102d96106363660046124d8565b600a60209081526000928352604080842090915290825290205481565b6002546102b8906001600160a01b031681565b61033461067436600461255b565b611a47565b6102d960055481565b610334610690366004612601565b611aa6565b6001600160a01b03838116600090815260116020526040812054909116156106ed5760405162461bcd60e51b815260206004820152600660248201526565786973747360d01b60448201526064015b60405180910390fd5b6001600160a01b0384166107435760405162461bcd60e51b815260206004820152601c60248201527f5f6c70546f6b656e20697320746865207a65726f20616464726573730000000060448201526064016106e4565b81156107515761075161151a565b60007f000000000000000000000000000000000000000000000000000000000000000043116107a0577f00000000000000000000000000000000000000000000000000000000000000006107a2565b435b600d549091506107b29085611bb8565b600d55604080516060810182526001600160a01b03878116825260208201878152928201848152600e805460018082018355600083905294517fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd600390920291820180546001600160a01b031916919095161790935593517fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fe830155517fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3ff9091015590546108809190612691565b6001600160a01b038681166000818152600f6020526040808220949094559251631e533a8f60e21b815260048101919091527f0000000000000000000000000000000000000000000000000000000000000000821660248201527f00000000000000000000000000000000000000000000000000000000000000009091169063794cea3c906044016020604051808303816000875af1158015610927573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094b91906126a8565b60025460405163095ea7b360e01b81526001600160a01b038084166004830152600019602483015292935091169063095ea7b3906044016020604051808303816000875af11580156109a1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c591906126c5565b506001600160a01b03808716600081815260116020908152604080832080549587166001600160a01b03199687168117909155835260128252808320805490951690931790935560139092529020805460ff19166001179055610a2781611bcb565b6040513381526001600160a01b0380881691908316907f9b8203efe7fe42185a7755b0510f87c8b693971d6a7c22520aaf683e6b1242619060200160405180910390a395945050505050565b60015460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b9160048083019260209291908290030181865afa158015610abc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ae091906126a8565b6001600160a01b031614610b365760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106e4565b6001600160a01b038116610b7f5760405162461bcd60e51b815260206004820152601060248201526f3130b2103732bb9037b832b930ba37b960811b60448201526064016106e4565b600180546001600160a01b0319166001600160a01b03831690811790915560405182919081907f3ccbb406b985dd76fe05e172b432487a2ff9fe4257642d3acc350f167cb1d57790600090a35050565b6000818152600b6020908152604091829020805483518184028101840190945280845260609392830182828015610c2f57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610c11575b50505050509050919050565b600e8181548110610c4b57600080fd5b60009182526020909120600390910201805460018201546002909201546001600160a01b03909116925083565b60005b8251811015610d2957828181518110610c9657610c966126e2565b60200260200101516001600160a01b03166331279d3d33848481518110610cbf57610cbf6126e2565b60200260200101516040518363ffffffff1660e01b8152600401610ce49291906126f8565b600060405180830381600087803b158015610cfe57600080fd5b505af1158015610d12573d6000803e3d6000fd5b505050508080610d2190612724565b915050610c7b565b505050565b60405163430c208160e01b8152336004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063430c208190604401602060405180830381865afa158015610d99573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dbd91906126c5565b610dc657600080fd5b610dcf81611c00565b60405163c1f0fb9f60e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063c1f0fb9f90602401600060405180830381600087803b158015610e3157600080fd5b505af1158015610e45573d6000803e3d6000fd5b5050505050565b6000818152600b6020908152604080832080548251818502810185019093528083529192909190830182828015610eac57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610e8e575b5050505050905060008151905060008167ffffffffffffffff811115610ed457610ed4612324565b604051908082528060200260200182016040528015610efd578160200160208202803683370190505b50905060005b82811015610f8a57600a60008681526020019081526020016000206000858381518110610f3257610f326126e2565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002054828281518110610f6d57610f6d6126e2565b602090810291909101015280610f8281612724565b915050610f03565b50610f96848483611d87565b50505050565b3360009081526013602052604090205460ff16610fb857600080fd5b811561103957604051634c35bec560e11b8152600481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063986b7d8a90602401600060405180830381600087803b15801561102057600080fd5b505af1158015611034573d6000803e3d6000fd5b505050505b60405182815233906001600160a01b038316907fae268d9aab12f3605f58efd74fd3801fa812b03fdb44317eb70f46dff0e19e22906020015b60405180910390a35050565b6001546040805163570ca73560e01b8152905133926001600160a01b03169163570ca7359160048083019260209291908290030181865afa1580156110c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110eb91906126a8565b6001600160a01b0316146111115760405162461bcd60e51b81526004016106e49061273f565b801561111f5761111f61151a565b50600355565b7f00000000000000000000000000000000000000000000000000000000000000004311801561115657506004544310155b156111b157600754600354111561118c57611188606461118260506003546121b890919063ffffffff16565b906121c4565b6003555b600754600354101561119f576007546003555b6005546111ad904390611bb8565b6004555b6000600e82815481106111c6576111c66126e2565b90600052602060002090600302019050806002015443116111e5575050565b80546001600160a01b039081166000818152601160205260408082205490516370a0823160e01b815293166004840152916370a0823190602401602060405180830381865afa15801561123c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112609190612765565b90508061127257504360029091015550565b60006003541161128157505050565b600061129a8360020154436121d090919063ffffffff16565b905060006112c7600d5461118286600101546112c1866003546121b890919063ffffffff16565b906121b8565b6002549091506000906001600160a01b03166340c10f19306112ec8562093a806121b8565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015611337573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061135b91906126c5565b905080156114085784546001600160a01b03908116600090815260116020526040902054600254600d5460018901546003549385169463b66503cf949316926113a9929161118291906121b8565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401600060405180830381600087803b1580156113ef57600080fd5b505af1158015611403573d6000803e3d6000fd5b505050505b43856002018190555050505050505b50565b60005b600e54811015611417576000600e828154811061143c5761143c6126e2565b6000918252602080832060408051606081018252600390940290910180546001600160a01b03908116808652600183015486860152600290920154858401529085526011909252909220549092506114949116611bcb565b508061149f81612724565b91505061141d565b6001546040805163570ca73560e01b815290516000926001600160a01b03169163570ca7359160048083019260209291908290030181865afa1580156114f1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061151591906126a8565b905090565b600e5460005b818110156115415761153181611125565b61153a81612724565b9050611520565b5050565b61141781611bcb565b60015460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b9160048083019260209291908290030181865afa158015611597573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115bb91906126a8565b6001600160a01b0316146116115760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106e4565b6116548261164e600e868154811061162b5761162b6126e2565b906000526020600020906003020160010154600d546121d090919063ffffffff16565b90611bb8565b600d8190555081600e848154811061166e5761166e6126e2565b9060005260206000209060030201600101819055508015610d2957610d2961151a565b3360009081526013602052604090205460ff166116ad57600080fd5b811561172e5760405163020fe6e560e01b8152600481018390527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063020fe6e590602401600060405180830381600087803b15801561171557600080fd5b505af1158015611729573d6000803e3d6000fd5b505050505b60405182815233906001600160a01b038316907f60940192810a6fb3bce3fd3e2e3a13fd6ccc7605e963fb87ee971aba829989bd90602001611072565b6001546040805163570ca73560e01b8152905133926001600160a01b03169163570ca7359160048083019260209291908290030181865afa1580156117b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117d891906126a8565b6001600160a01b0316146117fe5760405162461bcd60e51b81526004016106e49061273f565b600655565b60015460408051638da5cb5b60e01b815290516000926001600160a01b031691638da5cb5b9160048083019260209291908290030181865afa1580156114f1573d6000803e3d6000fd5b3360009081526013602052604090205460ff1661186957600080fd5b604080518481526020810183905233916001600160a01b038516917fdcbc1c05240f31ff3ad067ef1ee35ce4997762752e3a095284754544f4c709d791015b60405180910390a3505050565b600b60205281600052604060002081815481106118d157600080fd5b6000918252602090912001546001600160a01b03169150829050565b6001546040805163570ca73560e01b8152905133926001600160a01b03169163570ca7359160048083019260209291908290030181865afa158015611936573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061195a91906126a8565b6001600160a01b0316146119805760405162461bcd60e51b81526004016106e49061273f565b600755565b6010818154811061199557600080fd5b6000918252602090912001546001600160a01b0316905081565b6001546040805163570ca73560e01b8152905133926001600160a01b03169163570ca7359160048083019260209291908290030181865afa1580156119f8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a1c91906126a8565b6001600160a01b031614611a425760405162461bcd60e51b81526004016106e49061273f565b600555565b3360009081526013602052604090205460ff16611a6357600080fd5b604080518481526020810183905233916001600160a01b038516917ff341246adaac6f497bc2a656f546ab9e182111d630394f0c57c710a59a2cb56791016118a8565b60405163430c208160e01b8152336004820152602481018690527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063430c208190604401602060405180830381865afa158015611b11573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b3591906126c5565b611b3e57600080fd5b828114611b4a57600080fd5b610e458585858080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525050604080516020808902828101820190935288825290935088925087918291850190849080828437600092019190915250611d8792505050565b6000611bc4828461277e565b9392505050565b6001600160a01b03808216600090815260126020908152604080832054909316808352600f9091529190205461154190611125565b6000818152600b6020526040812080549091805b82811015611d4b576000848281548110611c3057611c306126e2565b6000918252602080832090910154888352600a825260408084206001600160a01b03909216808552919092529120549091508015611d3657611c71826121dc565b6001600160a01b03821660009081526009602052604081208054839290611c99908490612796565b90915550506000878152600a602090815260408083206001600160a01b038616845290915281208054839290611cd0908490612796565b90915550506000811315611cef57611ce881856127d5565b9350611cfc565b611cf98185612796565b93505b60408051888152602081018390527f6b3894ce60b9bbe9d93f1a4e6fc25b6b93cd8222e73ab6348d79c596f5b51de9910160405180910390a15b50508080611d4390612724565b915050611c14565b508060086000828254611d5e9190612691565b90915550506000848152600c60209081526040808320839055600b9091528120610f9691612200565b611d9083611c00565b81516040516339f890b560e21b8152600481018590526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063e7e242d490602401602060405180830381865afa158015611dfa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e1e9190612765565b90506000806000805b85811015611eb1576000878281518110611e4357611e436126e2565b602002602001015113611e7857868181518110611e6257611e626126e2565b6020026020010151611e7390612816565b611e93565b868181518110611e8a57611e8a6126e2565b60200260200101515b611e9d90856127d5565b935080611ea981612724565b915050611e27565b5060005b85811015612101576000888281518110611ed157611ed16126e2565b60200260200101519050611f0d816001600160a01b03908116600090815260116020908152604080832054909316825260139052205460ff1690565b156120ee57600085878a8581518110611f2857611f286126e2565b6020026020010151611f3a9190612833565b611f4491906128ce565b60008c8152600a602090815260408083206001600160a01b038716845290915290205490915015611fa95760405162461bcd60e51b815260206004820152600f60248201526e0746f6b656e20706f6f6c206973203608c1b60448201526064016106e4565b80611fe45760405162461bcd60e51b815260206004820152600b60248201526a077656967687420697320360ac1b60448201526064016106e4565b611fed826121dc565b60008b8152600b6020908152604080832080546001810182559084528284200180546001600160a01b0319166001600160a01b03871690811790915583526009909152812080548392906120429084906127d5565b909155505060008b8152600a602090815260408083206001600160a01b0386168452909152812080548392906120799084906127d5565b9091555050600081131561208c57612098565b61209581612816565b90505b6120a281856127d5565b93506120ae81866127d5565b604080518d81526020810184905291965033917f1263a2295e53acd6ef8f655b8afc11fa0f2cf11925be7aa1757d741ef32a926c910160405180910390a2505b50806120f981612724565b915050611eb5565b5060008113156121865760405163fd4a77f160e01b8152600481018990527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063fd4a77f190602401600060405180830381600087803b15801561216d57600080fd5b505af1158015612181573d6000803e3d6000fd5b505050505b8160086000828254612198919061277e565b90915550506000978852600c602052604090972096909655505050505050565b6000611bc482846128fc565b6000611bc4828461291b565b6000611bc48284612691565b6001600160a01b038082166000908152601160205260409020546114179116611bcb565b508054600082559060005260206000209081019061141791905b8082111561222e576000815560010161221a565b5090565b6001600160a01b038116811461141757600080fd5b60006020828403121561225957600080fd5b8135611bc481612232565b801515811461141757600080fd5b60008060006060848603121561228757600080fd5b833561229281612232565b92506020840135915060408401356122a981612264565b809150509250925092565b6000602082840312156122c657600080fd5b5035919050565b600081518084526020808501945080840160005b838110156123065781516001600160a01b0316875295820195908201906001016122e1565b509495945050505050565b602081526000611bc460208301846122cd565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff8111828210171561236357612363612324565b604052919050565b600067ffffffffffffffff82111561238557612385612324565b5060051b60200190565b600082601f8301126123a057600080fd5b813560206123b56123b08361236b565b61233a565b82815260059290921b840181019181810190868411156123d457600080fd5b8286015b848110156123f85780356123eb81612232565b83529183019183016123d8565b509695505050505050565b6000806040838503121561241657600080fd5b823567ffffffffffffffff8082111561242e57600080fd5b61243a8683870161238f565b935060209150818501358181111561245157600080fd5b8501601f8101871361246257600080fd5b80356124706123b08261236b565b81815260059190911b8201840190848101908983111561248f57600080fd5b8584015b838110156124c7578035868111156124ab5760008081fd5b6124b98c898389010161238f565b845250918601918601612493565b508096505050505050509250929050565b600080604083850312156124eb57600080fd5b8235915060208301356124fd81612232565b809150509250929050565b6000806040838503121561251b57600080fd5b8235915060208301356124fd81612264565b60008060006060848603121561254257600080fd5b833592506020840135915060408401356122a981612264565b60008060006060848603121561257057600080fd5b83359250602084013561258281612232565b929592945050506040919091013590565b600080604083850312156125a657600080fd5b50508035926020909101359150565b60008083601f8401126125c757600080fd5b50813567ffffffffffffffff8111156125df57600080fd5b6020830191508360208260051b85010111156125fa57600080fd5b9250929050565b60008060008060006060868803121561261957600080fd5b85359450602086013567ffffffffffffffff8082111561263857600080fd5b61264489838a016125b5565b9096509450604088013591508082111561265d57600080fd5b5061266a888289016125b5565b969995985093965092949392505050565b634e487b7160e01b600052601160045260246000fd5b6000828210156126a3576126a361267b565b500390565b6000602082840312156126ba57600080fd5b8151611bc481612232565b6000602082840312156126d757600080fd5b8151611bc481612264565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b038316815260406020820181905260009061271c908301846122cd565b949350505050565b60006000198214156127385761273861267b565b5060010190565b6020808252600c908201526b3737ba1037b832b930ba37b960a11b604082015260600190565b60006020828403121561277757600080fd5b5051919050565b600082198211156127915761279161267b565b500190565b60008083128015600160ff1b8501841216156127b4576127b461267b565b6001600160ff1b03840183138116156127cf576127cf61267b565b50500390565b600080821280156001600160ff1b03849003851316156127f7576127f761267b565b600160ff1b83900384128116156128105761281061267b565b50500190565b6000600160ff1b82141561282c5761282c61267b565b5060000390565b60006001600160ff1b03818413828413808216868404861116156128595761285961267b565b600160ff1b60008712828116878305891216156128785761287861267b565b600087129250878205871284841616156128945761289461267b565b878505871281841616156128aa576128aa61267b565b505050929093029392505050565b634e487b7160e01b600052601260045260246000fd5b6000826128dd576128dd6128b8565b600160ff1b8214600019841416156128f7576128f761267b565b500590565b60008160001904831182151516156129165761291661267b565b500290565b60008261292a5761292a6128b8565b50049056fea264697066735822122081b25789b0e839f922afc225bcf3022ee4a0358b7f60aa32eb4ab6a884bb1e5164736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x28A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x630B5BA1 GT PUSH2 0x15C JUMPI DUP1 PUSH4 0xA86A366D GT PUSH2 0xCE JUMPI DUP1 PUSH4 0xB9A09FD5 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xB9A09FD5 EQ PUSH2 0x5FF JUMPI DUP1 PUSH4 0xD23254B4 EQ PUSH2 0x628 JUMPI DUP1 PUSH4 0xDC73E49C EQ PUSH2 0x653 JUMPI DUP1 PUSH4 0xEA94EE44 EQ PUSH2 0x666 JUMPI DUP1 PUSH4 0xEF78D4FD EQ PUSH2 0x679 JUMPI DUP1 PUSH4 0xFECDAD60 EQ PUSH2 0x682 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA86A366D EQ PUSH2 0x560 JUMPI DUP1 PUSH4 0xAA70FB98 EQ PUSH2 0x573 JUMPI DUP1 PUSH4 0xAA79979B EQ PUSH2 0x586 JUMPI DUP1 PUSH4 0xAC4AFA38 EQ PUSH2 0x5B9 JUMPI DUP1 PUSH4 0xB0C7044B EQ PUSH2 0x5CC JUMPI DUP1 PUSH4 0xB5EC5C99 EQ PUSH2 0x5EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x79E93824 GT PUSH2 0x120 JUMPI DUP1 PUSH4 0x79E93824 EQ PUSH2 0x4F3 JUMPI DUP1 PUSH4 0x812632EC EQ PUSH2 0x513 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x51C JUMPI DUP1 PUSH4 0x96C82E57 EQ PUSH2 0x524 JUMPI DUP1 PUSH4 0xA61C713A EQ PUSH2 0x52D JUMPI DUP1 PUSH4 0xA7CAC846 EQ PUSH2 0x540 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x630B5BA1 EQ PUSH2 0x49F JUMPI DUP1 PUSH4 0x63453AE1 EQ PUSH2 0x4A7 JUMPI DUP1 PUSH4 0x64482F79 EQ PUSH2 0x4BA JUMPI DUP1 PUSH4 0x698473E3 EQ PUSH2 0x4CD JUMPI DUP1 PUSH4 0x71DD4BDA EQ PUSH2 0x4E0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x32145F90 GT PUSH2 0x200 JUMPI DUP1 PUSH4 0x48CD4CB1 GT PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x48CD4CB1 EQ PUSH2 0x42F JUMPI DUP1 PUSH4 0x48EE26A3 EQ PUSH2 0x456 JUMPI DUP1 PUSH4 0x4ADE739B EQ PUSH2 0x469 JUMPI DUP1 PUSH4 0x51EB05A6 EQ PUSH2 0x47C JUMPI DUP1 PUSH4 0x53D78693 EQ PUSH2 0x48F JUMPI DUP1 PUSH4 0x570CA735 EQ PUSH2 0x497 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x32145F90 EQ PUSH2 0x3C7 JUMPI DUP1 PUSH4 0x37550684 EQ PUSH2 0x3DA JUMPI DUP1 PUSH4 0x3B92EB23 EQ PUSH2 0x3E3 JUMPI DUP1 PUSH4 0x411B1F77 EQ PUSH2 0x40A JUMPI DUP1 PUSH4 0x4198709A EQ PUSH2 0x41D JUMPI DUP1 PUSH4 0x442DA82F EQ PUSH2 0x426 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xFB5A6B4 GT PUSH2 0x252 JUMPI DUP1 PUSH4 0xFB5A6B4 EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0x146650DF EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0x1526FE27 EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0x17CAF6F1 EQ PUSH2 0x398 JUMPI DUP1 PUSH4 0x20B1CB6F EQ PUSH2 0x3A1 JUMPI DUP1 PUSH4 0x310BD74B EQ PUSH2 0x3B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6D6A1B2 EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0x81E3EDA EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0xC9C7EF5 EQ PUSH2 0x2E7 JUMPI DUP1 PUSH4 0xD52333C EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0xF589D63 EQ PUSH2 0x321 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2B8 PUSH2 0x29D CALLDATASIZE PUSH1 0x4 PUSH2 0x2247 JUMP JUMPDEST PUSH1 0x12 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0xE SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2CC JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x2F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2272 JUMP JUMPDEST PUSH2 0x695 JUMP JUMPDEST PUSH2 0x2B8 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x334 PUSH2 0x32F CALLDATASIZE PUSH1 0x4 PUSH2 0x2247 JUMP JUMPDEST PUSH2 0xA73 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D9 PUSH3 0x93A80 DUP2 JUMP JUMPDEST PUSH2 0x353 PUSH2 0x34E CALLDATASIZE PUSH1 0x4 PUSH2 0x22B4 JUMP JUMPDEST PUSH2 0xBCF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x2311 JUMP JUMPDEST PUSH2 0x373 PUSH2 0x36E CALLDATASIZE PUSH1 0x4 PUSH2 0x22B4 JUMP JUMPDEST PUSH2 0xC3B JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x2CC JUMP JUMPDEST PUSH2 0x2D9 PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH2 0x334 PUSH2 0x3AF CALLDATASIZE PUSH1 0x4 PUSH2 0x2403 JUMP JUMPDEST PUSH2 0xC78 JUMP JUMPDEST PUSH2 0x334 PUSH2 0x3C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x22B4 JUMP JUMPDEST PUSH2 0xD2E JUMP JUMPDEST PUSH2 0x334 PUSH2 0x3D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x22B4 JUMP JUMPDEST PUSH2 0xE4C JUMP JUMPDEST PUSH2 0x2D9 PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2B8 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x334 PUSH2 0x418 CALLDATASIZE PUSH1 0x4 PUSH2 0x24D8 JUMP JUMPDEST PUSH2 0xF9C JUMP JUMPDEST PUSH2 0x2D9 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2D9 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2D9 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x2B8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x334 PUSH2 0x477 CALLDATASIZE PUSH1 0x4 PUSH2 0x2508 JUMP JUMPDEST PUSH2 0x107E JUMP JUMPDEST PUSH2 0x334 PUSH2 0x48A CALLDATASIZE PUSH1 0x4 PUSH2 0x22B4 JUMP JUMPDEST PUSH2 0x1125 JUMP JUMPDEST PUSH2 0x334 PUSH2 0x141A JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x14A7 JUMP JUMPDEST PUSH2 0x334 PUSH2 0x151A JUMP JUMPDEST PUSH2 0x334 PUSH2 0x4B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2247 JUMP JUMPDEST PUSH2 0x1545 JUMP JUMPDEST PUSH2 0x334 PUSH2 0x4C8 CALLDATASIZE PUSH1 0x4 PUSH2 0x252D JUMP JUMPDEST PUSH2 0x154E JUMP JUMPDEST PUSH2 0x334 PUSH2 0x4DB CALLDATASIZE PUSH1 0x4 PUSH2 0x24D8 JUMP JUMPDEST PUSH2 0x1691 JUMP JUMPDEST PUSH2 0x334 PUSH2 0x4EE CALLDATASIZE PUSH1 0x4 PUSH2 0x22B4 JUMP JUMPDEST PUSH2 0x176B JUMP JUMPDEST PUSH2 0x2D9 PUSH2 0x501 CALLDATASIZE PUSH1 0x4 PUSH2 0x22B4 JUMP JUMPDEST PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2D9 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x1803 JUMP JUMPDEST PUSH2 0x2D9 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x334 PUSH2 0x53B CALLDATASIZE PUSH1 0x4 PUSH2 0x255B JUMP JUMPDEST PUSH2 0x184D JUMP JUMPDEST PUSH2 0x2D9 PUSH2 0x54E CALLDATASIZE PUSH1 0x4 PUSH2 0x2247 JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x56E CALLDATASIZE PUSH1 0x4 PUSH2 0x2593 JUMP JUMPDEST PUSH2 0x18B5 JUMP JUMPDEST PUSH2 0x334 PUSH2 0x581 CALLDATASIZE PUSH1 0x4 PUSH2 0x22B4 JUMP JUMPDEST PUSH2 0x18ED JUMP JUMPDEST PUSH2 0x5A9 PUSH2 0x594 CALLDATASIZE PUSH1 0x4 PUSH2 0x2247 JUMP JUMPDEST PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x2CC JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x5C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x22B4 JUMP JUMPDEST PUSH2 0x1985 JUMP JUMPDEST PUSH2 0x2D9 PUSH2 0x5DA CALLDATASIZE PUSH1 0x4 PUSH2 0x2247 JUMP JUMPDEST PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x334 PUSH2 0x5FA CALLDATASIZE PUSH1 0x4 PUSH2 0x22B4 JUMP JUMPDEST PUSH2 0x19AF JUMP JUMPDEST PUSH2 0x2B8 PUSH2 0x60D CALLDATASIZE PUSH1 0x4 PUSH2 0x2247 JUMP JUMPDEST PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x2D9 PUSH2 0x636 CALLDATASIZE PUSH1 0x4 PUSH2 0x24D8 JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x2B8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x334 PUSH2 0x674 CALLDATASIZE PUSH1 0x4 PUSH2 0x255B JUMP JUMPDEST PUSH2 0x1A47 JUMP JUMPDEST PUSH2 0x2D9 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x334 PUSH2 0x690 CALLDATASIZE PUSH1 0x4 PUSH2 0x2601 JUMP JUMPDEST PUSH2 0x1AA6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 AND ISZERO PUSH2 0x6ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x6 PUSH1 0x24 DUP3 ADD MSTORE PUSH6 0x657869737473 PUSH1 0xD0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x743 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5F6C70546F6B656E20697320746865207A65726F206164647265737300000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E4 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x751 JUMPI PUSH2 0x751 PUSH2 0x151A JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 NUMBER GT PUSH2 0x7A0 JUMPI PUSH32 0x0 PUSH2 0x7A2 JUMP JUMPDEST NUMBER JUMPDEST PUSH1 0xD SLOAD SWAP1 SWAP2 POP PUSH2 0x7B2 SWAP1 DUP6 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0xD SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP8 DUP2 MSTORE SWAP3 DUP3 ADD DUP5 DUP2 MSTORE PUSH1 0xE DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP4 SSTORE PUSH1 0x0 DUP4 SWAP1 MSTORE SWAP5 MLOAD PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD PUSH1 0x3 SWAP1 SWAP3 MUL SWAP2 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP6 AND OR SWAP1 SWAP4 SSTORE SWAP4 MLOAD PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FE DUP4 ADD SSTORE MLOAD PUSH32 0xBB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FF SWAP1 SWAP2 ADD SSTORE SWAP1 SLOAD PUSH2 0x880 SWAP2 SWAP1 PUSH2 0x2691 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE SWAP3 MLOAD PUSH4 0x1E533A8F PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 DUP3 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0x794CEA3C SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x927 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x94B SWAP2 SWAP1 PUSH2 0x26A8 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x0 NOT PUSH1 0x24 DUP4 ADD MSTORE SWAP3 SWAP4 POP SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9A1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9C5 SWAP2 SWAP1 PUSH2 0x26C5 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD SWAP6 DUP8 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP7 DUP8 AND DUP2 OR SWAP1 SWAP2 SSTORE DUP4 MSTORE PUSH1 0x12 DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD SWAP1 SWAP6 AND SWAP1 SWAP4 OR SWAP1 SWAP4 SSTORE PUSH1 0x13 SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0xA27 DUP2 PUSH2 0x1BCB JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND SWAP2 SWAP1 DUP4 AND SWAP1 PUSH32 0x9B8203EFE7FE42185A7755B0510F87C8B693971D6A7C22520AAF683E6B124261 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x8DA5CB5B PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD CALLER SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x8DA5CB5B SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xABC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAE0 SWAP2 SWAP1 PUSH2 0x26A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xB36 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB7F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x3130B2103732BB9037B832B930BA37B9 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD DUP3 SWAP2 SWAP1 DUP2 SWAP1 PUSH32 0x3CCBB406B985DD76FE05E172B432487A2FF9FE4257642D3ACC350F167CB1D577 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD DUP4 MLOAD DUP2 DUP5 MUL DUP2 ADD DUP5 ADD SWAP1 SWAP5 MSTORE DUP1 DUP5 MSTORE PUSH1 0x60 SWAP4 SWAP3 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xC2F JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC11 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xE DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xC4B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP DUP4 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 MLOAD DUP2 LT ISZERO PUSH2 0xD29 JUMPI DUP3 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0xC96 JUMPI PUSH2 0xC96 PUSH2 0x26E2 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x31279D3D CALLER DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0xCBF JUMPI PUSH2 0xCBF PUSH2 0x26E2 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCE4 SWAP3 SWAP2 SWAP1 PUSH2 0x26F8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD12 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0xD21 SWAP1 PUSH2 0x2724 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC7B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x430C2081 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x430C2081 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD99 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDBD SWAP2 SWAP1 PUSH2 0x26C5 JUMP JUMPDEST PUSH2 0xDC6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDCF DUP2 PUSH2 0x1C00 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xC1F0FB9F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xC1F0FB9F SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE45 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD DUP3 MLOAD DUP2 DUP6 MUL DUP2 ADD DUP6 ADD SWAP1 SWAP4 MSTORE DUP1 DUP4 MSTORE SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xEAC JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE8E JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xED4 JUMPI PUSH2 0xED4 PUSH2 0x2324 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xEFD JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xF8A JUMPI PUSH1 0xA PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xF32 JUMPI PUSH2 0xF32 PUSH2 0x26E2 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xF6D JUMPI PUSH2 0xF6D PUSH2 0x26E2 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE DUP1 PUSH2 0xF82 DUP2 PUSH2 0x2724 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xF03 JUMP JUMPDEST POP PUSH2 0xF96 DUP5 DUP5 DUP4 PUSH2 0x1D87 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xFB8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x1039 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C35BEC5 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x986B7D8A SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1020 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1034 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xAE268D9AAB12F3605F58EFD74FD3801FA812B03FDB44317EB70F46DFF0E19E22 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x570CA735 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD CALLER SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x570CA735 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10C7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10EB SWAP2 SWAP1 PUSH2 0x26A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1111 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E4 SWAP1 PUSH2 0x273F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x111F JUMPI PUSH2 0x111F PUSH2 0x151A JUMP JUMPDEST POP PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH32 0x0 NUMBER GT DUP1 ISZERO PUSH2 0x1156 JUMPI POP PUSH1 0x4 SLOAD NUMBER LT ISZERO JUMPDEST ISZERO PUSH2 0x11B1 JUMPI PUSH1 0x7 SLOAD PUSH1 0x3 SLOAD GT ISZERO PUSH2 0x118C JUMPI PUSH2 0x1188 PUSH1 0x64 PUSH2 0x1182 PUSH1 0x50 PUSH1 0x3 SLOAD PUSH2 0x21B8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x21C4 JUMP JUMPDEST PUSH1 0x3 SSTORE JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x3 SLOAD LT ISZERO PUSH2 0x119F JUMPI PUSH1 0x7 SLOAD PUSH1 0x3 SSTORE JUMPDEST PUSH1 0x5 SLOAD PUSH2 0x11AD SWAP1 NUMBER SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0x4 SSTORE JUMPDEST PUSH1 0x0 PUSH1 0xE DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x11C6 JUMPI PUSH2 0x11C6 PUSH2 0x26E2 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD NUMBER GT PUSH2 0x11E5 JUMPI POP POP JUMP JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD SWAP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP4 AND PUSH1 0x4 DUP5 ADD MSTORE SWAP2 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x123C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1260 SWAP2 SWAP1 PUSH2 0x2765 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x1272 JUMPI POP NUMBER PUSH1 0x2 SWAP1 SWAP2 ADD SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 SLOAD GT PUSH2 0x1281 JUMPI POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x129A DUP4 PUSH1 0x2 ADD SLOAD NUMBER PUSH2 0x21D0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x12C7 PUSH1 0xD SLOAD PUSH2 0x1182 DUP7 PUSH1 0x1 ADD SLOAD PUSH2 0x12C1 DUP7 PUSH1 0x3 SLOAD PUSH2 0x21B8 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x21B8 JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x40C10F19 ADDRESS PUSH2 0x12EC DUP6 PUSH3 0x93A80 PUSH2 0x21B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1337 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x135B SWAP2 SWAP1 PUSH2 0x26C5 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1408 JUMPI DUP5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x2 SLOAD PUSH1 0xD SLOAD PUSH1 0x1 DUP10 ADD SLOAD PUSH1 0x3 SLOAD SWAP4 DUP6 AND SWAP5 PUSH4 0xB66503CF SWAP5 SWAP4 AND SWAP3 PUSH2 0x13A9 SWAP3 SWAP2 PUSH2 0x1182 SWAP2 SWAP1 PUSH2 0x21B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1403 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST NUMBER DUP6 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP POP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xE SLOAD DUP2 LT ISZERO PUSH2 0x1417 JUMPI PUSH1 0x0 PUSH1 0xE DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x143C JUMPI PUSH2 0x143C PUSH2 0x26E2 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x3 SWAP1 SWAP5 MUL SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP1 DUP7 MSTORE PUSH1 0x1 DUP4 ADD SLOAD DUP7 DUP7 ADD MSTORE PUSH1 0x2 SWAP1 SWAP3 ADD SLOAD DUP6 DUP5 ADD MSTORE SWAP1 DUP6 MSTORE PUSH1 0x11 SWAP1 SWAP3 MSTORE SWAP1 SWAP3 KECCAK256 SLOAD SWAP1 SWAP3 POP PUSH2 0x1494 SWAP2 AND PUSH2 0x1BCB JUMP JUMPDEST POP DUP1 PUSH2 0x149F DUP2 PUSH2 0x2724 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x141D JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x570CA735 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x570CA735 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14F1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1515 SWAP2 SWAP1 PUSH2 0x26A8 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xE SLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1541 JUMPI PUSH2 0x1531 DUP2 PUSH2 0x1125 JUMP JUMPDEST PUSH2 0x153A DUP2 PUSH2 0x2724 JUMP JUMPDEST SWAP1 POP PUSH2 0x1520 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1417 DUP2 PUSH2 0x1BCB JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x8DA5CB5B PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD CALLER SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x8DA5CB5B SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1597 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15BB SWAP2 SWAP1 PUSH2 0x26A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1611 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E4 JUMP JUMPDEST PUSH2 0x1654 DUP3 PUSH2 0x164E PUSH1 0xE DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x162B JUMPI PUSH2 0x162B PUSH2 0x26E2 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD SLOAD PUSH1 0xD SLOAD PUSH2 0x21D0 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x1BB8 JUMP JUMPDEST PUSH1 0xD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xE DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x166E JUMPI PUSH2 0x166E PUSH2 0x26E2 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xD29 JUMPI PUSH2 0xD29 PUSH2 0x151A JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x16AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x172E JUMPI PUSH1 0x40 MLOAD PUSH4 0x20FE6E5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x20FE6E5 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1715 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1729 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x60940192810A6FB3BCE3FD3E2E3A13FD6CCC7605E963FB87EE971ABA829989BD SWAP1 PUSH1 0x20 ADD PUSH2 0x1072 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x570CA735 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD CALLER SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x570CA735 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x17B4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x17D8 SWAP2 SWAP1 PUSH2 0x26A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x17FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E4 SWAP1 PUSH2 0x273F JUMP JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x8DA5CB5B PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x8DA5CB5B SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14F1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1869 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0xDCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x18D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP DUP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x570CA735 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD CALLER SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x570CA735 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1936 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x195A SWAP2 SWAP1 PUSH2 0x26A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1980 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E4 SWAP1 PUSH2 0x273F JUMP JUMPDEST PUSH1 0x7 SSTORE JUMP JUMPDEST PUSH1 0x10 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1995 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x570CA735 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD CALLER SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x570CA735 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x19F8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A1C SWAP2 SWAP1 PUSH2 0x26A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1A42 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E4 SWAP1 PUSH2 0x273F JUMP JUMPDEST PUSH1 0x5 SSTORE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x13 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1A63 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP2 PUSH32 0xF341246ADAAC6F497BC2A656F546AB9E182111D630394F0C57C710A59A2CB567 SWAP2 ADD PUSH2 0x18A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x430C2081 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x430C2081 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B11 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B35 SWAP2 SWAP1 PUSH2 0x26C5 JUMP JUMPDEST PUSH2 0x1B3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP2 EQ PUSH2 0x1B4A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE45 DUP6 DUP6 DUP6 DUP1 DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 PUSH1 0x20 MUL DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP10 MUL DUP3 DUP2 ADD DUP3 ADD SWAP1 SWAP4 MSTORE DUP9 DUP3 MSTORE SWAP1 SWAP4 POP DUP9 SWAP3 POP DUP8 SWAP2 DUP3 SWAP2 DUP6 ADD SWAP1 DUP5 SWAP1 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP PUSH2 0x1D87 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BC4 DUP3 DUP5 PUSH2 0x277E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x12 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD SWAP1 SWAP4 AND DUP1 DUP4 MSTORE PUSH1 0xF SWAP1 SWAP2 MSTORE SWAP2 SWAP1 KECCAK256 SLOAD PUSH2 0x1541 SWAP1 PUSH2 0x1125 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 DUP1 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1D4B JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1C30 JUMPI PUSH2 0x1C30 PUSH2 0x26E2 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP9 DUP4 MSTORE PUSH1 0xA DUP3 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP1 DUP6 MSTORE SWAP2 SWAP1 SWAP3 MSTORE SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP1 ISZERO PUSH2 0x1D36 JUMPI PUSH2 0x1C71 DUP3 PUSH2 0x21DC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1C99 SWAP1 DUP5 SWAP1 PUSH2 0x2796 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x1CD0 SWAP1 DUP5 SWAP1 PUSH2 0x2796 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 SGT ISZERO PUSH2 0x1CEF JUMPI PUSH2 0x1CE8 DUP2 DUP6 PUSH2 0x27D5 JUMP JUMPDEST SWAP4 POP PUSH2 0x1CFC JUMP JUMPDEST PUSH2 0x1CF9 DUP2 DUP6 PUSH2 0x2796 JUMP JUMPDEST SWAP4 POP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x6B3894CE60B9BBE9D93F1A4E6FC25B6B93CD8222E73AB6348D79C596F5B51DE9 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP DUP1 DUP1 PUSH2 0x1D43 SWAP1 PUSH2 0x2724 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1C14 JUMP JUMPDEST POP DUP1 PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1D5E SWAP2 SWAP1 PUSH2 0x2691 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0xC PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0xB SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH2 0xF96 SWAP2 PUSH2 0x2200 JUMP JUMPDEST PUSH2 0x1D90 DUP4 PUSH2 0x1C00 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x40 MLOAD PUSH4 0x39F890B5 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xE7E242D4 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1DFA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E1E SWAP2 SWAP1 PUSH2 0x2765 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1EB1 JUMPI PUSH1 0x0 DUP8 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1E43 JUMPI PUSH2 0x1E43 PUSH2 0x26E2 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SGT PUSH2 0x1E78 JUMPI DUP7 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1E62 JUMPI PUSH2 0x1E62 PUSH2 0x26E2 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1E73 SWAP1 PUSH2 0x2816 JUMP JUMPDEST PUSH2 0x1E93 JUMP JUMPDEST DUP7 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x1E8A JUMPI PUSH2 0x1E8A PUSH2 0x26E2 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD JUMPDEST PUSH2 0x1E9D SWAP1 DUP6 PUSH2 0x27D5 JUMP JUMPDEST SWAP4 POP DUP1 PUSH2 0x1EA9 DUP2 PUSH2 0x2724 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1E27 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x2101 JUMPI PUSH1 0x0 DUP9 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1ED1 JUMPI PUSH2 0x1ED1 PUSH2 0x26E2 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH2 0x1F0D DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD SWAP1 SWAP4 AND DUP3 MSTORE PUSH1 0x13 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x20EE JUMPI PUSH1 0x0 DUP6 DUP8 DUP11 DUP6 DUP2 MLOAD DUP2 LT PUSH2 0x1F28 JUMPI PUSH2 0x1F28 PUSH2 0x26E2 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1F3A SWAP2 SWAP1 PUSH2 0x2833 JUMP JUMPDEST PUSH2 0x1F44 SWAP2 SWAP1 PUSH2 0x28CE JUMP JUMPDEST PUSH1 0x0 DUP13 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x1FA9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x746F6B656E20706F6F6C206973203 PUSH1 0x8C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E4 JUMP JUMPDEST DUP1 PUSH2 0x1FE4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x776569676874206973203 PUSH1 0xAC SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E4 JUMP JUMPDEST PUSH2 0x1FED DUP3 PUSH2 0x21DC JUMP JUMPDEST PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0xB PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP5 MSTORE DUP3 DUP5 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP4 MSTORE PUSH1 0x9 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x2042 SWAP1 DUP5 SWAP1 PUSH2 0x27D5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP12 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x2079 SWAP1 DUP5 SWAP1 PUSH2 0x27D5 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 SGT ISZERO PUSH2 0x208C JUMPI PUSH2 0x2098 JUMP JUMPDEST PUSH2 0x2095 DUP2 PUSH2 0x2816 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH2 0x20A2 DUP2 DUP6 PUSH2 0x27D5 JUMP JUMPDEST SWAP4 POP PUSH2 0x20AE DUP2 DUP7 PUSH2 0x27D5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP14 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE SWAP2 SWAP7 POP CALLER SWAP2 PUSH32 0x1263A2295E53ACD6EF8F655B8AFC11FA0F2CF11925BE7AA1757D741EF32A926C SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMPDEST POP DUP1 PUSH2 0x20F9 DUP2 PUSH2 0x2724 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1EB5 JUMP JUMPDEST POP PUSH1 0x0 DUP2 SGT ISZERO PUSH2 0x2186 JUMPI PUSH1 0x40 MLOAD PUSH4 0xFD4A77F1 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP10 SWAP1 MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0xFD4A77F1 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x216D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2181 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST DUP2 PUSH1 0x8 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2198 SWAP2 SWAP1 PUSH2 0x277E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 SWAP8 DUP9 MSTORE PUSH1 0xC PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 SWAP8 KECCAK256 SWAP7 SWAP1 SWAP7 SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BC4 DUP3 DUP5 PUSH2 0x28FC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BC4 DUP3 DUP5 PUSH2 0x291B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BC4 DUP3 DUP5 PUSH2 0x2691 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1417 SWAP2 AND PUSH2 0x1BCB JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1417 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x222E JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x221A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1417 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2259 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1BC4 DUP2 PUSH2 0x2232 JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1417 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2287 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x2292 DUP2 PUSH2 0x2232 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x22A9 DUP2 PUSH2 0x2264 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2306 JUMPI DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x22E1 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1BC4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x22CD JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x2363 JUMPI PUSH2 0x2363 PUSH2 0x2324 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2385 JUMPI PUSH2 0x2385 PUSH2 0x2324 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x23A0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x23B5 PUSH2 0x23B0 DUP4 PUSH2 0x236B JUMP JUMPDEST PUSH2 0x233A JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x5 SWAP3 SWAP1 SWAP3 SHL DUP5 ADD DUP2 ADD SWAP2 DUP2 DUP2 ADD SWAP1 DUP7 DUP5 GT ISZERO PUSH2 0x23D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x23F8 JUMPI DUP1 CALLDATALOAD PUSH2 0x23EB DUP2 PUSH2 0x2232 JUMP JUMPDEST DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x23D8 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2416 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x242E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x243A DUP7 DUP4 DUP8 ADD PUSH2 0x238F JUMP JUMPDEST SWAP4 POP PUSH1 0x20 SWAP2 POP DUP2 DUP6 ADD CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2451 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x2462 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x2470 PUSH2 0x23B0 DUP3 PUSH2 0x236B JUMP JUMPDEST DUP2 DUP2 MSTORE PUSH1 0x5 SWAP2 SWAP1 SWAP2 SHL DUP3 ADD DUP5 ADD SWAP1 DUP5 DUP2 ADD SWAP1 DUP10 DUP4 GT ISZERO PUSH2 0x248F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP5 ADD JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x24C7 JUMPI DUP1 CALLDATALOAD DUP7 DUP2 GT ISZERO PUSH2 0x24AB JUMPI PUSH1 0x0 DUP1 DUP2 REVERT JUMPDEST PUSH2 0x24B9 DUP13 DUP10 DUP4 DUP10 ADD ADD PUSH2 0x238F JUMP JUMPDEST DUP5 MSTORE POP SWAP2 DUP7 ADD SWAP2 DUP7 ADD PUSH2 0x2493 JUMP JUMPDEST POP DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24EB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x24FD DUP2 PUSH2 0x2232 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x251B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x24FD DUP2 PUSH2 0x2264 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2542 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x22A9 DUP2 PUSH2 0x2264 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2570 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH2 0x2582 DUP2 PUSH2 0x2232 JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x25C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x25DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x25FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2619 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2638 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2644 DUP10 DUP4 DUP11 ADD PUSH2 0x25B5 JUMP JUMPDEST SWAP1 SWAP7 POP SWAP5 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x265D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x266A DUP9 DUP3 DUP10 ADD PUSH2 0x25B5 JUMP JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 POP SWAP3 SWAP5 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x26A3 JUMPI PUSH2 0x26A3 PUSH2 0x267B JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1BC4 DUP2 PUSH2 0x2232 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1BC4 DUP2 PUSH2 0x2264 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x271C SWAP1 DUP4 ADD DUP5 PUSH2 0x22CD JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x2738 JUMPI PUSH2 0x2738 PUSH2 0x267B JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xC SWAP1 DUP3 ADD MSTORE PUSH12 0x3737BA1037B832B930BA37B9 PUSH1 0xA1 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2777 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2791 JUMPI PUSH2 0x2791 PUSH2 0x267B JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 SLT DUP1 ISZERO PUSH1 0x1 PUSH1 0xFF SHL DUP6 ADD DUP5 SLT AND ISZERO PUSH2 0x27B4 JUMPI PUSH2 0x27B4 PUSH2 0x267B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP5 ADD DUP4 SGT DUP2 AND ISZERO PUSH2 0x27CF JUMPI PUSH2 0x27CF PUSH2 0x267B JUMP JUMPDEST POP POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SLT DUP1 ISZERO PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP5 SWAP1 SUB DUP6 SGT AND ISZERO PUSH2 0x27F7 JUMPI PUSH2 0x27F7 PUSH2 0x267B JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF SHL DUP4 SWAP1 SUB DUP5 SLT DUP2 AND ISZERO PUSH2 0x2810 JUMPI PUSH2 0x2810 PUSH2 0x267B JUMP JUMPDEST POP POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0xFF SHL DUP3 EQ ISZERO PUSH2 0x282C JUMPI PUSH2 0x282C PUSH2 0x267B JUMP JUMPDEST POP PUSH1 0x0 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP2 DUP5 SGT DUP3 DUP5 SGT DUP1 DUP3 AND DUP7 DUP5 DIV DUP7 GT AND ISZERO PUSH2 0x2859 JUMPI PUSH2 0x2859 PUSH2 0x267B JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF SHL PUSH1 0x0 DUP8 SLT DUP3 DUP2 AND DUP8 DUP4 SDIV DUP10 SLT AND ISZERO PUSH2 0x2878 JUMPI PUSH2 0x2878 PUSH2 0x267B JUMP JUMPDEST PUSH1 0x0 DUP8 SLT SWAP3 POP DUP8 DUP3 SDIV DUP8 SLT DUP5 DUP5 AND AND ISZERO PUSH2 0x2894 JUMPI PUSH2 0x2894 PUSH2 0x267B JUMP JUMPDEST DUP8 DUP6 SDIV DUP8 SLT DUP2 DUP5 AND AND ISZERO PUSH2 0x28AA JUMPI PUSH2 0x28AA PUSH2 0x267B JUMP JUMPDEST POP POP POP SWAP3 SWAP1 SWAP4 MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x28DD JUMPI PUSH2 0x28DD PUSH2 0x28B8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xFF SHL DUP3 EQ PUSH1 0x0 NOT DUP5 EQ AND ISZERO PUSH2 0x28F7 JUMPI PUSH2 0x28F7 PUSH2 0x267B JUMP JUMPDEST POP SDIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2916 JUMPI PUSH2 0x2916 PUSH2 0x267B JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x292A JUMPI PUSH2 0x292A PUSH2 0x28B8 JUMP JUMPDEST POP DIV SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 0xB2 JUMPI DUP10 0xB0 0xE8 CODECOPY 0xF9 0x22 0xAF 0xC2 0x25 0xBC RETURN MUL 0x2E 0xE4 LOG0 CALLDATALOAD DUP12 PUSH32 0x60AA32EB4AB6A884BB1E5164736F6C634300080A003300000000000000000000 ",
							"sourceMap": "54066:5854:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;55141:47;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;55141:47:0;;;;;;-1:-1:-1;;;;;566:32:1;;;548:51;;536:2;521:18;55141:47:0;;;;;;;;55565:91;55634:8;:15;55565:91;;;756:25:1;;;744:2;729:18;55565:91:0;610:177:1;55662:1026:0;;;;;;:::i;:::-;;:::i;54735:37::-;;;;;45393:253;;;;;;:::i;:::-;;:::i;:::-;;54933:38;;54965:6;54933:38;;50535:117;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;54818:26::-;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;2507:32:1;;;2489:51;;2571:2;2556:18;;2549:34;;;;2599:18;;;2592:34;2477:2;2462:18;54818:26:0;2287:345:1;54778:34:0;;;;;;59368:220;;;;;;:::i;:::-;;:::i;50658:193::-;;;;;;:::i;:::-;;:::i;53204:365::-;;;;;;:::i;:::-;;:::i;46386:24::-;;;;;;49799:32;;;;;58602:226;;;;;;:::i;:::-;;:::i;46196:28::-;;;;;;46271:29;;;;;;46230:35;;;;;44672:28;;;;;-1:-1:-1;;;;;44672:28:0;;;47736:199;;;;;;:::i;:::-;;:::i;57256:926::-;;;;;;:::i;:::-;;:::i;59021:196::-;;;:::i;45179:104::-;;;:::i;56999:184::-;;;:::i;59594:84::-;;;;;;:::i;:::-;;:::i;56694:299::-;;;;;;:::i;:::-;;:::i;58189:222::-;;;;;;:::i;:::-;;:::i;47473:93::-;;;;;;:::i;:::-;;:::i;50135:40::-;;;;;;:::i;:::-;;;;;;;;;;;;;;46417:39;;;;;;45289:98;;;:::i;49746:23::-;;;;;;58417:179;;;;;;:::i;:::-;;:::i;49920:41::-;;;;;;:::i;:::-;;;;;;;;;;;;;;50071:42;;;;;;:::i;:::-;;:::i;47572:105::-;;;;;;:::i;:::-;;:::i;55211:39::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7598:14:1;;7591:22;7573:41;;7561:2;7546:18;55211:39:0;7433:187:1;55014:22:0;;;;;;:::i;:::-;;:::i;54883:42::-;;;;;;:::i;:::-;;;;;;;;;;;;;;47373:94;;;;;;:::i;:::-;;:::i;55077:41::-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;55077:41:0;;;49985:56;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;46166:23;;;;;-1:-1:-1;;;;;46166:23:0;;;58834:181;;;;;;:::i;:::-;;:::i;46358:21::-;;;;;;53576:276;;;;;;:::i;:::-;;:::i;55662:1026::-;-1:-1:-1;;;;;55782:13:0;;;55755:7;55782:13;;;:6;:13;;;;;;55755:7;;55782:13;:29;55774:48;;;;-1:-1:-1;;;55774:48:0;;9267:2:1;55774:48:0;;;9249:21:1;9306:1;9286:18;;;9279:29;-1:-1:-1;;;9324:18:1;;;9317:36;9370:18;;55774:48:0;;;;;;;;;-1:-1:-1;;;;;55841:28:0;;55833:69;;;;-1:-1:-1;;;55833:69:0;;9601:2:1;55833:69:0;;;9583:21:1;9640:2;9620:18;;;9613:30;9679;9659:18;;;9652:58;9727:18;;55833:69:0;9399:352:1;55833:69:0;55916:11;55912:59;;;55943:17;:15;:17::i;:::-;55980:23;56021:10;56006:12;:25;:53;;56049:10;56006:53;;;56034:12;56006:53;56087:15;;55980:79;;-1:-1:-1;56087:32:0;;56107:11;56087:19;:32::i;:::-;56069:15;:50;56143:122;;;;;;;;-1:-1:-1;;;;;56143:122:0;;;;;;;;;;;;;;;;;56129:8;:137;;;;;;;;-1:-1:-1;56129:137:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;;56129:137:0;;;;;;;;;;;;;;;;;;;;;55634:15;;56302:16;;;;:::i;:::-;-1:-1:-1;;;;;56276:23:0;;;;;;;:7;:23;;;;;;:42;;;;56346:55;;-1:-1:-1;;;56346:55:0;;;;;10230:34:1;;;;56393:7:0;10300:15:1;;10280:18;;;10273:43;56360:12:0;56346:39;;;;;;10165:18:1;;56346:55:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;56426:9;;56411:58;;-1:-1:-1;;;56411:58:0;;-1:-1:-1;;;;;10775:32:1;;;56411:58:0;;;10757:51:1;-1:-1:-1;;10824:18:1;;;10817:34;56329:72:0;;-1:-1:-1;56426:9:0;;;56411:34;;10730:18:1;;56411:58:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;56479:13:0;;;;;;;:6;:13;;;;;;;;:22;;;;;-1:-1:-1;;;;;;56479:22:0;;;;;;;;56511:20;;:12;:20;;;;;:28;;;;;;;;;;;56549:7;:15;;;;;:22;;-1:-1:-1;;56549:22:0;56479;56549;;;56581:23;56495:6;56581:15;:23::i;:::-;56619:39;;56640:10;548:51:1;;-1:-1:-1;;;;;56619:39:0;;;;;;;;;;536:2:1;521:18;56619:39:0;;;;;;;56675:6;55662:1026;-1:-1:-1;;;;;55662:1026:0:o;45393:253::-;45086:10;;:18;;;-1:-1:-1;;;45086:18:0;;;;45108:10;;-1:-1:-1;;;;;45086:10:0;;:16;;:18;;;;;;;;;;;;;;:10;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;45086:32:0;;45078:77;;;;-1:-1:-1;;;45078:77:0;;11314:2:1;45078:77:0;;;11296:21:1;;;11333:18;;;11326:30;11392:34;11372:18;;;11365:62;11444:18;;45078:77:0;11112:356:1;45078:77:0;-1:-1:-1;;;;;45468:19:0;::::1;45460:48;;;::::0;-1:-1:-1;;;45460:48:0;;11675:2:1;45460:48:0::1;::::0;::::1;11657:21:1::0;11714:2;11694:18;;;11687:30;-1:-1:-1;;;11733:18:1;;;11726:46;11789:18;;45460:48:0::1;11473:340:1::0;45460:48:0::1;45555:10;:30:::0;;-1:-1:-1;;;;;;45555:30:0::1;-1:-1:-1::0;;;;;45555:30:0;::::1;::::0;;::::1;::::0;;;45600:39:::1;::::0;45555:30;;;;;45600:39:::1;::::0;-1:-1:-1;;45600:39:0::1;45450:196;45393:253:::0;:::o;50535:117::-;50628:17;;;;:8;:17;;;;;;;;;50621:24;;;;;;;;;;;;;;;;;50594:16;;50621:24;;;50628:17;50621:24;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;50621:24:0;;;;;;;;;;;;;;;;;;;;;;;50535:117;;;:::o;54818:26::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;54818:26:0;;;;-1:-1:-1;54818:26:0;:::o;59368:220::-;59468:6;59463:119;59484:7;:14;59480:1;:18;59463:119;;;59526:7;59534:1;59526:10;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;59519:28:0;;59548:10;59560:7;59568:1;59560:10;;;;;;;;:::i;:::-;;;;;;;59519:52;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;59500:3;;;;;:::i;:::-;;;;59463:119;;;;59368:220;;:::o;50658:193::-;50715:57;;-1:-1:-1;;;50715:57:0;;50751:10;50715:57;;;10757:51:1;10824:18;;;10817:34;;;50724:7:0;-1:-1:-1;;;;;50715:35:0;;;;10730:18:1;;50715:57:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;50707:66;;;;;;50783:16;50790:8;50783:6;:16::i;:::-;50809:35;;-1:-1:-1;;;50809:35:0;;;;;756:25:1;;;50818:7:0;-1:-1:-1;;;;;50809:25:0;;;;729:18:1;;50809:35:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;50658:193;:::o;53204:365::-;53252:26;53281:18;;;:8;:18;;;;;;;;53252:47;;;;;;;;;;;;;;;;;;;53281:18;;53252:47;;;53281:18;53252:47;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;53252:47:0;;;;;;;;;;;;;;;;;;;;;;;53309:13;53325:9;:16;53309:32;;53351:24;53391:8;53378:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;53378:22:0;;53351:49;;53416:6;53411:105;53432:8;53428:1;:12;53411:105;;;53476:5;:15;53482:8;53476:15;;;;;;;;;;;:29;53492:9;53502:1;53492:12;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;53476:29:0;-1:-1:-1;;;;;53476:29:0;;;;;;;;;;;;;53462:8;53471:1;53462:11;;;;;;;;:::i;:::-;;;;;;;;;;:43;53442:4;;;;:::i;:::-;;;;53411:105;;;;53526:36;53532:8;53542:9;53553:8;53526:5;:36::i;:::-;53242:327;;;53204:365;:::o;58602:226::-;58698:10;58690:19;;;;:7;:19;;;;;;;;58682:28;;;;;;58724:11;;58720:50;;58737:33;;-1:-1:-1;;;58737:33:0;;;;;756:25:1;;;58746:7:0;-1:-1:-1;;;;;58737:24:0;;;;729:18:1;;58737:33:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;58720:50;58785:36;;756:25:1;;;58801:10:0;;-1:-1:-1;;;;;58785:36:0;;;;;744:2:1;729:18;58785:36:0;;;;;;;;58602:226;;:::o;47736:199::-;44971:10;;:21;;;-1:-1:-1;;;44971:21:0;;;;44996:10;;-1:-1:-1;;;;;44971:10:0;;:19;;:21;;;;;;;;;;;;;;:10;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;44971:35:0;;44963:60;;;;-1:-1:-1;;;44963:60:0;;;;;;;:::i;:::-;47836:11:::1;47832:59;;;47863:17;:15;:17::i;:::-;-1:-1:-1::0;47900:13:0::1;:28:::0;47736:199::o;57256:926::-;46998:10;46983:12;:25;:59;;;;;47028:14;;47012:12;:30;;46983:59;46979:371;;;47078:14;;47062:13;;:30;47058:115;;;47128:30;47154:3;47128:21;47146:2;47128:13;;:17;;:21;;;;:::i;:::-;:25;;:30::i;:::-;47112:13;:46;47058:115;47206:14;;47190:13;;:30;47186:99;;;47256:14;;47240:13;:30;47186:99;47332:6;;47315:24;;:12;;:16;:24::i;:::-;47298:14;:41;46979:371;57325:21:::1;57349:8;57358:4;57349:14;;;;;;;;:::i;:::-;;;;;;;;;;;57325:38;;57393:4;:20;;;57377:12;:36;57373:73;;57429:7;57256:926:::0;:::o;57373:73::-:1;57481:12:::0;;-1:-1:-1;;;;;57481:12:0;;::::1;57455:16;57505:20:::0;;;:6:::1;:20;::::0;;;;;;57474:52;;-1:-1:-1;;;57474:52:0;;57505:20;::::1;57474:52;::::0;::::1;548:51:1::0;57455:16:0;57474:30:::1;::::0;521:18:1;;57474:52:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;57455:71:::0;-1:-1:-1;57540:13:0;57536:99:::1;;-1:-1:-1::0;57592:12:0::1;57569:20;::::0;;::::1;:35:::0;57256:926;:::o;57536:99::-:1;57665:1;57648:13;;:18;57644:55;;57682:7;;57256:926:::0;:::o;57644:55::-:1;57708:11;57722:38;57739:4;:20;;;57722:12;:16;;:38;;;;:::i;:::-;57708:52;;57770:19;57792:64;57840:15;;57792:43;57819:4;:15;;;57792:22;57810:3;57792:13;;:17;;:22;;;;:::i;:::-;:26:::0;::::1;:43::i;:64::-;57904:9;::::0;57770:86;;-1:-1:-1;57890:11:0::1;::::0;-1:-1:-1;;;;;57904:9:0::1;:14;57927:4;57934:25;57770:86:::0;54965:6:::1;57934:15;:25::i;:::-;57904:56;::::0;-1:-1:-1;;;;;;57904:56:0::1;::::0;;;;;;-1:-1:-1;;;;;10775:32:1;;;57904:56:0::1;::::0;::::1;10757:51:1::0;10824:18;;;10817:34;10730:18;;57904:56:0::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;57890:70;;57974:6;57970:161;;;58010:12:::0;;-1:-1:-1;;;;;58010:12:0;;::::1;58003:20;::::0;;;:6:::1;:20;::::0;;;;;58052:9:::1;::::0;58103:15:::1;::::0;58010:12;58082:15;::::1;::::0;58064:13:::1;::::0;58003:20;;::::1;::::0;57996:47:::1;::::0;58052:9;::::1;::::0;58064:55:::1;::::0;58103:15;58064:34:::1;::::0;:13;:17:::1;:34::i;:55::-;57996:124;::::0;-1:-1:-1;;;;;;57996:124:0::1;::::0;;;;;;-1:-1:-1;;;;;10775:32:1;;;57996:124:0::1;::::0;::::1;10757:51:1::0;10824:18;;;10817:34;10730:18;;57996:124:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;57970:161;58163:12;58140:4;:20;;:35;;;;57315:867;;;;;47359:1;57256:926:::0;:::o;59021:196::-;59066:6;59061:150;55634:8;:15;59078:1;:16;59061:150;;;59115:20;59138:8;59147:1;59138:11;;;;;;;;:::i;:::-;;;;;;;;;59115:34;;;;;;;;59138:11;;;;;;;59115:34;;-1:-1:-1;;;;;59115:34:0;;;;;;;;;;;;;;;;;;;;;;;59179:20;;;:6;:20;;;;;;;59115:34;;-1:-1:-1;59163:37:0;;59179:20;59163:15;:37::i;:::-;-1:-1:-1;59096:3:0;;;;:::i;:::-;;;;59061:150;;45179:104;45255:10;;:21;;;-1:-1:-1;;;45255:21:0;;;;45229:7;;-1:-1:-1;;;;;45255:10:0;;:19;;:21;;;;;;;;;;;;;;:10;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;45248:28;;45179:104;:::o;56999:184::-;57069:8;:15;57052:14;57094:83;57122:6;57116:3;:12;57094:83;;;57151:15;57162:3;57151:10;:15::i;:::-;57130:5;;;:::i;:::-;;;57094:83;;;;57042:141;56999:184::o;59594:84::-;59647:23;59663:6;59647:15;:23::i;56694:299::-;45086:10;;:18;;;-1:-1:-1;;;45086:18:0;;;;45108:10;;-1:-1:-1;;;;;45086:10:0;;:16;;:18;;;;;;;;;;;;;;:10;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;45086:32:0;;45078:77;;;;-1:-1:-1;;;45078:77:0;;11314:2:1;45078:77:0;;;11296:21:1;;;11333:18;;;11326:30;11392:34;11372:18;;;11365:62;11444:18;;45078:77:0;11112:356:1;45078:77:0;56806:63:::1;56857:11;56806:46;56826:8;56835:4;56826:14;;;;;;;;:::i;:::-;;;;;;;;;;;:25;;;56806:15;;:19;;:46;;;;:::i;:::-;:50:::0;::::1;:63::i;:::-;56788:15;:81;;;;56907:11;56879:8;56888:4;56879:14;;;;;;;;:::i;:::-;;;;;;;;;;;:25;;:39;;;;56932:11;56928:59;;;56959:17;:15;:17::i;58189:222::-:0;58283:10;58275:19;;;;:7;:19;;;;;;;;58267:28;;;;;;58309:11;;58305:48;;58322:31;;-1:-1:-1;;;58322:31:0;;;;;756:25:1;;;58331:7:0;-1:-1:-1;;;;;58322:22:0;;;;729:18:1;;58322:31:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;58305:48;58368:36;;756:25:1;;;58384:10:0;;-1:-1:-1;;;;;58368:36:0;;;;;744:2:1;729:18;58368:36:0;610:177:1;47473:93:0;44971:10;;:21;;;-1:-1:-1;;;44971:21:0;;;;44996:10;;-1:-1:-1;;;;;44971:10:0;;:19;;:21;;;;;;;;;;;;;;:10;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;44971:35:0;;44963:60;;;;-1:-1:-1;;;44963:60:0;;;;;;;:::i;:::-;47541:9:::1;:18:::0;47473:93::o;45289:98::-;45362:10;;:18;;;-1:-1:-1;;;45362:18:0;;;;45336:7;;-1:-1:-1;;;;;45362:10:0;;:16;;:18;;;;;;;;;;;;;;:10;:18;;;;;;;;;;;;;;58417:179;58517:10;58509:19;;;;:7;:19;;;;;;;;58501:28;;;;;;58544:45;;;13157:25:1;;;13213:2;13198:18;;13191:34;;;58561:10:0;;-1:-1:-1;;;;;58544:45:0;;;;;13130:18:1;58544:45:0;;;;;;;;58417:179;;;:::o;50071:42::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;50071:42:0;;-1:-1:-1;50071:42:0;;-1:-1:-1;50071:42:0:o;47572:105::-;44971:10;;:21;;;-1:-1:-1;;;44971:21:0;;;;44996:10;;-1:-1:-1;;;;;44971:10:0;;:19;;:21;;;;;;;;;;;;;;:10;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;44971:35:0;;44963:60;;;;-1:-1:-1;;;44963:60:0;;;;;;;:::i;:::-;47646:14:::1;:24:::0;47572:105::o;55014:22::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;55014:22:0;;-1:-1:-1;55014:22:0;:::o;47373:94::-;44971:10;;:21;;;-1:-1:-1;;;44971:21:0;;;;44996:10;;-1:-1:-1;;;;;44971:10:0;;:19;;:21;;;;;;;;;;;;;;:10;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;44971:35:0;;44963:60;;;;-1:-1:-1;;;44963:60:0;;;;;;;:::i;:::-;47445:6:::1;:15:::0;47373:94::o;58834:181::-;58935:10;58927:19;;;;:7;:19;;;;;;;;58919:28;;;;;;58962:46;;;13157:25:1;;;13213:2;13198:18;;13191:34;;;58980:10:0;;-1:-1:-1;;;;;58962:46:0;;;;;13130:18:1;58962:46:0;12983:248:1;53576:276:0;53689:56;;-1:-1:-1;;;53689:56:0;;53725:10;53689:56;;;10757:51:1;10824:18;;;10817:34;;;53698:7:0;-1:-1:-1;;;;;53689:35:0;;;;10730:18:1;;53689:56:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;53681:65;;;;;;53764:35;;;53756:44;;;;;;53810:35;53816:7;53825:9;;53810:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;53810:35:0;;;;;;;;;;;;;;;;;;;;-1:-1:-1;53836:8:0;;-1:-1:-1;53836:8:0;;;;53810:35;;;53836:8;;53810:35;53836:8;53810:35;;;;;;;;;-1:-1:-1;53810:5:0;;-1:-1:-1;;;53810:35:0:i;25686:96::-;25744:7;25770:5;25774:1;25770;:5;:::i;:::-;25763:12;25686:96;-1:-1:-1;;;25686:96:0:o;59223:139::-;-1:-1:-1;;;;;59299:20:0;;;59283:13;59299:20;;;:12;:20;;;;;;;;;;;;59340:14;;;:7;:14;;;;;;;59329:26;;:10;:26::i;50857:849::-;50907:27;50937:18;;;:8;:18;;;;;50985:16;;50937:18;;50907:27;51045:539;51066:12;51062:1;:16;51045:539;;;51100:13;51116:9;51126:1;51116:12;;;;;;;;:::i;:::-;;;;;;;;;;;;;51158:15;;;:5;:15;;;;;;-1:-1:-1;;;;;51116:12:0;;;51158:22;;;;;;;;;;51116:12;;-1:-1:-1;51199:11:0;;51195:379;;51230:22;51246:5;51230:15;:22::i;:::-;-1:-1:-1;;;;;51270:14:0;;;;;;:7;:14;;;;;:24;;51288:6;;51270:14;:24;;51288:6;;51270:24;:::i;:::-;;;;-1:-1:-1;;51312:15:0;;;;:5;:15;;;;;;;;-1:-1:-1;;;;;51312:22:0;;;;;;;;;:32;;51338:6;;51312:15;:32;;51338:6;;51312:32;:::i;:::-;;;;-1:-1:-1;;51375:1:0;51366:10;;51362:148;;;51400:22;51416:6;51400:22;;:::i;:::-;;;51362:148;;;51469:22;51485:6;51469:22;;:::i;:::-;;;51362:148;51532:27;;;13157:25:1;;;13213:2;13198:18;;13191:34;;;51532:27:0;;13130:18:1;51532:27:0;;;;;;;51195:379;51086:498;;51080:4;;;;;:::i;:::-;;;;51045:539;;;;51616:12;51593:11;;:36;;;;;;;:::i;:::-;;;;-1:-1:-1;;51663:1:0;51639:21;;;:11;:21;;;;;;;;:25;;;51681:8;:18;;;;;51674:25;;;:::i;51712:1486::-;51815:16;51822:8;51815:6;:16::i;:::-;51857;;51907:40;;-1:-1:-1;;;51907:40:0;;;;;756:25:1;;;51841:13:0;;51916:7;-1:-1:-1;;;;;51907:30:0;;;;729:18:1;;51907:40:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;51883:65;;51958:23;51995:19;52028:18;52066:6;52061:126;52082:8;52078:1;:12;52061:126;;;52145:1;52131:8;52140:1;52131:11;;;;;;;;:::i;:::-;;;;;;;:15;:45;;52165:8;52174:1;52165:11;;;;;;;;:::i;:::-;;;;;;;52163:13;;;:::i;:::-;52131:45;;;52149:8;52158:1;52149:11;;;;;;;;:::i;:::-;;;;;;;52131:45;52111:65;;;;:::i;:::-;;-1:-1:-1;52092:3:0;;;;:::i;:::-;;;;52061:126;;;;52202:6;52197:830;52218:8;52214:1;:12;52197:830;;;52247:13;52263:9;52273:1;52263:12;;;;;;;;:::i;:::-;;;;;;;52247:28;;52294:21;52309:5;-1:-1:-1;;;;;59896:13:0;;;59866:4;59896:13;;;:6;:13;;;;;;;;;;;;59888:22;;:7;:22;;;;;;;59795:122;52294:21;52290:727;;;52335:18;52380:16;52370:7;52356:8;52365:1;52356:11;;;;;;;;:::i;:::-;;;;;;;:21;;;;:::i;:::-;:40;;;;:::i;:::-;52422:15;;;;:5;:15;;;;;;;;-1:-1:-1;;;;;52422:22:0;;;;;;;;;;52335:61;;-1:-1:-1;52422:27:0;52414:55;;;;-1:-1:-1;;;52414:55:0;;15393:2:1;52414:55:0;;;15375:21:1;15432:2;15412:18;;;15405:30;-1:-1:-1;;;15451:18:1;;;15444:45;15506:18;;52414:55:0;15191:339:1;52414:55:0;52495:16;52487:40;;;;-1:-1:-1;;;52487:40:0;;15737:2:1;52487:40:0;;;15719:21:1;15776:2;15756:18;;;15749:30;-1:-1:-1;;;15795:18:1;;;15788:41;15846:18;;52487:40:0;15535:335:1;52487:40:0;52545:22;52561:5;52545:15;:22::i;:::-;52586:18;;;;:8;:18;;;;;;;;:30;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;52586:30:0;-1:-1:-1;;;;;52586:30:0;;;;;;;;52635:14;;:7;:14;;;;;:29;;52653:11;;52586:18;52635:29;;52653:11;;52635:29;:::i;:::-;;;;-1:-1:-1;;52682:15:0;;;;:5;:15;;;;;;;;-1:-1:-1;;;;;52682:22:0;;;;;;;;;:37;;52708:11;;52682:15;:37;;52708:11;;52682:37;:::i;:::-;;;;-1:-1:-1;;52755:1:0;52741:15;;52737:114;;;;;;52819:13;52821:11;52819:13;:::i;:::-;52805:27;;52737:114;52868:26;52883:11;52868:26;;:::i;:::-;;-1:-1:-1;52912:27:0;52928:11;52912:27;;:::i;:::-;52962:40;;;13157:25:1;;;13213:2;13198:18;;13191:34;;;52912:27:0;;-1:-1:-1;52968:10:0;;52962:40;;13130:18:1;52962:40:0;;;;;;;52317:700;52290:727;-1:-1:-1;52228:3:0;;;;:::i;:::-;;;;52197:830;;;;53054:1;53040:11;:15;53036:55;;;53057:34;;-1:-1:-1;;;53057:34:0;;;;;756:25:1;;;53066:7:0;-1:-1:-1;;;;;53057:24:0;;;;729:18:1;;53057:34:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;53036:55;53124:12;53101:11;;:36;;;;;;;:::i;:::-;;;;-1:-1:-1;;53147:21:0;;;;:11;:21;;;;;;:44;;;;-1:-1:-1;;;;;;51712:1486:0:o;26396:96::-;26454:7;26480:5;26484:1;26480;:5;:::i;26781:96::-;26839:7;26865:5;26869:1;26865;:5;:::i;26053:96::-;26111:7;26137:5;26141:1;26137;:5;:::i;59684:105::-;-1:-1:-1;;;;;59768:13:0;;;;;;;:6;:13;;;;;;59752:30;;59768:13;59752:15;:30::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:131:1:-;-1:-1:-1;;;;;89:31:1;;79:42;;69:70;;135:1;132;125:12;150:247;209:6;262:2;250:9;241:7;237:23;233:32;230:52;;;278:1;275;268:12;230:52;317:9;304:23;336:31;361:5;336:31;:::i;792:118::-;878:5;871:13;864:21;857:5;854:32;844:60;;900:1;897;890:12;915:450;989:6;997;1005;1058:2;1046:9;1037:7;1033:23;1029:32;1026:52;;;1074:1;1071;1064:12;1026:52;1113:9;1100:23;1132:31;1157:5;1132:31;:::i;:::-;1182:5;-1:-1:-1;1234:2:1;1219:18;;1206:32;;-1:-1:-1;1290:2:1;1275:18;;1262:32;1303:30;1262:32;1303:30;:::i;:::-;1352:7;1342:17;;;915:450;;;;;:::o;1370:180::-;1429:6;1482:2;1470:9;1461:7;1457:23;1453:32;1450:52;;;1498:1;1495;1488:12;1450:52;-1:-1:-1;1521:23:1;;1370:180;-1:-1:-1;1370:180:1:o;1555:461::-;1608:3;1646:5;1640:12;1673:6;1668:3;1661:19;1699:4;1728:2;1723:3;1719:12;1712:19;;1765:2;1758:5;1754:14;1786:1;1796:195;1810:6;1807:1;1804:13;1796:195;;;1875:13;;-1:-1:-1;;;;;1871:39:1;1859:52;;1931:12;;;;1966:15;;;;1907:1;1825:9;1796:195;;;-1:-1:-1;2007:3:1;;1555:461;-1:-1:-1;;;;;1555:461:1:o;2021:261::-;2200:2;2189:9;2182:21;2163:4;2220:56;2272:2;2261:9;2257:18;2249:6;2220:56;:::i;2637:127::-;2698:10;2693:3;2689:20;2686:1;2679:31;2729:4;2726:1;2719:15;2753:4;2750:1;2743:15;2769:275;2840:2;2834:9;2905:2;2886:13;;-1:-1:-1;;2882:27:1;2870:40;;2940:18;2925:34;;2961:22;;;2922:62;2919:88;;;2987:18;;:::i;:::-;3023:2;3016:22;2769:275;;-1:-1:-1;2769:275:1:o;3049:183::-;3109:4;3142:18;3134:6;3131:30;3128:56;;;3164:18;;:::i;:::-;-1:-1:-1;3209:1:1;3205:14;3221:4;3201:25;;3049:183::o;3237:737::-;3291:5;3344:3;3337:4;3329:6;3325:17;3321:27;3311:55;;3362:1;3359;3352:12;3311:55;3398:6;3385:20;3424:4;3448:60;3464:43;3504:2;3464:43;:::i;:::-;3448:60;:::i;:::-;3542:15;;;3628:1;3624:10;;;;3612:23;;3608:32;;;3573:12;;;;3652:15;;;3649:35;;;3680:1;3677;3670:12;3649:35;3716:2;3708:6;3704:15;3728:217;3744:6;3739:3;3736:15;3728:217;;;3824:3;3811:17;3841:31;3866:5;3841:31;:::i;:::-;3885:18;;3923:12;;;;3761;;3728:217;;;-1:-1:-1;3963:5:1;3237:737;-1:-1:-1;;;;;;3237:737:1:o;3979:1385::-;4122:6;4130;4183:2;4171:9;4162:7;4158:23;4154:32;4151:52;;;4199:1;4196;4189:12;4151:52;4239:9;4226:23;4268:18;4309:2;4301:6;4298:14;4295:34;;;4325:1;4322;4315:12;4295:34;4348:61;4401:7;4392:6;4381:9;4377:22;4348:61;:::i;:::-;4338:71;;4428:2;4418:12;;4483:2;4472:9;4468:18;4455:32;4512:2;4502:8;4499:16;4496:36;;;4528:1;4525;4518:12;4496:36;4551:24;;4606:4;4598:13;;4594:27;-1:-1:-1;4584:55:1;;4635:1;4632;4625:12;4584:55;4671:2;4658:16;4694:60;4710:43;4750:2;4710:43;:::i;4694:60::-;4788:15;;;4870:1;4866:10;;;;4858:19;;4854:28;;;4819:12;;;;4894:19;;;4891:39;;;4926:1;4923;4916:12;4891:39;4958:2;4954;4950:11;4970:364;4986:6;4981:3;4978:15;4970:364;;;5072:3;5059:17;5108:2;5095:11;5092:19;5089:109;;;5152:1;5181:2;5177;5170:14;5089:109;5223:68;5283:7;5278:2;5264:11;5260:2;5256:20;5252:29;5223:68;:::i;:::-;5211:81;;-1:-1:-1;5312:12:1;;;;5003;;4970:364;;;4974:3;5353:5;5343:15;;;;;;;;3979:1385;;;;;:::o;5369:315::-;5437:6;5445;5498:2;5486:9;5477:7;5473:23;5469:32;5466:52;;;5514:1;5511;5504:12;5466:52;5550:9;5537:23;5527:33;;5610:2;5599:9;5595:18;5582:32;5623:31;5648:5;5623:31;:::i;:::-;5673:5;5663:15;;;5369:315;;;;;:::o;5916:309::-;5981:6;5989;6042:2;6030:9;6021:7;6017:23;6013:32;6010:52;;;6058:1;6055;6048:12;6010:52;6094:9;6081:23;6071:33;;6154:2;6143:9;6139:18;6126:32;6167:28;6189:5;6167:28;:::i;6230:377::-;6304:6;6312;6320;6373:2;6361:9;6352:7;6348:23;6344:32;6341:52;;;6389:1;6386;6379:12;6341:52;6425:9;6412:23;6402:33;;6482:2;6471:9;6467:18;6454:32;6444:42;;6536:2;6525:9;6521:18;6508:32;6549:28;6571:5;6549:28;:::i;6612:383::-;6689:6;6697;6705;6758:2;6746:9;6737:7;6733:23;6729:32;6726:52;;;6774:1;6771;6764:12;6726:52;6810:9;6797:23;6787:33;;6870:2;6859:9;6855:18;6842:32;6883:31;6908:5;6883:31;:::i;:::-;6612:383;;6933:5;;-1:-1:-1;;;6985:2:1;6970:18;;;;6957:32;;6612:383::o;7180:248::-;7248:6;7256;7309:2;7297:9;7288:7;7284:23;7280:32;7277:52;;;7325:1;7322;7315:12;7277:52;-1:-1:-1;;7348:23:1;;;7418:2;7403:18;;;7390:32;;-1:-1:-1;7180:248:1:o;7848:367::-;7911:8;7921:6;7975:3;7968:4;7960:6;7956:17;7952:27;7942:55;;7993:1;7990;7983:12;7942:55;-1:-1:-1;8016:20:1;;8059:18;8048:30;;8045:50;;;8091:1;8088;8081:12;8045:50;8128:4;8120:6;8116:17;8104:29;;8188:3;8181:4;8171:6;8168:1;8164:14;8156:6;8152:27;8148:38;8145:47;8142:67;;;8205:1;8202;8195:12;8142:67;7848:367;;;;;:::o;8220:840::-;8350:6;8358;8366;8374;8382;8435:2;8423:9;8414:7;8410:23;8406:32;8403:52;;;8451:1;8448;8441:12;8403:52;8487:9;8474:23;8464:33;;8548:2;8537:9;8533:18;8520:32;8571:18;8612:2;8604:6;8601:14;8598:34;;;8628:1;8625;8618:12;8598:34;8667:70;8729:7;8720:6;8709:9;8705:22;8667:70;:::i;:::-;8756:8;;-1:-1:-1;8641:96:1;-1:-1:-1;8844:2:1;8829:18;;8816:32;;-1:-1:-1;8860:16:1;;;8857:36;;;8889:1;8886;8879:12;8857:36;;8928:72;8992:7;8981:8;8970:9;8966:24;8928:72;:::i;:::-;8220:840;;;;-1:-1:-1;8220:840:1;;-1:-1:-1;9019:8:1;;8902:98;8220:840;-1:-1:-1;;;8220:840:1:o;9756:127::-;9817:10;9812:3;9808:20;9805:1;9798:31;9848:4;9845:1;9838:15;9872:4;9869:1;9862:15;9888:125;9928:4;9956:1;9953;9950:8;9947:34;;;9961:18;;:::i;:::-;-1:-1:-1;9998:9:1;;9888:125::o;10327:251::-;10397:6;10450:2;10438:9;10429:7;10425:23;10421:32;10418:52;;;10466:1;10463;10456:12;10418:52;10498:9;10492:16;10517:31;10542:5;10517:31;:::i;10862:245::-;10929:6;10982:2;10970:9;10961:7;10957:23;10953:32;10950:52;;;10998:1;10995;10988:12;10950:52;11030:9;11024:16;11049:28;11071:5;11049:28;:::i;11818:127::-;11879:10;11874:3;11870:20;11867:1;11860:31;11910:4;11907:1;11900:15;11934:4;11931:1;11924:15;11950:358;-1:-1:-1;;;;;12157:32:1;;12139:51;;12226:2;12221;12206:18;;12199:30;;;-1:-1:-1;;12246:56:1;;12283:18;;12275:6;12246:56;:::i;:::-;12238:64;11950:358;-1:-1:-1;;;;11950:358:1:o;12313:135::-;12352:3;-1:-1:-1;;12373:17:1;;12370:43;;;12393:18;;:::i;:::-;-1:-1:-1;12440:1:1;12429:13;;12313:135::o;12453:336::-;12655:2;12637:21;;;12694:2;12674:18;;;12667:30;-1:-1:-1;;;12728:2:1;12713:18;;12706:42;12780:2;12765:18;;12453:336::o;12794:184::-;12864:6;12917:2;12905:9;12896:7;12892:23;12888:32;12885:52;;;12933:1;12930;12923:12;12885:52;-1:-1:-1;12956:16:1;;12794:184;-1:-1:-1;12794:184:1:o;13236:128::-;13276:3;13307:1;13303:6;13300:1;13297:13;13294:39;;;13313:18;;:::i;:::-;-1:-1:-1;13349:9:1;;13236:128::o;13369:267::-;13408:4;13437:9;;;13462:10;;-1:-1:-1;;;13481:19:1;;13474:27;;13458:44;13455:70;;;13505:18;;:::i;:::-;-1:-1:-1;;;;;13552:27:1;;13545:35;;13537:44;;13534:70;;;13584:18;;:::i;:::-;-1:-1:-1;;13621:9:1;;13369:267::o;13641:265::-;13680:3;13708:9;;;13733:10;;-1:-1:-1;;;;;13752:27:1;;;13745:35;;13729:52;13726:78;;;13784:18;;:::i;:::-;-1:-1:-1;;;13831:19:1;;;13824:27;;13816:36;;13813:62;;;13855:18;;:::i;:::-;-1:-1:-1;;13891:9:1;;13641:265::o;14162:136::-;14197:3;-1:-1:-1;;;14218:22:1;;14215:48;;;14243:18;;:::i;:::-;-1:-1:-1;14283:1:1;14279:13;;14162:136::o;14303:553::-;14342:7;-1:-1:-1;;;;;14412:9:1;;;14440;;;14465:11;;;14484:10;;;14478:17;;14461:35;14458:61;;;14499:18;;:::i;:::-;-1:-1:-1;;;14575:1:1;14568:9;;14593:11;;;14613;;;14606:19;;14589:37;14586:63;;;14629:18;;:::i;:::-;14675:1;14672;14668:9;14658:19;;14722:1;14718:2;14713:11;14710:1;14706:19;14701:2;14697;14693:11;14689:37;14686:63;;;14729:18;;:::i;:::-;14794:1;14790:2;14785:11;14782:1;14778:19;14773:2;14769;14765:11;14761:37;14758:63;;;14801:18;;:::i;:::-;-1:-1:-1;;;14841:9:1;;;;;14303:553;-1:-1:-1;;;14303:553:1:o;14861:127::-;14922:10;14917:3;14913:20;14910:1;14903:31;14953:4;14950:1;14943:15;14977:4;14974:1;14967:15;14993:193;15032:1;15058;15048:35;;15063:18;;:::i;:::-;-1:-1:-1;;;15099:18:1;;-1:-1:-1;;15119:13:1;;15095:38;15092:64;;;15136:18;;:::i;:::-;-1:-1:-1;15170:10:1;;14993:193::o;15875:168::-;15915:7;15981:1;15977;15973:6;15969:14;15966:1;15963:21;15958:1;15951:9;15944:17;15940:45;15937:71;;;15988:18;;:::i;:::-;-1:-1:-1;16028:9:1;;15875:168::o;16048:120::-;16088:1;16114;16104:35;;16119:18;;:::i;:::-;-1:-1:-1;16153:9:1;;16048:120::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2119400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"LpOfPid(address)": "2646",
								"attachTokenToGauge(uint256,address)": "infinite",
								"claimRewards(address[],address[][])": "infinite",
								"createGauge(address,uint256,bool)": "infinite",
								"detachTokenFromGauge(uint256,address)": "infinite",
								"distribute(address)": "infinite",
								"duration()": "241",
								"emitDeposit(uint256,address,uint256)": "4790",
								"emitWithdraw(uint256,address,uint256)": "4778",
								"gaugeFactory()": "infinite",
								"gauges(address)": "2585",
								"getPoolVote(uint256)": "infinite",
								"isGauge(address)": "2614",
								"massUpdatePools()": "infinite",
								"minTokenReward()": "2362",
								"mintMulti()": "2363",
								"operatable()": "2393",
								"operator()": "infinite",
								"owner()": "infinite",
								"period()": "2427",
								"periodEndBlock()": "2451",
								"poke(uint256)": "infinite",
								"poolForGauge(address)": "2588",
								"poolInfo(uint256)": "8990",
								"poolLength()": "2350",
								"poolVote(uint256,uint256)": "4739",
								"pools(uint256)": "4714",
								"reset(uint256)": "infinite",
								"set(uint256,uint256,bool)": "infinite",
								"setHalvingPeriod(uint256)": "infinite",
								"setMinTokenReward(uint256)": "infinite",
								"setMintMulti(uint256)": "infinite",
								"setOperContract(address)": "infinite",
								"setTokenPerBlock(uint256,bool)": "infinite",
								"startBlock()": "infinite",
								"swapToken()": "2414",
								"tokenPerBlock()": "2429",
								"totalAllocPoint()": "2407",
								"totalWeight()": "2406",
								"updateAll()": "infinite",
								"updatePool(uint256)": "infinite",
								"usedWeights(uint256)": "2483",
								"veToken()": "infinite",
								"vote(uint256,address[],int256[])": "infinite",
								"votes(uint256,address)": "2682",
								"weights(address)": "2668"
							},
							"internal": {
								"_updateForGauge(address)": "infinite",
								"_updatePoolInfo(address)": "infinite",
								"isGaugeForPool(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 54066,
									"end": 59920,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 54066,
									"end": 59920,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 54066,
									"end": 59920,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 46449,
									"end": 46456,
									"name": "PUSH",
									"source": 0,
									"value": "26DB992A3B18000"
								},
								{
									"begin": 46417,
									"end": 46456,
									"name": "PUSH",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 46417,
									"end": 46456,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 54811,
									"end": 54812,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 54778,
									"end": 54812,
									"name": "PUSH",
									"source": 0,
									"value": "D"
								},
								{
									"begin": 54778,
									"end": 54812,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 55257,
									"end": 55559,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 55257,
									"end": 55559,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 55257,
									"end": 55559,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 55257,
									"end": 55559,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 55257,
									"end": 55559,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 55257,
									"end": 55559,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 55257,
									"end": 55559,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 55257,
									"end": 55559,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 55257,
									"end": 55559,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 55257,
									"end": 55559,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 55257,
									"end": 55559,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 55257,
									"end": 55559,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 55257,
									"end": 55559,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 55257,
									"end": 55559,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 55257,
									"end": 55559,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 55257,
									"end": 55559,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 55257,
									"end": 55559,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 55257,
									"end": 55559,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 55257,
									"end": 55559,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 55257,
									"end": 55559,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 55257,
									"end": 55559,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 55257,
									"end": 55559,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 55257,
									"end": 55559,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 55257,
									"end": 55559,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 55257,
									"end": 55559,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55257,
									"end": 55559,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 55257,
									"end": 55559,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 55257,
									"end": 55559,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 55257,
									"end": 55559,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 55257,
									"end": 55559,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 55257,
									"end": 55559,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 55257,
									"end": 55559,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3090,
									"end": 3091,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3195,
									"end": 3202,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3195,
									"end": 3217,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3195,
									"end": 3217,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3195,
									"end": 3217,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 44833,
									"end": 44863,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 44833,
									"end": 44863,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 44833,
									"end": 44863,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 44833,
									"end": 44863,
									"name": "DUP11",
									"source": 0
								},
								{
									"begin": 44833,
									"end": 44863,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 44833,
									"end": 44863,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 44833,
									"end": 44863,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 44833,
									"end": 44863,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 44833,
									"end": 44863,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 44833,
									"end": 44863,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 44833,
									"end": 44863,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 44878,
									"end": 44916,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 44878,
									"end": 44916,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 44833,
									"end": 44863,
									"name": "DUP10",
									"source": 0
								},
								{
									"begin": 44833,
									"end": 44863,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 55462,
									"end": 55466,
									"name": "DUP10",
									"source": 0
								},
								{
									"begin": 55462,
									"end": 55466,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 55468,
									"end": 55478,
									"name": "DUP9",
									"source": 0
								},
								{
									"begin": 55468,
									"end": 55478,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 55480,
									"end": 55494,
									"name": "DUP9",
									"source": 0
								},
								{
									"begin": 55480,
									"end": 55494,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 55496,
									"end": 55507,
									"name": "DUP9",
									"source": 0
								},
								{
									"begin": 55496,
									"end": 55507,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 55509,
									"end": 55516,
									"name": "DUP9",
									"source": 0
								},
								{
									"begin": 55509,
									"end": 55516,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 44833,
									"end": 44863,
									"name": "DUP9",
									"source": 0
								},
								{
									"begin": 44833,
									"end": 44863,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 55468,
									"end": 55478,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 55468,
									"end": 55478,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 55480,
									"end": 55494,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 55480,
									"end": 55494,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 55496,
									"end": 55507,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 55496,
									"end": 55507,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 55509,
									"end": 55516,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 55509,
									"end": 55516,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 44833,
									"end": 44863,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 44833,
									"end": 44863,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 44878,
									"end": 44916,
									"name": "PUSH",
									"source": 0,
									"value": "3CCBB406B985DD76FE05E172B432487A2FF9FE4257642D3ACC350F167CB1D577"
								},
								{
									"begin": 44878,
									"end": 44916,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3195,
									"end": 3202,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3195,
									"end": 3202,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 44878,
									"end": 44916,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 46666,
									"end": 46699,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 46666,
									"end": 46699,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 46658,
									"end": 46718,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 46658,
									"end": 46718,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 46658,
									"end": 46718,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 46658,
									"end": 46718,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 46658,
									"end": 46718,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 46658,
									"end": 46718,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1212,
									"end": 1214,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 46658,
									"end": 46718,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 46658,
									"end": 46718,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 46658,
									"end": 46718,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1194,
									"end": 1215,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1251,
									"end": 1253,
									"name": "PUSH",
									"source": 1,
									"value": "E"
								},
								{
									"begin": 1231,
									"end": 1249,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1231,
									"end": 1249,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1231,
									"end": 1249,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1224,
									"end": 1254,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "73776170546F6B656E206973203"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "94"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1270,
									"end": 1288,
									"name": "PUSH",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1270,
									"end": 1288,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1270,
									"end": 1288,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1263,
									"end": 1307,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1324,
									"end": 1342,
									"name": "PUSH",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 1324,
									"end": 1342,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 46658,
									"end": 46718,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 46658,
									"end": 46718,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 46658,
									"end": 46718,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 46658,
									"end": 46718,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 46658,
									"end": 46718,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 46658,
									"end": 46718,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 46658,
									"end": 46718,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 46658,
									"end": 46718,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 46658,
									"end": 46718,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 46728,
									"end": 46737,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 46728,
									"end": 46750,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 46728,
									"end": 46750,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 46728,
									"end": 46750,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 46728,
									"end": 46750,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 46728,
									"end": 46750,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 46728,
									"end": 46750,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 46728,
									"end": 46750,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 46728,
									"end": 46750,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 46760,
									"end": 46773,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 46760,
									"end": 46790,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 46760,
									"end": 46790,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 46760,
									"end": 46790,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 46800,
									"end": 46824,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 46800,
									"end": 46824,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 46800,
									"end": 46824,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 46800,
									"end": 46824,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 46834,
									"end": 46840,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 46834,
									"end": 46850,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 46834,
									"end": 46850,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 46834,
									"end": 46850,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 46877,
									"end": 46901,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 46800,
									"end": 46824,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 46834,
									"end": 46850,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 46877,
									"end": 46892,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 46877,
									"end": 46892,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 46877,
									"end": 46892,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 46877,
									"end": 46892,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 46877,
									"end": 46892,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 46877,
									"end": 46892,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18446744073709551838"
								},
								{
									"begin": 46877,
									"end": 46892,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 46877,
									"end": 46901,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 46877,
									"end": 46901,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 46877,
									"end": 46901,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 46877,
									"end": 46901,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 46877,
									"end": 46901,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 46860,
									"end": 46874,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 46860,
									"end": 46901,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 46860,
									"end": 46901,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 46860,
									"end": 46901,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 46923,
									"end": 46927,
									"name": "PUSH",
									"source": 0,
									"value": "3E8"
								},
								{
									"begin": 46911,
									"end": 46920,
									"name": "PUSH",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 46911,
									"end": 46927,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 50468,
									"end": 50482,
									"name": "DUP12",
									"source": 0
								},
								{
									"begin": 50468,
									"end": 50482,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 50468,
									"end": 50482,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 50468,
									"end": 50482,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 50468,
									"end": 50482,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50468,
									"end": 50482,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "7E062A35"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 50468,
									"end": 50482,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 50468,
									"end": 50482,
									"name": "SWAP8",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 50499,
									"end": 50519,
									"name": "PUSH",
									"source": 0,
									"value": "FC0C546A"
								},
								{
									"begin": 50499,
									"end": 50519,
									"name": "SWAP7",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "SWAP6",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 50468,
									"end": 50482,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "GAS",
									"source": 0
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "STATICCALL",
									"source": 0
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "RETURNDATACOPY",
									"source": 0
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "RETURNDATASIZE",
									"source": 0
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 50499,
									"end": 50521,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 50492,
									"end": 50521,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50492,
									"end": 50521,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 50492,
									"end": 50521,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 50492,
									"end": 50521,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 50492,
									"end": 50521,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 55529,
									"end": 55551,
									"name": "SWAP11",
									"source": 0
								},
								{
									"begin": 55529,
									"end": 55551,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 55529,
									"end": 55551,
									"name": "SWAP11",
									"source": 0
								},
								{
									"begin": 55529,
									"end": 55551,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 55529,
									"end": 55551,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 55529,
									"end": 55551,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 54066,
									"end": 59920,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 54066,
									"end": 59920,
									"name": "SWAP11",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 54066,
									"end": 59920,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 25686,
									"end": 25782,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 25686,
									"end": 25782,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25744,
									"end": 25751,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25770,
									"end": 25775,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 25774,
									"end": 25775,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 25770,
									"end": 25771,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 25770,
									"end": 25775,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 25770,
									"end": 25775,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 25770,
									"end": 25775,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 25770,
									"end": 25775,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25763,
									"end": 25775,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 25686,
									"end": 25782,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 25686,
									"end": 25782,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 145,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 14,
									"end": 145,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 89,
									"end": 120,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 89,
									"end": 120,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 79,
									"end": 121,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 79,
									"end": 121,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 69,
									"end": 139,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 69,
									"end": 139,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 135,
									"end": 136,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 132,
									"end": 133,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 125,
									"end": 137,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 69,
									"end": 139,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 69,
									"end": 139,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14,
									"end": 145,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 145,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 150,
									"end": 1005,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 150,
									"end": 1005,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 289,
									"end": 295,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 297,
									"end": 303,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 305,
									"end": 311,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 313,
									"end": 319,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 321,
									"end": 327,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 329,
									"end": 335,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 337,
									"end": 343,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 390,
									"end": 393,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 378,
									"end": 387,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 369,
									"end": 376,
									"name": "DUP11",
									"source": 1
								},
								{
									"begin": 365,
									"end": 388,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 361,
									"end": 394,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 358,
									"end": 411,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 358,
									"end": 411,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 358,
									"end": 411,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 407,
									"end": 408,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 404,
									"end": 405,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 397,
									"end": 409,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 358,
									"end": 411,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 358,
									"end": 411,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 439,
									"end": 448,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 433,
									"end": 449,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 458,
									"end": 489,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 458,
									"end": 489,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 458,
									"end": 489,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 458,
									"end": 489,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 458,
									"end": 489,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 558,
									"end": 560,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 543,
									"end": 561,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 543,
									"end": 561,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 537,
									"end": 562,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 508,
									"end": 513,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 508,
									"end": 513,
									"name": "SWAP8",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 571,
									"end": 604,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 537,
									"end": 562,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 571,
									"end": 604,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 571,
									"end": 604,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 571,
									"end": 604,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 571,
									"end": 604,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 675,
									"end": 677,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 660,
									"end": 678,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 660,
									"end": 678,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 654,
									"end": 679,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 623,
									"end": 630,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 623,
									"end": 630,
									"name": "SWAP7",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 688,
									"end": 721,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 654,
									"end": 679,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 688,
									"end": 721,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 688,
									"end": 721,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 688,
									"end": 721,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 688,
									"end": 721,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 792,
									"end": 794,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 777,
									"end": 795,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 777,
									"end": 795,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 771,
									"end": 796,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 740,
									"end": 747,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 740,
									"end": 747,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 805,
									"end": 838,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 771,
									"end": 796,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 805,
									"end": 838,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 805,
									"end": 838,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 805,
									"end": 838,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 805,
									"end": 838,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 857,
									"end": 864,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 847,
									"end": 864,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 847,
									"end": 864,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 847,
									"end": 864,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 904,
									"end": 907,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 893,
									"end": 902,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 889,
									"end": 908,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 883,
									"end": 909,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 873,
									"end": 909,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 873,
									"end": 909,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 949,
									"end": 952,
									"name": "PUSH",
									"source": 1,
									"value": "A0"
								},
								{
									"begin": 938,
									"end": 947,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 934,
									"end": 953,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 928,
									"end": 954,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 918,
									"end": 954,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 918,
									"end": 954,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 994,
									"end": 997,
									"name": "PUSH",
									"source": 1,
									"value": "C0"
								},
								{
									"begin": 983,
									"end": 992,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 979,
									"end": 998,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 973,
									"end": 999,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 963,
									"end": 999,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 963,
									"end": 999,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 150,
									"end": 1005,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 150,
									"end": 1005,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 150,
									"end": 1005,
									"name": "SWAP9",
									"source": 1
								},
								{
									"begin": 150,
									"end": 1005,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 150,
									"end": 1005,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 150,
									"end": 1005,
									"name": "SWAP8",
									"source": 1
								},
								{
									"begin": 150,
									"end": 1005,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 150,
									"end": 1005,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 150,
									"end": 1005,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 150,
									"end": 1005,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 150,
									"end": 1005,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1353,
									"end": 1604,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 1353,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1423,
									"end": 1429,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1476,
									"end": 1478,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1464,
									"end": 1473,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1455,
									"end": 1462,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1451,
									"end": 1474,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1447,
									"end": 1479,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 1444,
									"end": 1496,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1444,
									"end": 1496,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1444,
									"end": 1496,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1492,
									"end": 1493,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1489,
									"end": 1490,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1482,
									"end": 1494,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1444,
									"end": 1496,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 1444,
									"end": 1496,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1524,
									"end": 1533,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1518,
									"end": 1534,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1543,
									"end": 1574,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 1568,
									"end": 1573,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1543,
									"end": 1574,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 1543,
									"end": 1574,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 1609,
									"end": 1834,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 1609,
									"end": 1834,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1649,
									"end": 1652,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1680,
									"end": 1681,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1676,
									"end": 1682,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1673,
									"end": 1674,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1670,
									"end": 1683,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1803,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1803,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1667,
									"end": 1803,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1725,
									"end": 1735,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1720,
									"end": 1723,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1716,
									"end": 1736,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1713,
									"end": 1714,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1706,
									"end": 1737,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1760,
									"end": 1764,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1757,
									"end": 1758,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1750,
									"end": 1765,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1788,
									"end": 1792,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1785,
									"end": 1786,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1778,
									"end": 1793,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1803,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1667,
									"end": 1803,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1819,
									"end": 1828,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1819,
									"end": 1828,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1609,
									"end": 1834,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 1609,
									"end": 1834,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1609,
									"end": 1834,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 54066,
									"end": 59920,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 54066,
									"end": 59920,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 54066,
									"end": 59920,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 54066,
									"end": 59920,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 54066,
									"end": 59920,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 54066,
									"end": 59920,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 54066,
									"end": 59920,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 54066,
									"end": 59920,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 54066,
									"end": 59920,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 54066,
									"end": 59920,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 54066,
									"end": 59920,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 54066,
									"end": 59920,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 54066,
									"end": 59920,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 54066,
									"end": 59920,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "3139"
								},
								{
									"begin": 54066,
									"end": 59920,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 54066,
									"end": 59920,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "2559"
								},
								{
									"begin": 54066,
									"end": 59920,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 54066,
									"end": 59920,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "2557"
								},
								{
									"begin": 54066,
									"end": 59920,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 54066,
									"end": 59920,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "2199"
								},
								{
									"begin": 54066,
									"end": 59920,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 54066,
									"end": 59920,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 54066,
									"end": 59920,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122081b25789b0e839f922afc225bcf3022ee4a0358b7f60aa32eb4ab6a884bb1e5164736f6c634300080a0033",
									".code": [
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "630B5BA1"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "A86A366D"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "B9A09FD5"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "B9A09FD5"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "D23254B4"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "DC73E49C"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "EA94EE44"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "EF78D4FD"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "FECDAD60"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "A86A366D"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "AA70FB98"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "AA79979B"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "AC4AFA38"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "B0C7044B"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "B5EC5C99"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "79E93824"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "79E93824"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "812632EC"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "96C82E57"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "A61C713A"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "A7CAC846"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "630B5BA1"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "63453AE1"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "64482F79"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "698473E3"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "71DD4BDA"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "32145F90"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "48CD4CB1"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "48CD4CB1"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "48EE26A3"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "4ADE739B"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "51EB05A6"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "53D78693"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "570CA735"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "32145F90"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "37550684"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "3B92EB23"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "411B1F77"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "4198709A"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "442DA82F"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "FB5A6B4"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "FB5A6B4"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "146650DF"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "1526FE27"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "17CAF6F1"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "20B1CB6F"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "310BD74B"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "6D6A1B2"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "81E3EDA"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "C9C7EF5"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "D52333C"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "F589D63"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54066,
											"end": 59920,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 55141,
											"end": 55188,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 55141,
											"end": 55188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55141,
											"end": 55188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 55141,
											"end": 55188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 55141,
											"end": 55188,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 55141,
											"end": 55188,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55141,
											"end": 55188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 55141,
											"end": 55188,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 55141,
											"end": 55188,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 55141,
											"end": 55188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55141,
											"end": 55188,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 55141,
											"end": 55188,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55141,
											"end": 55188,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55141,
											"end": 55188,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55141,
											"end": 55188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55141,
											"end": 55188,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55141,
											"end": 55188,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55141,
											"end": 55188,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55141,
											"end": 55188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55141,
											"end": 55188,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55141,
											"end": 55188,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 55141,
											"end": 55188,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55141,
											"end": 55188,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55141,
											"end": 55188,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55141,
											"end": 55188,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 55141,
											"end": 55188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55141,
											"end": 55188,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55141,
											"end": 55188,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 566,
											"end": 598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 566,
											"end": 598,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 566,
											"end": 598,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 548,
											"end": 599,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 548,
											"end": 599,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 536,
											"end": 538,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 521,
											"end": 539,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 55141,
											"end": 55188,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 55141,
											"end": 55188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55141,
											"end": 55188,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55141,
											"end": 55188,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55141,
											"end": 55188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55141,
											"end": 55188,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55141,
											"end": 55188,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55141,
											"end": 55188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55141,
											"end": 55188,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 55565,
											"end": 55656,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55565,
											"end": 55656,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55634,
											"end": 55642,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 55634,
											"end": 55649,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55565,
											"end": 55656,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 55565,
											"end": 55656,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55565,
											"end": 55656,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55565,
											"end": 55656,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 756,
											"end": 781,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 756,
											"end": 781,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 756,
											"end": 781,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 744,
											"end": 746,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 729,
											"end": 747,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 55565,
											"end": 55656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 610,
											"end": 787,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 55662,
											"end": 56688,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 55662,
											"end": 56688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55662,
											"end": 56688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 55662,
											"end": 56688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 55662,
											"end": 56688,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 55662,
											"end": 56688,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55662,
											"end": 56688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 55662,
											"end": 56688,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 55662,
											"end": 56688,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 55662,
											"end": 56688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55662,
											"end": 56688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 55662,
											"end": 56688,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 54735,
											"end": 54772,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 54735,
											"end": 54772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54735,
											"end": 54772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 54735,
											"end": 54772,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "3139"
										},
										{
											"begin": 54735,
											"end": 54772,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54735,
											"end": 54772,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45393,
											"end": 45646,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 45393,
											"end": 45646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45393,
											"end": 45646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 45393,
											"end": 45646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 45393,
											"end": 45646,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 45393,
											"end": 45646,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45393,
											"end": 45646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 45393,
											"end": 45646,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 45393,
											"end": 45646,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 45393,
											"end": 45646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45393,
											"end": 45646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 45393,
											"end": 45646,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 45393,
											"end": 45646,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 45393,
											"end": 45646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45393,
											"end": 45646,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 54933,
											"end": 54971,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 54933,
											"end": 54971,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54933,
											"end": 54971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 54965,
											"end": 54971,
											"name": "PUSH",
											"source": 0,
											"value": "93A80"
										},
										{
											"begin": 54933,
											"end": 54971,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54933,
											"end": 54971,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50535,
											"end": 50652,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 50535,
											"end": 50652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50535,
											"end": 50652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 50535,
											"end": 50652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 50535,
											"end": 50652,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 50535,
											"end": 50652,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50535,
											"end": 50652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 50535,
											"end": 50652,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 50535,
											"end": 50652,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 50535,
											"end": 50652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50535,
											"end": 50652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 50535,
											"end": 50652,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 50535,
											"end": 50652,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 50535,
											"end": 50652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50535,
											"end": 50652,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50535,
											"end": 50652,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50535,
											"end": 50652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 50535,
											"end": 50652,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50535,
											"end": 50652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50535,
											"end": 50652,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 50535,
											"end": 50652,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2507,
											"end": 2539,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2539,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2507,
											"end": 2539,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2489,
											"end": 2540,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2489,
											"end": 2540,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2571,
											"end": 2573,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2556,
											"end": 2574,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2556,
											"end": 2574,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2549,
											"end": 2583,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2549,
											"end": 2583,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2549,
											"end": 2583,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2549,
											"end": 2583,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2599,
											"end": 2617,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2599,
											"end": 2617,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2599,
											"end": 2617,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 2626,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2477,
											"end": 2479,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2462,
											"end": 2480,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2287,
											"end": 2632,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 54778,
											"end": 54812,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 54778,
											"end": 54812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54778,
											"end": 54812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 54778,
											"end": 54812,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 54778,
											"end": 54812,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54778,
											"end": 54812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54778,
											"end": 54812,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59368,
											"end": 59588,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 59368,
											"end": 59588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59368,
											"end": 59588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 59368,
											"end": 59588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 59368,
											"end": 59588,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 59368,
											"end": 59588,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59368,
											"end": 59588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 59368,
											"end": 59588,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 59368,
											"end": 59588,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 59368,
											"end": 59588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59368,
											"end": 59588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 59368,
											"end": 59588,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 50658,
											"end": 50851,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 50658,
											"end": 50851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50658,
											"end": 50851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 50658,
											"end": 50851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 50658,
											"end": 50851,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 50658,
											"end": 50851,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50658,
											"end": 50851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 50658,
											"end": 50851,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 50658,
											"end": 50851,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 50658,
											"end": 50851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50658,
											"end": 50851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 50658,
											"end": 50851,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 53204,
											"end": 53569,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 53204,
											"end": 53569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53204,
											"end": 53569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 53204,
											"end": 53569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 53204,
											"end": 53569,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 53204,
											"end": 53569,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 53204,
											"end": 53569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 53204,
											"end": 53569,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 53204,
											"end": 53569,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 53204,
											"end": 53569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53204,
											"end": 53569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 53204,
											"end": 53569,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 46386,
											"end": 46410,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 46386,
											"end": 46410,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46386,
											"end": 46410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 46386,
											"end": 46410,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 46386,
											"end": 46410,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 46386,
											"end": 46410,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46386,
											"end": 46410,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49799,
											"end": 49831,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 49799,
											"end": 49831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49799,
											"end": 49831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 49799,
											"end": 49831,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2557"
										},
										{
											"begin": 49799,
											"end": 49831,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49799,
											"end": 49831,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58602,
											"end": 58828,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 58602,
											"end": 58828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58602,
											"end": 58828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 58602,
											"end": 58828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 58602,
											"end": 58828,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 58602,
											"end": 58828,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58602,
											"end": 58828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 58602,
											"end": 58828,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 58602,
											"end": 58828,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 58602,
											"end": 58828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58602,
											"end": 58828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 58602,
											"end": 58828,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 46196,
											"end": 46224,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 46196,
											"end": 46224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46196,
											"end": 46224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 46196,
											"end": 46224,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 46196,
											"end": 46224,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 46196,
											"end": 46224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46196,
											"end": 46224,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46271,
											"end": 46300,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 46271,
											"end": 46300,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46271,
											"end": 46300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 46271,
											"end": 46300,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 46271,
											"end": 46300,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 46271,
											"end": 46300,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46271,
											"end": 46300,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46230,
											"end": 46265,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 46230,
											"end": 46265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46230,
											"end": 46265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 46230,
											"end": 46265,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2199"
										},
										{
											"begin": 46230,
											"end": 46265,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46230,
											"end": 46265,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44672,
											"end": 44700,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 44672,
											"end": 44700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44672,
											"end": 44700,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 44672,
											"end": 44700,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 44672,
											"end": 44700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 44672,
											"end": 44700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 44672,
											"end": 44700,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44672,
											"end": 44700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44672,
											"end": 44700,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47736,
											"end": 47935,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 47736,
											"end": 47935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47736,
											"end": 47935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 47736,
											"end": 47935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 47736,
											"end": 47935,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 47736,
											"end": 47935,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 47736,
											"end": 47935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 47736,
											"end": 47935,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 47736,
											"end": 47935,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 47736,
											"end": 47935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47736,
											"end": 47935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 47736,
											"end": 47935,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 57256,
											"end": 58182,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 57256,
											"end": 58182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57256,
											"end": 58182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 57256,
											"end": 58182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 57256,
											"end": 58182,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 57256,
											"end": 58182,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57256,
											"end": 58182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 57256,
											"end": 58182,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 57256,
											"end": 58182,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 57256,
											"end": 58182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57256,
											"end": 58182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 57256,
											"end": 58182,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 59021,
											"end": 59217,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 59021,
											"end": 59217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59021,
											"end": 59217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 59021,
											"end": 59217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 59021,
											"end": 59217,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 45179,
											"end": 45283,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 45179,
											"end": 45283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45179,
											"end": 45283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 45179,
											"end": 45283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 45179,
											"end": 45283,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 56999,
											"end": 57183,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 56999,
											"end": 57183,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56999,
											"end": 57183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 56999,
											"end": 57183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 56999,
											"end": 57183,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 59594,
											"end": 59678,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 59594,
											"end": 59678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59594,
											"end": 59678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 59594,
											"end": 59678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 59594,
											"end": 59678,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 59594,
											"end": 59678,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59594,
											"end": 59678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 59594,
											"end": 59678,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 59594,
											"end": 59678,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 59594,
											"end": 59678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59594,
											"end": 59678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 59594,
											"end": 59678,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 56694,
											"end": 56993,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 56694,
											"end": 56993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56694,
											"end": 56993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 56694,
											"end": 56993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 56694,
											"end": 56993,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 56694,
											"end": 56993,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56694,
											"end": 56993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 56694,
											"end": 56993,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 56694,
											"end": 56993,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 56694,
											"end": 56993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56694,
											"end": 56993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 56694,
											"end": 56993,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 58189,
											"end": 58411,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 58189,
											"end": 58411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58189,
											"end": 58411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 58189,
											"end": 58411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 58189,
											"end": 58411,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 58189,
											"end": 58411,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58189,
											"end": 58411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 58189,
											"end": 58411,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 58189,
											"end": 58411,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 58189,
											"end": 58411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58189,
											"end": 58411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 58189,
											"end": 58411,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 47473,
											"end": 47566,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 47473,
											"end": 47566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47473,
											"end": 47566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 47473,
											"end": 47566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 47473,
											"end": 47566,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 47473,
											"end": 47566,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 47473,
											"end": 47566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 47473,
											"end": 47566,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 47473,
											"end": 47566,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 47473,
											"end": 47566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47473,
											"end": 47566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 47473,
											"end": 47566,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 50135,
											"end": 50175,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 50135,
											"end": 50175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50135,
											"end": 50175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 50135,
											"end": 50175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 50135,
											"end": 50175,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 50135,
											"end": 50175,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50135,
											"end": 50175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 50135,
											"end": 50175,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 50135,
											"end": 50175,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 50135,
											"end": 50175,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50135,
											"end": 50175,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 50135,
											"end": 50175,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50135,
											"end": 50175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50135,
											"end": 50175,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50135,
											"end": 50175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50135,
											"end": 50175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50135,
											"end": 50175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50135,
											"end": 50175,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50135,
											"end": 50175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50135,
											"end": 50175,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 50135,
											"end": 50175,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 50135,
											"end": 50175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50135,
											"end": 50175,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46417,
											"end": 46456,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 46417,
											"end": 46456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46417,
											"end": 46456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 46417,
											"end": 46456,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 46417,
											"end": 46456,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 46417,
											"end": 46456,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46417,
											"end": 46456,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45289,
											"end": 45387,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 45289,
											"end": 45387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45289,
											"end": 45387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 45289,
											"end": 45387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 45289,
											"end": 45387,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49746,
											"end": 49769,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 49746,
											"end": 49769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49746,
											"end": 49769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 49746,
											"end": 49769,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 49746,
											"end": 49769,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 49746,
											"end": 49769,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49746,
											"end": 49769,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58417,
											"end": 58596,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 58417,
											"end": 58596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58417,
											"end": 58596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 58417,
											"end": 58596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 58417,
											"end": 58596,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 58417,
											"end": 58596,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58417,
											"end": 58596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 58417,
											"end": 58596,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 58417,
											"end": 58596,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 58417,
											"end": 58596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58417,
											"end": 58596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 58417,
											"end": 58596,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49920,
											"end": 49961,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 49920,
											"end": 49961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49920,
											"end": 49961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 49920,
											"end": 49961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 49920,
											"end": 49961,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 49920,
											"end": 49961,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 49920,
											"end": 49961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 49920,
											"end": 49961,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49920,
											"end": 49961,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 49920,
											"end": 49961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49920,
											"end": 49961,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 49920,
											"end": 49961,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49920,
											"end": 49961,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49920,
											"end": 49961,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49920,
											"end": 49961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49920,
											"end": 49961,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49920,
											"end": 49961,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49920,
											"end": 49961,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49920,
											"end": 49961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49920,
											"end": 49961,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 49920,
											"end": 49961,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 49920,
											"end": 49961,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49920,
											"end": 49961,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50071,
											"end": 50113,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 50071,
											"end": 50113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50071,
											"end": 50113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 50071,
											"end": 50113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 50071,
											"end": 50113,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 50071,
											"end": 50113,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50071,
											"end": 50113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 50071,
											"end": 50113,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 50071,
											"end": 50113,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 50071,
											"end": 50113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50071,
											"end": 50113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 50071,
											"end": 50113,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 47572,
											"end": 47677,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 47572,
											"end": 47677,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47572,
											"end": 47677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 47572,
											"end": 47677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 47572,
											"end": 47677,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 47572,
											"end": 47677,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 47572,
											"end": 47677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 47572,
											"end": 47677,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 47572,
											"end": 47677,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 47572,
											"end": 47677,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47572,
											"end": 47677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 47572,
											"end": 47677,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 55211,
											"end": 55250,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 55211,
											"end": 55250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55211,
											"end": 55250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 55211,
											"end": 55250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 55211,
											"end": 55250,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 55211,
											"end": 55250,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55211,
											"end": 55250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 55211,
											"end": 55250,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 55211,
											"end": 55250,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 55211,
											"end": 55250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55211,
											"end": 55250,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 55211,
											"end": 55250,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55211,
											"end": 55250,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55211,
											"end": 55250,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55211,
											"end": 55250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55211,
											"end": 55250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55211,
											"end": 55250,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55211,
											"end": 55250,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55211,
											"end": 55250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55211,
											"end": 55250,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55211,
											"end": 55250,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55211,
											"end": 55250,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 55211,
											"end": 55250,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55211,
											"end": 55250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55211,
											"end": 55250,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55211,
											"end": 55250,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 55211,
											"end": 55250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55211,
											"end": 55250,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55211,
											"end": 55250,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7598,
											"end": 7612,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7598,
											"end": 7612,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7591,
											"end": 7613,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7573,
											"end": 7614,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7573,
											"end": 7614,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7561,
											"end": 7563,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7546,
											"end": 7564,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 55211,
											"end": 55250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 7433,
											"end": 7620,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 55014,
											"end": 55036,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55014,
											"end": 55036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55014,
											"end": 55036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 55014,
											"end": 55036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 55014,
											"end": 55036,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 55014,
											"end": 55036,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55014,
											"end": 55036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 55014,
											"end": 55036,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 55014,
											"end": 55036,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 55014,
											"end": 55036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55014,
											"end": 55036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 55014,
											"end": 55036,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 54883,
											"end": 54925,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 54883,
											"end": 54925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54883,
											"end": 54925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 54883,
											"end": 54925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 54883,
											"end": 54925,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 54883,
											"end": 54925,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54883,
											"end": 54925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 54883,
											"end": 54925,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 54883,
											"end": 54925,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 54883,
											"end": 54925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54883,
											"end": 54925,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 54883,
											"end": 54925,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54883,
											"end": 54925,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54883,
											"end": 54925,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54883,
											"end": 54925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54883,
											"end": 54925,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54883,
											"end": 54925,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54883,
											"end": 54925,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54883,
											"end": 54925,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54883,
											"end": 54925,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 54883,
											"end": 54925,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54883,
											"end": 54925,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54883,
											"end": 54925,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 47373,
											"end": 47467,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 47373,
											"end": 47467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47373,
											"end": 47467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 47373,
											"end": 47467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 47373,
											"end": 47467,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 47373,
											"end": 47467,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 47373,
											"end": 47467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 47373,
											"end": 47467,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 47373,
											"end": 47467,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 47373,
											"end": 47467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47373,
											"end": 47467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 47373,
											"end": 47467,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 55077,
											"end": 55118,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 55077,
											"end": 55118,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55077,
											"end": 55118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 55077,
											"end": 55118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 55077,
											"end": 55118,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 55077,
											"end": 55118,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55077,
											"end": 55118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 55077,
											"end": 55118,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 55077,
											"end": 55118,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 55077,
											"end": 55118,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55077,
											"end": 55118,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 55077,
											"end": 55118,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55077,
											"end": 55118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55077,
											"end": 55118,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55077,
											"end": 55118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55077,
											"end": 55118,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55077,
											"end": 55118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55077,
											"end": 55118,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55077,
											"end": 55118,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55077,
											"end": 55118,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55077,
											"end": 55118,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 55077,
											"end": 55118,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55077,
											"end": 55118,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55077,
											"end": 55118,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 49985,
											"end": 50041,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 49985,
											"end": 50041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49985,
											"end": 50041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 49985,
											"end": 50041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 49985,
											"end": 50041,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 49985,
											"end": 50041,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 49985,
											"end": 50041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 49985,
											"end": 50041,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 49985,
											"end": 50041,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 49985,
											"end": 50041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 49985,
											"end": 50041,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 49985,
											"end": 50041,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 49985,
											"end": 50041,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49985,
											"end": 50041,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49985,
											"end": 50041,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49985,
											"end": 50041,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49985,
											"end": 50041,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 49985,
											"end": 50041,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 49985,
											"end": 50041,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49985,
											"end": 50041,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49985,
											"end": 50041,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49985,
											"end": 50041,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 49985,
											"end": 50041,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 49985,
											"end": 50041,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49985,
											"end": 50041,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 49985,
											"end": 50041,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49985,
											"end": 50041,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49985,
											"end": 50041,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 49985,
											"end": 50041,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49985,
											"end": 50041,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 49985,
											"end": 50041,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 49985,
											"end": 50041,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 49985,
											"end": 50041,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 49985,
											"end": 50041,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 46166,
											"end": 46189,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 46166,
											"end": 46189,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46166,
											"end": 46189,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 46166,
											"end": 46189,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 46166,
											"end": 46189,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 46166,
											"end": 46189,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 46166,
											"end": 46189,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46166,
											"end": 46189,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46166,
											"end": 46189,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 58834,
											"end": 59015,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 58834,
											"end": 59015,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58834,
											"end": 59015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 58834,
											"end": 59015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 58834,
											"end": 59015,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 58834,
											"end": 59015,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58834,
											"end": 59015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 58834,
											"end": 59015,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 58834,
											"end": 59015,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 58834,
											"end": 59015,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58834,
											"end": 59015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 58834,
											"end": 59015,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 46358,
											"end": 46379,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 46358,
											"end": 46379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46358,
											"end": 46379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 46358,
											"end": 46379,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 46358,
											"end": 46379,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 46358,
											"end": 46379,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 46358,
											"end": 46379,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53576,
											"end": 53852,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 53576,
											"end": 53852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53576,
											"end": 53852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 53576,
											"end": 53852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 53576,
											"end": 53852,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 53576,
											"end": 53852,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 53576,
											"end": 53852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 53576,
											"end": 53852,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 53576,
											"end": 53852,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 53576,
											"end": 53852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53576,
											"end": 53852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 53576,
											"end": 53852,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 55662,
											"end": 56688,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 55662,
											"end": 56688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 55782,
											"end": 55795,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55782,
											"end": 55795,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55782,
											"end": 55795,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55755,
											"end": 55762,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55782,
											"end": 55795,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55782,
											"end": 55795,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55782,
											"end": 55795,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55782,
											"end": 55788,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 55782,
											"end": 55795,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55782,
											"end": 55795,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55782,
											"end": 55795,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55782,
											"end": 55795,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55782,
											"end": 55795,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55782,
											"end": 55795,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55755,
											"end": 55762,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55755,
											"end": 55762,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55782,
											"end": 55795,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55782,
											"end": 55811,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55774,
											"end": 55822,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 55774,
											"end": 55822,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55774,
											"end": 55822,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55774,
											"end": 55822,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 55774,
											"end": 55822,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55774,
											"end": 55822,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9267,
											"end": 9269,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 55774,
											"end": 55822,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55774,
											"end": 55822,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55774,
											"end": 55822,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9249,
											"end": 9270,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9306,
											"end": 9307,
											"name": "PUSH",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 9286,
											"end": 9304,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9286,
											"end": 9304,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9286,
											"end": 9304,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9279,
											"end": 9308,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657869737473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9324,
											"end": 9342,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9324,
											"end": 9342,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9324,
											"end": 9342,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9317,
											"end": 9353,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9370,
											"end": 9388,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9370,
											"end": 9388,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 55774,
											"end": 55822,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 55774,
											"end": 55822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55774,
											"end": 55822,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55774,
											"end": 55822,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55774,
											"end": 55822,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55774,
											"end": 55822,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55774,
											"end": 55822,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55774,
											"end": 55822,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55774,
											"end": 55822,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 55774,
											"end": 55822,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 55774,
											"end": 55822,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 55841,
											"end": 55869,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 55841,
											"end": 55869,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55833,
											"end": 55902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 55833,
											"end": 55902,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55833,
											"end": 55902,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55833,
											"end": 55902,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 55833,
											"end": 55902,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55833,
											"end": 55902,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9601,
											"end": 9603,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 55833,
											"end": 55902,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55833,
											"end": 55902,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55833,
											"end": 55902,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9583,
											"end": 9604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9640,
											"end": 9642,
											"name": "PUSH",
											"source": 1,
											"value": "1C"
										},
										{
											"begin": 9620,
											"end": 9638,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9620,
											"end": 9638,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9620,
											"end": 9638,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9613,
											"end": 9643,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9679,
											"end": 9709,
											"name": "PUSH",
											"source": 1,
											"value": "5F6C70546F6B656E20697320746865207A65726F206164647265737300000000"
										},
										{
											"begin": 9659,
											"end": 9677,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9659,
											"end": 9677,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9659,
											"end": 9677,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9652,
											"end": 9710,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9727,
											"end": 9745,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9727,
											"end": 9745,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 55833,
											"end": 55902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 9399,
											"end": 9751,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 55833,
											"end": 55902,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 55833,
											"end": 55902,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55916,
											"end": 55927,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55912,
											"end": 55971,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55912,
											"end": 55971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 55912,
											"end": 55971,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55943,
											"end": 55960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 55943,
											"end": 55958,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 55943,
											"end": 55960,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 55943,
											"end": 55960,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 55943,
											"end": 55960,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55980,
											"end": 56003,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56021,
											"end": 56031,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2199"
										},
										{
											"begin": 56006,
											"end": 56018,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 56006,
											"end": 56031,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 56006,
											"end": 56059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 56006,
											"end": 56059,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56049,
											"end": 56059,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2199"
										},
										{
											"begin": 56006,
											"end": 56059,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 56006,
											"end": 56059,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56006,
											"end": 56059,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 56006,
											"end": 56059,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56034,
											"end": 56046,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 56006,
											"end": 56059,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 56006,
											"end": 56059,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56087,
											"end": 56102,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 56087,
											"end": 56102,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55980,
											"end": 56059,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55980,
											"end": 56059,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 56087,
											"end": 56119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 56087,
											"end": 56119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56107,
											"end": 56118,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 56087,
											"end": 56106,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 56087,
											"end": 56119,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 56087,
											"end": 56119,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 56087,
											"end": 56119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56069,
											"end": 56084,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 56069,
											"end": 56119,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 56143,
											"end": 56265,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56143,
											"end": 56265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56143,
											"end": 56265,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56143,
											"end": 56265,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 56143,
											"end": 56265,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56143,
											"end": 56265,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56143,
											"end": 56265,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56143,
											"end": 56265,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 56143,
											"end": 56265,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 56143,
											"end": 56265,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56143,
											"end": 56265,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56143,
											"end": 56265,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56143,
											"end": 56265,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56143,
											"end": 56265,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56143,
											"end": 56265,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56143,
											"end": 56265,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56143,
											"end": 56265,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 56143,
											"end": 56265,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56143,
											"end": 56265,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56143,
											"end": 56265,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 56143,
											"end": 56265,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56143,
											"end": 56265,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56143,
											"end": 56265,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 56143,
											"end": 56265,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56143,
											"end": 56265,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56129,
											"end": 56137,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 56129,
											"end": 56266,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56129,
											"end": 56266,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56129,
											"end": 56266,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 56129,
											"end": 56266,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56129,
											"end": 56266,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56129,
											"end": 56266,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56129,
											"end": 56266,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56129,
											"end": 56266,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 56129,
											"end": 56266,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56129,
											"end": 56266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56129,
											"end": 56266,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56129,
											"end": 56266,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 56129,
											"end": 56266,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56129,
											"end": 56266,
											"name": "PUSH",
											"source": 0,
											"value": "BB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FD"
										},
										{
											"begin": 56129,
											"end": 56266,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 56129,
											"end": 56266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56129,
											"end": 56266,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 56129,
											"end": 56266,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 56129,
											"end": 56266,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56129,
											"end": 56266,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56129,
											"end": 56266,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56129,
											"end": 56266,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56129,
											"end": 56266,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 56129,
											"end": 56266,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56129,
											"end": 56266,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56129,
											"end": 56266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56129,
											"end": 56266,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 56129,
											"end": 56266,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56129,
											"end": 56266,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 56129,
											"end": 56266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56129,
											"end": 56266,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 56129,
											"end": 56266,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 56129,
											"end": 56266,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 56129,
											"end": 56266,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56129,
											"end": 56266,
											"name": "PUSH",
											"source": 0,
											"value": "BB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FE"
										},
										{
											"begin": 56129,
											"end": 56266,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56129,
											"end": 56266,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56129,
											"end": 56266,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 56129,
											"end": 56266,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56129,
											"end": 56266,
											"name": "PUSH",
											"source": 0,
											"value": "BB7B4A454DC3493923482F07822329ED19E8244EFF582CC204F8554C3620C3FF"
										},
										{
											"begin": 56129,
											"end": 56266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56129,
											"end": 56266,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56129,
											"end": 56266,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56129,
											"end": 56266,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 55634,
											"end": 55649,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55634,
											"end": 55649,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56302,
											"end": 56318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 56302,
											"end": 56318,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56302,
											"end": 56318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56302,
											"end": 56318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 56302,
											"end": 56318,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 56302,
											"end": 56318,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 56302,
											"end": 56318,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 56276,
											"end": 56299,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 56276,
											"end": 56299,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56276,
											"end": 56299,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56276,
											"end": 56299,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56276,
											"end": 56299,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56276,
											"end": 56299,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56276,
											"end": 56299,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56276,
											"end": 56283,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 56276,
											"end": 56299,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56276,
											"end": 56299,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56276,
											"end": 56299,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56276,
											"end": 56299,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56276,
											"end": 56299,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56276,
											"end": 56299,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 56276,
											"end": 56318,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 56276,
											"end": 56318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56276,
											"end": 56318,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 56276,
											"end": 56318,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E533A8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10230,
											"end": 10264,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10230,
											"end": 10264,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10230,
											"end": 10264,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10230,
											"end": 10264,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 56393,
											"end": 56400,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2557"
										},
										{
											"begin": 10300,
											"end": 10315,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10300,
											"end": 10315,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10280,
											"end": 10298,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10280,
											"end": 10298,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10280,
											"end": 10298,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10273,
											"end": 10316,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 56360,
											"end": 56372,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "3139"
										},
										{
											"begin": 56346,
											"end": 56385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56346,
											"end": 56385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56346,
											"end": 56385,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56346,
											"end": 56385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56346,
											"end": 56385,
											"name": "PUSH",
											"source": 0,
											"value": "794CEA3C"
										},
										{
											"begin": 56346,
											"end": 56385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10165,
											"end": 10183,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10165,
											"end": 10183,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 56346,
											"end": 56401,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56426,
											"end": 56435,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 56426,
											"end": 56435,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "95EA7B3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10775,
											"end": 10807,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10775,
											"end": 10807,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10775,
											"end": 10807,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10757,
											"end": 10808,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10824,
											"end": 10842,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10824,
											"end": 10842,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10824,
											"end": 10842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10817,
											"end": 10851,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 56329,
											"end": 56401,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 56329,
											"end": 56401,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 56426,
											"end": 56435,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56426,
											"end": 56435,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56426,
											"end": 56435,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56411,
											"end": 56445,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 56411,
											"end": 56445,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10730,
											"end": 10748,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10730,
											"end": 10748,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 56411,
											"end": 56469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 56479,
											"end": 56492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56479,
											"end": 56492,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 56479,
											"end": 56492,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56479,
											"end": 56492,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56479,
											"end": 56492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56479,
											"end": 56492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56479,
											"end": 56492,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56479,
											"end": 56485,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 56479,
											"end": 56492,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56479,
											"end": 56492,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56479,
											"end": 56492,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56479,
											"end": 56492,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56479,
											"end": 56492,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56479,
											"end": 56492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56479,
											"end": 56492,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56479,
											"end": 56492,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 56479,
											"end": 56501,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56479,
											"end": 56501,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56479,
											"end": 56501,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 56479,
											"end": 56501,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 56479,
											"end": 56501,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 56479,
											"end": 56501,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 56479,
											"end": 56501,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 56479,
											"end": 56501,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56479,
											"end": 56501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56479,
											"end": 56501,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 56479,
											"end": 56501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56479,
											"end": 56501,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56479,
											"end": 56501,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 56511,
											"end": 56531,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56511,
											"end": 56531,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56511,
											"end": 56523,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 56511,
											"end": 56531,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56511,
											"end": 56531,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56511,
											"end": 56531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56511,
											"end": 56531,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56511,
											"end": 56531,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 56511,
											"end": 56539,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56511,
											"end": 56539,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56511,
											"end": 56539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56511,
											"end": 56539,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 56511,
											"end": 56539,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56511,
											"end": 56539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56511,
											"end": 56539,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 56511,
											"end": 56539,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 56511,
											"end": 56539,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56511,
											"end": 56539,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 56511,
											"end": 56539,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 56549,
											"end": 56556,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 56549,
											"end": 56564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56549,
											"end": 56564,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 56549,
											"end": 56564,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56549,
											"end": 56564,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56549,
											"end": 56564,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 56549,
											"end": 56571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56549,
											"end": 56571,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 56549,
											"end": 56571,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56479,
											"end": 56501,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 56549,
											"end": 56571,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 56549,
											"end": 56571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56549,
											"end": 56571,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 56581,
											"end": 56604,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 56495,
											"end": 56501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56581,
											"end": 56596,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 56581,
											"end": 56604,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 56581,
											"end": 56604,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 56581,
											"end": 56604,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56619,
											"end": 56658,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56619,
											"end": 56658,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56640,
											"end": 56650,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 548,
											"end": 599,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 548,
											"end": 599,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 56619,
											"end": 56658,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56619,
											"end": 56658,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 56619,
											"end": 56658,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56619,
											"end": 56658,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56619,
											"end": 56658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56619,
											"end": 56658,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56619,
											"end": 56658,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56619,
											"end": 56658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56619,
											"end": 56658,
											"name": "PUSH",
											"source": 0,
											"value": "9B8203EFE7FE42185A7755B0510F87C8B693971D6A7C22520AAF683E6B124261"
										},
										{
											"begin": 56619,
											"end": 56658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 536,
											"end": 538,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 521,
											"end": 539,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 56619,
											"end": 56658,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 56619,
											"end": 56658,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 56619,
											"end": 56658,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56619,
											"end": 56658,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56619,
											"end": 56658,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 56619,
											"end": 56658,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56619,
											"end": 56658,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 56675,
											"end": 56681,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 55662,
											"end": 56688,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 55662,
											"end": 56688,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 45393,
											"end": 45646,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 45393,
											"end": 45646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45096,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 45086,
											"end": 45096,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8DA5CB5B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45108,
											"end": 45118,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 45108,
											"end": 45118,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 45086,
											"end": 45096,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45096,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45102,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 45086,
											"end": 45102,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45096,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 45086,
											"end": 45118,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45118,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 45078,
											"end": 45155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 45078,
											"end": 45155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45078,
											"end": 45155,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45078,
											"end": 45155,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 45078,
											"end": 45155,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45078,
											"end": 45155,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11314,
											"end": 11316,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 45078,
											"end": 45155,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45078,
											"end": 45155,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45078,
											"end": 45155,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11296,
											"end": 11317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11296,
											"end": 11317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11296,
											"end": 11317,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11333,
											"end": 11351,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11333,
											"end": 11351,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11333,
											"end": 11351,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11326,
											"end": 11356,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11392,
											"end": 11426,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 11372,
											"end": 11390,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11372,
											"end": 11390,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11372,
											"end": 11390,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11365,
											"end": 11427,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11444,
											"end": 11462,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 11444,
											"end": 11462,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 45078,
											"end": 45155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 11112,
											"end": 11468,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 45078,
											"end": 45155,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 45078,
											"end": 45155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 45468,
											"end": 45487,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45468,
											"end": 45487,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45460,
											"end": 45508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 45460,
											"end": 45508,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45460,
											"end": 45508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45460,
											"end": 45508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 45460,
											"end": 45508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45460,
											"end": 45508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11675,
											"end": 11677,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 45460,
											"end": 45508,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45460,
											"end": 45508,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45460,
											"end": 45508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11657,
											"end": 11678,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11714,
											"end": 11716,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 11694,
											"end": 11712,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11694,
											"end": 11712,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11694,
											"end": 11712,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11687,
											"end": 11717,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3130B2103732BB9037B832B930BA37B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11733,
											"end": 11751,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11733,
											"end": 11751,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11733,
											"end": 11751,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11726,
											"end": 11772,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11789,
											"end": 11807,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 11789,
											"end": 11807,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 45460,
											"end": 45508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 11473,
											"end": 11813,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 45460,
											"end": 45508,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 45460,
											"end": 45508,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45555,
											"end": 45565,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 45555,
											"end": 45585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45555,
											"end": 45585,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 45555,
											"end": 45585,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 45555,
											"end": 45585,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45555,
											"end": 45585,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45555,
											"end": 45585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45555,
											"end": 45585,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45555,
											"end": 45585,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 45555,
											"end": 45585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45555,
											"end": 45585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45555,
											"end": 45585,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 45600,
											"end": 45639,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45600,
											"end": 45639,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45555,
											"end": 45585,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45555,
											"end": 45585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45555,
											"end": 45585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45555,
											"end": 45585,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45555,
											"end": 45585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45600,
											"end": 45639,
											"name": "PUSH",
											"source": 0,
											"value": "3CCBB406B985DD76FE05E172B432487A2FF9FE4257642D3ACC350F167CB1D577"
										},
										{
											"begin": 45600,
											"end": 45639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 45600,
											"end": 45639,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 45450,
											"end": 45646,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45393,
											"end": 45646,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45393,
											"end": 45646,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 50535,
											"end": 50652,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 50535,
											"end": 50652,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50628,
											"end": 50645,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50628,
											"end": 50645,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50628,
											"end": 50645,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50628,
											"end": 50645,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50628,
											"end": 50636,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 50628,
											"end": 50645,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50628,
											"end": 50645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50628,
											"end": 50645,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50628,
											"end": 50645,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50628,
											"end": 50645,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50628,
											"end": 50645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50628,
											"end": 50645,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50628,
											"end": 50645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50628,
											"end": 50645,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50594,
											"end": 50610,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 50594,
											"end": 50610,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50628,
											"end": 50645,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50621,
											"end": 50645,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50535,
											"end": 50652,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50535,
											"end": 50652,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50535,
											"end": 50652,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50535,
											"end": 50652,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54818,
											"end": 54844,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 59368,
											"end": 59588,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 59368,
											"end": 59588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59468,
											"end": 59474,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59463,
											"end": 59582,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 59463,
											"end": 59582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59484,
											"end": 59491,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59484,
											"end": 59498,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59480,
											"end": 59481,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59480,
											"end": 59498,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 59463,
											"end": 59582,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59463,
											"end": 59582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 59463,
											"end": 59582,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59526,
											"end": 59533,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59534,
											"end": 59535,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59526,
											"end": 59536,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59526,
											"end": 59536,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59526,
											"end": 59536,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59526,
											"end": 59536,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 59526,
											"end": 59536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 59526,
											"end": 59536,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59526,
											"end": 59536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 59526,
											"end": 59536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 59526,
											"end": 59536,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 59526,
											"end": 59536,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 59526,
											"end": 59536,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59526,
											"end": 59536,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59526,
											"end": 59536,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 59526,
											"end": 59536,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59526,
											"end": 59536,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59526,
											"end": 59536,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59526,
											"end": 59536,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 59519,
											"end": 59547,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59519,
											"end": 59547,
											"name": "PUSH",
											"source": 0,
											"value": "31279D3D"
										},
										{
											"begin": 59548,
											"end": 59558,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 59560,
											"end": 59567,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 59568,
											"end": 59569,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 59560,
											"end": 59570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59560,
											"end": 59570,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59560,
											"end": 59570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59560,
											"end": 59570,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 59560,
											"end": 59570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 59560,
											"end": 59570,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59560,
											"end": 59570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 59560,
											"end": 59570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 59560,
											"end": 59570,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 59560,
											"end": 59570,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 59560,
											"end": 59570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59560,
											"end": 59570,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59560,
											"end": 59570,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 59560,
											"end": 59570,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59560,
											"end": 59570,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59560,
											"end": 59570,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59560,
											"end": 59570,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59519,
											"end": 59571,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59500,
											"end": 59503,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59500,
											"end": 59503,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59500,
											"end": 59503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 59500,
											"end": 59503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59500,
											"end": 59503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 59500,
											"end": 59503,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 59500,
											"end": 59503,
											"name": "tag",
											"source": 0,
											"value": "285"
										},
										{
											"begin": 59500,
											"end": 59503,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59500,
											"end": 59503,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59500,
											"end": 59503,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59500,
											"end": 59503,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59463,
											"end": 59582,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 59463,
											"end": 59582,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 59463,
											"end": 59582,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 59463,
											"end": 59582,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59463,
											"end": 59582,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59368,
											"end": 59588,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59368,
											"end": 59588,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59368,
											"end": 59588,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 50658,
											"end": 50851,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 50658,
											"end": 50851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50715,
											"end": 50772,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50715,
											"end": 50772,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "430C2081"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 50715,
											"end": 50772,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50715,
											"end": 50772,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50751,
											"end": 50761,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 50715,
											"end": 50772,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50715,
											"end": 50772,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50715,
											"end": 50772,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10757,
											"end": 10808,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10824,
											"end": 10842,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10824,
											"end": 10842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10824,
											"end": 10842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10817,
											"end": 10851,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10817,
											"end": 10851,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10817,
											"end": 10851,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 50724,
											"end": 50731,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2557"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 50715,
											"end": 50750,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50715,
											"end": 50750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50715,
											"end": 50750,
											"name": "PUSH",
											"source": 0,
											"value": "430C2081"
										},
										{
											"begin": 50715,
											"end": 50750,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10730,
											"end": 10748,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10730,
											"end": 10748,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 50715,
											"end": 50772,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50715,
											"end": 50772,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50715,
											"end": 50772,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50715,
											"end": 50772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50715,
											"end": 50772,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50715,
											"end": 50772,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 50715,
											"end": 50772,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50715,
											"end": 50772,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 50715,
											"end": 50772,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 50715,
											"end": 50772,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 50715,
											"end": 50772,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 50715,
											"end": 50772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50715,
											"end": 50772,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 50715,
											"end": 50772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 50715,
											"end": 50772,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50715,
											"end": 50772,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 50715,
											"end": 50772,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50715,
											"end": 50772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50715,
											"end": 50772,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 50715,
											"end": 50772,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 50715,
											"end": 50772,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50715,
											"end": 50772,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 50715,
											"end": 50772,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 50715,
											"end": 50772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50715,
											"end": 50772,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50715,
											"end": 50772,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50715,
											"end": 50772,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50715,
											"end": 50772,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50715,
											"end": 50772,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50715,
											"end": 50772,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50715,
											"end": 50772,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 50715,
											"end": 50772,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 50715,
											"end": 50772,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 50715,
											"end": 50772,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 50715,
											"end": 50772,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50715,
											"end": 50772,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50715,
											"end": 50772,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50715,
											"end": 50772,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50715,
											"end": 50772,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50715,
											"end": 50772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50715,
											"end": 50772,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50715,
											"end": 50772,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50715,
											"end": 50772,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50715,
											"end": 50772,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50715,
											"end": 50772,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50715,
											"end": 50772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50715,
											"end": 50772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 50715,
											"end": 50772,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50715,
											"end": 50772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50715,
											"end": 50772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 50715,
											"end": 50772,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 50715,
											"end": 50772,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 50715,
											"end": 50772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50707,
											"end": 50773,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 50707,
											"end": 50773,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50707,
											"end": 50773,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50707,
											"end": 50773,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50707,
											"end": 50773,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 50707,
											"end": 50773,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 50707,
											"end": 50773,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50783,
											"end": 50799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 50790,
											"end": 50798,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50783,
											"end": 50789,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 50783,
											"end": 50799,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 50783,
											"end": 50799,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 50783,
											"end": 50799,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50809,
											"end": 50844,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50809,
											"end": 50844,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C1F0FB9F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 50809,
											"end": 50844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50809,
											"end": 50844,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50809,
											"end": 50844,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50809,
											"end": 50844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50809,
											"end": 50844,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 756,
											"end": 781,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 756,
											"end": 781,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 756,
											"end": 781,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 50818,
											"end": 50825,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2557"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 50809,
											"end": 50834,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50809,
											"end": 50834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50809,
											"end": 50834,
											"name": "PUSH",
											"source": 0,
											"value": "C1F0FB9F"
										},
										{
											"begin": 50809,
											"end": 50834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 729,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 729,
											"end": 747,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 50809,
											"end": 50844,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50809,
											"end": 50844,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50809,
											"end": 50844,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 50809,
											"end": 50844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50809,
											"end": 50844,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 50809,
											"end": 50844,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 50809,
											"end": 50844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50809,
											"end": 50844,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50809,
											"end": 50844,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 50809,
											"end": 50844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50809,
											"end": 50844,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 50809,
											"end": 50844,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 50809,
											"end": 50844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50809,
											"end": 50844,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 50809,
											"end": 50844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 50809,
											"end": 50844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50809,
											"end": 50844,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50809,
											"end": 50844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50809,
											"end": 50844,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 50809,
											"end": 50844,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 50809,
											"end": 50844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50809,
											"end": 50844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50809,
											"end": 50844,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 50809,
											"end": 50844,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 50809,
											"end": 50844,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 50809,
											"end": 50844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50809,
											"end": 50844,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 50809,
											"end": 50844,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 50809,
											"end": 50844,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50809,
											"end": 50844,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 50809,
											"end": 50844,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50809,
											"end": 50844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50809,
											"end": 50844,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 50809,
											"end": 50844,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 50809,
											"end": 50844,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50809,
											"end": 50844,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 50809,
											"end": 50844,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 50809,
											"end": 50844,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50809,
											"end": 50844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50809,
											"end": 50844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50809,
											"end": 50844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50809,
											"end": 50844,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50658,
											"end": 50851,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50658,
											"end": 50851,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 53204,
											"end": 53569,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 53204,
											"end": 53569,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53252,
											"end": 53278,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53281,
											"end": 53299,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53281,
											"end": 53299,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53281,
											"end": 53299,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53281,
											"end": 53289,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 53281,
											"end": 53299,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53281,
											"end": 53299,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53281,
											"end": 53299,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53281,
											"end": 53299,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53281,
											"end": 53299,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53281,
											"end": 53299,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53281,
											"end": 53299,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53281,
											"end": 53299,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 53281,
											"end": 53299,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53281,
											"end": 53299,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53281,
											"end": 53299,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53252,
											"end": 53299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53309,
											"end": 53322,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53325,
											"end": 53334,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53325,
											"end": 53341,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53309,
											"end": 53341,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53309,
											"end": 53341,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53351,
											"end": 53375,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53391,
											"end": 53399,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53378,
											"end": 53400,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 53378,
											"end": 53400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53378,
											"end": 53400,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 53378,
											"end": 53400,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53378,
											"end": 53400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 53378,
											"end": 53400,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53378,
											"end": 53400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 53378,
											"end": 53400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 53378,
											"end": 53400,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 53378,
											"end": 53400,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 53378,
											"end": 53400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53378,
											"end": 53400,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53378,
											"end": 53400,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53378,
											"end": 53400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53378,
											"end": 53400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53378,
											"end": 53400,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53378,
											"end": 53400,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53378,
											"end": 53400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53378,
											"end": 53400,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53378,
											"end": 53400,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 53378,
											"end": 53400,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53378,
											"end": 53400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53378,
											"end": 53400,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53378,
											"end": 53400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53378,
											"end": 53400,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53378,
											"end": 53400,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53378,
											"end": 53400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53378,
											"end": 53400,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53378,
											"end": 53400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 53378,
											"end": 53400,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53378,
											"end": 53400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53378,
											"end": 53400,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53378,
											"end": 53400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53378,
											"end": 53400,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53378,
											"end": 53400,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53378,
											"end": 53400,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 53378,
											"end": 53400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53378,
											"end": 53400,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 53378,
											"end": 53400,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53378,
											"end": 53400,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 53378,
											"end": 53400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53378,
											"end": 53400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 53378,
											"end": 53400,
											"name": "tag",
											"source": 0,
											"value": "305"
										},
										{
											"begin": 53378,
											"end": 53400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53378,
											"end": 53400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53351,
											"end": 53400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53351,
											"end": 53400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53416,
											"end": 53422,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53411,
											"end": 53516,
											"name": "tag",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 53411,
											"end": 53516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53432,
											"end": 53440,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53428,
											"end": 53429,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53428,
											"end": 53440,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 53411,
											"end": 53516,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53411,
											"end": 53516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 53411,
											"end": 53516,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53476,
											"end": 53481,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 53476,
											"end": 53491,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53482,
											"end": 53490,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 53476,
											"end": 53491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53476,
											"end": 53491,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53476,
											"end": 53491,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53476,
											"end": 53491,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53476,
											"end": 53491,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53476,
											"end": 53491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53476,
											"end": 53491,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53476,
											"end": 53491,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53476,
											"end": 53491,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53476,
											"end": 53491,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53476,
											"end": 53491,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 53476,
											"end": 53505,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53492,
											"end": 53501,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 53502,
											"end": 53503,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53492,
											"end": 53504,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53492,
											"end": 53504,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53492,
											"end": 53504,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53492,
											"end": 53504,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 53492,
											"end": 53504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 53492,
											"end": 53504,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53492,
											"end": 53504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 53492,
											"end": 53504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 53492,
											"end": 53504,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 53492,
											"end": 53504,
											"name": "tag",
											"source": 0,
											"value": "310"
										},
										{
											"begin": 53492,
											"end": 53504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53492,
											"end": 53504,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53492,
											"end": 53504,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 53492,
											"end": 53504,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53492,
											"end": 53504,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53492,
											"end": 53504,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53492,
											"end": 53504,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 53476,
											"end": 53505,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 53476,
											"end": 53505,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53476,
											"end": 53505,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53476,
											"end": 53505,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53476,
											"end": 53505,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53476,
											"end": 53505,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53476,
											"end": 53505,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53476,
											"end": 53505,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53476,
											"end": 53505,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53476,
											"end": 53505,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53476,
											"end": 53505,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53476,
											"end": 53505,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53476,
											"end": 53505,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 53476,
											"end": 53505,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53462,
											"end": 53470,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53471,
											"end": 53472,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53462,
											"end": 53473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53462,
											"end": 53473,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53462,
											"end": 53473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53462,
											"end": 53473,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 53462,
											"end": 53473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 53462,
											"end": 53473,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53462,
											"end": 53473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 53462,
											"end": 53473,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 53462,
											"end": 53473,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 53462,
											"end": 53473,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 53462,
											"end": 53473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53462,
											"end": 53473,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53462,
											"end": 53473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53462,
											"end": 53473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53462,
											"end": 53473,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 53462,
											"end": 53473,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53462,
											"end": 53473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53462,
											"end": 53473,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53462,
											"end": 53473,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53462,
											"end": 53473,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53462,
											"end": 53505,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53442,
											"end": 53446,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53442,
											"end": 53446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 53442,
											"end": 53446,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53442,
											"end": 53446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 53442,
											"end": 53446,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 53442,
											"end": 53446,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 53442,
											"end": 53446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53442,
											"end": 53446,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53442,
											"end": 53446,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53442,
											"end": 53446,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53411,
											"end": 53516,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "306"
										},
										{
											"begin": 53411,
											"end": 53516,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53411,
											"end": 53516,
											"name": "tag",
											"source": 0,
											"value": "307"
										},
										{
											"begin": 53411,
											"end": 53516,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53411,
											"end": 53516,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53526,
											"end": 53562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 53532,
											"end": 53540,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 53542,
											"end": 53551,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 53553,
											"end": 53561,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53526,
											"end": 53531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 53526,
											"end": 53562,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 53526,
											"end": 53562,
											"name": "tag",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 53526,
											"end": 53562,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53242,
											"end": 53569,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53242,
											"end": 53569,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53242,
											"end": 53569,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53204,
											"end": 53569,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53204,
											"end": 53569,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 58602,
											"end": 58828,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 58602,
											"end": 58828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58698,
											"end": 58708,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58690,
											"end": 58709,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58690,
											"end": 58709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58690,
											"end": 58709,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58690,
											"end": 58709,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58690,
											"end": 58697,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 58690,
											"end": 58709,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58690,
											"end": 58709,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58690,
											"end": 58709,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58690,
											"end": 58709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58690,
											"end": 58709,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 58690,
											"end": 58709,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58690,
											"end": 58709,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 58690,
											"end": 58709,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58682,
											"end": 58710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 58682,
											"end": 58710,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58682,
											"end": 58710,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58682,
											"end": 58710,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58682,
											"end": 58710,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58682,
											"end": 58710,
											"name": "tag",
											"source": 0,
											"value": "317"
										},
										{
											"begin": 58682,
											"end": 58710,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58724,
											"end": 58735,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58724,
											"end": 58735,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58720,
											"end": 58770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 58720,
											"end": 58770,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58737,
											"end": 58770,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58737,
											"end": 58770,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4C35BEC5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 58737,
											"end": 58770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58737,
											"end": 58770,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58737,
											"end": 58770,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58737,
											"end": 58770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58737,
											"end": 58770,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 756,
											"end": 781,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 756,
											"end": 781,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 756,
											"end": 781,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 58746,
											"end": 58753,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2557"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58737,
											"end": 58761,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58737,
											"end": 58761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58737,
											"end": 58761,
											"name": "PUSH",
											"source": 0,
											"value": "986B7D8A"
										},
										{
											"begin": 58737,
											"end": 58761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 729,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 729,
											"end": 747,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 58737,
											"end": 58770,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58737,
											"end": 58770,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58737,
											"end": 58770,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58737,
											"end": 58770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58737,
											"end": 58770,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 58737,
											"end": 58770,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 58737,
											"end": 58770,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58737,
											"end": 58770,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58737,
											"end": 58770,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 58737,
											"end": 58770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58737,
											"end": 58770,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 58737,
											"end": 58770,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58737,
											"end": 58770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58737,
											"end": 58770,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58737,
											"end": 58770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 58737,
											"end": 58770,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58737,
											"end": 58770,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58737,
											"end": 58770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58737,
											"end": 58770,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58737,
											"end": 58770,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 58737,
											"end": 58770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58737,
											"end": 58770,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58737,
											"end": 58770,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 58737,
											"end": 58770,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 58737,
											"end": 58770,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58737,
											"end": 58770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58737,
											"end": 58770,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58737,
											"end": 58770,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 58737,
											"end": 58770,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58737,
											"end": 58770,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 58737,
											"end": 58770,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58737,
											"end": 58770,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58737,
											"end": 58770,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 58737,
											"end": 58770,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 58737,
											"end": 58770,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58737,
											"end": 58770,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58737,
											"end": 58770,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 58737,
											"end": 58770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58737,
											"end": 58770,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58737,
											"end": 58770,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58737,
											"end": 58770,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58737,
											"end": 58770,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58720,
											"end": 58770,
											"name": "tag",
											"source": 0,
											"value": "318"
										},
										{
											"begin": 58720,
											"end": 58770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58821,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58785,
											"end": 58821,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 756,
											"end": 781,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 756,
											"end": 781,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 756,
											"end": 781,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 58801,
											"end": 58811,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58801,
											"end": 58811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58785,
											"end": 58821,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58821,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58821,
											"name": "PUSH",
											"source": 0,
											"value": "AE268D9AAB12F3605F58EFD74FD3801FA812B03FDB44317EB70F46DFF0E19E22"
										},
										{
											"begin": 58785,
											"end": 58821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 744,
											"end": 746,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 729,
											"end": 747,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 58785,
											"end": 58821,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 58785,
											"end": 58821,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58821,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58785,
											"end": 58821,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58821,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58821,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58821,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58821,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58785,
											"end": 58821,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 58602,
											"end": 58828,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58602,
											"end": 58828,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58602,
											"end": 58828,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 47736,
											"end": 47935,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 47736,
											"end": 47935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44981,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 44971,
											"end": 44981,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "570CA735"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44996,
											"end": 45006,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 44996,
											"end": 45006,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 44971,
											"end": 44981,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44981,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44990,
											"name": "PUSH",
											"source": 0,
											"value": "570CA735"
										},
										{
											"begin": 44971,
											"end": 44990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44981,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "tag",
											"source": 0,
											"value": "326"
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "tag",
											"source": 0,
											"value": "327"
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 44971,
											"end": 45006,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 45006,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44963,
											"end": 45023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 44963,
											"end": 45023,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44963,
											"end": 45023,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44963,
											"end": 45023,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 44963,
											"end": 45023,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44963,
											"end": 45023,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44963,
											"end": 45023,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44963,
											"end": 45023,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44963,
											"end": 45023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 44963,
											"end": 45023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44963,
											"end": 45023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 44963,
											"end": 45023,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 44963,
											"end": 45023,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 44963,
											"end": 45023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47836,
											"end": 47847,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 47832,
											"end": 47891,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47832,
											"end": 47891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 47832,
											"end": 47891,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47863,
											"end": 47880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 47863,
											"end": 47878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 47863,
											"end": 47880,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 47863,
											"end": 47880,
											"name": "tag",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 47863,
											"end": 47880,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 47900,
											"end": 47913,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 47900,
											"end": 47928,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 47736,
											"end": 47935,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 57256,
											"end": 58182,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 57256,
											"end": 58182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46998,
											"end": 47008,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2199"
										},
										{
											"begin": 46983,
											"end": 46995,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 46983,
											"end": 47008,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 46983,
											"end": 47042,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46983,
											"end": 47042,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 46983,
											"end": 47042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 46983,
											"end": 47042,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46983,
											"end": 47042,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47028,
											"end": 47042,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 47028,
											"end": 47042,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 47012,
											"end": 47024,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 47012,
											"end": 47042,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 47012,
											"end": 47042,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 46983,
											"end": 47042,
											"name": "tag",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 46983,
											"end": 47042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46979,
											"end": 47350,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 46979,
											"end": 47350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 46979,
											"end": 47350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47078,
											"end": 47092,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 47078,
											"end": 47092,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 47062,
											"end": 47075,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 47062,
											"end": 47075,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 47062,
											"end": 47092,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 47058,
											"end": 47173,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47058,
											"end": 47173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 47058,
											"end": 47173,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47128,
											"end": 47158,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 47154,
											"end": 47157,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 47128,
											"end": 47149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 47146,
											"end": 47148,
											"name": "PUSH",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 47128,
											"end": 47141,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 47128,
											"end": 47141,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 47128,
											"end": 47145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 47128,
											"end": 47145,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47128,
											"end": 47149,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 47128,
											"end": 47149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47128,
											"end": 47149,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 47128,
											"end": 47149,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 47128,
											"end": 47149,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 47128,
											"end": 47149,
											"name": "tag",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 47128,
											"end": 47149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47128,
											"end": 47153,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47128,
											"end": 47153,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 47128,
											"end": 47158,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 47128,
											"end": 47158,
											"name": "tag",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 47128,
											"end": 47158,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47112,
											"end": 47125,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 47112,
											"end": 47158,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 47058,
											"end": 47173,
											"name": "tag",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 47058,
											"end": 47173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47206,
											"end": 47220,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 47206,
											"end": 47220,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 47190,
											"end": 47203,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 47190,
											"end": 47203,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 47190,
											"end": 47220,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 47186,
											"end": 47285,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 47186,
											"end": 47285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 47186,
											"end": 47285,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 47256,
											"end": 47270,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 47256,
											"end": 47270,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 47240,
											"end": 47253,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 47240,
											"end": 47270,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 47186,
											"end": 47285,
											"name": "tag",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 47186,
											"end": 47285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47332,
											"end": 47338,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 47332,
											"end": 47338,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 47315,
											"end": 47339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 47315,
											"end": 47339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47315,
											"end": 47327,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 47315,
											"end": 47327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 47315,
											"end": 47331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 47315,
											"end": 47339,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 47315,
											"end": 47339,
											"name": "tag",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 47315,
											"end": 47339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47298,
											"end": 47312,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 47298,
											"end": 47339,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 46979,
											"end": 47350,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 46979,
											"end": 47350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57325,
											"end": 57346,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57349,
											"end": 57357,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 57358,
											"end": 57362,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57349,
											"end": 57363,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57349,
											"end": 57363,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57349,
											"end": 57363,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57349,
											"end": 57363,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57349,
											"end": 57363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 57349,
											"end": 57363,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57349,
											"end": 57363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 57349,
											"end": 57363,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 57349,
											"end": 57363,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 57349,
											"end": 57363,
											"name": "tag",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 57349,
											"end": 57363,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57349,
											"end": 57363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57349,
											"end": 57363,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57349,
											"end": 57363,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57349,
											"end": 57363,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57349,
											"end": 57363,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57349,
											"end": 57363,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 57349,
											"end": 57363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57349,
											"end": 57363,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 57349,
											"end": 57363,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 57349,
											"end": 57363,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57325,
											"end": 57363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57325,
											"end": 57363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57393,
											"end": 57397,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57393,
											"end": 57413,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57393,
											"end": 57413,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57393,
											"end": 57413,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57377,
											"end": 57389,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 57377,
											"end": 57413,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 57373,
											"end": 57446,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 57373,
											"end": 57446,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57429,
											"end": 57436,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57256,
											"end": 58182,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57256,
											"end": 58182,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 57373,
											"end": 57446,
											"name": "tag",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 57373,
											"end": 57446,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57481,
											"end": 57493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57481,
											"end": 57493,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 57481,
											"end": 57493,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57481,
											"end": 57493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57481,
											"end": 57493,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57455,
											"end": 57471,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57505,
											"end": 57525,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57505,
											"end": 57525,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57505,
											"end": 57525,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57505,
											"end": 57511,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 57505,
											"end": 57525,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57505,
											"end": 57525,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57505,
											"end": 57525,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57505,
											"end": 57525,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57505,
											"end": 57525,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57505,
											"end": 57525,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 57505,
											"end": 57525,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57474,
											"end": 57526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57474,
											"end": 57526,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 57474,
											"end": 57526,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57474,
											"end": 57526,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57505,
											"end": 57525,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 57505,
											"end": 57525,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57474,
											"end": 57526,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57474,
											"end": 57526,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 57474,
											"end": 57526,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 548,
											"end": 599,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 57455,
											"end": 57471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57474,
											"end": 57504,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 57474,
											"end": 57504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 521,
											"end": 539,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 521,
											"end": 539,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 57474,
											"end": 57526,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57474,
											"end": 57526,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57474,
											"end": 57526,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57474,
											"end": 57526,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57474,
											"end": 57526,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57474,
											"end": 57526,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 57474,
											"end": 57526,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57474,
											"end": 57526,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 57474,
											"end": 57526,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 57474,
											"end": 57526,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 57474,
											"end": 57526,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57474,
											"end": 57526,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57474,
											"end": 57526,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57474,
											"end": 57526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 57474,
											"end": 57526,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57474,
											"end": 57526,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 57474,
											"end": 57526,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57474,
											"end": 57526,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57474,
											"end": 57526,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 57474,
											"end": 57526,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 57474,
											"end": 57526,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57474,
											"end": 57526,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57474,
											"end": 57526,
											"name": "tag",
											"source": 0,
											"value": "351"
										},
										{
											"begin": 57474,
											"end": 57526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57474,
											"end": 57526,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57474,
											"end": 57526,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57474,
											"end": 57526,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57474,
											"end": 57526,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57474,
											"end": 57526,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57474,
											"end": 57526,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57474,
											"end": 57526,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 57474,
											"end": 57526,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 57474,
											"end": 57526,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 57474,
											"end": 57526,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 57474,
											"end": 57526,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57474,
											"end": 57526,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57474,
											"end": 57526,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57474,
											"end": 57526,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57474,
											"end": 57526,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57474,
											"end": 57526,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57474,
											"end": 57526,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57474,
											"end": 57526,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57474,
											"end": 57526,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57474,
											"end": 57526,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57474,
											"end": 57526,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57474,
											"end": 57526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57474,
											"end": 57526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 57474,
											"end": 57526,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57474,
											"end": 57526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57474,
											"end": 57526,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 57474,
											"end": 57526,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 57474,
											"end": 57526,
											"name": "tag",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 57474,
											"end": 57526,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57455,
											"end": 57526,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 57540,
											"end": 57553,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57536,
											"end": 57635,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 57536,
											"end": 57635,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 57592,
											"end": 57604,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 57569,
											"end": 57589,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57569,
											"end": 57589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57569,
											"end": 57589,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57569,
											"end": 57589,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57569,
											"end": 57604,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 57256,
											"end": 58182,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57256,
											"end": 58182,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 57536,
											"end": 57635,
											"name": "tag",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 57536,
											"end": 57635,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57665,
											"end": 57666,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57648,
											"end": 57661,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 57648,
											"end": 57661,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57648,
											"end": 57666,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 57644,
											"end": 57699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 57644,
											"end": 57699,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57682,
											"end": 57689,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57682,
											"end": 57689,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57256,
											"end": 58182,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57256,
											"end": 58182,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 57644,
											"end": 57699,
											"name": "tag",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 57644,
											"end": 57699,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57708,
											"end": 57719,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57722,
											"end": 57760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 57739,
											"end": 57743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57739,
											"end": 57759,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57739,
											"end": 57759,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57739,
											"end": 57759,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57722,
											"end": 57734,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 57722,
											"end": 57738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 57722,
											"end": 57738,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57722,
											"end": 57760,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57722,
											"end": 57760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57722,
											"end": 57760,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 57722,
											"end": 57760,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57722,
											"end": 57760,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 57722,
											"end": 57760,
											"name": "tag",
											"source": 0,
											"value": "356"
										},
										{
											"begin": 57722,
											"end": 57760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57708,
											"end": 57760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57708,
											"end": 57760,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57770,
											"end": 57789,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57792,
											"end": 57856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 57840,
											"end": 57855,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 57840,
											"end": 57855,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57792,
											"end": 57835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 57819,
											"end": 57823,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 57819,
											"end": 57834,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 57819,
											"end": 57834,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57819,
											"end": 57834,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57792,
											"end": 57814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 57810,
											"end": 57813,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 57792,
											"end": 57805,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 57792,
											"end": 57805,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57792,
											"end": 57809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 57792,
											"end": 57809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57792,
											"end": 57814,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57792,
											"end": 57814,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57792,
											"end": 57814,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 57792,
											"end": 57814,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57792,
											"end": 57814,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 57792,
											"end": 57814,
											"name": "tag",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 57792,
											"end": 57814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57792,
											"end": 57818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57792,
											"end": 57818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 57792,
											"end": 57835,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 57792,
											"end": 57856,
											"name": "tag",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 57792,
											"end": 57856,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57904,
											"end": 57913,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 57904,
											"end": 57913,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57770,
											"end": 57856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57770,
											"end": 57856,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 57890,
											"end": 57901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57890,
											"end": 57901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 57904,
											"end": 57913,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57904,
											"end": 57918,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 57927,
											"end": 57931,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 57934,
											"end": 57959,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 57770,
											"end": 57856,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 54965,
											"end": 54971,
											"name": "PUSH",
											"source": 0,
											"value": "93A80"
										},
										{
											"begin": 57934,
											"end": 57949,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 57934,
											"end": 57959,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 57934,
											"end": 57959,
											"name": "tag",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 57934,
											"end": 57959,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10775,
											"end": 10807,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10775,
											"end": 10807,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10775,
											"end": 10807,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10757,
											"end": 10808,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10824,
											"end": 10842,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10824,
											"end": 10842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10824,
											"end": 10842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10817,
											"end": 10851,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10730,
											"end": 10748,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10730,
											"end": 10748,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "tag",
											"source": 0,
											"value": "364"
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "tag",
											"source": 0,
											"value": "365"
										},
										{
											"begin": 57904,
											"end": 57960,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57890,
											"end": 57960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57890,
											"end": 57960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57974,
											"end": 57980,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57970,
											"end": 58131,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57970,
											"end": 58131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 57970,
											"end": 58131,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58010,
											"end": 58022,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 58010,
											"end": 58022,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58010,
											"end": 58022,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58010,
											"end": 58022,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58010,
											"end": 58022,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58003,
											"end": 58023,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58003,
											"end": 58023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58003,
											"end": 58023,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58003,
											"end": 58023,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58003,
											"end": 58009,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 58003,
											"end": 58023,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58003,
											"end": 58023,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58003,
											"end": 58023,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58003,
											"end": 58023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58003,
											"end": 58023,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 58003,
											"end": 58023,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58052,
											"end": 58061,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58052,
											"end": 58061,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58103,
											"end": 58118,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 58103,
											"end": 58118,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58010,
											"end": 58022,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 58082,
											"end": 58097,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 58082,
											"end": 58097,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58082,
											"end": 58097,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58064,
											"end": 58077,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 58064,
											"end": 58077,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58003,
											"end": 58023,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 58003,
											"end": 58023,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 58003,
											"end": 58023,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58003,
											"end": 58023,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 57996,
											"end": 58043,
											"name": "PUSH",
											"source": 0,
											"value": "B66503CF"
										},
										{
											"begin": 57996,
											"end": 58043,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 58052,
											"end": 58061,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 58052,
											"end": 58061,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58052,
											"end": 58061,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 58064,
											"end": 58119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 58064,
											"end": 58119,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 58103,
											"end": 58118,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58064,
											"end": 58098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 58064,
											"end": 58098,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58064,
											"end": 58077,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58064,
											"end": 58081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 58064,
											"end": 58098,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 58064,
											"end": 58119,
											"name": "tag",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 58064,
											"end": 58119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57996,
											"end": 58120,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57996,
											"end": 58120,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 57996,
											"end": 58120,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 57996,
											"end": 58120,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 57996,
											"end": 58120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57996,
											"end": 58120,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 57996,
											"end": 58120,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 57996,
											"end": 58120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57996,
											"end": 58120,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10775,
											"end": 10807,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10775,
											"end": 10807,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10775,
											"end": 10807,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 57996,
											"end": 58120,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 57996,
											"end": 58120,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57996,
											"end": 58120,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10757,
											"end": 10808,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10824,
											"end": 10842,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10824,
											"end": 10842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10824,
											"end": 10842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10817,
											"end": 10851,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10730,
											"end": 10748,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10730,
											"end": 10748,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 57996,
											"end": 58120,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57996,
											"end": 58120,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 57996,
											"end": 58120,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 57996,
											"end": 58120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57996,
											"end": 58120,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 57996,
											"end": 58120,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 57996,
											"end": 58120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57996,
											"end": 58120,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57996,
											"end": 58120,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 57996,
											"end": 58120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57996,
											"end": 58120,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 57996,
											"end": 58120,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57996,
											"end": 58120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57996,
											"end": 58120,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57996,
											"end": 58120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 57996,
											"end": 58120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57996,
											"end": 58120,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57996,
											"end": 58120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57996,
											"end": 58120,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57996,
											"end": 58120,
											"name": "tag",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 57996,
											"end": 58120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57996,
											"end": 58120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57996,
											"end": 58120,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 57996,
											"end": 58120,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 57996,
											"end": 58120,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57996,
											"end": 58120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57996,
											"end": 58120,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57996,
											"end": 58120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 57996,
											"end": 58120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57996,
											"end": 58120,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 57996,
											"end": 58120,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57996,
											"end": 58120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 57996,
											"end": 58120,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 57996,
											"end": 58120,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 57996,
											"end": 58120,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57996,
											"end": 58120,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 57996,
											"end": 58120,
											"name": "tag",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 57996,
											"end": 58120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57996,
											"end": 58120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57996,
											"end": 58120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57996,
											"end": 58120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57996,
											"end": 58120,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57970,
											"end": 58131,
											"name": "tag",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 57970,
											"end": 58131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58163,
											"end": 58175,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 58140,
											"end": 58144,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 58140,
											"end": 58160,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 58140,
											"end": 58160,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 58140,
											"end": 58175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58140,
											"end": 58175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58140,
											"end": 58175,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 58140,
											"end": 58175,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57315,
											"end": 58182,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57315,
											"end": 58182,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57315,
											"end": 58182,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57315,
											"end": 58182,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57315,
											"end": 58182,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 47359,
											"end": 47360,
											"name": "tag",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 47359,
											"end": 47360,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57256,
											"end": 58182,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57256,
											"end": 58182,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 59021,
											"end": 59217,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 59021,
											"end": 59217,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59066,
											"end": 59072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59061,
											"end": 59211,
											"name": "tag",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 59061,
											"end": 59211,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55634,
											"end": 55642,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 55634,
											"end": 55649,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59078,
											"end": 59079,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59078,
											"end": 59094,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 59061,
											"end": 59211,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 59061,
											"end": 59211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 59061,
											"end": 59211,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59115,
											"end": 59135,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59138,
											"end": 59146,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 59147,
											"end": 59148,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59138,
											"end": 59149,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59138,
											"end": 59149,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59138,
											"end": 59149,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59138,
											"end": 59149,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 59138,
											"end": 59149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 59138,
											"end": 59149,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 59138,
											"end": 59149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 59138,
											"end": 59149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 59138,
											"end": 59149,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 59138,
											"end": 59149,
											"name": "tag",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 59138,
											"end": 59149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59138,
											"end": 59149,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59138,
											"end": 59149,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59138,
											"end": 59149,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59138,
											"end": 59149,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59138,
											"end": 59149,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59138,
											"end": 59149,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59138,
											"end": 59149,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59138,
											"end": 59149,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 59115,
											"end": 59149,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59115,
											"end": 59149,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59115,
											"end": 59149,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 59115,
											"end": 59149,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 59115,
											"end": 59149,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59115,
											"end": 59149,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59115,
											"end": 59149,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59115,
											"end": 59149,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59138,
											"end": 59149,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 59138,
											"end": 59149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59138,
											"end": 59149,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 59138,
											"end": 59149,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 59138,
											"end": 59149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59138,
											"end": 59149,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59138,
											"end": 59149,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59115,
											"end": 59149,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59115,
											"end": 59149,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 59115,
											"end": 59149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59115,
											"end": 59149,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59115,
											"end": 59149,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59115,
											"end": 59149,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59115,
											"end": 59149,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 59115,
											"end": 59149,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59115,
											"end": 59149,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 59115,
											"end": 59149,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59115,
											"end": 59149,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59115,
											"end": 59149,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59115,
											"end": 59149,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 59115,
											"end": 59149,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 59115,
											"end": 59149,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59115,
											"end": 59149,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59115,
											"end": 59149,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 59115,
											"end": 59149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59115,
											"end": 59149,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 59115,
											"end": 59149,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59115,
											"end": 59149,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59115,
											"end": 59149,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 59115,
											"end": 59149,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 59115,
											"end": 59149,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 59115,
											"end": 59149,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59179,
											"end": 59199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59179,
											"end": 59199,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 59179,
											"end": 59199,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59179,
											"end": 59185,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 59179,
											"end": 59199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59179,
											"end": 59199,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 59179,
											"end": 59199,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59179,
											"end": 59199,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59179,
											"end": 59199,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 59179,
											"end": 59199,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 59179,
											"end": 59199,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59115,
											"end": 59149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59115,
											"end": 59149,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 59163,
											"end": 59200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 59163,
											"end": 59200,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59179,
											"end": 59199,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59163,
											"end": 59178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 59163,
											"end": 59200,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 59163,
											"end": 59200,
											"name": "tag",
											"source": 0,
											"value": "381"
										},
										{
											"begin": 59163,
											"end": 59200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 59096,
											"end": 59099,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59096,
											"end": 59099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 59096,
											"end": 59099,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59096,
											"end": 59099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 59096,
											"end": 59099,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 59096,
											"end": 59099,
											"name": "tag",
											"source": 0,
											"value": "382"
										},
										{
											"begin": 59096,
											"end": 59099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59096,
											"end": 59099,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59096,
											"end": 59099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59096,
											"end": 59099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 59061,
											"end": 59211,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 59061,
											"end": 59211,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45179,
											"end": 45283,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 45179,
											"end": 45283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45265,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 45255,
											"end": 45265,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "570CA735"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45229,
											"end": 45236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45229,
											"end": 45236,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 45255,
											"end": 45265,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45265,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45274,
											"name": "PUSH",
											"source": 0,
											"value": "570CA735"
										},
										{
											"begin": 45255,
											"end": 45274,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45265,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "tag",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "tag",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45248,
											"end": 45276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45248,
											"end": 45276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45179,
											"end": 45283,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45179,
											"end": 45283,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 56999,
											"end": 57183,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 56999,
											"end": 57183,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57069,
											"end": 57077,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 57069,
											"end": 57084,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 57052,
											"end": 57066,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 57094,
											"end": 57177,
											"name": "tag",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 57094,
											"end": 57177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57122,
											"end": 57128,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57116,
											"end": 57119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57116,
											"end": 57128,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 57094,
											"end": 57177,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 57094,
											"end": 57177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 57094,
											"end": 57177,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 57151,
											"end": 57166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 57162,
											"end": 57165,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57151,
											"end": 57161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 57151,
											"end": 57166,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 57151,
											"end": 57166,
											"name": "tag",
											"source": 0,
											"value": "391"
										},
										{
											"begin": 57151,
											"end": 57166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57130,
											"end": 57135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 57130,
											"end": 57135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 57130,
											"end": 57135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 57130,
											"end": 57135,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 57130,
											"end": 57135,
											"name": "tag",
											"source": 0,
											"value": "392"
										},
										{
											"begin": 57130,
											"end": 57135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57130,
											"end": 57135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 57130,
											"end": 57135,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57094,
											"end": 57177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "388"
										},
										{
											"begin": 57094,
											"end": 57177,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 57094,
											"end": 57177,
											"name": "tag",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 57094,
											"end": 57177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 57094,
											"end": 57177,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 57042,
											"end": 57183,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56999,
											"end": 57183,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 59594,
											"end": 59678,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 59594,
											"end": 59678,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 59647,
											"end": 59670,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 59663,
											"end": 59669,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59647,
											"end": 59662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 59647,
											"end": 59670,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 56694,
											"end": 56993,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 56694,
											"end": 56993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45096,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 45086,
											"end": 45096,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8DA5CB5B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45108,
											"end": 45118,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 45108,
											"end": 45118,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 45086,
											"end": 45096,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45096,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45102,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 45086,
											"end": 45102,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45096,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "tag",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "tag",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 45086,
											"end": 45118,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45118,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 45078,
											"end": 45155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 45078,
											"end": 45155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45078,
											"end": 45155,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45078,
											"end": 45155,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 45078,
											"end": 45155,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45078,
											"end": 45155,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11314,
											"end": 11316,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 45078,
											"end": 45155,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45078,
											"end": 45155,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45078,
											"end": 45155,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11296,
											"end": 11317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11296,
											"end": 11317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11296,
											"end": 11317,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11333,
											"end": 11351,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11333,
											"end": 11351,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11333,
											"end": 11351,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11326,
											"end": 11356,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11392,
											"end": 11426,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 11372,
											"end": 11390,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11372,
											"end": 11390,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11372,
											"end": 11390,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11365,
											"end": 11427,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11444,
											"end": 11462,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 11444,
											"end": 11462,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 45078,
											"end": 45155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 11112,
											"end": 11468,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 45078,
											"end": 45155,
											"name": "tag",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 45078,
											"end": 45155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56806,
											"end": 56869,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 56857,
											"end": 56868,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56806,
											"end": 56852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 56826,
											"end": 56834,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 56835,
											"end": 56839,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 56826,
											"end": 56840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56826,
											"end": 56840,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56826,
											"end": 56840,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56826,
											"end": 56840,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 56826,
											"end": 56840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 56826,
											"end": 56840,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56826,
											"end": 56840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 56826,
											"end": 56840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 56826,
											"end": 56840,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 56826,
											"end": 56840,
											"name": "tag",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 56826,
											"end": 56840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56826,
											"end": 56840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56826,
											"end": 56840,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56826,
											"end": 56840,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56826,
											"end": 56840,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56826,
											"end": 56840,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56826,
											"end": 56840,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 56826,
											"end": 56840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56826,
											"end": 56840,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 56826,
											"end": 56840,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 56826,
											"end": 56840,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56826,
											"end": 56851,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 56826,
											"end": 56851,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56826,
											"end": 56851,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56806,
											"end": 56821,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 56806,
											"end": 56821,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56806,
											"end": 56825,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 56806,
											"end": 56825,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56806,
											"end": 56852,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 56806,
											"end": 56852,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56806,
											"end": 56852,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 56806,
											"end": 56852,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 56806,
											"end": 56852,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 56806,
											"end": 56852,
											"name": "tag",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 56806,
											"end": 56852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56806,
											"end": 56856,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56806,
											"end": 56856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 56806,
											"end": 56869,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 56806,
											"end": 56869,
											"name": "tag",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 56806,
											"end": 56869,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56788,
											"end": 56803,
											"name": "PUSH",
											"source": 0,
											"value": "D"
										},
										{
											"begin": 56788,
											"end": 56869,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56788,
											"end": 56869,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56788,
											"end": 56869,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 56788,
											"end": 56869,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56907,
											"end": 56918,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56879,
											"end": 56887,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 56888,
											"end": 56892,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 56879,
											"end": 56893,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56879,
											"end": 56893,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 56879,
											"end": 56893,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56879,
											"end": 56893,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 56879,
											"end": 56893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 56879,
											"end": 56893,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56879,
											"end": 56893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 56879,
											"end": 56893,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 56879,
											"end": 56893,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 56879,
											"end": 56893,
											"name": "tag",
											"source": 0,
											"value": "408"
										},
										{
											"begin": 56879,
											"end": 56893,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56879,
											"end": 56893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56879,
											"end": 56893,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56879,
											"end": 56893,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 56879,
											"end": 56893,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56879,
											"end": 56893,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56879,
											"end": 56893,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 56879,
											"end": 56893,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56879,
											"end": 56893,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 56879,
											"end": 56893,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 56879,
											"end": 56893,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56879,
											"end": 56904,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 56879,
											"end": 56904,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 56879,
											"end": 56918,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 56879,
											"end": 56918,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 56879,
											"end": 56918,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 56879,
											"end": 56918,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56932,
											"end": 56943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 56928,
											"end": 56987,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56928,
											"end": 56987,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 56928,
											"end": 56987,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56959,
											"end": 56976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 56959,
											"end": 56974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 56959,
											"end": 56976,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 58189,
											"end": 58411,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 58189,
											"end": 58411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58283,
											"end": 58293,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58275,
											"end": 58294,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58275,
											"end": 58294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58275,
											"end": 58294,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58275,
											"end": 58294,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58275,
											"end": 58282,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 58275,
											"end": 58294,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58275,
											"end": 58294,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58275,
											"end": 58294,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58275,
											"end": 58294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58275,
											"end": 58294,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 58275,
											"end": 58294,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58275,
											"end": 58294,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 58275,
											"end": 58294,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58267,
											"end": 58295,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 58267,
											"end": 58295,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58267,
											"end": 58295,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58267,
											"end": 58295,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58267,
											"end": 58295,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58267,
											"end": 58295,
											"name": "tag",
											"source": 0,
											"value": "413"
										},
										{
											"begin": 58267,
											"end": 58295,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58309,
											"end": 58320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58309,
											"end": 58320,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58305,
											"end": 58353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "414"
										},
										{
											"begin": 58305,
											"end": 58353,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58322,
											"end": 58353,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58322,
											"end": 58353,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20FE6E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 58322,
											"end": 58353,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58322,
											"end": 58353,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58322,
											"end": 58353,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 58322,
											"end": 58353,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58322,
											"end": 58353,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 756,
											"end": 781,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 756,
											"end": 781,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 756,
											"end": 781,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 58331,
											"end": 58338,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2557"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58322,
											"end": 58344,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58322,
											"end": 58344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58322,
											"end": 58344,
											"name": "PUSH",
											"source": 0,
											"value": "20FE6E5"
										},
										{
											"begin": 58322,
											"end": 58344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 729,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 729,
											"end": 747,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 58322,
											"end": 58353,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58322,
											"end": 58353,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58322,
											"end": 58353,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58322,
											"end": 58353,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58322,
											"end": 58353,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 58322,
											"end": 58353,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 58322,
											"end": 58353,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58322,
											"end": 58353,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58322,
											"end": 58353,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 58322,
											"end": 58353,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58322,
											"end": 58353,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 58322,
											"end": 58353,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58322,
											"end": 58353,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58322,
											"end": 58353,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58322,
											"end": 58353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 58322,
											"end": 58353,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58322,
											"end": 58353,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58322,
											"end": 58353,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58322,
											"end": 58353,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58322,
											"end": 58353,
											"name": "tag",
											"source": 0,
											"value": "416"
										},
										{
											"begin": 58322,
											"end": 58353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58322,
											"end": 58353,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58322,
											"end": 58353,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 58322,
											"end": 58353,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 58322,
											"end": 58353,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58322,
											"end": 58353,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58322,
											"end": 58353,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 58322,
											"end": 58353,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 58322,
											"end": 58353,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58322,
											"end": 58353,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 58322,
											"end": 58353,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58322,
											"end": 58353,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58322,
											"end": 58353,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 58322,
											"end": 58353,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 58322,
											"end": 58353,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58322,
											"end": 58353,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58322,
											"end": 58353,
											"name": "tag",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 58322,
											"end": 58353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58322,
											"end": 58353,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58322,
											"end": 58353,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58322,
											"end": 58353,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58322,
											"end": 58353,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58305,
											"end": 58353,
											"name": "tag",
											"source": 0,
											"value": "414"
										},
										{
											"begin": 58305,
											"end": 58353,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58368,
											"end": 58404,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58368,
											"end": 58404,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 756,
											"end": 781,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 756,
											"end": 781,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 756,
											"end": 781,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 58384,
											"end": 58394,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58384,
											"end": 58394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58368,
											"end": 58404,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 58368,
											"end": 58404,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58368,
											"end": 58404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58368,
											"end": 58404,
											"name": "PUSH",
											"source": 0,
											"value": "60940192810A6FB3BCE3FD3E2E3A13FD6CCC7605E963FB87EE971ABA829989BD"
										},
										{
											"begin": 58368,
											"end": 58404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 744,
											"end": 746,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 729,
											"end": 747,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 58368,
											"end": 58404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 610,
											"end": 787,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 47473,
											"end": 47566,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 47473,
											"end": 47566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44981,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 44971,
											"end": 44981,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "570CA735"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44996,
											"end": 45006,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 44996,
											"end": 45006,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 44971,
											"end": 44981,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44981,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44990,
											"name": "PUSH",
											"source": 0,
											"value": "570CA735"
										},
										{
											"begin": 44971,
											"end": 44990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44981,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "tag",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "tag",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 44971,
											"end": 45006,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 45006,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44963,
											"end": 45023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 44963,
											"end": 45023,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44963,
											"end": 45023,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44963,
											"end": 45023,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 44963,
											"end": 45023,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44963,
											"end": 45023,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44963,
											"end": 45023,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44963,
											"end": 45023,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44963,
											"end": 45023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 44963,
											"end": 45023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44963,
											"end": 45023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 44963,
											"end": 45023,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 44963,
											"end": 45023,
											"name": "tag",
											"source": 0,
											"value": "424"
										},
										{
											"begin": 44963,
											"end": 45023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47541,
											"end": 47550,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 47541,
											"end": 47559,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 47473,
											"end": 47566,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 45289,
											"end": 45387,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 45289,
											"end": 45387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45372,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 45362,
											"end": 45372,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8DA5CB5B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45336,
											"end": 45343,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45336,
											"end": 45343,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 45362,
											"end": 45372,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45372,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45378,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 45362,
											"end": 45378,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45372,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "385"
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58417,
											"end": 58596,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 58417,
											"end": 58596,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58517,
											"end": 58527,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58509,
											"end": 58528,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58509,
											"end": 58528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58509,
											"end": 58528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58509,
											"end": 58528,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58509,
											"end": 58516,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 58509,
											"end": 58528,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58509,
											"end": 58528,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58509,
											"end": 58528,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58509,
											"end": 58528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58509,
											"end": 58528,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 58509,
											"end": 58528,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58509,
											"end": 58528,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 58509,
											"end": 58528,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58501,
											"end": 58529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 58501,
											"end": 58529,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58501,
											"end": 58529,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58501,
											"end": 58529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58501,
											"end": 58529,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58501,
											"end": 58529,
											"name": "tag",
											"source": 0,
											"value": "432"
										},
										{
											"begin": 58501,
											"end": 58529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58544,
											"end": 58589,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58544,
											"end": 58589,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58544,
											"end": 58589,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13157,
											"end": 13182,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13157,
											"end": 13182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13157,
											"end": 13182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13213,
											"end": 13215,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13198,
											"end": 13216,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13198,
											"end": 13216,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13191,
											"end": 13225,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13191,
											"end": 13225,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13191,
											"end": 13225,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 58561,
											"end": 58571,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58561,
											"end": 58571,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58544,
											"end": 58589,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 58544,
											"end": 58589,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58544,
											"end": 58589,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58544,
											"end": 58589,
											"name": "PUSH",
											"source": 0,
											"value": "DCBC1C05240F31FF3AD067EF1EE35CE4997762752E3A095284754544F4C709D7"
										},
										{
											"begin": 58544,
											"end": 58589,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13130,
											"end": 13148,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 58544,
											"end": 58589,
											"name": "tag",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 58544,
											"end": 58589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58544,
											"end": 58589,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58544,
											"end": 58589,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 58544,
											"end": 58589,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58544,
											"end": 58589,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58544,
											"end": 58589,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 58544,
											"end": 58589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58544,
											"end": 58589,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 58417,
											"end": 58596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58417,
											"end": 58596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58417,
											"end": 58596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 58417,
											"end": 58596,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 50071,
											"end": 50113,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 50071,
											"end": 50113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50071,
											"end": 50113,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 50071,
											"end": 50113,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50071,
											"end": 50113,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50071,
											"end": 50113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50071,
											"end": 50113,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50071,
											"end": 50113,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50071,
											"end": 50113,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50071,
											"end": 50113,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50071,
											"end": 50113,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 50071,
											"end": 50113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50071,
											"end": 50113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50071,
											"end": 50113,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 50071,
											"end": 50113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50071,
											"end": 50113,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 50071,
											"end": 50113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 50071,
											"end": 50113,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50071,
											"end": 50113,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50071,
											"end": 50113,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50071,
											"end": 50113,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 50071,
											"end": 50113,
											"name": "tag",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 50071,
											"end": 50113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50071,
											"end": 50113,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50071,
											"end": 50113,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50071,
											"end": 50113,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50071,
											"end": 50113,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50071,
											"end": 50113,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50071,
											"end": 50113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50071,
											"end": 50113,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50071,
											"end": 50113,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 50071,
											"end": 50113,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 50071,
											"end": 50113,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 50071,
											"end": 50113,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 50071,
											"end": 50113,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 50071,
											"end": 50113,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50071,
											"end": 50113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 50071,
											"end": 50113,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 47572,
											"end": 47677,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 47572,
											"end": 47677,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44981,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 44971,
											"end": 44981,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "570CA735"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44996,
											"end": 45006,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 44996,
											"end": 45006,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 44971,
											"end": 44981,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44981,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44990,
											"name": "PUSH",
											"source": 0,
											"value": "570CA735"
										},
										{
											"begin": 44971,
											"end": 44990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44981,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "439"
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "tag",
											"source": 0,
											"value": "439"
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "tag",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 44971,
											"end": 45006,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 45006,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44963,
											"end": 45023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 44963,
											"end": 45023,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44963,
											"end": 45023,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44963,
											"end": 45023,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 44963,
											"end": 45023,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44963,
											"end": 45023,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44963,
											"end": 45023,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44963,
											"end": 45023,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44963,
											"end": 45023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 44963,
											"end": 45023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44963,
											"end": 45023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 44963,
											"end": 45023,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 44963,
											"end": 45023,
											"name": "tag",
											"source": 0,
											"value": "441"
										},
										{
											"begin": 44963,
											"end": 45023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47646,
											"end": 47660,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 47646,
											"end": 47670,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 47572,
											"end": 47677,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 55014,
											"end": 55036,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 55014,
											"end": 55036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55014,
											"end": 55036,
											"name": "PUSH",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 55014,
											"end": 55036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55014,
											"end": 55036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55014,
											"end": 55036,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 55014,
											"end": 55036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55014,
											"end": 55036,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 55014,
											"end": 55036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "444"
										},
										{
											"begin": 55014,
											"end": 55036,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55014,
											"end": 55036,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55014,
											"end": 55036,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55014,
											"end": 55036,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 55014,
											"end": 55036,
											"name": "tag",
											"source": 0,
											"value": "444"
										},
										{
											"begin": 55014,
											"end": 55036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55014,
											"end": 55036,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55014,
											"end": 55036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55014,
											"end": 55036,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 55014,
											"end": 55036,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55014,
											"end": 55036,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55014,
											"end": 55036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55014,
											"end": 55036,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55014,
											"end": 55036,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 55014,
											"end": 55036,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55014,
											"end": 55036,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 55014,
											"end": 55036,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55014,
											"end": 55036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 55014,
											"end": 55036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55014,
											"end": 55036,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 47373,
											"end": 47467,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 47373,
											"end": 47467,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44981,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 44971,
											"end": 44981,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "570CA735"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44996,
											"end": 45006,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 44996,
											"end": 45006,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 44971,
											"end": 44981,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44981,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44990,
											"name": "PUSH",
											"source": 0,
											"value": "570CA735"
										},
										{
											"begin": 44971,
											"end": 44990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44981,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "448"
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "tag",
											"source": 0,
											"value": "448"
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "449"
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "tag",
											"source": 0,
											"value": "449"
										},
										{
											"begin": 44971,
											"end": 44992,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 44971,
											"end": 45006,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44971,
											"end": 45006,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44963,
											"end": 45023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "450"
										},
										{
											"begin": 44963,
											"end": 45023,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44963,
											"end": 45023,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44963,
											"end": 45023,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 44963,
											"end": 45023,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44963,
											"end": 45023,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44963,
											"end": 45023,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44963,
											"end": 45023,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44963,
											"end": 45023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 44963,
											"end": 45023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44963,
											"end": 45023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "330"
										},
										{
											"begin": 44963,
											"end": 45023,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 44963,
											"end": 45023,
											"name": "tag",
											"source": 0,
											"value": "450"
										},
										{
											"begin": 44963,
											"end": 45023,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 47445,
											"end": 47451,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 47445,
											"end": 47460,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 47373,
											"end": 47467,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 58834,
											"end": 59015,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 58834,
											"end": 59015,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58935,
											"end": 58945,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58927,
											"end": 58946,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58927,
											"end": 58946,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58927,
											"end": 58946,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 58927,
											"end": 58946,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58927,
											"end": 58934,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 58927,
											"end": 58946,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 58927,
											"end": 58946,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 58927,
											"end": 58946,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58927,
											"end": 58946,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 58927,
											"end": 58946,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 58927,
											"end": 58946,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 58927,
											"end": 58946,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 58927,
											"end": 58946,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58919,
											"end": 58947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "454"
										},
										{
											"begin": 58919,
											"end": 58947,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 58919,
											"end": 58947,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 58919,
											"end": 58947,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58919,
											"end": 58947,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 58919,
											"end": 58947,
											"name": "tag",
											"source": 0,
											"value": "454"
										},
										{
											"begin": 58919,
											"end": 58947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 58962,
											"end": 59008,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 58962,
											"end": 59008,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 58962,
											"end": 59008,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13157,
											"end": 13182,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13157,
											"end": 13182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13157,
											"end": 13182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13213,
											"end": 13215,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13198,
											"end": 13216,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13198,
											"end": 13216,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13191,
											"end": 13225,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13191,
											"end": 13225,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13191,
											"end": 13225,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 58980,
											"end": 58990,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 58980,
											"end": 58990,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 58962,
											"end": 59008,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 58962,
											"end": 59008,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 58962,
											"end": 59008,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 58962,
											"end": 59008,
											"name": "PUSH",
											"source": 0,
											"value": "F341246ADAAC6F497BC2A656F546AB9E182111D630394F0C57C710A59A2CB567"
										},
										{
											"begin": 58962,
											"end": 59008,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13130,
											"end": 13148,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 58962,
											"end": 59008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 12983,
											"end": 13231,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 53576,
											"end": 53852,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 53576,
											"end": 53852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53745,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53689,
											"end": 53745,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "430C2081"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 53689,
											"end": 53745,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53745,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53725,
											"end": 53735,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53745,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 53689,
											"end": 53745,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53745,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10757,
											"end": 10808,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10824,
											"end": 10842,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10824,
											"end": 10842,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10824,
											"end": 10842,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10817,
											"end": 10851,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10817,
											"end": 10851,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10817,
											"end": 10851,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 53698,
											"end": 53705,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2557"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 53689,
											"end": 53724,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53724,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53724,
											"name": "PUSH",
											"source": 0,
											"value": "430C2081"
										},
										{
											"begin": 53689,
											"end": 53724,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10730,
											"end": 10748,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10730,
											"end": 10748,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 53689,
											"end": 53745,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53689,
											"end": 53745,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53689,
											"end": 53745,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53745,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53745,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53745,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53745,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53745,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53745,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53745,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53745,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53745,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53745,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "459"
										},
										{
											"begin": 53689,
											"end": 53745,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53745,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53745,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53689,
											"end": 53745,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53745,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53745,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53745,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53689,
											"end": 53745,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53745,
											"name": "tag",
											"source": 0,
											"value": "459"
										},
										{
											"begin": 53689,
											"end": 53745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53745,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53745,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53745,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53745,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53745,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53689,
											"end": 53745,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53745,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53745,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 53689,
											"end": 53745,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53745,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 53689,
											"end": 53745,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53745,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53745,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53745,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53745,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53745,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53745,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53689,
											"end": 53745,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53745,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53745,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53745,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "460"
										},
										{
											"begin": 53689,
											"end": 53745,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53689,
											"end": 53745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 53689,
											"end": 53745,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 53689,
											"end": 53745,
											"name": "tag",
											"source": 0,
											"value": "460"
										},
										{
											"begin": 53689,
											"end": 53745,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53681,
											"end": 53746,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "461"
										},
										{
											"begin": 53681,
											"end": 53746,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53681,
											"end": 53746,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53681,
											"end": 53746,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53681,
											"end": 53746,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 53681,
											"end": 53746,
											"name": "tag",
											"source": 0,
											"value": "461"
										},
										{
											"begin": 53681,
											"end": 53746,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53764,
											"end": 53799,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53764,
											"end": 53799,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53764,
											"end": 53799,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 53756,
											"end": 53800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "462"
										},
										{
											"begin": 53756,
											"end": 53800,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53756,
											"end": 53800,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53756,
											"end": 53800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53756,
											"end": 53800,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 53756,
											"end": 53800,
											"name": "tag",
											"source": 0,
											"value": "462"
										},
										{
											"begin": 53756,
											"end": 53800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 53816,
											"end": 53823,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 53825,
											"end": 53834,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 53825,
											"end": 53834,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 53836,
											"end": 53844,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 53836,
											"end": 53844,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 53836,
											"end": 53844,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 53836,
											"end": 53844,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53836,
											"end": 53844,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53836,
											"end": 53844,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53836,
											"end": 53844,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 53836,
											"end": 53844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53836,
											"end": 53844,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 53810,
											"end": 53815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 53810,
											"end": 53815,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 53810,
											"end": 53845,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25686,
											"end": 25782,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 25686,
											"end": 25782,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25744,
											"end": 25751,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25770,
											"end": 25775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "465"
										},
										{
											"begin": 25774,
											"end": 25775,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25770,
											"end": 25771,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25770,
											"end": 25775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "466"
										},
										{
											"begin": 25770,
											"end": 25775,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 25770,
											"end": 25775,
											"name": "tag",
											"source": 0,
											"value": "465"
										},
										{
											"begin": 25770,
											"end": 25775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25763,
											"end": 25775,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 25686,
											"end": 25782,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 25686,
											"end": 25782,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 59223,
											"end": 59362,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 59223,
											"end": 59362,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 59299,
											"end": 59319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59299,
											"end": 59319,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59299,
											"end": 59319,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59283,
											"end": 59296,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59299,
											"end": 59319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59299,
											"end": 59319,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59299,
											"end": 59319,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59299,
											"end": 59311,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 59299,
											"end": 59319,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59299,
											"end": 59319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59299,
											"end": 59319,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59299,
											"end": 59319,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59299,
											"end": 59319,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59299,
											"end": 59319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59299,
											"end": 59319,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59299,
											"end": 59319,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 59299,
											"end": 59319,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59299,
											"end": 59319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59299,
											"end": 59319,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 59299,
											"end": 59319,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59340,
											"end": 59354,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59340,
											"end": 59354,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59340,
											"end": 59354,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59340,
											"end": 59347,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 59340,
											"end": 59354,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59340,
											"end": 59354,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59340,
											"end": 59354,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59340,
											"end": 59354,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59340,
											"end": 59354,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59340,
											"end": 59354,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 59340,
											"end": 59354,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59329,
											"end": 59355,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "389"
										},
										{
											"begin": 59329,
											"end": 59355,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59329,
											"end": 59339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 59329,
											"end": 59355,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 50857,
											"end": 51706,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 50857,
											"end": 51706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50907,
											"end": 50934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50937,
											"end": 50955,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50937,
											"end": 50955,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50937,
											"end": 50955,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50937,
											"end": 50945,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 50937,
											"end": 50955,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 50937,
											"end": 50955,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50937,
											"end": 50955,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50937,
											"end": 50955,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 50937,
											"end": 50955,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 50985,
											"end": 51001,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50985,
											"end": 51001,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 50937,
											"end": 50955,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50937,
											"end": 50955,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 50907,
											"end": 50934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51045,
											"end": 51584,
											"name": "tag",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 51045,
											"end": 51584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51066,
											"end": 51078,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51062,
											"end": 51063,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51062,
											"end": 51078,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 51045,
											"end": 51584,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51045,
											"end": 51584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "471"
										},
										{
											"begin": 51045,
											"end": 51584,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51100,
											"end": 51113,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51116,
											"end": 51125,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 51126,
											"end": 51127,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51116,
											"end": 51128,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51116,
											"end": 51128,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 51116,
											"end": 51128,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51116,
											"end": 51128,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 51116,
											"end": 51128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "474"
										},
										{
											"begin": 51116,
											"end": 51128,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51116,
											"end": 51128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "474"
										},
										{
											"begin": 51116,
											"end": 51128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 51116,
											"end": 51128,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51116,
											"end": 51128,
											"name": "tag",
											"source": 0,
											"value": "474"
										},
										{
											"begin": 51116,
											"end": 51128,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51116,
											"end": 51128,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51116,
											"end": 51128,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51116,
											"end": 51128,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51116,
											"end": 51128,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51116,
											"end": 51128,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51116,
											"end": 51128,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51116,
											"end": 51128,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51116,
											"end": 51128,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 51116,
											"end": 51128,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51116,
											"end": 51128,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51116,
											"end": 51128,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51116,
											"end": 51128,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 51158,
											"end": 51173,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 51158,
											"end": 51173,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51158,
											"end": 51173,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51158,
											"end": 51163,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 51158,
											"end": 51173,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51158,
											"end": 51173,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51158,
											"end": 51173,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51158,
											"end": 51173,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51158,
											"end": 51173,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 51158,
											"end": 51173,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51116,
											"end": 51128,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51116,
											"end": 51128,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 51116,
											"end": 51128,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51158,
											"end": 51180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51158,
											"end": 51180,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 51158,
											"end": 51180,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51158,
											"end": 51180,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51158,
											"end": 51180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51158,
											"end": 51180,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 51158,
											"end": 51180,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51158,
											"end": 51180,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51158,
											"end": 51180,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 51158,
											"end": 51180,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 51116,
											"end": 51128,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51116,
											"end": 51128,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 51199,
											"end": 51210,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51199,
											"end": 51210,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51195,
											"end": 51574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "476"
										},
										{
											"begin": 51195,
											"end": 51574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51230,
											"end": 51252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "477"
										},
										{
											"begin": 51246,
											"end": 51251,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51230,
											"end": 51245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "478"
										},
										{
											"begin": 51230,
											"end": 51252,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51230,
											"end": 51252,
											"name": "tag",
											"source": 0,
											"value": "477"
										},
										{
											"begin": 51230,
											"end": 51252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51270,
											"end": 51284,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51270,
											"end": 51284,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51270,
											"end": 51284,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51270,
											"end": 51284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51270,
											"end": 51284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51270,
											"end": 51284,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51270,
											"end": 51277,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 51270,
											"end": 51284,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51270,
											"end": 51284,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51270,
											"end": 51284,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51270,
											"end": 51284,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51270,
											"end": 51284,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 51270,
											"end": 51294,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51270,
											"end": 51294,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 51288,
											"end": 51294,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51288,
											"end": 51294,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 51270,
											"end": 51284,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51270,
											"end": 51294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "479"
										},
										{
											"begin": 51270,
											"end": 51294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51288,
											"end": 51294,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 51288,
											"end": 51294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51270,
											"end": 51294,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "480"
										},
										{
											"begin": 51270,
											"end": 51294,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51270,
											"end": 51294,
											"name": "tag",
											"source": 0,
											"value": "479"
										},
										{
											"begin": 51270,
											"end": 51294,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51270,
											"end": 51294,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51270,
											"end": 51294,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51270,
											"end": 51294,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 51312,
											"end": 51327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51312,
											"end": 51327,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 51312,
											"end": 51327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51312,
											"end": 51327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51312,
											"end": 51317,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 51312,
											"end": 51327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51312,
											"end": 51327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51312,
											"end": 51327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51312,
											"end": 51327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51312,
											"end": 51327,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51312,
											"end": 51327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51312,
											"end": 51327,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51312,
											"end": 51327,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51312,
											"end": 51334,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 51312,
											"end": 51334,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51312,
											"end": 51334,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 51312,
											"end": 51334,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51312,
											"end": 51334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51312,
											"end": 51334,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51312,
											"end": 51334,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51312,
											"end": 51334,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51312,
											"end": 51334,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 51312,
											"end": 51344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51312,
											"end": 51344,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 51338,
											"end": 51344,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51338,
											"end": 51344,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 51312,
											"end": 51327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51312,
											"end": 51344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "481"
										},
										{
											"begin": 51312,
											"end": 51344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51338,
											"end": 51344,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 51338,
											"end": 51344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51312,
											"end": 51344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "480"
										},
										{
											"begin": 51312,
											"end": 51344,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51312,
											"end": 51344,
											"name": "tag",
											"source": 0,
											"value": "481"
										},
										{
											"begin": 51312,
											"end": 51344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51312,
											"end": 51344,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51312,
											"end": 51344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51312,
											"end": 51344,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 51375,
											"end": 51376,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51366,
											"end": 51376,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51366,
											"end": 51376,
											"name": "SGT",
											"source": 0
										},
										{
											"begin": 51362,
											"end": 51510,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51362,
											"end": 51510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "482"
										},
										{
											"begin": 51362,
											"end": 51510,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51400,
											"end": 51422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "483"
										},
										{
											"begin": 51416,
											"end": 51422,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51400,
											"end": 51422,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 51400,
											"end": 51422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "484"
										},
										{
											"begin": 51400,
											"end": 51422,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51400,
											"end": 51422,
											"name": "tag",
											"source": 0,
											"value": "483"
										},
										{
											"begin": 51400,
											"end": 51422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51400,
											"end": 51422,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 51400,
											"end": 51422,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51362,
											"end": 51510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "485"
										},
										{
											"begin": 51362,
											"end": 51510,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51362,
											"end": 51510,
											"name": "tag",
											"source": 0,
											"value": "482"
										},
										{
											"begin": 51362,
											"end": 51510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51469,
											"end": 51491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "486"
										},
										{
											"begin": 51485,
											"end": 51491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51469,
											"end": 51491,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 51469,
											"end": 51491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "480"
										},
										{
											"begin": 51469,
											"end": 51491,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51469,
											"end": 51491,
											"name": "tag",
											"source": 0,
											"value": "486"
										},
										{
											"begin": 51469,
											"end": 51491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51469,
											"end": 51491,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 51469,
											"end": 51491,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51362,
											"end": 51510,
											"name": "tag",
											"source": 0,
											"value": "485"
										},
										{
											"begin": 51362,
											"end": 51510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51532,
											"end": 51559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51532,
											"end": 51559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51532,
											"end": 51559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13157,
											"end": 13182,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 13157,
											"end": 13182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13157,
											"end": 13182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13213,
											"end": 13215,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13198,
											"end": 13216,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13198,
											"end": 13216,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13191,
											"end": 13225,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13191,
											"end": 13225,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13191,
											"end": 13225,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 51532,
											"end": 51559,
											"name": "PUSH",
											"source": 0,
											"value": "6B3894CE60B9BBE9D93F1A4E6FC25B6B93CD8222E73AB6348D79C596F5B51DE9"
										},
										{
											"begin": 51532,
											"end": 51559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13130,
											"end": 13148,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 51532,
											"end": 51559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51532,
											"end": 51559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51532,
											"end": 51559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51532,
											"end": 51559,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51532,
											"end": 51559,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 51532,
											"end": 51559,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51532,
											"end": 51559,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 51195,
											"end": 51574,
											"name": "tag",
											"source": 0,
											"value": "476"
										},
										{
											"begin": 51195,
											"end": 51574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51086,
											"end": 51584,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51086,
											"end": 51584,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51080,
											"end": 51084,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51080,
											"end": 51084,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51080,
											"end": 51084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "489"
										},
										{
											"begin": 51080,
											"end": 51084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51080,
											"end": 51084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 51080,
											"end": 51084,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51080,
											"end": 51084,
											"name": "tag",
											"source": 0,
											"value": "489"
										},
										{
											"begin": 51080,
											"end": 51084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51080,
											"end": 51084,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51080,
											"end": 51084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51080,
											"end": 51084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51045,
											"end": 51584,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "470"
										},
										{
											"begin": 51045,
											"end": 51584,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51045,
											"end": 51584,
											"name": "tag",
											"source": 0,
											"value": "471"
										},
										{
											"begin": 51045,
											"end": 51584,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51045,
											"end": 51584,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51616,
											"end": 51628,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51593,
											"end": 51604,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 51593,
											"end": 51604,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51593,
											"end": 51629,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51593,
											"end": 51629,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51593,
											"end": 51629,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 51593,
											"end": 51629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "490"
										},
										{
											"begin": 51593,
											"end": 51629,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51593,
											"end": 51629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51593,
											"end": 51629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 51593,
											"end": 51629,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51593,
											"end": 51629,
											"name": "tag",
											"source": 0,
											"value": "490"
										},
										{
											"begin": 51593,
											"end": 51629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51593,
											"end": 51629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51593,
											"end": 51629,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51593,
											"end": 51629,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 51663,
											"end": 51664,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51639,
											"end": 51660,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 51639,
											"end": 51660,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51639,
											"end": 51660,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51639,
											"end": 51650,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 51639,
											"end": 51660,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51639,
											"end": 51660,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51639,
											"end": 51660,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51639,
											"end": 51660,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51639,
											"end": 51660,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51639,
											"end": 51660,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51639,
											"end": 51660,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51639,
											"end": 51660,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 51639,
											"end": 51664,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51639,
											"end": 51664,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51639,
											"end": 51664,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 51681,
											"end": 51689,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 51681,
											"end": 51699,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51681,
											"end": 51699,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51681,
											"end": 51699,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51681,
											"end": 51699,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51681,
											"end": 51699,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 51674,
											"end": 51699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 51674,
											"end": 51699,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51674,
											"end": 51699,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "492"
										},
										{
											"begin": 51674,
											"end": 51699,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51712,
											"end": 53198,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 51712,
											"end": 53198,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51815,
											"end": 51831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "494"
										},
										{
											"begin": 51822,
											"end": 51830,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51815,
											"end": 51821,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 51815,
											"end": 51831,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51815,
											"end": 51831,
											"name": "tag",
											"source": 0,
											"value": "494"
										},
										{
											"begin": 51815,
											"end": 51831,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51857,
											"end": 51873,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51857,
											"end": 51873,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51907,
											"end": 51947,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51907,
											"end": 51947,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39F890B5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 51907,
											"end": 51947,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51907,
											"end": 51947,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51907,
											"end": 51947,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51907,
											"end": 51947,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51907,
											"end": 51947,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 756,
											"end": 781,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 756,
											"end": 781,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 756,
											"end": 781,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 51841,
											"end": 51854,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51841,
											"end": 51854,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51916,
											"end": 51923,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2557"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51907,
											"end": 51937,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51907,
											"end": 51937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51907,
											"end": 51937,
											"name": "PUSH",
											"source": 0,
											"value": "E7E242D4"
										},
										{
											"begin": 51907,
											"end": 51937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 729,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 729,
											"end": 747,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 51907,
											"end": 51947,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51907,
											"end": 51947,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51907,
											"end": 51947,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51907,
											"end": 51947,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51907,
											"end": 51947,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51907,
											"end": 51947,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 51907,
											"end": 51947,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51907,
											"end": 51947,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 51907,
											"end": 51947,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 51907,
											"end": 51947,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 51907,
											"end": 51947,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51907,
											"end": 51947,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51907,
											"end": 51947,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51907,
											"end": 51947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "497"
										},
										{
											"begin": 51907,
											"end": 51947,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51907,
											"end": 51947,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 51907,
											"end": 51947,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51907,
											"end": 51947,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51907,
											"end": 51947,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 51907,
											"end": 51947,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 51907,
											"end": 51947,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51907,
											"end": 51947,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 51907,
											"end": 51947,
											"name": "tag",
											"source": 0,
											"value": "497"
										},
										{
											"begin": 51907,
											"end": 51947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51907,
											"end": 51947,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51907,
											"end": 51947,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51907,
											"end": 51947,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51907,
											"end": 51947,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51907,
											"end": 51947,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51907,
											"end": 51947,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51907,
											"end": 51947,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 51907,
											"end": 51947,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 51907,
											"end": 51947,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 51907,
											"end": 51947,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 51907,
											"end": 51947,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51907,
											"end": 51947,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51907,
											"end": 51947,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51907,
											"end": 51947,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51907,
											"end": 51947,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51907,
											"end": 51947,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51907,
											"end": 51947,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51907,
											"end": 51947,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51907,
											"end": 51947,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51907,
											"end": 51947,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51907,
											"end": 51947,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51907,
											"end": 51947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51907,
											"end": 51947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "498"
										},
										{
											"begin": 51907,
											"end": 51947,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51907,
											"end": 51947,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51907,
											"end": 51947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "353"
										},
										{
											"begin": 51907,
											"end": 51947,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51907,
											"end": 51947,
											"name": "tag",
											"source": 0,
											"value": "498"
										},
										{
											"begin": 51907,
											"end": 51947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51883,
											"end": 51948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51883,
											"end": 51948,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51958,
											"end": 51981,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51995,
											"end": 52014,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52028,
											"end": 52046,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52066,
											"end": 52072,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52061,
											"end": 52187,
											"name": "tag",
											"source": 0,
											"value": "499"
										},
										{
											"begin": 52061,
											"end": 52187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52082,
											"end": 52090,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 52078,
											"end": 52079,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52078,
											"end": 52090,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 52061,
											"end": 52187,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52061,
											"end": 52187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "500"
										},
										{
											"begin": 52061,
											"end": 52187,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52145,
											"end": 52146,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52131,
											"end": 52139,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 52140,
											"end": 52141,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52131,
											"end": 52142,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52131,
											"end": 52142,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52131,
											"end": 52142,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52131,
											"end": 52142,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 52131,
											"end": 52142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "503"
										},
										{
											"begin": 52131,
											"end": 52142,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52131,
											"end": 52142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "503"
										},
										{
											"begin": 52131,
											"end": 52142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 52131,
											"end": 52142,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 52131,
											"end": 52142,
											"name": "tag",
											"source": 0,
											"value": "503"
										},
										{
											"begin": 52131,
											"end": 52142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52131,
											"end": 52142,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 52131,
											"end": 52142,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 52131,
											"end": 52142,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 52131,
											"end": 52142,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52131,
											"end": 52142,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52131,
											"end": 52142,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52131,
											"end": 52146,
											"name": "SGT",
											"source": 0
										},
										{
											"begin": 52131,
											"end": 52176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "504"
										},
										{
											"begin": 52131,
											"end": 52176,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52165,
											"end": 52173,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 52174,
											"end": 52175,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52165,
											"end": 52176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52165,
											"end": 52176,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52165,
											"end": 52176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52165,
											"end": 52176,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 52165,
											"end": 52176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "506"
										},
										{
											"begin": 52165,
											"end": 52176,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52165,
											"end": 52176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "506"
										},
										{
											"begin": 52165,
											"end": 52176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 52165,
											"end": 52176,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 52165,
											"end": 52176,
											"name": "tag",
											"source": 0,
											"value": "506"
										},
										{
											"begin": 52165,
											"end": 52176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52165,
											"end": 52176,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 52165,
											"end": 52176,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 52165,
											"end": 52176,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 52165,
											"end": 52176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52165,
											"end": 52176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52165,
											"end": 52176,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52163,
											"end": 52176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "507"
										},
										{
											"begin": 52163,
											"end": 52176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52163,
											"end": 52176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "508"
										},
										{
											"begin": 52163,
											"end": 52176,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 52163,
											"end": 52176,
											"name": "tag",
											"source": 0,
											"value": "507"
										},
										{
											"begin": 52163,
											"end": 52176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52131,
											"end": 52176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "509"
										},
										{
											"begin": 52131,
											"end": 52176,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52131,
											"end": 52176,
											"name": "tag",
											"source": 0,
											"value": "504"
										},
										{
											"begin": 52131,
											"end": 52176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52149,
											"end": 52157,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 52158,
											"end": 52159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52149,
											"end": 52160,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52149,
											"end": 52160,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52149,
											"end": 52160,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52149,
											"end": 52160,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 52149,
											"end": 52160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "511"
										},
										{
											"begin": 52149,
											"end": 52160,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52149,
											"end": 52160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "511"
										},
										{
											"begin": 52149,
											"end": 52160,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 52149,
											"end": 52160,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 52149,
											"end": 52160,
											"name": "tag",
											"source": 0,
											"value": "511"
										},
										{
											"begin": 52149,
											"end": 52160,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52149,
											"end": 52160,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 52149,
											"end": 52160,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 52149,
											"end": 52160,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 52149,
											"end": 52160,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52149,
											"end": 52160,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52149,
											"end": 52160,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52131,
											"end": 52176,
											"name": "tag",
											"source": 0,
											"value": "509"
										},
										{
											"begin": 52131,
											"end": 52176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52111,
											"end": 52176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "512"
										},
										{
											"begin": 52111,
											"end": 52176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52111,
											"end": 52176,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 52111,
											"end": 52176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "484"
										},
										{
											"begin": 52111,
											"end": 52176,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 52111,
											"end": 52176,
											"name": "tag",
											"source": 0,
											"value": "512"
										},
										{
											"begin": 52111,
											"end": 52176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52111,
											"end": 52176,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 52092,
											"end": 52095,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52092,
											"end": 52095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "513"
										},
										{
											"begin": 52092,
											"end": 52095,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52092,
											"end": 52095,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 52092,
											"end": 52095,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 52092,
											"end": 52095,
											"name": "tag",
											"source": 0,
											"value": "513"
										},
										{
											"begin": 52092,
											"end": 52095,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52092,
											"end": 52095,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52092,
											"end": 52095,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52092,
											"end": 52095,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52061,
											"end": 52187,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "499"
										},
										{
											"begin": 52061,
											"end": 52187,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52061,
											"end": 52187,
											"name": "tag",
											"source": 0,
											"value": "500"
										},
										{
											"begin": 52061,
											"end": 52187,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52061,
											"end": 52187,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52202,
											"end": 52208,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52197,
											"end": 53027,
											"name": "tag",
											"source": 0,
											"value": "514"
										},
										{
											"begin": 52197,
											"end": 53027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52218,
											"end": 52226,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 52214,
											"end": 52215,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52214,
											"end": 52226,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 52197,
											"end": 53027,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52197,
											"end": 53027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "515"
										},
										{
											"begin": 52197,
											"end": 53027,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52247,
											"end": 52260,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52263,
											"end": 52272,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 52273,
											"end": 52274,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52263,
											"end": 52275,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52263,
											"end": 52275,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52263,
											"end": 52275,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52263,
											"end": 52275,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 52263,
											"end": 52275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "518"
										},
										{
											"begin": 52263,
											"end": 52275,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52263,
											"end": 52275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "518"
										},
										{
											"begin": 52263,
											"end": 52275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 52263,
											"end": 52275,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 52263,
											"end": 52275,
											"name": "tag",
											"source": 0,
											"value": "518"
										},
										{
											"begin": 52263,
											"end": 52275,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52263,
											"end": 52275,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 52263,
											"end": 52275,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 52263,
											"end": 52275,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 52263,
											"end": 52275,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52263,
											"end": 52275,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52263,
											"end": 52275,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52247,
											"end": 52275,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52247,
											"end": 52275,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52294,
											"end": 52315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "519"
										},
										{
											"begin": 52309,
											"end": 52314,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 59896,
											"end": 59909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59896,
											"end": 59909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59896,
											"end": 59909,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59866,
											"end": 59870,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59896,
											"end": 59909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59896,
											"end": 59909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59896,
											"end": 59909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59896,
											"end": 59902,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 59896,
											"end": 59909,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59896,
											"end": 59909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59896,
											"end": 59909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59896,
											"end": 59909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59896,
											"end": 59909,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59896,
											"end": 59909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59896,
											"end": 59909,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 59896,
											"end": 59909,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 59896,
											"end": 59909,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59896,
											"end": 59909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59896,
											"end": 59909,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 59896,
											"end": 59909,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59888,
											"end": 59910,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59888,
											"end": 59910,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59888,
											"end": 59895,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 59888,
											"end": 59910,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59888,
											"end": 59910,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59888,
											"end": 59910,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 59888,
											"end": 59910,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59888,
											"end": 59910,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 59888,
											"end": 59910,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59888,
											"end": 59910,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59795,
											"end": 59917,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52294,
											"end": 52315,
											"name": "tag",
											"source": 0,
											"value": "519"
										},
										{
											"begin": 52294,
											"end": 52315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52290,
											"end": 53017,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52290,
											"end": 53017,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "521"
										},
										{
											"begin": 52290,
											"end": 53017,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52335,
											"end": 52353,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52380,
											"end": 52396,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 52370,
											"end": 52377,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 52356,
											"end": 52364,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 52365,
											"end": 52366,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 52356,
											"end": 52367,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52356,
											"end": 52367,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52356,
											"end": 52367,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52356,
											"end": 52367,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 52356,
											"end": 52367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "523"
										},
										{
											"begin": 52356,
											"end": 52367,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52356,
											"end": 52367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "523"
										},
										{
											"begin": 52356,
											"end": 52367,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 52356,
											"end": 52367,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 52356,
											"end": 52367,
											"name": "tag",
											"source": 0,
											"value": "523"
										},
										{
											"begin": 52356,
											"end": 52367,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52356,
											"end": 52367,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 52356,
											"end": 52367,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 52356,
											"end": 52367,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 52356,
											"end": 52367,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52356,
											"end": 52367,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52356,
											"end": 52367,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52356,
											"end": 52377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "524"
										},
										{
											"begin": 52356,
											"end": 52377,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52356,
											"end": 52377,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52356,
											"end": 52377,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "525"
										},
										{
											"begin": 52356,
											"end": 52377,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 52356,
											"end": 52377,
											"name": "tag",
											"source": 0,
											"value": "524"
										},
										{
											"begin": 52356,
											"end": 52377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52356,
											"end": 52396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "526"
										},
										{
											"begin": 52356,
											"end": 52396,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52356,
											"end": 52396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52356,
											"end": 52396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "527"
										},
										{
											"begin": 52356,
											"end": 52396,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 52356,
											"end": 52396,
											"name": "tag",
											"source": 0,
											"value": "526"
										},
										{
											"begin": 52356,
											"end": 52396,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52422,
											"end": 52437,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52422,
											"end": 52437,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 52422,
											"end": 52437,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52422,
											"end": 52437,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52422,
											"end": 52427,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 52422,
											"end": 52437,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 52422,
											"end": 52437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52422,
											"end": 52437,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52422,
											"end": 52437,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52422,
											"end": 52437,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52422,
											"end": 52437,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52422,
											"end": 52437,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 52422,
											"end": 52437,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 52422,
											"end": 52444,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 52422,
											"end": 52444,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52422,
											"end": 52444,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 52422,
											"end": 52444,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52422,
											"end": 52444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52422,
											"end": 52444,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52422,
											"end": 52444,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52422,
											"end": 52444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52422,
											"end": 52444,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 52422,
											"end": 52444,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52335,
											"end": 52396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52335,
											"end": 52396,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 52422,
											"end": 52449,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52414,
											"end": 52469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "528"
										},
										{
											"begin": 52414,
											"end": 52469,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52414,
											"end": 52469,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52414,
											"end": 52469,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 52414,
											"end": 52469,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52414,
											"end": 52469,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15393,
											"end": 15395,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 52414,
											"end": 52469,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 52414,
											"end": 52469,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52414,
											"end": 52469,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15375,
											"end": 15396,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15432,
											"end": 15434,
											"name": "PUSH",
											"source": 1,
											"value": "F"
										},
										{
											"begin": 15412,
											"end": 15430,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 15412,
											"end": 15430,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15412,
											"end": 15430,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15405,
											"end": 15435,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "746F6B656E20706F6F6C206973203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15451,
											"end": 15469,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 15451,
											"end": 15469,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15451,
											"end": 15469,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15444,
											"end": 15489,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15506,
											"end": 15524,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 15506,
											"end": 15524,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 52414,
											"end": 52469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 15191,
											"end": 15530,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 52414,
											"end": 52469,
											"name": "tag",
											"source": 0,
											"value": "528"
										},
										{
											"begin": 52414,
											"end": 52469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52495,
											"end": 52511,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52487,
											"end": 52527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "531"
										},
										{
											"begin": 52487,
											"end": 52527,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52487,
											"end": 52527,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52487,
											"end": 52527,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 52487,
											"end": 52527,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52487,
											"end": 52527,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15737,
											"end": 15739,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 52487,
											"end": 52527,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 52487,
											"end": 52527,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52487,
											"end": 52527,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15719,
											"end": 15740,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15776,
											"end": 15778,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 15756,
											"end": 15774,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 15756,
											"end": 15774,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15756,
											"end": 15774,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15749,
											"end": 15779,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "776569676874206973203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "AC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15795,
											"end": 15813,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 15795,
											"end": 15813,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15795,
											"end": 15813,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15788,
											"end": 15829,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15846,
											"end": 15864,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 15846,
											"end": 15864,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 52487,
											"end": 52527,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 15535,
											"end": 15870,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 52487,
											"end": 52527,
											"name": "tag",
											"source": 0,
											"value": "531"
										},
										{
											"begin": 52487,
											"end": 52527,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52545,
											"end": 52567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "534"
										},
										{
											"begin": 52561,
											"end": 52566,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52545,
											"end": 52560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "478"
										},
										{
											"begin": 52545,
											"end": 52567,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 52545,
											"end": 52567,
											"name": "tag",
											"source": 0,
											"value": "534"
										},
										{
											"begin": 52545,
											"end": 52567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52586,
											"end": 52604,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52586,
											"end": 52604,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 52586,
											"end": 52604,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52586,
											"end": 52604,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52586,
											"end": 52594,
											"name": "PUSH",
											"source": 0,
											"value": "B"
										},
										{
											"begin": 52586,
											"end": 52604,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 52586,
											"end": 52604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52586,
											"end": 52604,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52586,
											"end": 52604,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52586,
											"end": 52604,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52586,
											"end": 52604,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52586,
											"end": 52604,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 52586,
											"end": 52604,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 52586,
											"end": 52616,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52586,
											"end": 52616,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52586,
											"end": 52616,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 52586,
											"end": 52616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52586,
											"end": 52616,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52586,
											"end": 52616,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52586,
											"end": 52616,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 52586,
											"end": 52616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52586,
											"end": 52616,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 52586,
											"end": 52616,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52586,
											"end": 52616,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52586,
											"end": 52616,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 52586,
											"end": 52616,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 52586,
											"end": 52616,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52586,
											"end": 52616,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52586,
											"end": 52616,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 52586,
											"end": 52616,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 52586,
											"end": 52616,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 52586,
											"end": 52616,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52586,
											"end": 52616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52586,
											"end": 52616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52586,
											"end": 52616,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 52586,
											"end": 52616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52586,
											"end": 52616,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52586,
											"end": 52616,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 52635,
											"end": 52649,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 52635,
											"end": 52649,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52635,
											"end": 52642,
											"name": "PUSH",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 52635,
											"end": 52649,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52635,
											"end": 52649,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52635,
											"end": 52649,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52635,
											"end": 52649,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52635,
											"end": 52649,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 52635,
											"end": 52664,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52635,
											"end": 52664,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52653,
											"end": 52664,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 52653,
											"end": 52664,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 52586,
											"end": 52604,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52635,
											"end": 52664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "536"
										},
										{
											"begin": 52635,
											"end": 52664,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52653,
											"end": 52664,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 52653,
											"end": 52664,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52635,
											"end": 52664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "484"
										},
										{
											"begin": 52635,
											"end": 52664,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 52635,
											"end": 52664,
											"name": "tag",
											"source": 0,
											"value": "536"
										},
										{
											"begin": 52635,
											"end": 52664,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52635,
											"end": 52664,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52635,
											"end": 52664,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52635,
											"end": 52664,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 52682,
											"end": 52697,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52682,
											"end": 52697,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 52682,
											"end": 52697,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52682,
											"end": 52697,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52682,
											"end": 52687,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 52682,
											"end": 52697,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 52682,
											"end": 52697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52682,
											"end": 52697,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52682,
											"end": 52697,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52682,
											"end": 52697,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52682,
											"end": 52697,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52682,
											"end": 52697,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 52682,
											"end": 52697,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 52682,
											"end": 52704,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 52682,
											"end": 52704,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 52682,
											"end": 52704,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 52682,
											"end": 52704,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52682,
											"end": 52704,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52682,
											"end": 52704,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52682,
											"end": 52704,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52682,
											"end": 52704,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52682,
											"end": 52704,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 52682,
											"end": 52719,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52682,
											"end": 52719,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52708,
											"end": 52719,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 52708,
											"end": 52719,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 52682,
											"end": 52697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52682,
											"end": 52719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "537"
										},
										{
											"begin": 52682,
											"end": 52719,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52708,
											"end": 52719,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 52708,
											"end": 52719,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52682,
											"end": 52719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "484"
										},
										{
											"begin": 52682,
											"end": 52719,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 52682,
											"end": 52719,
											"name": "tag",
											"source": 0,
											"value": "537"
										},
										{
											"begin": 52682,
											"end": 52719,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52682,
											"end": 52719,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52682,
											"end": 52719,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52682,
											"end": 52719,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 52755,
											"end": 52756,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52741,
											"end": 52756,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52741,
											"end": 52756,
											"name": "SGT",
											"source": 0
										},
										{
											"begin": 52737,
											"end": 52851,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52737,
											"end": 52851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "538"
										},
										{
											"begin": 52737,
											"end": 52851,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52737,
											"end": 52851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "539"
										},
										{
											"begin": 52737,
											"end": 52851,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52737,
											"end": 52851,
											"name": "tag",
											"source": 0,
											"value": "538"
										},
										{
											"begin": 52737,
											"end": 52851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52819,
											"end": 52832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "540"
										},
										{
											"begin": 52821,
											"end": 52832,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52819,
											"end": 52832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "508"
										},
										{
											"begin": 52819,
											"end": 52832,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 52819,
											"end": 52832,
											"name": "tag",
											"source": 0,
											"value": "540"
										},
										{
											"begin": 52819,
											"end": 52832,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52805,
											"end": 52832,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52805,
											"end": 52832,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52737,
											"end": 52851,
											"name": "tag",
											"source": 0,
											"value": "539"
										},
										{
											"begin": 52737,
											"end": 52851,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52868,
											"end": 52894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "541"
										},
										{
											"begin": 52883,
											"end": 52894,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52868,
											"end": 52894,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 52868,
											"end": 52894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "484"
										},
										{
											"begin": 52868,
											"end": 52894,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 52868,
											"end": 52894,
											"name": "tag",
											"source": 0,
											"value": "541"
										},
										{
											"begin": 52868,
											"end": 52894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52868,
											"end": 52894,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 52912,
											"end": 52939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "542"
										},
										{
											"begin": 52928,
											"end": 52939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52912,
											"end": 52939,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 52912,
											"end": 52939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "484"
										},
										{
											"begin": 52912,
											"end": 52939,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 52912,
											"end": 52939,
											"name": "tag",
											"source": 0,
											"value": "542"
										},
										{
											"begin": 52912,
											"end": 52939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52962,
											"end": 53002,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52962,
											"end": 53002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52962,
											"end": 53002,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13157,
											"end": 13182,
											"name": "DUP14",
											"source": 1
										},
										{
											"begin": 13157,
											"end": 13182,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13157,
											"end": 13182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13213,
											"end": 13215,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13198,
											"end": 13216,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13198,
											"end": 13216,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13191,
											"end": 13225,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13191,
											"end": 13225,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13191,
											"end": 13225,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 52912,
											"end": 52939,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52912,
											"end": 52939,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 52968,
											"end": 52978,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 52968,
											"end": 52978,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52962,
											"end": 53002,
											"name": "PUSH",
											"source": 0,
											"value": "1263A2295E53ACD6EF8F655B8AFC11FA0F2CF11925BE7AA1757D741EF32A926C"
										},
										{
											"begin": 52962,
											"end": 53002,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13130,
											"end": 13148,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 52962,
											"end": 53002,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52962,
											"end": 53002,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52962,
											"end": 53002,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52962,
											"end": 53002,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52962,
											"end": 53002,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 52962,
											"end": 53002,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52962,
											"end": 53002,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 52317,
											"end": 53017,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52290,
											"end": 53017,
											"name": "tag",
											"source": 0,
											"value": "521"
										},
										{
											"begin": 52290,
											"end": 53017,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 52228,
											"end": 52231,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52228,
											"end": 52231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "544"
										},
										{
											"begin": 52228,
											"end": 52231,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52228,
											"end": 52231,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 52228,
											"end": 52231,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 52228,
											"end": 52231,
											"name": "tag",
											"source": 0,
											"value": "544"
										},
										{
											"begin": 52228,
											"end": 52231,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52228,
											"end": 52231,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52228,
											"end": 52231,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52228,
											"end": 52231,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52197,
											"end": 53027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "514"
										},
										{
											"begin": 52197,
											"end": 53027,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52197,
											"end": 53027,
											"name": "tag",
											"source": 0,
											"value": "515"
										},
										{
											"begin": 52197,
											"end": 53027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52197,
											"end": 53027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53054,
											"end": 53055,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53040,
											"end": 53051,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53040,
											"end": 53055,
											"name": "SGT",
											"source": 0
										},
										{
											"begin": 53036,
											"end": 53091,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53036,
											"end": 53091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "545"
										},
										{
											"begin": 53036,
											"end": 53091,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53057,
											"end": 53091,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53057,
											"end": 53091,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FD4A77F1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 53057,
											"end": 53091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53057,
											"end": 53091,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53057,
											"end": 53091,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 53057,
											"end": 53091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53057,
											"end": 53091,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 756,
											"end": 781,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 756,
											"end": 781,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 756,
											"end": 781,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 53066,
											"end": 53073,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2557"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 53057,
											"end": 53081,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53057,
											"end": 53081,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53057,
											"end": 53081,
											"name": "PUSH",
											"source": 0,
											"value": "FD4A77F1"
										},
										{
											"begin": 53057,
											"end": 53081,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 729,
											"end": 747,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 729,
											"end": 747,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 53057,
											"end": 53091,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53057,
											"end": 53091,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53057,
											"end": 53091,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53057,
											"end": 53091,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53057,
											"end": 53091,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53057,
											"end": 53091,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 53057,
											"end": 53091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53057,
											"end": 53091,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53057,
											"end": 53091,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 53057,
											"end": 53091,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53057,
											"end": 53091,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 53057,
											"end": 53091,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53057,
											"end": 53091,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53057,
											"end": 53091,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53057,
											"end": 53091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "547"
										},
										{
											"begin": 53057,
											"end": 53091,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53057,
											"end": 53091,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53057,
											"end": 53091,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53057,
											"end": 53091,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 53057,
											"end": 53091,
											"name": "tag",
											"source": 0,
											"value": "547"
										},
										{
											"begin": 53057,
											"end": 53091,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53057,
											"end": 53091,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53057,
											"end": 53091,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 53057,
											"end": 53091,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 53057,
											"end": 53091,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53057,
											"end": 53091,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53057,
											"end": 53091,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53057,
											"end": 53091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "549"
										},
										{
											"begin": 53057,
											"end": 53091,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53057,
											"end": 53091,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 53057,
											"end": 53091,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53057,
											"end": 53091,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53057,
											"end": 53091,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 53057,
											"end": 53091,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 53057,
											"end": 53091,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53057,
											"end": 53091,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 53057,
											"end": 53091,
											"name": "tag",
											"source": 0,
											"value": "549"
										},
										{
											"begin": 53057,
											"end": 53091,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53057,
											"end": 53091,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53057,
											"end": 53091,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53057,
											"end": 53091,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53057,
											"end": 53091,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53036,
											"end": 53091,
											"name": "tag",
											"source": 0,
											"value": "545"
										},
										{
											"begin": 53036,
											"end": 53091,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53124,
											"end": 53136,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53101,
											"end": 53112,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 53101,
											"end": 53112,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53101,
											"end": 53137,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53101,
											"end": 53137,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53101,
											"end": 53137,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 53101,
											"end": 53137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "550"
										},
										{
											"begin": 53101,
											"end": 53137,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53101,
											"end": 53137,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53101,
											"end": 53137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "466"
										},
										{
											"begin": 53101,
											"end": 53137,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 53101,
											"end": 53137,
											"name": "tag",
											"source": 0,
											"value": "550"
										},
										{
											"begin": 53101,
											"end": 53137,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53101,
											"end": 53137,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53101,
											"end": 53137,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53101,
											"end": 53137,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 53147,
											"end": 53168,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53147,
											"end": 53168,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 53147,
											"end": 53168,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 53147,
											"end": 53168,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53147,
											"end": 53158,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 53147,
											"end": 53168,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53147,
											"end": 53168,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53147,
											"end": 53168,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53147,
											"end": 53168,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53147,
											"end": 53168,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 53147,
											"end": 53168,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 53147,
											"end": 53191,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 53147,
											"end": 53191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53147,
											"end": 53191,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 53147,
											"end": 53191,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 51712,
											"end": 53198,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 26396,
											"end": 26492,
											"name": "tag",
											"source": 0,
											"value": "340"
										},
										{
											"begin": 26396,
											"end": 26492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26454,
											"end": 26461,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26480,
											"end": 26485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "465"
										},
										{
											"begin": 26484,
											"end": 26485,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26480,
											"end": 26481,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26480,
											"end": 26485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "553"
										},
										{
											"begin": 26480,
											"end": 26485,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26781,
											"end": 26877,
											"name": "tag",
											"source": 0,
											"value": "341"
										},
										{
											"begin": 26781,
											"end": 26877,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26839,
											"end": 26846,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26865,
											"end": 26870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "465"
										},
										{
											"begin": 26869,
											"end": 26870,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26865,
											"end": 26866,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26865,
											"end": 26870,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "556"
										},
										{
											"begin": 26865,
											"end": 26870,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 26053,
											"end": 26149,
											"name": "tag",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 26053,
											"end": 26149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26111,
											"end": 26118,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26137,
											"end": 26142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "465"
										},
										{
											"begin": 26141,
											"end": 26142,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26137,
											"end": 26138,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26137,
											"end": 26142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 26137,
											"end": 26142,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 59684,
											"end": 59789,
											"name": "tag",
											"source": 0,
											"value": "478"
										},
										{
											"begin": 59684,
											"end": 59789,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 59768,
											"end": 59781,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59768,
											"end": 59781,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 59768,
											"end": 59781,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59768,
											"end": 59781,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59768,
											"end": 59781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59768,
											"end": 59781,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 59768,
											"end": 59781,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59768,
											"end": 59774,
											"name": "PUSH",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 59768,
											"end": 59781,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 59768,
											"end": 59781,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59768,
											"end": 59781,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59768,
											"end": 59781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 59768,
											"end": 59781,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 59768,
											"end": 59781,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 59752,
											"end": 59782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 59752,
											"end": 59782,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 59768,
											"end": 59781,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 59752,
											"end": 59767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 59752,
											"end": 59782,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "492"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "344"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "565"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "566"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "565"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "566"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 1,
											"value": "567"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 89,
											"end": 120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 89,
											"end": 120,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 79,
											"end": 121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 79,
											"end": 121,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 69,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 69,
											"end": 139,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 150,
											"end": 397,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 150,
											"end": 397,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 209,
											"end": 215,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 264,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 250,
											"end": 259,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 241,
											"end": 248,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 237,
											"end": 260,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 233,
											"end": 265,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 230,
											"end": 282,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 230,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "580"
										},
										{
											"begin": 230,
											"end": 282,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 278,
											"end": 279,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 275,
											"end": 276,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 268,
											"end": 280,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 230,
											"end": 282,
											"name": "tag",
											"source": 1,
											"value": "580"
										},
										{
											"begin": 230,
											"end": 282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 317,
											"end": 326,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 304,
											"end": 327,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 336,
											"end": 367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 361,
											"end": 366,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 336,
											"end": 367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "567"
										},
										{
											"begin": 336,
											"end": 367,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 792,
											"end": 910,
											"name": "tag",
											"source": 1,
											"value": "568"
										},
										{
											"begin": 792,
											"end": 910,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 878,
											"end": 883,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 871,
											"end": 884,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 864,
											"end": 885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 857,
											"end": 862,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 854,
											"end": 886,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 844,
											"end": 904,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 844,
											"end": 904,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 900,
											"end": 901,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 897,
											"end": 898,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 890,
											"end": 902,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 915,
											"end": 1365,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 915,
											"end": 1365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 989,
											"end": 995,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 997,
											"end": 1003,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1005,
											"end": 1011,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1058,
											"end": 1060,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1046,
											"end": 1055,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1037,
											"end": 1044,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1033,
											"end": 1056,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1029,
											"end": 1061,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1026,
											"end": 1078,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1026,
											"end": 1078,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "587"
										},
										{
											"begin": 1026,
											"end": 1078,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1074,
											"end": 1075,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1071,
											"end": 1072,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1064,
											"end": 1076,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1026,
											"end": 1078,
											"name": "tag",
											"source": 1,
											"value": "587"
										},
										{
											"begin": 1026,
											"end": 1078,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1113,
											"end": 1122,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1100,
											"end": 1123,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "588"
										},
										{
											"begin": 1157,
											"end": 1162,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1132,
											"end": 1163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "567"
										},
										{
											"begin": 1132,
											"end": 1163,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1132,
											"end": 1163,
											"name": "tag",
											"source": 1,
											"value": "588"
										},
										{
											"begin": 1132,
											"end": 1163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1182,
											"end": 1187,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1234,
											"end": 1236,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1219,
											"end": 1237,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1219,
											"end": 1237,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1206,
											"end": 1238,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1206,
											"end": 1238,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1290,
											"end": 1292,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1275,
											"end": 1293,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1275,
											"end": 1293,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1262,
											"end": 1294,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1303,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "589"
										},
										{
											"begin": 1262,
											"end": 1294,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1303,
											"end": 1333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "568"
										},
										{
											"begin": 1303,
											"end": 1333,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1303,
											"end": 1333,
											"name": "tag",
											"source": 1,
											"value": "589"
										},
										{
											"begin": 1303,
											"end": 1333,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1352,
											"end": 1359,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1359,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1342,
											"end": 1359,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 915,
											"end": 1365,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 915,
											"end": 1365,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 915,
											"end": 1365,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 915,
											"end": 1365,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 915,
											"end": 1365,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 915,
											"end": 1365,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1370,
											"end": 1550,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 1370,
											"end": 1550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1429,
											"end": 1435,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 1484,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1470,
											"end": 1479,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1461,
											"end": 1468,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1457,
											"end": 1480,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1453,
											"end": 1485,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1450,
											"end": 1502,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1450,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "591"
										},
										{
											"begin": 1450,
											"end": 1502,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1499,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1495,
											"end": 1496,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1488,
											"end": 1500,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1450,
											"end": 1502,
											"name": "tag",
											"source": 1,
											"value": "591"
										},
										{
											"begin": 1450,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1521,
											"end": 1544,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1521,
											"end": 1544,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1370,
											"end": 1550,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1370,
											"end": 1550,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1555,
											"end": 2016,
											"name": "tag",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 1555,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1608,
											"end": 1611,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1651,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1640,
											"end": 1652,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1673,
											"end": 1679,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1671,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1661,
											"end": 1680,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1699,
											"end": 1703,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1728,
											"end": 1730,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1723,
											"end": 1726,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1719,
											"end": 1731,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1731,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1712,
											"end": 1731,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1765,
											"end": 1767,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1758,
											"end": 1763,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1754,
											"end": 1768,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1786,
											"end": 1787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1796,
											"end": 1991,
											"name": "tag",
											"source": 1,
											"value": "593"
										},
										{
											"begin": 1796,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1810,
											"end": 1816,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1807,
											"end": 1808,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1817,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1991,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "595"
										},
										{
											"begin": 1796,
											"end": 1991,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1875,
											"end": 1888,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1875,
											"end": 1888,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1871,
											"end": 1910,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1859,
											"end": 1911,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1859,
											"end": 1911,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1943,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1943,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1943,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1931,
											"end": 1943,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1966,
											"end": 1981,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1966,
											"end": 1981,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1966,
											"end": 1981,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1966,
											"end": 1981,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1907,
											"end": 1908,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1825,
											"end": 1834,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1991,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "593"
										},
										{
											"begin": 1796,
											"end": 1991,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1796,
											"end": 1991,
											"name": "tag",
											"source": 1,
											"value": "595"
										},
										{
											"begin": 1796,
											"end": 1991,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2007,
											"end": 2010,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2007,
											"end": 2010,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1555,
											"end": 2016,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1555,
											"end": 2016,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2021,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 2021,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 2202,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2189,
											"end": 2198,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2182,
											"end": 2203,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2163,
											"end": 2167,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2220,
											"end": 2276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 2272,
											"end": 2274,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2261,
											"end": 2270,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2257,
											"end": 2275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2249,
											"end": 2255,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2276,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 2220,
											"end": 2276,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2637,
											"end": 2764,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 2637,
											"end": 2764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2698,
											"end": 2708,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2693,
											"end": 2696,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2689,
											"end": 2709,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2686,
											"end": 2687,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2679,
											"end": 2710,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2729,
											"end": 2733,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2726,
											"end": 2727,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2719,
											"end": 2734,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2753,
											"end": 2757,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2750,
											"end": 2751,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2743,
											"end": 2758,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2769,
											"end": 3044,
											"name": "tag",
											"source": 1,
											"value": "570"
										},
										{
											"begin": 2769,
											"end": 3044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2840,
											"end": 2842,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2834,
											"end": 2843,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2905,
											"end": 2907,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2886,
											"end": 2899,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2886,
											"end": 2899,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2882,
											"end": 2909,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2870,
											"end": 2910,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2870,
											"end": 2910,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 2958,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2925,
											"end": 2959,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2925,
											"end": 2959,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 2983,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 2983,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2961,
											"end": 2983,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2922,
											"end": 2984,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2919,
											"end": 3007,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2919,
											"end": 3007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "602"
										},
										{
											"begin": 2919,
											"end": 3007,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2987,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "602"
										},
										{
											"begin": 2987,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 2987,
											"end": 3005,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2987,
											"end": 3005,
											"name": "tag",
											"source": 1,
											"value": "602"
										},
										{
											"begin": 2987,
											"end": 3005,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3023,
											"end": 3025,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3016,
											"end": 3038,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2769,
											"end": 3044,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2769,
											"end": 3044,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2769,
											"end": 3044,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3049,
											"end": 3232,
											"name": "tag",
											"source": 1,
											"value": "571"
										},
										{
											"begin": 3049,
											"end": 3232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3109,
											"end": 3113,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3142,
											"end": 3160,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3134,
											"end": 3140,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3131,
											"end": 3161,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3128,
											"end": 3184,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3128,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "605"
										},
										{
											"begin": 3128,
											"end": 3184,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3164,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "605"
										},
										{
											"begin": 3164,
											"end": 3182,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 3164,
											"end": 3182,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3164,
											"end": 3182,
											"name": "tag",
											"source": 1,
											"value": "605"
										},
										{
											"begin": 3164,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3209,
											"end": 3210,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3205,
											"end": 3219,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3221,
											"end": 3225,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3201,
											"end": 3226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3201,
											"end": 3226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3049,
											"end": 3232,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3237,
											"end": 3974,
											"name": "tag",
											"source": 1,
											"value": "572"
										},
										{
											"begin": 3237,
											"end": 3974,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3291,
											"end": 3296,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3344,
											"end": 3347,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3337,
											"end": 3341,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3329,
											"end": 3335,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3325,
											"end": 3342,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3321,
											"end": 3348,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3311,
											"end": 3366,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "607"
										},
										{
											"begin": 3311,
											"end": 3366,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3362,
											"end": 3363,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3359,
											"end": 3360,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3352,
											"end": 3364,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3311,
											"end": 3366,
											"name": "tag",
											"source": 1,
											"value": "607"
										},
										{
											"begin": 3311,
											"end": 3366,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3398,
											"end": 3404,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3385,
											"end": 3405,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3424,
											"end": 3428,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3448,
											"end": 3508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "608"
										},
										{
											"begin": 3464,
											"end": 3507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "609"
										},
										{
											"begin": 3504,
											"end": 3506,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3464,
											"end": 3507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "571"
										},
										{
											"begin": 3464,
											"end": 3507,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3464,
											"end": 3507,
											"name": "tag",
											"source": 1,
											"value": "609"
										},
										{
											"begin": 3464,
											"end": 3507,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3448,
											"end": 3508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "570"
										},
										{
											"begin": 3448,
											"end": 3508,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3448,
											"end": 3508,
											"name": "tag",
											"source": 1,
											"value": "608"
										},
										{
											"begin": 3448,
											"end": 3508,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3542,
											"end": 3557,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3542,
											"end": 3557,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3542,
											"end": 3557,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3628,
											"end": 3629,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3624,
											"end": 3634,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3624,
											"end": 3634,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3624,
											"end": 3634,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3624,
											"end": 3634,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3635,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3612,
											"end": 3635,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3608,
											"end": 3640,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3608,
											"end": 3640,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3608,
											"end": 3640,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3573,
											"end": 3585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3573,
											"end": 3585,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3573,
											"end": 3585,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3573,
											"end": 3585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3667,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3667,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3667,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3649,
											"end": 3684,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3649,
											"end": 3684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "610"
										},
										{
											"begin": 3649,
											"end": 3684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3680,
											"end": 3681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3677,
											"end": 3678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3670,
											"end": 3682,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3649,
											"end": 3684,
											"name": "tag",
											"source": 1,
											"value": "610"
										},
										{
											"begin": 3649,
											"end": 3684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3718,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3708,
											"end": 3714,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3704,
											"end": 3719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3728,
											"end": 3945,
											"name": "tag",
											"source": 1,
											"value": "611"
										},
										{
											"begin": 3728,
											"end": 3945,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3744,
											"end": 3750,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3739,
											"end": 3742,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3736,
											"end": 3751,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3728,
											"end": 3945,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3728,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "613"
										},
										{
											"begin": 3728,
											"end": 3945,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3824,
											"end": 3827,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3811,
											"end": 3828,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3841,
											"end": 3872,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "614"
										},
										{
											"begin": 3866,
											"end": 3871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3841,
											"end": 3872,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "567"
										},
										{
											"begin": 3841,
											"end": 3872,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3841,
											"end": 3872,
											"name": "tag",
											"source": 1,
											"value": "614"
										},
										{
											"begin": 3841,
											"end": 3872,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3885,
											"end": 3903,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3885,
											"end": 3903,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3923,
											"end": 3935,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3761,
											"end": 3773,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3761,
											"end": 3773,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3728,
											"end": 3945,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "611"
										},
										{
											"begin": 3728,
											"end": 3945,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3728,
											"end": 3945,
											"name": "tag",
											"source": 1,
											"value": "613"
										},
										{
											"begin": 3728,
											"end": 3945,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3963,
											"end": 3968,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 3237,
											"end": 3974,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3237,
											"end": 3974,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3979,
											"end": 5364,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 3979,
											"end": 5364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4122,
											"end": 4128,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4130,
											"end": 4136,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4183,
											"end": 4185,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4171,
											"end": 4180,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4162,
											"end": 4169,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4181,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4154,
											"end": 4186,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4151,
											"end": 4203,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4151,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "616"
										},
										{
											"begin": 4151,
											"end": 4203,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4199,
											"end": 4200,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4196,
											"end": 4197,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4189,
											"end": 4201,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4151,
											"end": 4203,
											"name": "tag",
											"source": 1,
											"value": "616"
										},
										{
											"begin": 4151,
											"end": 4203,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4239,
											"end": 4248,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4249,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4268,
											"end": 4286,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4309,
											"end": 4311,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4307,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4298,
											"end": 4312,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4295,
											"end": 4329,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4295,
											"end": 4329,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "617"
										},
										{
											"begin": 4295,
											"end": 4329,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4325,
											"end": 4326,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4322,
											"end": 4323,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4315,
											"end": 4327,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4295,
											"end": 4329,
											"name": "tag",
											"source": 1,
											"value": "617"
										},
										{
											"begin": 4295,
											"end": 4329,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "618"
										},
										{
											"begin": 4401,
											"end": 4408,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4392,
											"end": 4398,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4381,
											"end": 4390,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4377,
											"end": 4399,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4409,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "572"
										},
										{
											"begin": 4348,
											"end": 4409,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4348,
											"end": 4409,
											"name": "tag",
											"source": 1,
											"value": "618"
										},
										{
											"begin": 4348,
											"end": 4409,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4338,
											"end": 4409,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4338,
											"end": 4409,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4428,
											"end": 4430,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4418,
											"end": 4430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4483,
											"end": 4485,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4472,
											"end": 4481,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4468,
											"end": 4486,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4455,
											"end": 4487,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4512,
											"end": 4514,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4502,
											"end": 4510,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4499,
											"end": 4515,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4496,
											"end": 4532,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4496,
											"end": 4532,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "619"
										},
										{
											"begin": 4496,
											"end": 4532,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4528,
											"end": 4529,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4525,
											"end": 4526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4518,
											"end": 4530,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4496,
											"end": 4532,
											"name": "tag",
											"source": 1,
											"value": "619"
										},
										{
											"begin": 4496,
											"end": 4532,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4551,
											"end": 4575,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4551,
											"end": 4575,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4606,
											"end": 4610,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4598,
											"end": 4611,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4598,
											"end": 4611,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4594,
											"end": 4621,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 4584,
											"end": 4639,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "620"
										},
										{
											"begin": 4584,
											"end": 4639,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4635,
											"end": 4636,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4632,
											"end": 4633,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4625,
											"end": 4637,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4584,
											"end": 4639,
											"name": "tag",
											"source": 1,
											"value": "620"
										},
										{
											"begin": 4584,
											"end": 4639,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4671,
											"end": 4673,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4658,
											"end": 4674,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4694,
											"end": 4754,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "621"
										},
										{
											"begin": 4710,
											"end": 4753,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "609"
										},
										{
											"begin": 4750,
											"end": 4752,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4710,
											"end": 4753,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "571"
										},
										{
											"begin": 4710,
											"end": 4753,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4694,
											"end": 4754,
											"name": "tag",
											"source": 1,
											"value": "621"
										},
										{
											"begin": 4694,
											"end": 4754,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4803,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4803,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4803,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4870,
											"end": 4871,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4866,
											"end": 4876,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4866,
											"end": 4876,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4866,
											"end": 4876,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4866,
											"end": 4876,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 4877,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4858,
											"end": 4877,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4854,
											"end": 4882,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4854,
											"end": 4882,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4854,
											"end": 4882,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4819,
											"end": 4831,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4819,
											"end": 4831,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4819,
											"end": 4831,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4819,
											"end": 4831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4913,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4913,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4894,
											"end": 4913,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4891,
											"end": 4930,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4891,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "623"
										},
										{
											"begin": 4891,
											"end": 4930,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4926,
											"end": 4927,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4923,
											"end": 4924,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4916,
											"end": 4928,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4891,
											"end": 4930,
											"name": "tag",
											"source": 1,
											"value": "623"
										},
										{
											"begin": 4891,
											"end": 4930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4958,
											"end": 4960,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4954,
											"end": 4956,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4950,
											"end": 4961,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4970,
											"end": 5334,
											"name": "tag",
											"source": 1,
											"value": "624"
										},
										{
											"begin": 4970,
											"end": 5334,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4986,
											"end": 4992,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4981,
											"end": 4984,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4978,
											"end": 4993,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4970,
											"end": 5334,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4970,
											"end": 5334,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "626"
										},
										{
											"begin": 4970,
											"end": 5334,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5072,
											"end": 5075,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5059,
											"end": 5076,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5108,
											"end": 5110,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5095,
											"end": 5106,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5092,
											"end": 5111,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5089,
											"end": 5198,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5089,
											"end": 5198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "627"
										},
										{
											"begin": 5089,
											"end": 5198,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5152,
											"end": 5153,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5181,
											"end": 5183,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5177,
											"end": 5179,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5170,
											"end": 5184,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5089,
											"end": 5198,
											"name": "tag",
											"source": 1,
											"value": "627"
										},
										{
											"begin": 5089,
											"end": 5198,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5223,
											"end": 5291,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "628"
										},
										{
											"begin": 5283,
											"end": 5290,
											"name": "DUP13",
											"source": 1
										},
										{
											"begin": 5278,
											"end": 5280,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5264,
											"end": 5275,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5260,
											"end": 5262,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5256,
											"end": 5276,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5252,
											"end": 5281,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5223,
											"end": 5291,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "572"
										},
										{
											"begin": 5223,
											"end": 5291,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5223,
											"end": 5291,
											"name": "tag",
											"source": 1,
											"value": "628"
										},
										{
											"begin": 5223,
											"end": 5291,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5211,
											"end": 5292,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5211,
											"end": 5292,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5312,
											"end": 5324,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5312,
											"end": 5324,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5312,
											"end": 5324,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5312,
											"end": 5324,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5015,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5015,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4970,
											"end": 5334,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "624"
										},
										{
											"begin": 4970,
											"end": 5334,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4970,
											"end": 5334,
											"name": "tag",
											"source": 1,
											"value": "626"
										},
										{
											"begin": 4970,
											"end": 5334,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4974,
											"end": 4977,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5353,
											"end": 5358,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5358,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5358,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5358,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5358,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5358,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5358,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5358,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5358,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 5364,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 5364,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 5364,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 5364,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 5364,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3979,
											"end": 5364,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5369,
											"end": 5684,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 5369,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5437,
											"end": 5443,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5445,
											"end": 5451,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5498,
											"end": 5500,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5486,
											"end": 5495,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5477,
											"end": 5484,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5473,
											"end": 5496,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5469,
											"end": 5501,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5466,
											"end": 5518,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5466,
											"end": 5518,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "630"
										},
										{
											"begin": 5466,
											"end": 5518,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5514,
											"end": 5515,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5511,
											"end": 5512,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5504,
											"end": 5516,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5466,
											"end": 5518,
											"name": "tag",
											"source": 1,
											"value": "630"
										},
										{
											"begin": 5466,
											"end": 5518,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5550,
											"end": 5559,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5537,
											"end": 5560,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5527,
											"end": 5560,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5527,
											"end": 5560,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5610,
											"end": 5612,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5599,
											"end": 5608,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5595,
											"end": 5613,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5582,
											"end": 5614,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5623,
											"end": 5654,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "631"
										},
										{
											"begin": 5648,
											"end": 5653,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5623,
											"end": 5654,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "567"
										},
										{
											"begin": 5623,
											"end": 5654,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5623,
											"end": 5654,
											"name": "tag",
											"source": 1,
											"value": "631"
										},
										{
											"begin": 5623,
											"end": 5654,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5673,
											"end": 5678,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5663,
											"end": 5678,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5663,
											"end": 5678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5663,
											"end": 5678,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5369,
											"end": 5684,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5369,
											"end": 5684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5369,
											"end": 5684,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5369,
											"end": 5684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5369,
											"end": 5684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5369,
											"end": 5684,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5916,
											"end": 6225,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 5916,
											"end": 6225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5981,
											"end": 5987,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5989,
											"end": 5995,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6042,
											"end": 6044,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6030,
											"end": 6039,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6021,
											"end": 6028,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6017,
											"end": 6040,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6013,
											"end": 6045,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 6010,
											"end": 6062,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6010,
											"end": 6062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "634"
										},
										{
											"begin": 6010,
											"end": 6062,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6058,
											"end": 6059,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6055,
											"end": 6056,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6048,
											"end": 6060,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6010,
											"end": 6062,
											"name": "tag",
											"source": 1,
											"value": "634"
										},
										{
											"begin": 6010,
											"end": 6062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6094,
											"end": 6103,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6081,
											"end": 6104,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 6071,
											"end": 6104,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6071,
											"end": 6104,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6154,
											"end": 6156,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6143,
											"end": 6152,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6139,
											"end": 6157,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6126,
											"end": 6158,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 6167,
											"end": 6195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "631"
										},
										{
											"begin": 6189,
											"end": 6194,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6167,
											"end": 6195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "568"
										},
										{
											"begin": 6167,
											"end": 6195,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6230,
											"end": 6607,
											"name": "tag",
											"source": 1,
											"value": "146"
										},
										{
											"begin": 6230,
											"end": 6607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6304,
											"end": 6310,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6312,
											"end": 6318,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6320,
											"end": 6326,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6373,
											"end": 6375,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6361,
											"end": 6370,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6352,
											"end": 6359,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6348,
											"end": 6371,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6344,
											"end": 6376,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 6341,
											"end": 6393,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6341,
											"end": 6393,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "637"
										},
										{
											"begin": 6341,
											"end": 6393,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6389,
											"end": 6390,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6386,
											"end": 6387,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6379,
											"end": 6391,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6341,
											"end": 6393,
											"name": "tag",
											"source": 1,
											"value": "637"
										},
										{
											"begin": 6341,
											"end": 6393,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6425,
											"end": 6434,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6412,
											"end": 6435,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 6402,
											"end": 6435,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6402,
											"end": 6435,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6482,
											"end": 6484,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6471,
											"end": 6480,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6467,
											"end": 6485,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6454,
											"end": 6486,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 6444,
											"end": 6486,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6444,
											"end": 6486,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6536,
											"end": 6538,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6525,
											"end": 6534,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6521,
											"end": 6539,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6508,
											"end": 6540,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 6549,
											"end": 6577,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "589"
										},
										{
											"begin": 6571,
											"end": 6576,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6549,
											"end": 6577,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "568"
										},
										{
											"begin": 6549,
											"end": 6577,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6612,
											"end": 6995,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 6612,
											"end": 6995,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6689,
											"end": 6695,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6697,
											"end": 6703,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6705,
											"end": 6711,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6758,
											"end": 6760,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6746,
											"end": 6755,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6737,
											"end": 6744,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6733,
											"end": 6756,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6729,
											"end": 6761,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 6726,
											"end": 6778,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6726,
											"end": 6778,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "640"
										},
										{
											"begin": 6726,
											"end": 6778,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6774,
											"end": 6775,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6771,
											"end": 6772,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6764,
											"end": 6776,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6726,
											"end": 6778,
											"name": "tag",
											"source": 1,
											"value": "640"
										},
										{
											"begin": 6726,
											"end": 6778,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6819,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6797,
											"end": 6820,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 6787,
											"end": 6820,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6787,
											"end": 6820,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6870,
											"end": 6872,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6859,
											"end": 6868,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6855,
											"end": 6873,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6842,
											"end": 6874,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 6883,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "641"
										},
										{
											"begin": 6908,
											"end": 6913,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6883,
											"end": 6914,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "567"
										},
										{
											"begin": 6883,
											"end": 6914,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6883,
											"end": 6914,
											"name": "tag",
											"source": 1,
											"value": "641"
										},
										{
											"begin": 6883,
											"end": 6914,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6612,
											"end": 6995,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6612,
											"end": 6995,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 6933,
											"end": 6938,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6933,
											"end": 6938,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6985,
											"end": 6987,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6970,
											"end": 6988,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6970,
											"end": 6988,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6970,
											"end": 6988,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6970,
											"end": 6988,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6957,
											"end": 6989,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 6957,
											"end": 6989,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6612,
											"end": 6995,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7180,
											"end": 7428,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 7180,
											"end": 7428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7248,
											"end": 7254,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7256,
											"end": 7262,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7309,
											"end": 7311,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7297,
											"end": 7306,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7288,
											"end": 7295,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7307,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7280,
											"end": 7312,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 7277,
											"end": 7329,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7277,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "644"
										},
										{
											"begin": 7277,
											"end": 7329,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7325,
											"end": 7326,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7322,
											"end": 7323,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7315,
											"end": 7327,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7277,
											"end": 7329,
											"name": "tag",
											"source": 1,
											"value": "644"
										},
										{
											"begin": 7277,
											"end": 7329,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7348,
											"end": 7371,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7348,
											"end": 7371,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 7348,
											"end": 7371,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7418,
											"end": 7420,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7403,
											"end": 7421,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7403,
											"end": 7421,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7403,
											"end": 7421,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7390,
											"end": 7422,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 7390,
											"end": 7422,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7180,
											"end": 7428,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7848,
											"end": 8215,
											"name": "tag",
											"source": 1,
											"value": "573"
										},
										{
											"begin": 7848,
											"end": 8215,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7911,
											"end": 7919,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7921,
											"end": 7927,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7975,
											"end": 7978,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7968,
											"end": 7972,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 7960,
											"end": 7966,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7956,
											"end": 7973,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7952,
											"end": 7979,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 7942,
											"end": 7997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "648"
										},
										{
											"begin": 7942,
											"end": 7997,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7993,
											"end": 7994,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7990,
											"end": 7991,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7983,
											"end": 7995,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7942,
											"end": 7997,
											"name": "tag",
											"source": 1,
											"value": "648"
										},
										{
											"begin": 7942,
											"end": 7997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8016,
											"end": 8036,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8016,
											"end": 8036,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 8059,
											"end": 8077,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8048,
											"end": 8078,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8048,
											"end": 8078,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8045,
											"end": 8095,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8045,
											"end": 8095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "649"
										},
										{
											"begin": 8045,
											"end": 8095,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8091,
											"end": 8092,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8088,
											"end": 8089,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8081,
											"end": 8093,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8045,
											"end": 8095,
											"name": "tag",
											"source": 1,
											"value": "649"
										},
										{
											"begin": 8045,
											"end": 8095,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8128,
											"end": 8132,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8120,
											"end": 8126,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8116,
											"end": 8133,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8104,
											"end": 8133,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8104,
											"end": 8133,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8188,
											"end": 8191,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8181,
											"end": 8185,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8171,
											"end": 8177,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8168,
											"end": 8169,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 8164,
											"end": 8178,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 8156,
											"end": 8162,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8152,
											"end": 8179,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8148,
											"end": 8186,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8145,
											"end": 8192,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8142,
											"end": 8209,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8142,
											"end": 8209,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "650"
										},
										{
											"begin": 8142,
											"end": 8209,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8205,
											"end": 8206,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8202,
											"end": 8203,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8195,
											"end": 8207,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8142,
											"end": 8209,
											"name": "tag",
											"source": 1,
											"value": "650"
										},
										{
											"begin": 8142,
											"end": 8209,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7848,
											"end": 8215,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7848,
											"end": 8215,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7848,
											"end": 8215,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7848,
											"end": 8215,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7848,
											"end": 8215,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7848,
											"end": 8215,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8220,
											"end": 9060,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 8220,
											"end": 9060,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8350,
											"end": 8356,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8358,
											"end": 8364,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8366,
											"end": 8372,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8374,
											"end": 8380,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8382,
											"end": 8388,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8435,
											"end": 8437,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8423,
											"end": 8432,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8414,
											"end": 8421,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 8410,
											"end": 8433,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8406,
											"end": 8438,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 8403,
											"end": 8455,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8403,
											"end": 8455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "652"
										},
										{
											"begin": 8403,
											"end": 8455,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8451,
											"end": 8452,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8448,
											"end": 8449,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8441,
											"end": 8453,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8403,
											"end": 8455,
											"name": "tag",
											"source": 1,
											"value": "652"
										},
										{
											"begin": 8403,
											"end": 8455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8496,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8474,
											"end": 8497,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 8464,
											"end": 8497,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 8464,
											"end": 8497,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8548,
											"end": 8550,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8537,
											"end": 8546,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8533,
											"end": 8551,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8520,
											"end": 8552,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 8571,
											"end": 8589,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8612,
											"end": 8614,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8604,
											"end": 8610,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8601,
											"end": 8615,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8598,
											"end": 8632,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8598,
											"end": 8632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "653"
										},
										{
											"begin": 8598,
											"end": 8632,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8628,
											"end": 8629,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8625,
											"end": 8626,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8618,
											"end": 8630,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8598,
											"end": 8632,
											"name": "tag",
											"source": 1,
											"value": "653"
										},
										{
											"begin": 8598,
											"end": 8632,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8667,
											"end": 8737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "654"
										},
										{
											"begin": 8729,
											"end": 8736,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 8720,
											"end": 8726,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8709,
											"end": 8718,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 8705,
											"end": 8727,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8667,
											"end": 8737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "573"
										},
										{
											"begin": 8667,
											"end": 8737,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8667,
											"end": 8737,
											"name": "tag",
											"source": 1,
											"value": "654"
										},
										{
											"begin": 8667,
											"end": 8737,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8756,
											"end": 8764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8756,
											"end": 8764,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8641,
											"end": 8737,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8844,
											"end": 8846,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8829,
											"end": 8847,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 8829,
											"end": 8847,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8816,
											"end": 8848,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 8816,
											"end": 8848,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8860,
											"end": 8876,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8860,
											"end": 8876,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8860,
											"end": 8876,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8857,
											"end": 8893,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8857,
											"end": 8893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "655"
										},
										{
											"begin": 8857,
											"end": 8893,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8889,
											"end": 8890,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8886,
											"end": 8887,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8879,
											"end": 8891,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8857,
											"end": 8893,
											"name": "tag",
											"source": 1,
											"value": "655"
										},
										{
											"begin": 8857,
											"end": 8893,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8857,
											"end": 8893,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8928,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "656"
										},
										{
											"begin": 8992,
											"end": 8999,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 8981,
											"end": 8989,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8970,
											"end": 8979,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 8966,
											"end": 8990,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8928,
											"end": 9000,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "573"
										},
										{
											"begin": 8928,
											"end": 9000,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8928,
											"end": 9000,
											"name": "tag",
											"source": 1,
											"value": "656"
										},
										{
											"begin": 8928,
											"end": 9000,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8220,
											"end": 9060,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 8220,
											"end": 9060,
											"name": "SWAP10",
											"source": 1
										},
										{
											"begin": 8220,
											"end": 9060,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 8220,
											"end": 9060,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8220,
											"end": 9060,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8220,
											"end": 9060,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9019,
											"end": 9027,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9019,
											"end": 9027,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 8902,
											"end": 9000,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8220,
											"end": 9060,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8220,
											"end": 9060,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9756,
											"end": 9883,
											"name": "tag",
											"source": 1,
											"value": "574"
										},
										{
											"begin": 9756,
											"end": 9883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9817,
											"end": 9827,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 9812,
											"end": 9815,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 9808,
											"end": 9828,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 9805,
											"end": 9806,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9798,
											"end": 9829,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9848,
											"end": 9852,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 9845,
											"end": 9846,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9838,
											"end": 9853,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9872,
											"end": 9876,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9869,
											"end": 9870,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9862,
											"end": 9877,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9888,
											"end": 10013,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 9888,
											"end": 10013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9928,
											"end": 9932,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9956,
											"end": 9957,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9953,
											"end": 9954,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9950,
											"end": 9958,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 9947,
											"end": 9981,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9947,
											"end": 9981,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "662"
										},
										{
											"begin": 9947,
											"end": 9981,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9961,
											"end": 9979,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "662"
										},
										{
											"begin": 9961,
											"end": 9979,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "574"
										},
										{
											"begin": 9961,
											"end": 9979,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9961,
											"end": 9979,
											"name": "tag",
											"source": 1,
											"value": "662"
										},
										{
											"begin": 9961,
											"end": 9979,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9998,
											"end": 10007,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9998,
											"end": 10007,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9888,
											"end": 10013,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10327,
											"end": 10578,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 10327,
											"end": 10578,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10397,
											"end": 10403,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10450,
											"end": 10452,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10438,
											"end": 10447,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10429,
											"end": 10436,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10425,
											"end": 10448,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10421,
											"end": 10453,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 10418,
											"end": 10470,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10418,
											"end": 10470,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "665"
										},
										{
											"begin": 10418,
											"end": 10470,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10466,
											"end": 10467,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10463,
											"end": 10464,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10456,
											"end": 10468,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10418,
											"end": 10470,
											"name": "tag",
											"source": 1,
											"value": "665"
										},
										{
											"begin": 10418,
											"end": 10470,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10498,
											"end": 10507,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10492,
											"end": 10508,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10517,
											"end": 10548,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 10542,
											"end": 10547,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10517,
											"end": 10548,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "567"
										},
										{
											"begin": 10517,
											"end": 10548,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 10862,
											"end": 11107,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 10862,
											"end": 11107,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10929,
											"end": 10935,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10982,
											"end": 10984,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10970,
											"end": 10979,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10961,
											"end": 10968,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10957,
											"end": 10980,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10953,
											"end": 10985,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 10950,
											"end": 11002,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10950,
											"end": 11002,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "669"
										},
										{
											"begin": 10950,
											"end": 11002,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10998,
											"end": 10999,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10995,
											"end": 10996,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10988,
											"end": 11000,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10950,
											"end": 11002,
											"name": "tag",
											"source": 1,
											"value": "669"
										},
										{
											"begin": 10950,
											"end": 11002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11030,
											"end": 11039,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11024,
											"end": 11040,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11049,
											"end": 11077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 11071,
											"end": 11076,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11049,
											"end": 11077,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "568"
										},
										{
											"begin": 11049,
											"end": 11077,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 11818,
											"end": 11945,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 11818,
											"end": 11945,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11879,
											"end": 11889,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 11874,
											"end": 11877,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 11870,
											"end": 11890,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 11867,
											"end": 11868,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11860,
											"end": 11891,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11910,
											"end": 11914,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 11907,
											"end": 11908,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11900,
											"end": 11915,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11934,
											"end": 11938,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11931,
											"end": 11932,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11924,
											"end": 11939,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11950,
											"end": 12308,
											"name": "tag",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 11950,
											"end": 12308,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12157,
											"end": 12189,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12157,
											"end": 12189,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12139,
											"end": 12190,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12139,
											"end": 12190,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12226,
											"end": 12228,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12221,
											"end": 12223,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12206,
											"end": 12224,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12206,
											"end": 12224,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12199,
											"end": 12229,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12199,
											"end": 12229,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12199,
											"end": 12229,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 12246,
											"end": 12302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "675"
										},
										{
											"begin": 12246,
											"end": 12302,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12283,
											"end": 12301,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12283,
											"end": 12301,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12275,
											"end": 12281,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12246,
											"end": 12302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 12246,
											"end": 12302,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12246,
											"end": 12302,
											"name": "tag",
											"source": 1,
											"value": "675"
										},
										{
											"begin": 12246,
											"end": 12302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12238,
											"end": 12302,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 11950,
											"end": 12308,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11950,
											"end": 12308,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12313,
											"end": 12448,
											"name": "tag",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 12313,
											"end": 12448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12352,
											"end": 12355,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12373,
											"end": 12390,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12373,
											"end": 12390,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 12370,
											"end": 12413,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12370,
											"end": 12413,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "678"
										},
										{
											"begin": 12370,
											"end": 12413,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12393,
											"end": 12411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "678"
										},
										{
											"begin": 12393,
											"end": 12411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "574"
										},
										{
											"begin": 12393,
											"end": 12411,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12393,
											"end": 12411,
											"name": "tag",
											"source": 1,
											"value": "678"
										},
										{
											"begin": 12393,
											"end": 12411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12440,
											"end": 12441,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 12429,
											"end": 12442,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12429,
											"end": 12442,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12313,
											"end": 12448,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12453,
											"end": 12789,
											"name": "tag",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 12453,
											"end": 12789,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12655,
											"end": 12657,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12637,
											"end": 12658,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12637,
											"end": 12658,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12637,
											"end": 12658,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12694,
											"end": 12696,
											"name": "PUSH",
											"source": 1,
											"value": "C"
										},
										{
											"begin": 12674,
											"end": 12692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12674,
											"end": 12692,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12674,
											"end": 12692,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12667,
											"end": 12697,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3737BA1037B832B930BA37B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12728,
											"end": 12730,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12713,
											"end": 12731,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12713,
											"end": 12731,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12706,
											"end": 12748,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12780,
											"end": 12782,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 12765,
											"end": 12783,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12765,
											"end": 12783,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12453,
											"end": 12789,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12794,
											"end": 12978,
											"name": "tag",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 12794,
											"end": 12978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12864,
											"end": 12870,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12917,
											"end": 12919,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12905,
											"end": 12914,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12896,
											"end": 12903,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12892,
											"end": 12915,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12888,
											"end": 12920,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 12885,
											"end": 12937,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12885,
											"end": 12937,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "681"
										},
										{
											"begin": 12885,
											"end": 12937,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12933,
											"end": 12934,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12930,
											"end": 12931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12923,
											"end": 12935,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 12885,
											"end": 12937,
											"name": "tag",
											"source": 1,
											"value": "681"
										},
										{
											"begin": 12885,
											"end": 12937,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12956,
											"end": 12972,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12956,
											"end": 12972,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12794,
											"end": 12978,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12794,
											"end": 12978,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13236,
											"end": 13364,
											"name": "tag",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 13236,
											"end": 13364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13276,
											"end": 13279,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13307,
											"end": 13308,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13303,
											"end": 13309,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 13300,
											"end": 13301,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13297,
											"end": 13310,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 13294,
											"end": 13333,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13294,
											"end": 13333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "685"
										},
										{
											"begin": 13294,
											"end": 13333,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13313,
											"end": 13331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "685"
										},
										{
											"begin": 13313,
											"end": 13331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "574"
										},
										{
											"begin": 13313,
											"end": 13331,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13313,
											"end": 13331,
											"name": "tag",
											"source": 1,
											"value": "685"
										},
										{
											"begin": 13313,
											"end": 13331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13349,
											"end": 13358,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13349,
											"end": 13358,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13236,
											"end": 13364,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13369,
											"end": 13636,
											"name": "tag",
											"source": 1,
											"value": "480"
										},
										{
											"begin": 13369,
											"end": 13636,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13408,
											"end": 13412,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13437,
											"end": 13446,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13437,
											"end": 13446,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13437,
											"end": 13446,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 13462,
											"end": 13472,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13462,
											"end": 13472,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13481,
											"end": 13500,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13500,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13501,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13474,
											"end": 13501,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 13458,
											"end": 13502,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13455,
											"end": 13525,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13455,
											"end": 13525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "688"
										},
										{
											"begin": 13455,
											"end": 13525,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13505,
											"end": 13523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "688"
										},
										{
											"begin": 13505,
											"end": 13523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "574"
										},
										{
											"begin": 13505,
											"end": 13523,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13505,
											"end": 13523,
											"name": "tag",
											"source": 1,
											"value": "688"
										},
										{
											"begin": 13505,
											"end": 13523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13552,
											"end": 13579,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13552,
											"end": 13579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13545,
											"end": 13580,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13545,
											"end": 13580,
											"name": "SGT",
											"source": 1
										},
										{
											"begin": 13537,
											"end": 13581,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13537,
											"end": 13581,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13534,
											"end": 13604,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13534,
											"end": 13604,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "690"
										},
										{
											"begin": 13534,
											"end": 13604,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13584,
											"end": 13602,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "690"
										},
										{
											"begin": 13584,
											"end": 13602,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "574"
										},
										{
											"begin": 13584,
											"end": 13602,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13584,
											"end": 13602,
											"name": "tag",
											"source": 1,
											"value": "690"
										},
										{
											"begin": 13584,
											"end": 13602,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13621,
											"end": 13630,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13621,
											"end": 13630,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13369,
											"end": 13636,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13641,
											"end": 13906,
											"name": "tag",
											"source": 1,
											"value": "484"
										},
										{
											"begin": 13641,
											"end": 13906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13680,
											"end": 13683,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13708,
											"end": 13717,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13708,
											"end": 13717,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13708,
											"end": 13717,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 13733,
											"end": 13743,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13733,
											"end": 13743,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13752,
											"end": 13779,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13752,
											"end": 13779,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13752,
											"end": 13779,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13745,
											"end": 13780,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13745,
											"end": 13780,
											"name": "SGT",
											"source": 1
										},
										{
											"begin": 13729,
											"end": 13781,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13726,
											"end": 13804,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13726,
											"end": 13804,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "693"
										},
										{
											"begin": 13726,
											"end": 13804,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13784,
											"end": 13802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "693"
										},
										{
											"begin": 13784,
											"end": 13802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "574"
										},
										{
											"begin": 13784,
											"end": 13802,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13784,
											"end": 13802,
											"name": "tag",
											"source": 1,
											"value": "693"
										},
										{
											"begin": 13784,
											"end": 13802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13831,
											"end": 13850,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13831,
											"end": 13850,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13831,
											"end": 13850,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13824,
											"end": 13851,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13824,
											"end": 13851,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 13816,
											"end": 13852,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13816,
											"end": 13852,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13813,
											"end": 13875,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13813,
											"end": 13875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "695"
										},
										{
											"begin": 13813,
											"end": 13875,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13855,
											"end": 13873,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "695"
										},
										{
											"begin": 13855,
											"end": 13873,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "574"
										},
										{
											"begin": 13855,
											"end": 13873,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 13855,
											"end": 13873,
											"name": "tag",
											"source": 1,
											"value": "695"
										},
										{
											"begin": 13855,
											"end": 13873,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13891,
											"end": 13900,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13891,
											"end": 13900,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13641,
											"end": 13906,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14162,
											"end": 14298,
											"name": "tag",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 14162,
											"end": 14298,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14197,
											"end": 14200,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14218,
											"end": 14240,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14218,
											"end": 14240,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 14215,
											"end": 14263,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14215,
											"end": 14263,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "699"
										},
										{
											"begin": 14215,
											"end": 14263,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14243,
											"end": 14261,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "699"
										},
										{
											"begin": 14243,
											"end": 14261,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "574"
										},
										{
											"begin": 14243,
											"end": 14261,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14243,
											"end": 14261,
											"name": "tag",
											"source": 1,
											"value": "699"
										},
										{
											"begin": 14243,
											"end": 14261,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14283,
											"end": 14284,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14279,
											"end": 14292,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 14279,
											"end": 14292,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14162,
											"end": 14298,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14303,
											"end": 14856,
											"name": "tag",
											"source": 1,
											"value": "525"
										},
										{
											"begin": 14303,
											"end": 14856,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14342,
											"end": 14349,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14412,
											"end": 14421,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14412,
											"end": 14421,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14412,
											"end": 14421,
											"name": "SGT",
											"source": 1
										},
										{
											"begin": 14440,
											"end": 14449,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14440,
											"end": 14449,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14440,
											"end": 14449,
											"name": "SGT",
											"source": 1
										},
										{
											"begin": 14465,
											"end": 14476,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14465,
											"end": 14476,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14465,
											"end": 14476,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14484,
											"end": 14494,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14484,
											"end": 14494,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14484,
											"end": 14494,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 14478,
											"end": 14495,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14478,
											"end": 14495,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 14461,
											"end": 14496,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14458,
											"end": 14519,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14458,
											"end": 14519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "702"
										},
										{
											"begin": 14458,
											"end": 14519,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14499,
											"end": 14517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "702"
										},
										{
											"begin": 14499,
											"end": 14517,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "574"
										},
										{
											"begin": 14499,
											"end": 14517,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14499,
											"end": 14517,
											"name": "tag",
											"source": 1,
											"value": "702"
										},
										{
											"begin": 14499,
											"end": 14517,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14575,
											"end": 14576,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14568,
											"end": 14577,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14568,
											"end": 14577,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 14593,
											"end": 14604,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14593,
											"end": 14604,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14593,
											"end": 14604,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14613,
											"end": 14624,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14613,
											"end": 14624,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14613,
											"end": 14624,
											"name": "SDIV",
											"source": 1
										},
										{
											"begin": 14606,
											"end": 14625,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 14606,
											"end": 14625,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 14589,
											"end": 14626,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14586,
											"end": 14649,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14586,
											"end": 14649,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "704"
										},
										{
											"begin": 14586,
											"end": 14649,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14629,
											"end": 14647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "704"
										},
										{
											"begin": 14629,
											"end": 14647,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "574"
										},
										{
											"begin": 14629,
											"end": 14647,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14629,
											"end": 14647,
											"name": "tag",
											"source": 1,
											"value": "704"
										},
										{
											"begin": 14629,
											"end": 14647,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14675,
											"end": 14676,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14672,
											"end": 14673,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14668,
											"end": 14677,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 14658,
											"end": 14677,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14658,
											"end": 14677,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14722,
											"end": 14723,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14718,
											"end": 14720,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14713,
											"end": 14724,
											"name": "SDIV",
											"source": 1
										},
										{
											"begin": 14710,
											"end": 14711,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14706,
											"end": 14725,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 14701,
											"end": 14703,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14697,
											"end": 14699,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14693,
											"end": 14704,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14689,
											"end": 14726,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14686,
											"end": 14749,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14686,
											"end": 14749,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "706"
										},
										{
											"begin": 14686,
											"end": 14749,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14729,
											"end": 14747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "706"
										},
										{
											"begin": 14729,
											"end": 14747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "574"
										},
										{
											"begin": 14729,
											"end": 14747,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14729,
											"end": 14747,
											"name": "tag",
											"source": 1,
											"value": "706"
										},
										{
											"begin": 14729,
											"end": 14747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14794,
											"end": 14795,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14790,
											"end": 14792,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14785,
											"end": 14796,
											"name": "SDIV",
											"source": 1
										},
										{
											"begin": 14782,
											"end": 14783,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14778,
											"end": 14797,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 14773,
											"end": 14775,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14769,
											"end": 14771,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14765,
											"end": 14776,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14761,
											"end": 14798,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 14758,
											"end": 14821,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14758,
											"end": 14821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "708"
										},
										{
											"begin": 14758,
											"end": 14821,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14801,
											"end": 14819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "708"
										},
										{
											"begin": 14801,
											"end": 14819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "574"
										},
										{
											"begin": 14801,
											"end": 14819,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14801,
											"end": 14819,
											"name": "tag",
											"source": 1,
											"value": "708"
										},
										{
											"begin": 14801,
											"end": 14819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14841,
											"end": 14850,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14841,
											"end": 14850,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14841,
											"end": 14850,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14841,
											"end": 14850,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 14841,
											"end": 14850,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14303,
											"end": 14856,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14303,
											"end": 14856,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14861,
											"end": 14988,
											"name": "tag",
											"source": 1,
											"value": "575"
										},
										{
											"begin": 14861,
											"end": 14988,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14922,
											"end": 14932,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 14917,
											"end": 14920,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 14913,
											"end": 14933,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 14910,
											"end": 14911,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14903,
											"end": 14934,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14953,
											"end": 14957,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 14950,
											"end": 14951,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 14943,
											"end": 14958,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14977,
											"end": 14981,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 14974,
											"end": 14975,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14967,
											"end": 14982,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 14993,
											"end": 15186,
											"name": "tag",
											"source": 1,
											"value": "527"
										},
										{
											"begin": 14993,
											"end": 15186,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15032,
											"end": 15033,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15058,
											"end": 15059,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15048,
											"end": 15083,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "712"
										},
										{
											"begin": 15048,
											"end": 15083,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15063,
											"end": 15081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "712"
										},
										{
											"begin": 15063,
											"end": 15081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "575"
										},
										{
											"begin": 15063,
											"end": 15081,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15063,
											"end": 15081,
											"name": "tag",
											"source": 1,
											"value": "712"
										},
										{
											"begin": 15063,
											"end": 15081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15099,
											"end": 15117,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15099,
											"end": 15117,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 15119,
											"end": 15132,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15119,
											"end": 15132,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 15095,
											"end": 15133,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15092,
											"end": 15156,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15092,
											"end": 15156,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "714"
										},
										{
											"begin": 15092,
											"end": 15156,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15136,
											"end": 15154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "714"
										},
										{
											"begin": 15136,
											"end": 15154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "574"
										},
										{
											"begin": 15136,
											"end": 15154,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15136,
											"end": 15154,
											"name": "tag",
											"source": 1,
											"value": "714"
										},
										{
											"begin": 15136,
											"end": 15154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15170,
											"end": 15180,
											"name": "SDIV",
											"source": 1
										},
										{
											"begin": 15170,
											"end": 15180,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14993,
											"end": 15186,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 15875,
											"end": 16043,
											"name": "tag",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 15875,
											"end": 16043,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15915,
											"end": 15922,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15981,
											"end": 15982,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15977,
											"end": 15978,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15973,
											"end": 15979,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 15969,
											"end": 15983,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 15966,
											"end": 15967,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15963,
											"end": 15984,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 15958,
											"end": 15959,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15951,
											"end": 15960,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15944,
											"end": 15961,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15940,
											"end": 15985,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15937,
											"end": 16008,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15937,
											"end": 16008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "719"
										},
										{
											"begin": 15937,
											"end": 16008,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15988,
											"end": 16006,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "719"
										},
										{
											"begin": 15988,
											"end": 16006,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "574"
										},
										{
											"begin": 15988,
											"end": 16006,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15988,
											"end": 16006,
											"name": "tag",
											"source": 1,
											"value": "719"
										},
										{
											"begin": 15988,
											"end": 16006,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16028,
											"end": 16037,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 16028,
											"end": 16037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15875,
											"end": 16043,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16048,
											"end": 16168,
											"name": "tag",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 16048,
											"end": 16168,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16088,
											"end": 16089,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16114,
											"end": 16115,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16104,
											"end": 16139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "722"
										},
										{
											"begin": 16104,
											"end": 16139,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16119,
											"end": 16137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "722"
										},
										{
											"begin": 16119,
											"end": 16137,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "575"
										},
										{
											"begin": 16119,
											"end": 16137,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 16119,
											"end": 16137,
											"name": "tag",
											"source": 1,
											"value": "722"
										},
										{
											"begin": 16119,
											"end": 16137,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16153,
											"end": 16162,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 16153,
											"end": 16162,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16048,
											"end": 16168,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"LpOfPid(address)": "b0c7044b",
							"attachTokenToGauge(uint256,address)": "698473e3",
							"claimRewards(address[],address[][])": "20b1cb6f",
							"createGauge(address,uint256,bool)": "0c9c7ef5",
							"detachTokenFromGauge(uint256,address)": "411b1f77",
							"distribute(address)": "63453ae1",
							"duration()": "0fb5a6b4",
							"emitDeposit(uint256,address,uint256)": "a61c713a",
							"emitWithdraw(uint256,address,uint256)": "ea94ee44",
							"gaugeFactory()": "0d52333c",
							"gauges(address)": "b9a09fd5",
							"getPoolVote(uint256)": "146650df",
							"isGauge(address)": "aa79979b",
							"massUpdatePools()": "630b5ba1",
							"minTokenReward()": "812632ec",
							"mintMulti()": "37550684",
							"operatable()": "48ee26a3",
							"operator()": "570ca735",
							"owner()": "8da5cb5b",
							"period()": "ef78d4fd",
							"periodEndBlock()": "442da82f",
							"poke(uint256)": "32145f90",
							"poolForGauge(address)": "06d6a1b2",
							"poolInfo(uint256)": "1526fe27",
							"poolLength()": "081e3eda",
							"poolVote(uint256,uint256)": "a86a366d",
							"pools(uint256)": "ac4afa38",
							"reset(uint256)": "310bd74b",
							"set(uint256,uint256,bool)": "64482f79",
							"setHalvingPeriod(uint256)": "b5ec5c99",
							"setMinTokenReward(uint256)": "aa70fb98",
							"setMintMulti(uint256)": "71dd4bda",
							"setOperContract(address)": "0f589d63",
							"setTokenPerBlock(uint256,bool)": "4ade739b",
							"startBlock()": "48cd4cb1",
							"swapToken()": "dc73e49c",
							"tokenPerBlock()": "4198709a",
							"totalAllocPoint()": "17caf6f1",
							"totalWeight()": "96c82e57",
							"updateAll()": "53d78693",
							"updatePool(uint256)": "51eb05a6",
							"usedWeights(uint256)": "79e93824",
							"veToken()": "3b92eb23",
							"vote(uint256,address[],int256[])": "fecdad60",
							"votes(uint256,address)": "d23254b4",
							"weights(address)": "a7cac846"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operatorMsg\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"__ve\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_gauges\",\"type\":\"address\"},{\"internalType\":\"contract IToken\",\"name\":\"_swapToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startBlock\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_period\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"weight\",\"type\":\"int256\"}],\"name\":\"Abstained\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"point\",\"type\":\"uint256\"}],\"name\":\"AddPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"gauge\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Attach\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lp\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"gauge\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"gauge\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Detach\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"gauge\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"DistributeReward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"gauge\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"GaugeCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reward\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"NotifyReward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOperator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOperator\",\"type\":\"address\"}],\"name\":\"SetOperatorContract\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"point\",\"type\":\"uint256\"}],\"name\":\"SetPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"weight\",\"type\":\"int256\"}],\"name\":\"Voted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"lp\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"gauge\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"LpOfPid\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"attachTokenToGauge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_gauges\",\"type\":\"address[]\"},{\"internalType\":\"address[][]\",\"name\":\"_tokens\",\"type\":\"address[][]\"}],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"createGauge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"detachTokenFromGauge\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gauge\",\"type\":\"address\"}],\"name\":\"distribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"duration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"emitDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"emitWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gaugeFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"gauges\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getPoolVote\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isGauge\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minTokenReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintMulti\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operatable\",\"outputs\":[{\"internalType\":\"contract Operatable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"period\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"periodEndBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"poke\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"poolForGauge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"lpToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardBlock\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"poolVote\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"pools\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"reset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_allocPoint\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"set\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_block\",\"type\":\"uint256\"}],\"name\":\"setHalvingPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_reward\",\"type\":\"uint256\"}],\"name\":\"setMinTokenReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_multi\",\"type\":\"uint256\"}],\"name\":\"setMintMulti\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oper\",\"type\":\"address\"}],\"name\":\"setOperContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"setTokenPerBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapToken\",\"outputs\":[{\"internalType\":\"contract IToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalAllocPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_pid\",\"type\":\"uint256\"}],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"usedWeights\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"veToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_poolVote\",\"type\":\"address[]\"},{\"internalType\":\"int256[]\",\"name\":\"_weights\",\"type\":\"int256[]\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"votes\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"weights\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Boost.sol\":\"Boost\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Boost.sol\":{\"keccak256\":\"0x51890f50b6dafdea68176c9872b64a7e1e3600d6953fba67131a979bf5896a4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5823f5aa5cdd3ab82cc93d673ef6f672609120ed18f3f76e079eb74fdf9bae0a\",\"dweb:/ipfs/QmW3EYcqJKHLo6e6VgxxHmjDkyns4etxkBkYYzGVajGHBx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 97,
								"contract": "contracts/Boost.sol:Boost",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 2042,
								"contract": "contracts/Boost.sol:Boost",
								"label": "operatable",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(Operatable)2024"
							},
							{
								"astId": 2195,
								"contract": "contracts/Boost.sol:Boost",
								"label": "swapToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IToken)2170"
							},
							{
								"astId": 2197,
								"contract": "contracts/Boost.sol:Boost",
								"label": "tokenPerBlock",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 2201,
								"contract": "contracts/Boost.sol:Boost",
								"label": "periodEndBlock",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 2203,
								"contract": "contracts/Boost.sol:Boost",
								"label": "period",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 2205,
								"contract": "contracts/Boost.sol:Boost",
								"label": "mintMulti",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 2208,
								"contract": "contracts/Boost.sol:Boost",
								"label": "minTokenReward",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 2555,
								"contract": "contracts/Boost.sol:Boost",
								"label": "totalWeight",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 2563,
								"contract": "contracts/Boost.sol:Boost",
								"label": "weights",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_int256)"
							},
							{
								"astId": 2569,
								"contract": "contracts/Boost.sol:Boost",
								"label": "votes",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_int256))"
							},
							{
								"astId": 2574,
								"contract": "contracts/Boost.sol:Boost",
								"label": "poolVote",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_uint256,t_array(t_address)dyn_storage)"
							},
							{
								"astId": 2578,
								"contract": "contracts/Boost.sol:Boost",
								"label": "usedWeights",
								"offset": 0,
								"slot": "12",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 3142,
								"contract": "contracts/Boost.sol:Boost",
								"label": "totalAllocPoint",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 3146,
								"contract": "contracts/Boost.sol:Boost",
								"label": "poolInfo",
								"offset": 0,
								"slot": "14",
								"type": "t_array(t_struct(PoolInfo)3137_storage)dyn_storage"
							},
							{
								"astId": 3150,
								"contract": "contracts/Boost.sol:Boost",
								"label": "LpOfPid",
								"offset": 0,
								"slot": "15",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 3156,
								"contract": "contracts/Boost.sol:Boost",
								"label": "pools",
								"offset": 0,
								"slot": "16",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 3160,
								"contract": "contracts/Boost.sol:Boost",
								"label": "gauges",
								"offset": 0,
								"slot": "17",
								"type": "t_mapping(t_address,t_address)"
							},
							{
								"astId": 3164,
								"contract": "contracts/Boost.sol:Boost",
								"label": "poolForGauge",
								"offset": 0,
								"slot": "18",
								"type": "t_mapping(t_address,t_address)"
							},
							{
								"astId": 3168,
								"contract": "contracts/Boost.sol:Boost",
								"label": "isGauge",
								"offset": 0,
								"slot": "19",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(PoolInfo)3137_storage)dyn_storage": {
								"base": "t_struct(PoolInfo)3137_storage",
								"encoding": "dynamic_array",
								"label": "struct Boost.PoolInfo[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IToken)2170": {
								"encoding": "inplace",
								"label": "contract IToken",
								"numberOfBytes": "20"
							},
							"t_contract(Operatable)2024": {
								"encoding": "inplace",
								"label": "contract Operatable",
								"numberOfBytes": "20"
							},
							"t_int256": {
								"encoding": "inplace",
								"label": "int256",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_address)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_int256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => int256)",
								"numberOfBytes": "32",
								"value": "t_int256"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_array(t_address)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address[])",
								"numberOfBytes": "32",
								"value": "t_array(t_address)dyn_storage"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_int256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => int256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_int256)"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(PoolInfo)3137_storage": {
								"encoding": "inplace",
								"label": "struct Boost.PoolInfo",
								"members": [
									{
										"astId": 3132,
										"contract": "contracts/Boost.sol:Boost",
										"label": "lpToken",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 3134,
										"contract": "contracts/Boost.sol:Boost",
										"label": "allocPoint",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 3136,
										"contract": "contracts/Boost.sol:Boost",
										"label": "lastRewardBlock",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"CheckOper": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_oper",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldOperator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOperator",
									"type": "address"
								}
							],
							"name": "SetOperatorContract",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "operatable",
							"outputs": [
								{
									"internalType": "contract Operatable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "operator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_oper",
									"type": "address"
								}
							],
							"name": "setOperContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Boost.sol\":44630:45648  contract CheckOper is IOperContract {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Boost.sol\":44797:44923  constructor(address _oper){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Boost.sol\":44833:44843  operatable */\n  0x00\n    /* \"contracts/Boost.sol\":44833:44863  operatable = Operatable(_oper) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"contracts/Boost.sol\":44878:44916  SetOperatorContract(address(0), _oper) */\n  mload(0x40)\n    /* \"contracts/Boost.sol\":44833:44863  operatable = Operatable(_oper) */\n  swap1\n  swap2\n    /* \"contracts/Boost.sol\":44833:44843  operatable */\n  swap1\n    /* \"contracts/Boost.sol\":44878:44916  SetOperatorContract(address(0), _oper) */\n  0x3ccbb406b985dd76fe05e172b432487a2ff9fe4257642d3acc350f167cb1d577\n  swap1\n    /* \"contracts/Boost.sol\":44833:44843  operatable */\n  dup3\n  swap1\n    /* \"contracts/Boost.sol\":44878:44916  SetOperatorContract(address(0), _oper) */\n  log3\n    /* \"contracts/Boost.sol\":44797:44923  constructor(address _oper){... */\n  pop\n    /* \"contracts/Boost.sol\":44630:45648  contract CheckOper is IOperContract {... */\n  jump(tag_7)\n    /* \"#utility.yul\":14:304   */\ntag_3:\n    /* \"#utility.yul\":84:90   */\n  0x00\n    /* \"#utility.yul\":137:139   */\n  0x20\n    /* \"#utility.yul\":125:134   */\n  dup3\n    /* \"#utility.yul\":116:123   */\n  dup5\n    /* \"#utility.yul\":112:135   */\n  sub\n    /* \"#utility.yul\":108:140   */\n  slt\n    /* \"#utility.yul\":105:157   */\n  iszero\n  tag_9\n  jumpi\n    /* \"#utility.yul\":153:154   */\n  0x00\n    /* \"#utility.yul\":150:151   */\n  dup1\n    /* \"#utility.yul\":143:155   */\n  revert\n    /* \"#utility.yul\":105:157   */\ntag_9:\n    /* \"#utility.yul\":179:195   */\n  dup2\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":224:255   */\n  dup2\n  and\n    /* \"#utility.yul\":214:256   */\n  dup2\n  eq\n    /* \"#utility.yul\":204:274   */\n  tag_10\n  jumpi\n    /* \"#utility.yul\":270:271   */\n  0x00\n    /* \"#utility.yul\":267:268   */\n  dup1\n    /* \"#utility.yul\":260:272   */\n  revert\n    /* \"#utility.yul\":204:274   */\ntag_10:\n    /* \"#utility.yul\":293:298   */\n  swap4\n    /* \"#utility.yul\":14:304   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\ntag_7:\n    /* \"contracts/Boost.sol\":44630:45648  contract CheckOper is IOperContract {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Boost.sol\":44630:45648  contract CheckOper is IOperContract {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x0f589d63\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x48ee26a3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x570ca735\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Boost.sol\":45393:45646  function setOperContract(address _oper) public onlyOwner {... */\n    tag_3:\n      tag_7\n      tag_8\n      calldatasize\n      0x04\n      tag_9\n      jump\t// in\n    tag_8:\n      tag_10\n      jump\t// in\n    tag_7:\n      stop\n        /* \"contracts/Boost.sol\":44672:44700  Operatable public operatable */\n    tag_4:\n      sload(0x00)\n      tag_11\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_11:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":585:617   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":567:618   */\n      dup2\n      mstore\n        /* \"#utility.yul\":555:557   */\n      0x20\n        /* \"#utility.yul\":540:558   */\n      add\n        /* \"contracts/Boost.sol\":44672:44700  Operatable public operatable */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Boost.sol\":45179:45283  function operator() public view override returns (address) {... */\n    tag_5:\n      tag_11\n      tag_16\n      jump\t// in\n        /* \"contracts/Boost.sol\":45289:45387  function owner() public view override returns (address) {... */\n    tag_6:\n      tag_11\n      tag_20\n      jump\t// in\n        /* \"contracts/Boost.sol\":45393:45646  function setOperContract(address _oper) public onlyOwner {... */\n    tag_10:\n        /* \"contracts/Boost.sol\":45086:45096  operatable */\n      sload(0x00)\n        /* \"contracts/Boost.sol\":45086:45104  operatable.owner() */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x8da5cb5b)\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/Boost.sol\":45108:45118  msg.sender */\n      caller\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Boost.sol\":45086:45096  operatable */\n      and\n      swap2\n        /* \"contracts/Boost.sol\":45086:45102  operatable.owner */\n      0x8da5cb5b\n      swap2\n        /* \"contracts/Boost.sol\":45086:45104  operatable.owner() */\n      0x04\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"contracts/Boost.sol\":45086:45096  operatable */\n      dup7\n        /* \"contracts/Boost.sol\":45086:45104  operatable.owner() */\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_24\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_24:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Boost.sol\":45086:45118  operatable.owner() == msg.sender */\n      and\n      eq\n        /* \"contracts/Boost.sol\":45078:45155  require(operatable.owner() == msg.sender, 'Ownable: caller is not the owner') */\n      tag_27\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1295:1297   */\n      0x20\n        /* \"contracts/Boost.sol\":45078:45155  require(operatable.owner() == msg.sender, 'Ownable: caller is not the owner') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1277:1298   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":1314:1332   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1307:1337   */\n      mstore\n        /* \"#utility.yul\":1373:1407   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":1353:1371   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1346:1408   */\n      mstore\n        /* \"#utility.yul\":1425:1443   */\n      0x64\n      add\n        /* \"contracts/Boost.sol\":45078:45155  require(operatable.owner() == msg.sender, 'Ownable: caller is not the owner') */\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_27:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Boost.sol\":45468:45487  _oper != address(0) */\n      dup2\n      and\n        /* \"contracts/Boost.sol\":45460:45508  require(_oper != address(0), 'bad new operator') */\n      tag_31\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1656:1658   */\n      0x20\n        /* \"contracts/Boost.sol\":45460:45508  require(_oper != address(0), 'bad new operator') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1638:1659   */\n      mstore\n        /* \"#utility.yul\":1695:1697   */\n      0x10\n        /* \"#utility.yul\":1675:1693   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1668:1698   */\n      mstore\n      shl(0x81, 0x3130b2103732bb9037b832b930ba37b9)\n        /* \"#utility.yul\":1714:1732   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1707:1753   */\n      mstore\n        /* \"#utility.yul\":1770:1788   */\n      0x64\n      add\n        /* \"contracts/Boost.sol\":45460:45508  require(_oper != address(0), 'bad new operator') */\n      tag_28\n        /* \"#utility.yul\":1454:1794   */\n      jump\n        /* \"contracts/Boost.sol\":45460:45508  require(_oper != address(0), 'bad new operator') */\n    tag_31:\n        /* \"contracts/Boost.sol\":45518:45537  address oldOperator */\n      0x00\n        /* \"contracts/Boost.sol\":45555:45585  operatable = Operatable(_oper) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      dup2\n      or\n      dup3\n      sstore\n        /* \"contracts/Boost.sol\":45600:45639  SetOperatorContract(oldOperator, _oper) */\n      mload(0x40)\n        /* \"contracts/Boost.sol\":45555:45585  operatable = Operatable(_oper) */\n      dup4\n      swap3\n      dup3\n      swap2\n        /* \"contracts/Boost.sol\":45600:45639  SetOperatorContract(oldOperator, _oper) */\n      0x3ccbb406b985dd76fe05e172b432487a2ff9fe4257642d3acc350f167cb1d577\n      swap2\n        /* \"contracts/Boost.sol\":45518:45537  address oldOperator */\n      swap1\n        /* \"contracts/Boost.sol\":45600:45639  SetOperatorContract(oldOperator, _oper) */\n      log3\n        /* \"contracts/Boost.sol\":45450:45646  {... */\n      pop\n        /* \"contracts/Boost.sol\":45393:45646  function setOperContract(address _oper) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Boost.sol\":45179:45283  function operator() public view override returns (address) {... */\n    tag_16:\n        /* \"contracts/Boost.sol\":45229:45236  address */\n      0x00\n        /* \"contracts/Boost.sol\":45255:45265  operatable */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Boost.sol\":45255:45274  operatable.operator */\n      and\n      0x570ca735\n        /* \"contracts/Boost.sol\":45255:45276  operatable.operator() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_36\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_36:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_37:\n        /* \"contracts/Boost.sol\":45248:45276  return operatable.operator() */\n      swap1\n      pop\n        /* \"contracts/Boost.sol\":45179:45283  function operator() public view override returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/Boost.sol\":45289:45387  function owner() public view override returns (address) {... */\n    tag_20:\n        /* \"contracts/Boost.sol\":45336:45343  address */\n      0x00\n        /* \"contracts/Boost.sol\":45362:45372  operatable */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Boost.sol\":45362:45378  operatable.owner */\n      and\n      0x8da5cb5b\n        /* \"contracts/Boost.sol\":45362:45380  operatable.owner() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_36\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n        /* \"#utility.yul\":14:145   */\n    tag_42:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":89:120   */\n      dup2\n      and\n        /* \"#utility.yul\":79:121   */\n      dup2\n      eq\n        /* \"#utility.yul\":69:139   */\n      tag_45\n      jumpi\n        /* \"#utility.yul\":135:136   */\n      0x00\n        /* \"#utility.yul\":132:133   */\n      dup1\n        /* \"#utility.yul\":125:137   */\n      revert\n        /* \"#utility.yul\":69:139   */\n    tag_45:\n        /* \"#utility.yul\":14:145   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":150:397   */\n    tag_9:\n        /* \"#utility.yul\":209:215   */\n      0x00\n        /* \"#utility.yul\":262:264   */\n      0x20\n        /* \"#utility.yul\":250:259   */\n      dup3\n        /* \"#utility.yul\":241:248   */\n      dup5\n        /* \"#utility.yul\":237:260   */\n      sub\n        /* \"#utility.yul\":233:265   */\n      slt\n        /* \"#utility.yul\":230:282   */\n      iszero\n      tag_47\n      jumpi\n        /* \"#utility.yul\":278:279   */\n      0x00\n        /* \"#utility.yul\":275:276   */\n      dup1\n        /* \"#utility.yul\":268:280   */\n      revert\n        /* \"#utility.yul\":230:282   */\n    tag_47:\n        /* \"#utility.yul\":317:326   */\n      dup2\n        /* \"#utility.yul\":304:327   */\n      calldataload\n        /* \"#utility.yul\":336:367   */\n      tag_48\n        /* \"#utility.yul\":361:366   */\n      dup2\n        /* \"#utility.yul\":336:367   */\n      tag_42\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":386:391   */\n      swap4\n        /* \"#utility.yul\":150:397   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":837:1088   */\n    tag_26:\n        /* \"#utility.yul\":907:913   */\n      0x00\n        /* \"#utility.yul\":960:962   */\n      0x20\n        /* \"#utility.yul\":948:957   */\n      dup3\n        /* \"#utility.yul\":939:946   */\n      dup5\n        /* \"#utility.yul\":935:958   */\n      sub\n        /* \"#utility.yul\":931:963   */\n      slt\n        /* \"#utility.yul\":928:980   */\n      iszero\n      tag_52\n      jumpi\n        /* \"#utility.yul\":976:977   */\n      0x00\n        /* \"#utility.yul\":973:974   */\n      dup1\n        /* \"#utility.yul\":966:978   */\n      revert\n        /* \"#utility.yul\":928:980   */\n    tag_52:\n        /* \"#utility.yul\":1008:1017   */\n      dup2\n        /* \"#utility.yul\":1002:1018   */\n      mload\n        /* \"#utility.yul\":1027:1058   */\n      tag_48\n        /* \"#utility.yul\":1052:1057   */\n      dup2\n        /* \"#utility.yul\":1027:1058   */\n      tag_42\n      jump\t// in\n\n    auxdata: 0xa264697066735822122080d39a97af19d6989e98a85c5d7e09466db824231abc299cc23b95569c34dbbc64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2068": {
									"entryPoint": null,
									"id": 2068,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 125,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:306:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "95:209:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "141:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "150:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "153:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "143:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "143:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "143:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "116:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "125:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "112:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "112:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "137:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "108:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "108:32:1"
															},
															"nodeType": "YulIf",
															"src": "105:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "166:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "185:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "179:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "179:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "170:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "258:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "267:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "270:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "260:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "260:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "260:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "217:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "228:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "243:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "248:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "239:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "239:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "252:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "235:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "235:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "224:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "224:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "214:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "214:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "207:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "207:50:1"
															},
															"nodeType": "YulIf",
															"src": "204:70:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "283:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "293:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "283:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "61:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "72:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "84:6:1",
														"type": ""
													}
												],
												"src": "14:290:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161041e38038061041e83398101604081905261002f9161007d565b600080546001600160a01b0319166001600160a01b03831690811782556040519091907f3ccbb406b985dd76fe05e172b432487a2ff9fe4257642d3acc350f167cb1d577908290a3506100ad565b60006020828403121561008f57600080fd5b81516001600160a01b03811681146100a657600080fd5b9392505050565b610362806100bc6000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80630f589d631461005157806348ee26a314610066578063570ca735146100955780638da5cb5b1461009d575b600080fd5b61006461005f3660046102eb565b6100a5565b005b600054610079906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b610079610202565b61007961027f565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b9160048083019260209291908290030181865afa1580156100ee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610112919061030f565b6001600160a01b03161461016d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001600160a01b0381166101b65760405162461bcd60e51b815260206004820152601060248201526f3130b2103732bb9037b832b930ba37b960811b6044820152606401610164565b600080546001600160a01b0319166001600160a01b0383169081178255604051839282917f3ccbb406b985dd76fe05e172b432487a2ff9fe4257642d3acc350f167cb1d5779190a35050565b60008060009054906101000a90046001600160a01b03166001600160a01b031663570ca7356040518163ffffffff1660e01b8152600401602060405180830381865afa158015610256573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027a919061030f565b905090565b60008060009054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610256573d6000803e3d6000fd5b6001600160a01b03811681146102e857600080fd5b50565b6000602082840312156102fd57600080fd5b8135610308816102d3565b9392505050565b60006020828403121561032157600080fd5b8151610308816102d356fea264697066735822122080d39a97af19d6989e98a85c5d7e09466db824231abc299cc23b95569c34dbbc64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x41E CODESIZE SUB DUP1 PUSH2 0x41E DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x7D JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 SWAP1 PUSH32 0x3CCBB406B985DD76FE05E172B432487A2FF9FE4257642D3ACC350F167CB1D577 SWAP1 DUP3 SWAP1 LOG3 POP PUSH2 0xAD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xA6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x362 DUP1 PUSH2 0xBC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xF589D63 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x48EE26A3 EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0x570CA735 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x9D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x2EB JUMP JUMPDEST PUSH2 0xA5 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x79 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x79 PUSH2 0x202 JUMP JUMPDEST PUSH2 0x79 PUSH2 0x27F JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x8DA5CB5B PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD CALLER SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x8DA5CB5B SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x112 SWAP2 SWAP1 PUSH2 0x30F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x16D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x3130B2103732BB9037B832B930BA37B9 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x164 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD DUP4 SWAP3 DUP3 SWAP2 PUSH32 0x3CCBB406B985DD76FE05E172B432487A2FF9FE4257642D3ACC350F167CB1D577 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x570CA735 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x256 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x30F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x256 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x308 DUP2 PUSH2 0x2D3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x308 DUP2 PUSH2 0x2D3 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 0xD3 SWAP11 SWAP8 0xAF NOT 0xD6 SWAP9 SWAP15 SWAP9 0xA8 0x5C 0x5D PUSH31 0x9466DB824231ABC299CC23B95569C34DBBC64736F6C634300080A00330000 ",
							"sourceMap": "44630:1018:0:-:0;;;44797:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;44833:10;:30;;-1:-1:-1;;;;;;44833:30:0;-1:-1:-1;;;;;44833:30:0;;;;;;;44878:38;;44833:30;;:10;44878:38;;44833:10;;44878:38;44797:126;44630:1018;;14:290:1;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:1;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:1:o;:::-;44630:1018:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@operatable_2042": {
									"entryPoint": null,
									"id": 2042,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@operator_2107": {
									"entryPoint": 514,
									"id": 2107,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_2118": {
									"entryPoint": 639,
									"id": 2118,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@setOperContract_2151": {
									"entryPoint": 165,
									"id": 2151,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 747,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 783,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_Operatable_$2024__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bd8da5f7fa1b241e5cc51a80e871f13a4ea7aa28fe54091ef63906319b2ad5ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_address": {
									"entryPoint": 723,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1796:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:86:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "123:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "132:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "135:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "125:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "125:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "125:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "82:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "93:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "108:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "113:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "104:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "104:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "117:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "100:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "100:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "89:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "89:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "79:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "79:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "72:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "72:50:1"
															},
															"nodeType": "YulIf",
															"src": "69:70:1"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "48:5:1",
														"type": ""
													}
												],
												"src": "14:131:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "220:177:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "266:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "275:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "278:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "268:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "268:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "268:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "241:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "250:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "237:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "237:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "262:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "233:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "233:32:1"
															},
															"nodeType": "YulIf",
															"src": "230:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "291:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "317:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "304:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "304:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "295:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "361:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "336:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "336:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "336:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "376:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "386:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "376:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "186:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "197:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "209:6:1",
														"type": ""
													}
												],
												"src": "150:247:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "522:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "532:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "544:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "555:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "540:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "540:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "532:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "574:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "605:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "610:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "601:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "601:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "614:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "597:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "597:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "585:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "585:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "567:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "567:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "567:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_Operatable_$2024__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "491:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "502:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "513:4:1",
														"type": ""
													}
												],
												"src": "402:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "730:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "740:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "752:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "763:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "748:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "748:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "740:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "782:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "797:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "813:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "818:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "809:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "809:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "822:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "805:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "805:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "793:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "793:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "775:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "775:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "775:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "699:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "710:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "721:4:1",
														"type": ""
													}
												],
												"src": "629:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "918:170:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "964:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "973:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "976:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "966:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "966:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "966:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "939:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "948:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "935:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "935:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "960:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "931:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "931:32:1"
															},
															"nodeType": "YulIf",
															"src": "928:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "989:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1008:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1002:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1002:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "993:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1052:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1027:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1027:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1027:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1067:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1077:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1067:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "884:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "895:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "907:6:1",
														"type": ""
													}
												],
												"src": "837:251:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1267:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1284:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1295:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1277:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1277:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1277:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1318:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1329:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1314:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1314:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1334:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1307:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1307:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1307:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1357:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1368:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1353:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1353:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1373:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1346:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1346:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1346:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1417:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1429:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1440:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1425:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1425:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1417:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1244:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1258:4:1",
														"type": ""
													}
												],
												"src": "1093:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1628:166:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1645:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1656:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1638:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1638:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1638:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1679:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1690:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1675:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1675:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1695:2:1",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1668:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1668:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1668:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1718:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1729:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1714:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1714:18:1"
																	},
																	{
																		"hexValue": "626164206e6577206f70657261746f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1734:18:1",
																		"type": "",
																		"value": "bad new operator"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1707:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1707:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1707:46:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1762:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1774:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1785:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1770:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1770:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1762:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bd8da5f7fa1b241e5cc51a80e871f13a4ea7aa28fe54091ef63906319b2ad5ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1605:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1619:4:1",
														"type": ""
													}
												],
												"src": "1454:340:1"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_Operatable_$2024__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_bd8da5f7fa1b241e5cc51a80e871f13a4ea7aa28fe54091ef63906319b2ad5ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"bad new operator\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80630f589d631461005157806348ee26a314610066578063570ca735146100955780638da5cb5b1461009d575b600080fd5b61006461005f3660046102eb565b6100a5565b005b600054610079906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b610079610202565b61007961027f565b60005460408051638da5cb5b60e01b8152905133926001600160a01b031691638da5cb5b9160048083019260209291908290030181865afa1580156100ee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610112919061030f565b6001600160a01b03161461016d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001600160a01b0381166101b65760405162461bcd60e51b815260206004820152601060248201526f3130b2103732bb9037b832b930ba37b960811b6044820152606401610164565b600080546001600160a01b0319166001600160a01b0383169081178255604051839282917f3ccbb406b985dd76fe05e172b432487a2ff9fe4257642d3acc350f167cb1d5779190a35050565b60008060009054906101000a90046001600160a01b03166001600160a01b031663570ca7356040518163ffffffff1660e01b8152600401602060405180830381865afa158015610256573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061027a919061030f565b905090565b60008060009054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610256573d6000803e3d6000fd5b6001600160a01b03811681146102e857600080fd5b50565b6000602082840312156102fd57600080fd5b8135610308816102d3565b9392505050565b60006020828403121561032157600080fd5b8151610308816102d356fea264697066735822122080d39a97af19d6989e98a85c5d7e09466db824231abc299cc23b95569c34dbbc64736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xF589D63 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0x48EE26A3 EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0x570CA735 EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x9D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x2EB JUMP JUMPDEST PUSH2 0xA5 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x79 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x79 PUSH2 0x202 JUMP JUMPDEST PUSH2 0x79 PUSH2 0x27F JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x8DA5CB5B PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD CALLER SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x8DA5CB5B SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xEE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x112 SWAP2 SWAP1 PUSH2 0x30F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x16D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x3130B2103732BB9037B832B930BA37B9 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x164 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD DUP4 SWAP3 DUP3 SWAP2 PUSH32 0x3CCBB406B985DD76FE05E172B432487A2FF9FE4257642D3ACC350F167CB1D577 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x570CA735 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x256 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x27A SWAP2 SWAP1 PUSH2 0x30F JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x8DA5CB5B PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x256 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x308 DUP2 PUSH2 0x2D3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x321 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x308 DUP2 PUSH2 0x2D3 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP1 0xD3 SWAP11 SWAP8 0xAF NOT 0xD6 SWAP9 SWAP15 SWAP9 0xA8 0x5C 0x5D PUSH31 0x9466DB824231ABC299CC23B95569C34DBBC64736F6C634300080A00330000 ",
							"sourceMap": "44630:1018:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;45393:253;;;;;;:::i;:::-;;:::i;:::-;;44672:28;;;;;-1:-1:-1;;;;;44672:28:0;;;;;;-1:-1:-1;;;;;585:32:1;;;567:51;;555:2;540:18;44672:28:0;;;;;;;45179:104;;;:::i;45289:98::-;;;:::i;45393:253::-;45086:10;;:18;;;-1:-1:-1;;;45086:18:0;;;;45108:10;;-1:-1:-1;;;;;45086:10:0;;:16;;:18;;;;;;;;;;;;;;:10;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;45086:32:0;;45078:77;;;;-1:-1:-1;;;45078:77:0;;1295:2:1;45078:77:0;;;1277:21:1;;;1314:18;;;1307:30;1373:34;1353:18;;;1346:62;1425:18;;45078:77:0;;;;;;;;;-1:-1:-1;;;;;45468:19:0;::::1;45460:48;;;::::0;-1:-1:-1;;;45460:48:0;;1656:2:1;45460:48:0::1;::::0;::::1;1638:21:1::0;1695:2;1675:18;;;1668:30;-1:-1:-1;;;1714:18:1;;;1707:46;1770:18;;45460:48:0::1;1454:340:1::0;45460:48:0::1;45518:19;45555:30:::0;;-1:-1:-1;;;;;;45555:30:0::1;-1:-1:-1::0;;;;;45555:30:0;::::1;::::0;;::::1;::::0;;45600:39:::1;::::0;45555:30;;;;45600:39:::1;::::0;45518:19;45600:39:::1;45450:196;45393:253:::0;:::o;45179:104::-;45229:7;45255:10;;;;;;;;;-1:-1:-1;;;;;45255:10:0;-1:-1:-1;;;;;45255:19:0;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;45248:28;;45179:104;:::o;45289:98::-;45336:7;45362:10;;;;;;;;;-1:-1:-1;;;;;45362:10:0;-1:-1:-1;;;;;45362:16:0;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:131:1;-1:-1:-1;;;;;89:31:1;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:247::-;209:6;262:2;250:9;241:7;237:23;233:32;230:52;;;278:1;275;268:12;230:52;317:9;304:23;336:31;361:5;336:31;:::i;:::-;386:5;150:247;-1:-1:-1;;;150:247:1:o;837:251::-;907:6;960:2;948:9;939:7;935:23;931:32;928:52;;;976:1;973;966:12;928:52;1008:9;1002:16;1027:31;1052:5;1027:31;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "173200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"operatable()": "2325",
								"operator()": "infinite",
								"owner()": "infinite",
								"setOperContract(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 44630,
									"end": 45648,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 44630,
									"end": 45648,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 44630,
									"end": 45648,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 44797,
									"end": 44923,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 44797,
									"end": 44923,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 44797,
									"end": 44923,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 44797,
									"end": 44923,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 44797,
									"end": 44923,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 44797,
									"end": 44923,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 44797,
									"end": 44923,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 44797,
									"end": 44923,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 44797,
									"end": 44923,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 44797,
									"end": 44923,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 44797,
									"end": 44923,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 44797,
									"end": 44923,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 44797,
									"end": 44923,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 44797,
									"end": 44923,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 44797,
									"end": 44923,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 44797,
									"end": 44923,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 44797,
									"end": 44923,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 44797,
									"end": 44923,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 44797,
									"end": 44923,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 44797,
									"end": 44923,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 44797,
									"end": 44923,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 44797,
									"end": 44923,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 44797,
									"end": 44923,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 44797,
									"end": 44923,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 44797,
									"end": 44923,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 44797,
									"end": 44923,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 44797,
									"end": 44923,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 44797,
									"end": 44923,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 44797,
									"end": 44923,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 44797,
									"end": 44923,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 44797,
									"end": 44923,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 44797,
									"end": 44923,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 44833,
									"end": 44843,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 44833,
									"end": 44863,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 44833,
									"end": 44863,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 44833,
									"end": 44863,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 44833,
									"end": 44863,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 44833,
									"end": 44863,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 44833,
									"end": 44863,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 44833,
									"end": 44863,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 44833,
									"end": 44863,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 44833,
									"end": 44863,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 44833,
									"end": 44863,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 44878,
									"end": 44916,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 44878,
									"end": 44916,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 44833,
									"end": 44863,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 44833,
									"end": 44863,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 44833,
									"end": 44843,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 44878,
									"end": 44916,
									"name": "PUSH",
									"source": 0,
									"value": "3CCBB406B985DD76FE05E172B432487A2FF9FE4257642D3ACC350F167CB1D577"
								},
								{
									"begin": 44878,
									"end": 44916,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 44833,
									"end": 44843,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 44833,
									"end": 44843,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 44878,
									"end": 44916,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 44797,
									"end": 44923,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 44630,
									"end": 45648,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 44630,
									"end": 45648,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 84,
									"end": 90,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 137,
									"end": 139,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 125,
									"end": 134,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 116,
									"end": 123,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 112,
									"end": 135,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 108,
									"end": 140,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 105,
									"end": 157,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 105,
									"end": 157,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 153,
									"end": 154,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 151,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 143,
									"end": 155,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 105,
									"end": 157,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 105,
									"end": 157,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 179,
									"end": 195,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 179,
									"end": 195,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 224,
									"end": 255,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 214,
									"end": 256,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 214,
									"end": 256,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 204,
									"end": 274,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 270,
									"end": 271,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 267,
									"end": 268,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 260,
									"end": 272,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 204,
									"end": 274,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 204,
									"end": 274,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 293,
									"end": 298,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 14,
									"end": 304,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 14,
									"end": 304,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 44630,
									"end": 45648,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 44630,
									"end": 45648,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 44630,
									"end": 45648,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 44630,
									"end": 45648,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 44630,
									"end": 45648,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 44630,
									"end": 45648,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 44630,
									"end": 45648,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122080d39a97af19d6989e98a85c5d7e09466db824231abc299cc23b95569c34dbbc64736f6c634300080a0033",
									".code": [
										{
											"begin": 44630,
											"end": 45648,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 44630,
											"end": 45648,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44630,
											"end": 45648,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44630,
											"end": 45648,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 44630,
											"end": 45648,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44630,
											"end": 45648,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44630,
											"end": 45648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 44630,
											"end": 45648,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44630,
											"end": 45648,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44630,
											"end": 45648,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44630,
											"end": 45648,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 44630,
											"end": 45648,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 44630,
											"end": 45648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44630,
											"end": 45648,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44630,
											"end": 45648,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44630,
											"end": 45648,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 44630,
											"end": 45648,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 44630,
											"end": 45648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 44630,
											"end": 45648,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44630,
											"end": 45648,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44630,
											"end": 45648,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 44630,
											"end": 45648,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 44630,
											"end": 45648,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 44630,
											"end": 45648,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44630,
											"end": 45648,
											"name": "PUSH",
											"source": 0,
											"value": "F589D63"
										},
										{
											"begin": 44630,
											"end": 45648,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44630,
											"end": 45648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 44630,
											"end": 45648,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44630,
											"end": 45648,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44630,
											"end": 45648,
											"name": "PUSH",
											"source": 0,
											"value": "48EE26A3"
										},
										{
											"begin": 44630,
											"end": 45648,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44630,
											"end": 45648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44630,
											"end": 45648,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44630,
											"end": 45648,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44630,
											"end": 45648,
											"name": "PUSH",
											"source": 0,
											"value": "570CA735"
										},
										{
											"begin": 44630,
											"end": 45648,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44630,
											"end": 45648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 44630,
											"end": 45648,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44630,
											"end": 45648,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44630,
											"end": 45648,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 44630,
											"end": 45648,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44630,
											"end": 45648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 44630,
											"end": 45648,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44630,
											"end": 45648,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 44630,
											"end": 45648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44630,
											"end": 45648,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44630,
											"end": 45648,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44630,
											"end": 45648,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 45393,
											"end": 45646,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 45393,
											"end": 45646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45393,
											"end": 45646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 45393,
											"end": 45646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 45393,
											"end": 45646,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 45393,
											"end": 45646,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45393,
											"end": 45646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 45393,
											"end": 45646,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 45393,
											"end": 45646,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 45393,
											"end": 45646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45393,
											"end": 45646,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 45393,
											"end": 45646,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 45393,
											"end": 45646,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 45393,
											"end": 45646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45393,
											"end": 45646,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 44672,
											"end": 44700,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44672,
											"end": 44700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44672,
											"end": 44700,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44672,
											"end": 44700,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 44672,
											"end": 44700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 44672,
											"end": 44700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 44672,
											"end": 44700,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44672,
											"end": 44700,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44672,
											"end": 44700,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44672,
											"end": 44700,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 44672,
											"end": 44700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44672,
											"end": 44700,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44672,
											"end": 44700,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 585,
											"end": 617,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 585,
											"end": 617,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 585,
											"end": 617,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 567,
											"end": 618,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 567,
											"end": 618,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 555,
											"end": 557,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 540,
											"end": 558,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 44672,
											"end": 44700,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44672,
											"end": 44700,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44672,
											"end": 44700,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44672,
											"end": 44700,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44672,
											"end": 44700,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 44672,
											"end": 44700,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44672,
											"end": 44700,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 45179,
											"end": 45283,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 45179,
											"end": 45283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45179,
											"end": 45283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 45179,
											"end": 45283,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 45179,
											"end": 45283,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 45289,
											"end": 45387,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 45289,
											"end": 45387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45289,
											"end": 45387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 45289,
											"end": 45387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45289,
											"end": 45387,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 45393,
											"end": 45646,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 45393,
											"end": 45646,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45096,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45086,
											"end": 45096,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8DA5CB5B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45108,
											"end": 45118,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 45108,
											"end": 45118,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 45086,
											"end": 45096,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45096,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45102,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 45086,
											"end": 45102,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45096,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 45086,
											"end": 45104,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 45086,
											"end": 45118,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45086,
											"end": 45118,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 45078,
											"end": 45155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 45078,
											"end": 45155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45078,
											"end": 45155,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45078,
											"end": 45155,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 45078,
											"end": 45155,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45078,
											"end": 45155,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1295,
											"end": 1297,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 45078,
											"end": 45155,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45078,
											"end": 45155,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45078,
											"end": 45155,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1277,
											"end": 1298,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1277,
											"end": 1298,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1277,
											"end": 1298,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1332,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1314,
											"end": 1332,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1314,
											"end": 1332,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1307,
											"end": 1337,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1373,
											"end": 1407,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 1353,
											"end": 1371,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1353,
											"end": 1371,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1371,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1346,
											"end": 1408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1425,
											"end": 1443,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1425,
											"end": 1443,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 45078,
											"end": 45155,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 45078,
											"end": 45155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45078,
											"end": 45155,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45078,
											"end": 45155,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45078,
											"end": 45155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45078,
											"end": 45155,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45078,
											"end": 45155,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 45078,
											"end": 45155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45078,
											"end": 45155,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 45078,
											"end": 45155,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 45078,
											"end": 45155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 45468,
											"end": 45487,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45468,
											"end": 45487,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45460,
											"end": 45508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 45460,
											"end": 45508,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45460,
											"end": 45508,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45460,
											"end": 45508,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 45460,
											"end": 45508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45460,
											"end": 45508,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1656,
											"end": 1658,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 45460,
											"end": 45508,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45460,
											"end": 45508,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45460,
											"end": 45508,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1659,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1695,
											"end": 1697,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1675,
											"end": 1693,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1675,
											"end": 1693,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1675,
											"end": 1693,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1668,
											"end": 1698,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3130B2103732BB9037B832B930BA37B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1714,
											"end": 1732,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1714,
											"end": 1732,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1714,
											"end": 1732,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1753,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1770,
											"end": 1788,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1770,
											"end": 1788,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 45460,
											"end": 45508,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1454,
											"end": 1794,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 45460,
											"end": 45508,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 45460,
											"end": 45508,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45518,
											"end": 45537,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45555,
											"end": 45585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45555,
											"end": 45585,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 45555,
											"end": 45585,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 45555,
											"end": 45585,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45555,
											"end": 45585,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45555,
											"end": 45585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45555,
											"end": 45585,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45555,
											"end": 45585,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 45555,
											"end": 45585,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45555,
											"end": 45585,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 45600,
											"end": 45639,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45600,
											"end": 45639,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45555,
											"end": 45585,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45555,
											"end": 45585,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 45555,
											"end": 45585,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45555,
											"end": 45585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45600,
											"end": 45639,
											"name": "PUSH",
											"source": 0,
											"value": "3CCBB406B985DD76FE05E172B432487A2FF9FE4257642D3ACC350F167CB1D577"
										},
										{
											"begin": 45600,
											"end": 45639,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45518,
											"end": 45537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45600,
											"end": 45639,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 45450,
											"end": 45646,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45393,
											"end": 45646,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45393,
											"end": 45646,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 45179,
											"end": 45283,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 45179,
											"end": 45283,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45229,
											"end": 45236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45255,
											"end": 45265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45265,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45255,
											"end": 45265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45265,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45265,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 45255,
											"end": 45265,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45265,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 45255,
											"end": 45265,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 45255,
											"end": 45274,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45274,
											"name": "PUSH",
											"source": 0,
											"value": "570CA735"
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 45255,
											"end": 45276,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45248,
											"end": 45276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45248,
											"end": 45276,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45179,
											"end": 45283,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45179,
											"end": 45283,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 45289,
											"end": 45387,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45289,
											"end": 45387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45336,
											"end": 45343,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45362,
											"end": 45372,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45372,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45362,
											"end": 45372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45372,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45372,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 45362,
											"end": 45372,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45372,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45372,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 45362,
											"end": 45372,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 45362,
											"end": 45378,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45378,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45362,
											"end": 45380,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 14,
											"end": 145,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 89,
											"end": 120,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 89,
											"end": 120,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 79,
											"end": 121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 79,
											"end": 121,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 69,
											"end": 139,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 69,
											"end": 139,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 135,
											"end": 136,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 132,
											"end": 133,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 125,
											"end": 137,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 69,
											"end": 139,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 69,
											"end": 139,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14,
											"end": 145,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 145,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 150,
											"end": 397,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 150,
											"end": 397,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 209,
											"end": 215,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 264,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 250,
											"end": 259,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 241,
											"end": 248,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 237,
											"end": 260,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 233,
											"end": 265,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 230,
											"end": 282,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 230,
											"end": 282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 230,
											"end": 282,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 278,
											"end": 279,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 275,
											"end": 276,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 268,
											"end": 280,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 230,
											"end": 282,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 230,
											"end": 282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 317,
											"end": 326,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 304,
											"end": 327,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 336,
											"end": 367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 361,
											"end": 366,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 336,
											"end": 367,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 336,
											"end": 367,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 336,
											"end": 367,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 336,
											"end": 367,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 386,
											"end": 391,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 150,
											"end": 397,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 150,
											"end": 397,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 837,
											"end": 1088,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 837,
											"end": 1088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 907,
											"end": 913,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 960,
											"end": 962,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 948,
											"end": 957,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 939,
											"end": 946,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 935,
											"end": 958,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 931,
											"end": 963,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 928,
											"end": 980,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 928,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 928,
											"end": 980,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 976,
											"end": 977,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 973,
											"end": 974,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 966,
											"end": 978,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 928,
											"end": 980,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 928,
											"end": 980,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1008,
											"end": 1017,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1002,
											"end": 1018,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1027,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1052,
											"end": 1057,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1027,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1027,
											"end": 1058,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"operatable()": "48ee26a3",
							"operator()": "570ca735",
							"owner()": "8da5cb5b",
							"setOperContract(address)": "0f589d63"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oper\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOperator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOperator\",\"type\":\"address\"}],\"name\":\"SetOperatorContract\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"operatable\",\"outputs\":[{\"internalType\":\"contract Operatable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oper\",\"type\":\"address\"}],\"name\":\"setOperContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Boost.sol\":\"CheckOper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Boost.sol\":{\"keccak256\":\"0x51890f50b6dafdea68176c9872b64a7e1e3600d6953fba67131a979bf5896a4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5823f5aa5cdd3ab82cc93d673ef6f672609120ed18f3f76e079eb74fdf9bae0a\",\"dweb:/ipfs/QmW3EYcqJKHLo6e6VgxxHmjDkyns4etxkBkYYzGVajGHBx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2042,
								"contract": "contracts/Boost.sol:CheckOper",
								"label": "operatable",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(Operatable)2024"
							}
						],
						"types": {
							"t_contract(Operatable)2024": {
								"encoding": "inplace",
								"label": "contract Operatable",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Boost.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Boost.sol\":{\"keccak256\":\"0x51890f50b6dafdea68176c9872b64a7e1e3600d6953fba67131a979bf5896a4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5823f5aa5cdd3ab82cc93d673ef6f672609120ed18f3f76e079eb74fdf9bae0a\",\"dweb:/ipfs/QmW3EYcqJKHLo6e6VgxxHmjDkyns4etxkBkYYzGVajGHBx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"EnumerableSet": {
					"abi": [],
					"devdoc": {
						"details": "Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Boost.sol\":30569:41937  library EnumerableSet {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Boost.sol\":30569:41937  library EnumerableSet {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c0b507bb01c045ad8dee21e18fef018350438d42d84abef95f6ffd5601ed6b5064736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c0b507bb01c045ad8dee21e18fef018350438d42d84abef95f6ffd5601ed6b5064736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 0xB5 SMOD 0xBB ADD 0xC0 GASLIMIT 0xAD DUP14 0xEE 0x21 0xE1 DUP16 0xEF ADD DUP4 POP NUMBER DUP14 TIMESTAMP 0xD8 0x4A 0xBE 0xF9 0x5F PUSH16 0xFD5601ED6B5064736F6C634300080A00 CALLER ",
							"sourceMap": "30569:11368:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;30569:11368:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c0b507bb01c045ad8dee21e18fef018350438d42d84abef95f6ffd5601ed6b5064736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC0 0xB5 SMOD 0xBB ADD 0xC0 GASLIMIT 0xAD DUP14 0xEE 0x21 0xE1 DUP16 0xEF ADD DUP4 POP NUMBER DUP14 TIMESTAMP 0xD8 0x4A 0xBE 0xF9 0x5F PUSH16 0xFD5601ED6B5064736F6C634300080A00 CALLER ",
							"sourceMap": "30569:11368:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_add(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_at(struct EnumerableSet.Set storage pointer,uint256)": "infinite",
								"_contains(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_length(struct EnumerableSet.Set storage pointer)": "infinite",
								"_remove(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_values(struct EnumerableSet.Set storage pointer)": "infinite",
								"add(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"add(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"add(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.AddressSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.Bytes32Set storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"contains(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"contains(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"contains(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"length(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"length(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"length(struct EnumerableSet.UintSet storage pointer)": "infinite",
								"remove(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"remove(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"remove(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"values(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"values(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"values(struct EnumerableSet.UintSet storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 30569,
									"end": 41937,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 30569,
									"end": 41937,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 30569,
									"end": 41937,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 30569,
									"end": 41937,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30569,
									"end": 41937,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30569,
									"end": 41937,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30569,
									"end": 41937,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 30569,
									"end": 41937,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 30569,
									"end": 41937,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 30569,
									"end": 41937,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30569,
									"end": 41937,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 30569,
									"end": 41937,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 30569,
									"end": 41937,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 30569,
									"end": 41937,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 30569,
									"end": 41937,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 30569,
									"end": 41937,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30569,
									"end": 41937,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30569,
									"end": 41937,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30569,
									"end": 41937,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 30569,
									"end": 41937,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30569,
									"end": 41937,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 30569,
									"end": 41937,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30569,
									"end": 41937,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 30569,
									"end": 41937,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 30569,
									"end": 41937,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 30569,
									"end": 41937,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 30569,
									"end": 41937,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 30569,
									"end": 41937,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 30569,
									"end": 41937,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 30569,
									"end": 41937,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30569,
									"end": 41937,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 30569,
									"end": 41937,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 30569,
									"end": 41937,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 30569,
									"end": 41937,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c0b507bb01c045ad8dee21e18fef018350438d42d84abef95f6ffd5601ed6b5064736f6c634300080a0033",
									".code": [
										{
											"begin": 30569,
											"end": 41937,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 41937,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 41937,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 41937,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 30569,
											"end": 41937,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30569,
											"end": 41937,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 41937,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 30569,
											"end": 41937,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 30569,
											"end": 41937,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Boost.sol\":\"EnumerableSet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Boost.sol\":{\"keccak256\":\"0x51890f50b6dafdea68176c9872b64a7e1e3600d6953fba67131a979bf5896a4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5823f5aa5cdd3ab82cc93d673ef6f672609120ed18f3f76e079eb74fdf9bae0a\",\"dweb:/ipfs/QmW3EYcqJKHLo6e6VgxxHmjDkyns4etxkBkYYzGVajGHBx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Boost.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Boost.sol\":{\"keccak256\":\"0x51890f50b6dafdea68176c9872b64a7e1e3600d6953fba67131a979bf5896a4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5823f5aa5cdd3ab82cc93d673ef6f672609120ed18f3f76e079eb74fdf9bae0a\",\"dweb:/ipfs/QmW3EYcqJKHLo6e6VgxxHmjDkyns4etxkBkYYzGVajGHBx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IGauge": {
					"abi": [
						{
							"inputs": [],
							"name": "claimFees",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "claimed0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "claimed1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address[]",
									"name": "tokens",
									"type": "address[]"
								}
							],
							"name": "getReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "left",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "notifyRewardAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"claimFees()": "d294f093",
							"getReward(address,address[])": "31279d3d",
							"left(address)": "99bcc052",
							"notifyRewardAmount(address,uint256)": "b66503cf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"claimFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"claimed0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimed1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"tokens\",\"type\":\"address[]\"}],\"name\":\"getReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"left\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"notifyRewardAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Boost.sol\":\"IGauge\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Boost.sol\":{\"keccak256\":\"0x51890f50b6dafdea68176c9872b64a7e1e3600d6953fba67131a979bf5896a4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5823f5aa5cdd3ab82cc93d673ef6f672609120ed18f3f76e079eb74fdf9bae0a\",\"dweb:/ipfs/QmW3EYcqJKHLo6e6VgxxHmjDkyns4etxkBkYYzGVajGHBx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IGaugeFactory": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "createGauge",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"createGauge(address,address)": "794cea3c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"createGauge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Boost.sol\":\"IGaugeFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Boost.sol\":{\"keccak256\":\"0x51890f50b6dafdea68176c9872b64a7e1e3600d6953fba67131a979bf5896a4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5823f5aa5cdd3ab82cc93d673ef6f672609120ed18f3f76e079eb74fdf9bae0a\",\"dweb:/ipfs/QmW3EYcqJKHLo6e6VgxxHmjDkyns4etxkBkYYzGVajGHBx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IOperContract": {
					"abi": [
						{
							"inputs": [],
							"name": "operator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"operator()": "570ca735",
							"owner()": "8da5cb5b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"operator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Boost.sol\":\"IOperContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Boost.sol\":{\"keccak256\":\"0x51890f50b6dafdea68176c9872b64a7e1e3600d6953fba67131a979bf5896a4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5823f5aa5cdd3ab82cc93d673ef6f672609120ed18f3f76e079eb74fdf9bae0a\",\"dweb:/ipfs/QmW3EYcqJKHLo6e6VgxxHmjDkyns4etxkBkYYzGVajGHBx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IToken": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"mint(address,uint256)": "40c10f19",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Boost.sol\":\"IToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Boost.sol\":{\"keccak256\":\"0x51890f50b6dafdea68176c9872b64a7e1e3600d6953fba67131a979bf5896a4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5823f5aa5cdd3ab82cc93d673ef6f672609120ed18f3f76e079eb74fdf9bae0a\",\"dweb:/ipfs/QmW3EYcqJKHLo6e6VgxxHmjDkyns4etxkBkYYzGVajGHBx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IVeToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "abstain",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "balanceOfNFT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "detach",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "isApprovedOrOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenIndex",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "used",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "voting",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"abstain(uint256)": "c1f0fb9f",
							"balanceOfNFT(uint256)": "e7e242d4",
							"detach(uint256)": "986b7d8a",
							"isApprovedOrOwner(address,uint256)": "430c2081",
							"ownerOf(uint256)": "6352211e",
							"token()": "fc0c546a",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"transferFrom(address,address,uint256)": "23b872dd",
							"used(uint256)": "020fe6e5",
							"voting(uint256)": "fd4a77f1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"abstain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"balanceOfNFT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"detach\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"isApprovedOrOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenIndex\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"used\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"voting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Boost.sol\":\"IVeToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Boost.sol\":{\"keccak256\":\"0x51890f50b6dafdea68176c9872b64a7e1e3600d6953fba67131a979bf5896a4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5823f5aa5cdd3ab82cc93d673ef6f672609120ed18f3f76e079eb74fdf9bae0a\",\"dweb:/ipfs/QmW3EYcqJKHLo6e6VgxxHmjDkyns4etxkBkYYzGVajGHBx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Boost.sol\":324:1348  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Boost.sol\":324:1348  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220831dfc4d5a93c70ae97d1b0f1e5840cb708e1d78d0e8943ed7ec30242377d9e464736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220831dfc4d5a93c70ae97d1b0f1e5840cb708e1d78d0e8943ed7ec30242377d9e464736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP4 SAR 0xFC 0x4D GAS SWAP4 0xC7 EXP 0xE9 PUSH30 0x1B0F1E5840CB708E1D78D0E8943ED7EC30242377D9E464736F6C63430008 EXP STOP CALLER ",
							"sourceMap": "324:1024:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;324:1024:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220831dfc4d5a93c70ae97d1b0f1e5840cb708e1d78d0e8943ed7ec30242377d9e464736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP4 SAR 0xFC 0x4D GAS SWAP4 0xC7 EXP 0xE9 PUSH30 0x1B0F1E5840CB708E1D78D0E8943ED7EC30242377D9E464736F6C63430008 EXP STOP CALLER ",
							"sourceMap": "324:1024:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 324,
									"end": 1348,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220831dfc4d5a93c70ae97d1b0f1e5840cb708e1d78d0e8943ed7ec30242377d9e464736f6c634300080a0033",
									".code": [
										{
											"begin": 324,
											"end": 1348,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 324,
											"end": 1348,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 324,
											"end": 1348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 324,
											"end": 1348,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 324,
											"end": 1348,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 324,
											"end": 1348,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 324,
											"end": 1348,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 324,
											"end": 1348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 324,
											"end": 1348,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Boost.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Boost.sol\":{\"keccak256\":\"0x51890f50b6dafdea68176c9872b64a7e1e3600d6953fba67131a979bf5896a4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5823f5aa5cdd3ab82cc93d673ef6f672609120ed18f3f76e079eb74fdf9bae0a\",\"dweb:/ipfs/QmW3EYcqJKHLo6e6VgxxHmjDkyns4etxkBkYYzGVajGHBx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Operatable": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldOperator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOperator",
									"type": "address"
								}
							],
							"name": "SetOperator",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "operator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOperator",
									"type": "address"
								}
							],
							"name": "setOperator",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Boost.sol\":43636:44251  contract Operatable is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Boost.sol\":43785:43884  constructor(){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/Boost.sol\":8642:8674  _transferOwnership(_msgSender()) */\n  tag_5\n    /* \"contracts/Boost.sol\":7598:7608  msg.sender */\n  caller\n    /* \"contracts/Boost.sol\":8642:8660  _transferOwnership */\n  tag_8\n    /* \"contracts/Boost.sol\":8642:8674  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_5:\n    /* \"contracts/Boost.sol\":43808:43816  operator */\n  0x01\n    /* \"contracts/Boost.sol\":43808:43829  operator = msg.sender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n    /* \"contracts/Boost.sol\":43819:43829  msg.sender */\n  caller\n    /* \"contracts/Boost.sol\":43808:43829  operator = msg.sender */\n  swap1\n  dup2\n  or\n  swap1\n  swap2\n  sstore\n    /* \"contracts/Boost.sol\":43844:43877  SetOperator(address(0), operator) */\n  mload(0x40)\n    /* \"contracts/Boost.sol\":43808:43816  operator */\n  0x00\n  swap1\n    /* \"contracts/Boost.sol\":43844:43877  SetOperator(address(0), operator) */\n  0x2709918445f306d3e94d280907c62c5d2525ac3192d2e544774c7f181d65af3e\n  swap1\n    /* \"contracts/Boost.sol\":43808:43816  operator */\n  dup3\n  swap1\n    /* \"contracts/Boost.sol\":43844:43877  SetOperator(address(0), operator) */\n  log3\n    /* \"contracts/Boost.sol\":43636:44251  contract Operatable is Ownable {... */\n  jump(tag_10)\n    /* \"contracts/Boost.sol\":9991:10178  function _transferOwnership(address newOwner) internal virtual {... */\ntag_8:\n    /* \"contracts/Boost.sol\":10064:10080  address oldOwner */\n  0x00\n    /* \"contracts/Boost.sol\":10083:10089  _owner */\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/Boost.sol\":10099:10116  _owner = newOwner */\n  dup4\n  dup2\n  and\n  not(sub(shl(0xa0, 0x01), 0x01))\n  dup4\n  and\n  dup2\n  or\n  dup5\n  sstore\n    /* \"contracts/Boost.sol\":10131:10171  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"contracts/Boost.sol\":10083:10089  _owner */\n  swap2\n  swap1\n  swap3\n  and\n  swap3\n  dup4\n  swap2\n    /* \"contracts/Boost.sol\":10131:10171  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap2\n    /* \"contracts/Boost.sol\":10064:10080  address oldOwner */\n  swap1\n    /* \"contracts/Boost.sol\":10131:10171  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"contracts/Boost.sol\":10054:10178  {... */\n  pop\n    /* \"contracts/Boost.sol\":9991:10178  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/Boost.sol\":43636:44251  contract Operatable is Ownable {... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Boost.sol\":43636:44251  contract Operatable is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x570ca735\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xb3ab15fb\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Boost.sol\":43673:43696  address public operator */\n    tag_3:\n      sload(0x01)\n      tag_8\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_8:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":178:210   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":160:211   */\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/Boost.sol\":43673:43696  address public operator */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Boost.sol\":9389:9490  function renounceOwnership() public virtual onlyOwner {... */\n    tag_4:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      stop\n        /* \"contracts/Boost.sol\":8757:8842  function owner() public view virtual returns (address) {... */\n    tag_5:\n        /* \"contracts/Boost.sol\":8803:8810  address */\n      0x00\n        /* \"contracts/Boost.sol\":8829:8835  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Boost.sol\":8757:8842  function owner() public view virtual returns (address) {... */\n      jump(tag_8)\n        /* \"contracts/Boost.sol\":43995:44249  function setOperator(address newOperator) public onlyOwner {... */\n    tag_6:\n      tag_12\n      tag_18\n      calldatasize\n      0x04\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n        /* \"contracts/Boost.sol\":9639:9837  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_7:\n      tag_12\n      tag_22\n      calldatasize\n      0x04\n      tag_19\n      jump\t// in\n    tag_22:\n      tag_23\n      jump\t// in\n        /* \"contracts/Boost.sol\":9389:9490  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n        /* \"contracts/Boost.sol\":8803:8810  address */\n      0x00\n        /* \"contracts/Boost.sol\":8829:8835  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Boost.sol\":7598:7608  msg.sender */\n      caller\n        /* \"contracts/Boost.sol\":8969:8992  owner() == _msgSender() */\n      eq\n        /* \"contracts/Boost.sol\":8961:9029  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_28\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_29\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_28:\n        /* \"contracts/Boost.sol\":9453:9483  _transferOwnership(address(0)) */\n      tag_32\n        /* \"contracts/Boost.sol\":9480:9481  0 */\n      0x00\n        /* \"contracts/Boost.sol\":9453:9471  _transferOwnership */\n      tag_33\n        /* \"contracts/Boost.sol\":9453:9483  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_32:\n        /* \"contracts/Boost.sol\":9389:9490  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/Boost.sol\":43995:44249  function setOperator(address newOperator) public onlyOwner {... */\n    tag_20:\n        /* \"contracts/Boost.sol\":8803:8810  address */\n      0x00\n        /* \"contracts/Boost.sol\":8829:8835  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Boost.sol\":7598:7608  msg.sender */\n      caller\n        /* \"contracts/Boost.sol\":8969:8992  owner() == _msgSender() */\n      eq\n        /* \"contracts/Boost.sol\":8961:9029  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_38\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_29\n      swap1\n      tag_30\n      jump\t// in\n    tag_38:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Boost.sol\":44072:44097  newOperator != address(0) */\n      dup2\n      and\n        /* \"contracts/Boost.sol\":44064:44118  require(newOperator != address(0), 'bad new operator') */\n      tag_41\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1076:1078   */\n      0x20\n        /* \"contracts/Boost.sol\":44064:44118  require(newOperator != address(0), 'bad new operator') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1058:1079   */\n      mstore\n        /* \"#utility.yul\":1115:1117   */\n      0x10\n        /* \"#utility.yul\":1095:1113   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1088:1118   */\n      mstore\n      shl(0x81, 0x3130b2103732bb9037b832b930ba37b9)\n        /* \"#utility.yul\":1134:1152   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1127:1173   */\n      mstore\n        /* \"#utility.yul\":1190:1208   */\n      0x64\n      add\n        /* \"contracts/Boost.sol\":44064:44118  require(newOperator != address(0), 'bad new operator') */\n      tag_29\n        /* \"#utility.yul\":874:1214   */\n      jump\n        /* \"contracts/Boost.sol\":44064:44118  require(newOperator != address(0), 'bad new operator') */\n    tag_41:\n        /* \"contracts/Boost.sol\":44150:44158  operator */\n      0x01\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Boost.sol\":44168:44190  operator = newOperator */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      swap1\n      swap4\n      sstore\n        /* \"contracts/Boost.sol\":44205:44242  SetOperator(oldOperator, newOperator) */\n      mload(0x40)\n        /* \"contracts/Boost.sol\":44150:44158  operator */\n      swap2\n      and\n      swap2\n        /* \"contracts/Boost.sol\":44168:44190  operator = newOperator */\n      swap1\n        /* \"contracts/Boost.sol\":44150:44158  operator */\n      dup3\n      swap1\n        /* \"contracts/Boost.sol\":44205:44242  SetOperator(oldOperator, newOperator) */\n      0x2709918445f306d3e94d280907c62c5d2525ac3192d2e544774c7f181d65af3e\n      swap1\n        /* \"contracts/Boost.sol\":44128:44147  address oldOperator */\n      0x00\n      swap1\n        /* \"contracts/Boost.sol\":44205:44242  SetOperator(oldOperator, newOperator) */\n      log3\n        /* \"contracts/Boost.sol\":44054:44249  {... */\n      pop\n        /* \"contracts/Boost.sol\":43995:44249  function setOperator(address newOperator) public onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Boost.sol\":9639:9837  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_23:\n        /* \"contracts/Boost.sol\":8803:8810  address */\n      0x00\n        /* \"contracts/Boost.sol\":8829:8835  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/Boost.sol\":7598:7608  msg.sender */\n      caller\n        /* \"contracts/Boost.sol\":8969:8992  owner() == _msgSender() */\n      eq\n        /* \"contracts/Boost.sol\":8961:9029  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_47\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_29\n      swap1\n      tag_30\n      jump\t// in\n    tag_47:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Boost.sol\":9727:9749  newOwner != address(0) */\n      dup2\n      and\n        /* \"contracts/Boost.sol\":9719:9792  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_50\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":1421:1423   */\n      0x20\n        /* \"contracts/Boost.sol\":9719:9792  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1403:1424   */\n      mstore\n        /* \"#utility.yul\":1460:1462   */\n      0x26\n        /* \"#utility.yul\":1440:1458   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":1433:1463   */\n      mstore\n        /* \"#utility.yul\":1499:1533   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":1479:1497   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":1472:1534   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":1550:1568   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":1543:1579   */\n      mstore\n        /* \"#utility.yul\":1596:1615   */\n      0x84\n      add\n        /* \"contracts/Boost.sol\":9719:9792  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_29\n        /* \"#utility.yul\":1219:1621   */\n      jump\n        /* \"contracts/Boost.sol\":9719:9792  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_50:\n        /* \"contracts/Boost.sol\":9802:9830  _transferOwnership(newOwner) */\n      tag_53\n        /* \"contracts/Boost.sol\":9821:9829  newOwner */\n      dup2\n        /* \"contracts/Boost.sol\":9802:9820  _transferOwnership */\n      tag_33\n        /* \"contracts/Boost.sol\":9802:9830  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_53:\n        /* \"contracts/Boost.sol\":9639:9837  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/Boost.sol\":9991:10178  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_33:\n        /* \"contracts/Boost.sol\":10064:10080  address oldOwner */\n      0x00\n        /* \"contracts/Boost.sol\":10083:10089  _owner */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Boost.sol\":10099:10116  _owner = newOwner */\n      dup4\n      dup2\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      dup4\n      and\n      dup2\n      or\n      dup5\n      sstore\n        /* \"contracts/Boost.sol\":10131:10171  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"contracts/Boost.sol\":10083:10089  _owner */\n      swap2\n      swap1\n      swap3\n      and\n      swap3\n      dup4\n      swap2\n        /* \"contracts/Boost.sol\":10131:10171  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n        /* \"contracts/Boost.sol\":10064:10080  address oldOwner */\n      swap1\n        /* \"contracts/Boost.sol\":10131:10171  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"contracts/Boost.sol\":10054:10178  {... */\n      pop\n        /* \"contracts/Boost.sol\":9991:10178  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":222:508   */\n    tag_19:\n        /* \"#utility.yul\":281:287   */\n      0x00\n        /* \"#utility.yul\":334:336   */\n      0x20\n        /* \"#utility.yul\":322:331   */\n      dup3\n        /* \"#utility.yul\":313:320   */\n      dup5\n        /* \"#utility.yul\":309:332   */\n      sub\n        /* \"#utility.yul\":305:337   */\n      slt\n        /* \"#utility.yul\":302:354   */\n      iszero\n      tag_59\n      jumpi\n        /* \"#utility.yul\":350:351   */\n      0x00\n        /* \"#utility.yul\":347:348   */\n      dup1\n        /* \"#utility.yul\":340:352   */\n      revert\n        /* \"#utility.yul\":302:354   */\n    tag_59:\n        /* \"#utility.yul\":376:399   */\n      dup2\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":428:459   */\n      dup2\n      and\n        /* \"#utility.yul\":418:460   */\n      dup2\n      eq\n        /* \"#utility.yul\":408:478   */\n      tag_60\n      jumpi\n        /* \"#utility.yul\":474:475   */\n      0x00\n        /* \"#utility.yul\":471:472   */\n      dup1\n        /* \"#utility.yul\":464:476   */\n      revert\n        /* \"#utility.yul\":408:478   */\n    tag_60:\n        /* \"#utility.yul\":497:502   */\n      swap4\n        /* \"#utility.yul\":222:508   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":513:869   */\n    tag_30:\n        /* \"#utility.yul\":715:717   */\n      0x20\n        /* \"#utility.yul\":697:718   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":734:752   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":727:757   */\n      mstore\n        /* \"#utility.yul\":793:827   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":788:790   */\n      0x40\n        /* \"#utility.yul\":773:791   */\n      dup3\n      add\n        /* \"#utility.yul\":766:828   */\n      mstore\n        /* \"#utility.yul\":860:862   */\n      0x60\n        /* \"#utility.yul\":845:863   */\n      add\n      swap1\n        /* \"#utility.yul\":513:869   */\n      jump\t// out\n\n    auxdata: 0xa264697066735822122043e6883c73628f25af81af82e3ffcc8f6076bce2e53f9855543020eeb9ea1c0064736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1980": {
									"entryPoint": null,
									"id": 1980,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_246": {
									"entryPoint": null,
									"id": 246,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_214": {
									"entryPoint": null,
									"id": 214,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_326": {
									"entryPoint": 95,
									"id": 326,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061001a3361005f565b600180546001600160a01b031916339081179091556040516000907f2709918445f306d3e94d280907c62c5d2525ac3192d2e544774c7f181d65af3e908290a36100af565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610356806100be6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063570ca7351461005c578063715018a61461008b5780638da5cb5b14610095578063b3ab15fb146100a6578063f2fde38b146100b9575b600080fd5b60015461006f906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6100936100cc565b005b6000546001600160a01b031661006f565b6100936100b43660046102bb565b61010b565b6100936100c73660046102bb565b6101d0565b6000546001600160a01b031633146100ff5760405162461bcd60e51b81526004016100f6906102eb565b60405180910390fd5b610109600061026b565b565b6000546001600160a01b031633146101355760405162461bcd60e51b81526004016100f6906102eb565b6001600160a01b03811661017e5760405162461bcd60e51b815260206004820152601060248201526f3130b2103732bb9037b832b930ba37b960811b60448201526064016100f6565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f2709918445f306d3e94d280907c62c5d2525ac3192d2e544774c7f181d65af3e90600090a35050565b6000546001600160a01b031633146101fa5760405162461bcd60e51b81526004016100f6906102eb565b6001600160a01b03811661025f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100f6565b6102688161026b565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156102cd57600080fd5b81356001600160a01b03811681146102e457600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea264697066735822122043e6883c73628f25af81af82e3ffcc8f6076bce2e53f9855543020eeb9ea1c0064736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A CALLER PUSH2 0x5F JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH32 0x2709918445F306D3E94D280907C62C5D2525AC3192D2E544774C7F181D65AF3E SWAP1 DUP3 SWAP1 LOG3 PUSH2 0xAF JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x356 DUP1 PUSH2 0xBE PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x570CA735 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0xB3AB15FB EQ PUSH2 0xA6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xB9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x6F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x93 PUSH2 0xCC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6F JUMP JUMPDEST PUSH2 0x93 PUSH2 0xB4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BB JUMP JUMPDEST PUSH2 0x10B JUMP JUMPDEST PUSH2 0x93 PUSH2 0xC7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BB JUMP JUMPDEST PUSH2 0x1D0 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xFF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF6 SWAP1 PUSH2 0x2EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x109 PUSH1 0x0 PUSH2 0x26B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x135 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF6 SWAP1 PUSH2 0x2EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x17E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x3130B2103732BB9037B832B930BA37B9 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xF6 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x2709918445F306D3E94D280907C62C5D2525AC3192D2E544774C7F181D65AF3E SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF6 SWAP1 PUSH2 0x2EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x25F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xF6 JUMP JUMPDEST PUSH2 0x268 DUP2 PUSH2 0x26B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER 0xE6 DUP9 EXTCODECOPY PUSH20 0x628F25AF81AF82E3FFCC8F6076BCE2E53F985554 ADDRESS KECCAK256 0xEE 0xB9 0xEA SHR STOP PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "43636:615:0:-:0;;;43785:99;;;;;;;;;-1:-1:-1;8642:32:0;7598:10;8642:18;:32::i;:::-;43808:8;:21;;-1:-1:-1;;;;;;43808:21:0;43819:10;43808:21;;;;;;43844:33;;43808:8;;43844:33;;43808:8;;43844:33;43636:615;;9991:187;10064:16;10083:6;;-1:-1:-1;;;;;10099:17:0;;;-1:-1:-1;;;;;;10099:17:0;;;;;;10131:40;;10083:6;;;;;;;10131:40;;10064:16;10131:40;10054:124;9991:187;:::o;43636:615::-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_msgSender_214": {
									"entryPoint": null,
									"id": 214,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_326": {
									"entryPoint": 619,
									"id": 326,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@operator_1957": {
									"entryPoint": null,
									"id": 1957,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_255": {
									"entryPoint": null,
									"id": 255,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_283": {
									"entryPoint": 204,
									"id": 283,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setOperator_2023": {
									"entryPoint": 267,
									"id": 2023,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferOwnership_306": {
									"entryPoint": 464,
									"id": 306,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 699,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 747,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bd8da5f7fa1b241e5cc51a80e871f13a4ea7aa28fe54091ef63906319b2ad5ed__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1623:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "182:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "198:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "203:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "194:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "194:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "207:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "190:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "190:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "178:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "178:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:1",
														"type": ""
													}
												],
												"src": "14:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "292:216:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "338:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "347:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "350:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "340:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "340:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "340:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "313:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "322:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "309:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "309:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "334:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "305:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "305:32:1"
															},
															"nodeType": "YulIf",
															"src": "302:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "363:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "389:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "376:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "376:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "367:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "462:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "471:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "474:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "464:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "464:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "464:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "421:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "432:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "447:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "452:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "443:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "443:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "456:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "439:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "439:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "428:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "428:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "418:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "418:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "411:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "411:50:1"
															},
															"nodeType": "YulIf",
															"src": "408:70:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "487:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "497:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "487:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "258:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "269:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "281:6:1",
														"type": ""
													}
												],
												"src": "222:286:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "687:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "704:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "715:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "697:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "697:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "697:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "738:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "749:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "734:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "734:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "754:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "727:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "727:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "727:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "777:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "788:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "773:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "793:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "766:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "766:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "766:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "837:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "849:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "860:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "845:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "837:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "664:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "678:4:1",
														"type": ""
													}
												],
												"src": "513:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1048:166:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1065:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1076:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1058:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1058:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1058:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1099:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1110:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1095:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1095:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1115:2:1",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1088:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1088:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1088:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1138:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1149:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1134:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1134:18:1"
																	},
																	{
																		"hexValue": "626164206e6577206f70657261746f72",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1154:18:1",
																		"type": "",
																		"value": "bad new operator"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1127:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1127:46:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1182:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1194:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1205:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1190:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1190:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1182:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bd8da5f7fa1b241e5cc51a80e871f13a4ea7aa28fe54091ef63906319b2ad5ed__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1025:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1039:4:1",
														"type": ""
													}
												],
												"src": "874:340:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1393:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1410:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1421:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1403:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1403:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1403:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1444:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1455:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1440:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1440:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1460:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1433:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1433:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1433:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1483:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1494:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1479:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1479:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1499:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1472:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1472:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1472:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1554:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1565:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1550:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1550:18:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1570:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1543:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1543:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1543:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1588:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1600:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1611:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1596:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1596:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1588:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1370:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1384:4:1",
														"type": ""
													}
												],
												"src": "1219:402:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_bd8da5f7fa1b241e5cc51a80e871f13a4ea7aa28fe54091ef63906319b2ad5ed__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"bad new operator\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c8063570ca7351461005c578063715018a61461008b5780638da5cb5b14610095578063b3ab15fb146100a6578063f2fde38b146100b9575b600080fd5b60015461006f906001600160a01b031681565b6040516001600160a01b03909116815260200160405180910390f35b6100936100cc565b005b6000546001600160a01b031661006f565b6100936100b43660046102bb565b61010b565b6100936100c73660046102bb565b6101d0565b6000546001600160a01b031633146100ff5760405162461bcd60e51b81526004016100f6906102eb565b60405180910390fd5b610109600061026b565b565b6000546001600160a01b031633146101355760405162461bcd60e51b81526004016100f6906102eb565b6001600160a01b03811661017e5760405162461bcd60e51b815260206004820152601060248201526f3130b2103732bb9037b832b930ba37b960811b60448201526064016100f6565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f2709918445f306d3e94d280907c62c5d2525ac3192d2e544774c7f181d65af3e90600090a35050565b6000546001600160a01b031633146101fa5760405162461bcd60e51b81526004016100f6906102eb565b6001600160a01b03811661025f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100f6565b6102688161026b565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156102cd57600080fd5b81356001600160a01b03811681146102e457600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea264697066735822122043e6883c73628f25af81af82e3ffcc8f6076bce2e53f9855543020eeb9ea1c0064736f6c634300080a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x570CA735 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x8B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0xB3AB15FB EQ PUSH2 0xA6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xB9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x6F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x93 PUSH2 0xCC JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6F JUMP JUMPDEST PUSH2 0x93 PUSH2 0xB4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BB JUMP JUMPDEST PUSH2 0x10B JUMP JUMPDEST PUSH2 0x93 PUSH2 0xC7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2BB JUMP JUMPDEST PUSH2 0x1D0 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xFF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF6 SWAP1 PUSH2 0x2EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x109 PUSH1 0x0 PUSH2 0x26B JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x135 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF6 SWAP1 PUSH2 0x2EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x17E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x3130B2103732BB9037B832B930BA37B9 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xF6 JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x2709918445F306D3E94D280907C62C5D2525AC3192D2E544774C7F181D65AF3E SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1FA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF6 SWAP1 PUSH2 0x2EB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x25F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xF6 JUMP JUMPDEST PUSH2 0x268 DUP2 PUSH2 0x26B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER 0xE6 DUP9 EXTCODECOPY PUSH20 0x628F25AF81AF82E3FFCC8F6076BCE2E53F985554 ADDRESS KECCAK256 0xEE 0xB9 0xEA SHR STOP PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "43636:615:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;43673:23;;;;;-1:-1:-1;;;;;43673:23:0;;;;;;-1:-1:-1;;;;;178:32:1;;;160:51;;148:2;133:18;43673:23:0;;;;;;;9389:101;;;:::i;:::-;;8757:85;8803:7;8829:6;-1:-1:-1;;;;;8829:6:0;8757:85;;43995:254;;;;;;:::i;:::-;;:::i;9639:198::-;;;;;;:::i;:::-;;:::i;9389:101::-;8803:7;8829:6;-1:-1:-1;;;;;8829:6:0;7598:10;8969:23;8961:68;;;;-1:-1:-1;;;8961:68:0;;;;;;;:::i;:::-;;;;;;;;;9453:30:::1;9480:1;9453:18;:30::i;:::-;9389:101::o:0;43995:254::-;8803:7;8829:6;-1:-1:-1;;;;;8829:6:0;7598:10;8969:23;8961:68;;;;-1:-1:-1;;;8961:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;44072:25:0;::::1;44064:54;;;::::0;-1:-1:-1;;;44064:54:0;;1076:2:1;44064:54:0::1;::::0;::::1;1058:21:1::0;1115:2;1095:18;;;1088:30;-1:-1:-1;;;1134:18:1;;;1127:46;1190:18;;44064:54:0::1;874:340:1::0;44064:54:0::1;44150:8;::::0;;-1:-1:-1;;;;;44168:22:0;;::::1;-1:-1:-1::0;;;;;;44168:22:0;::::1;::::0;::::1;::::0;;;44205:37:::1;::::0;44150:8;::::1;::::0;44168:22;44150:8;;44205:37:::1;::::0;44128:19:::1;::::0;44205:37:::1;44054:195;43995:254:::0;:::o;9639:198::-;8803:7;8829:6;-1:-1:-1;;;;;8829:6:0;7598:10;8969:23;8961:68;;;;-1:-1:-1;;;8961:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;9727:22:0;::::1;9719:73;;;::::0;-1:-1:-1;;;9719:73:0;;1421:2:1;9719:73:0::1;::::0;::::1;1403:21:1::0;1460:2;1440:18;;;1433:30;1499:34;1479:18;;;1472:62;-1:-1:-1;;;1550:18:1;;;1543:36;1596:19;;9719:73:0::1;1219:402:1::0;9719:73:0::1;9802:28;9821:8;9802:18;:28::i;:::-;9639:198:::0;:::o;9991:187::-;10064:16;10083:6;;-1:-1:-1;;;;;10099:17:0;;;-1:-1:-1;;;;;;10099:17:0;;;;;;10131:40;;10083:6;;;;;;;10131:40;;10064:16;10131:40;10054:124;9991:187;:::o;222:286:1:-;281:6;334:2;322:9;313:7;309:23;305:32;302:52;;;350:1;347;340:12;302:52;376:23;;-1:-1:-1;;;;;428:31:1;;418:42;;408:70;;474:1;471;464:12;408:70;497:5;222:286;-1:-1:-1;;;222:286:1:o;513:356::-;715:2;697:21;;;734:18;;;727:30;793:34;788:2;773:18;;766:62;860:2;845:18;;513:356::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "170800",
								"executionCost": "51823",
								"totalCost": "222623"
							},
							"external": {
								"operator()": "2303",
								"owner()": "2341",
								"renounceOwnership()": "28114",
								"setOperator(address)": "28292",
								"transferOwnership(address)": "28340"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 43636,
									"end": 44251,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 43636,
									"end": 44251,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 43636,
									"end": 44251,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 43785,
									"end": 43884,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 43785,
									"end": 43884,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 43785,
									"end": 43884,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 43785,
									"end": 43884,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 43785,
									"end": 43884,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 43785,
									"end": 43884,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 43785,
									"end": 43884,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 43785,
									"end": 43884,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 43785,
									"end": 43884,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 43785,
									"end": 43884,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 8642,
									"end": 8674,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 7598,
									"end": 7608,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 8642,
									"end": 8660,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 8642,
									"end": 8674,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 8642,
									"end": 8674,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 8642,
									"end": 8674,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 43808,
									"end": 43816,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 43808,
									"end": 43829,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 43808,
									"end": 43829,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 43808,
									"end": 43829,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 43819,
									"end": 43829,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 43808,
									"end": 43829,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 43808,
									"end": 43829,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 43808,
									"end": 43829,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 43808,
									"end": 43829,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 43808,
									"end": 43829,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 43808,
									"end": 43829,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 43844,
									"end": 43877,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 43844,
									"end": 43877,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 43808,
									"end": 43816,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 43808,
									"end": 43816,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 43844,
									"end": 43877,
									"name": "PUSH",
									"source": 0,
									"value": "2709918445F306D3E94D280907C62C5D2525AC3192D2E544774C7F181D65AF3E"
								},
								{
									"begin": 43844,
									"end": 43877,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 43808,
									"end": 43816,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 43808,
									"end": 43816,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 43844,
									"end": 43877,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 43636,
									"end": 44251,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 43636,
									"end": 44251,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 9991,
									"end": 10178,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 9991,
									"end": 10178,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 10064,
									"end": 10080,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 10083,
									"end": 10089,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 10083,
									"end": 10089,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 10099,
									"end": 10116,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 10099,
									"end": 10116,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10099,
									"end": 10116,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 10099,
									"end": 10116,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 10099,
									"end": 10116,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 10099,
									"end": 10116,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 10099,
									"end": 10116,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 10099,
									"end": 10116,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 10099,
									"end": 10116,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 10131,
									"end": 10171,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 10131,
									"end": 10171,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 10083,
									"end": 10089,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 10083,
									"end": 10089,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10083,
									"end": 10089,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 10083,
									"end": 10089,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 10083,
									"end": 10089,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 10083,
									"end": 10089,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 10083,
									"end": 10089,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 10131,
									"end": 10171,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 10131,
									"end": 10171,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 10064,
									"end": 10080,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 10131,
									"end": 10171,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 10054,
									"end": 10178,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 9991,
									"end": 10178,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 9991,
									"end": 10178,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 43636,
									"end": 44251,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 43636,
									"end": 44251,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 43636,
									"end": 44251,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 43636,
									"end": 44251,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 43636,
									"end": 44251,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 43636,
									"end": 44251,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 43636,
									"end": 44251,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 43636,
									"end": 44251,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 43636,
									"end": 44251,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122043e6883c73628f25af81af82e3ffcc8f6076bce2e53f9855543020eeb9ea1c0064736f6c634300080a0033",
									".code": [
										{
											"begin": 43636,
											"end": 44251,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 43636,
											"end": 44251,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43636,
											"end": 44251,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43636,
											"end": 44251,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 43636,
											"end": 44251,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43636,
											"end": 44251,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43636,
											"end": 44251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43636,
											"end": 44251,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43636,
											"end": 44251,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43636,
											"end": 44251,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43636,
											"end": 44251,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 43636,
											"end": 44251,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43636,
											"end": 44251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43636,
											"end": 44251,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43636,
											"end": 44251,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43636,
											"end": 44251,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 43636,
											"end": 44251,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 43636,
											"end": 44251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 43636,
											"end": 44251,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43636,
											"end": 44251,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43636,
											"end": 44251,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 43636,
											"end": 44251,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 43636,
											"end": 44251,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 43636,
											"end": 44251,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43636,
											"end": 44251,
											"name": "PUSH",
											"source": 0,
											"value": "570CA735"
										},
										{
											"begin": 43636,
											"end": 44251,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 43636,
											"end": 44251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 43636,
											"end": 44251,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43636,
											"end": 44251,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43636,
											"end": 44251,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 43636,
											"end": 44251,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 43636,
											"end": 44251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43636,
											"end": 44251,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43636,
											"end": 44251,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43636,
											"end": 44251,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 43636,
											"end": 44251,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 43636,
											"end": 44251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 43636,
											"end": 44251,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43636,
											"end": 44251,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43636,
											"end": 44251,
											"name": "PUSH",
											"source": 0,
											"value": "B3AB15FB"
										},
										{
											"begin": 43636,
											"end": 44251,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 43636,
											"end": 44251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 43636,
											"end": 44251,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43636,
											"end": 44251,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43636,
											"end": 44251,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 43636,
											"end": 44251,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 43636,
											"end": 44251,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 43636,
											"end": 44251,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43636,
											"end": 44251,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 43636,
											"end": 44251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43636,
											"end": 44251,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43636,
											"end": 44251,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43636,
											"end": 44251,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 43673,
											"end": 43696,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 43673,
											"end": 43696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43673,
											"end": 43696,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43673,
											"end": 43696,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 43673,
											"end": 43696,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 43673,
											"end": 43696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43673,
											"end": 43696,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43673,
											"end": 43696,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43673,
											"end": 43696,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43673,
											"end": 43696,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 43673,
											"end": 43696,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43673,
											"end": 43696,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43673,
											"end": 43696,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 178,
											"end": 210,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 160,
											"end": 211,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 160,
											"end": 211,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 43673,
											"end": 43696,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43673,
											"end": 43696,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43673,
											"end": 43696,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43673,
											"end": 43696,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43673,
											"end": 43696,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43673,
											"end": 43696,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43673,
											"end": 43696,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9389,
											"end": 9490,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9389,
											"end": 9490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9389,
											"end": 9490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 9389,
											"end": 9490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 9389,
											"end": 9490,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9389,
											"end": 9490,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 9389,
											"end": 9490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9389,
											"end": 9490,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 8757,
											"end": 8842,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 8757,
											"end": 8842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8803,
											"end": 8810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8829,
											"end": 8835,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8829,
											"end": 8835,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8757,
											"end": 8842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 8757,
											"end": 8842,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43995,
											"end": 44249,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 43995,
											"end": 44249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43995,
											"end": 44249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 43995,
											"end": 44249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 43995,
											"end": 44249,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 43995,
											"end": 44249,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43995,
											"end": 44249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 43995,
											"end": 44249,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 43995,
											"end": 44249,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 43995,
											"end": 44249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43995,
											"end": 44249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43995,
											"end": 44249,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9639,
											"end": 9837,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 9639,
											"end": 9837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9639,
											"end": 9837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 9639,
											"end": 9837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 9639,
											"end": 9837,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9639,
											"end": 9837,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9639,
											"end": 9837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 9639,
											"end": 9837,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9639,
											"end": 9837,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 9639,
											"end": 9837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9639,
											"end": 9837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 9639,
											"end": 9837,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9389,
											"end": 9490,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 9389,
											"end": 9490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8803,
											"end": 8810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8829,
											"end": 8835,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8829,
											"end": 8835,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7598,
											"end": 7608,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 8992,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8961,
											"end": 9029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 8961,
											"end": 9029,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8961,
											"end": 9029,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8961,
											"end": 9029,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8961,
											"end": 9029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8961,
											"end": 9029,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8961,
											"end": 9029,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8961,
											"end": 9029,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8961,
											"end": 9029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 8961,
											"end": 9029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8961,
											"end": 9029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 8961,
											"end": 9029,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8961,
											"end": 9029,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 8961,
											"end": 9029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8961,
											"end": 9029,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8961,
											"end": 9029,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8961,
											"end": 9029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8961,
											"end": 9029,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8961,
											"end": 9029,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8961,
											"end": 9029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8961,
											"end": 9029,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8961,
											"end": 9029,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 8961,
											"end": 9029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9453,
											"end": 9483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 9480,
											"end": 9481,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9453,
											"end": 9471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 9453,
											"end": 9483,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9453,
											"end": 9483,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 9453,
											"end": 9483,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9389,
											"end": 9490,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 43995,
											"end": 44249,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43995,
											"end": 44249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8803,
											"end": 8810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8829,
											"end": 8835,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8829,
											"end": 8835,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7598,
											"end": 7608,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 8992,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8961,
											"end": 9029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 8961,
											"end": 9029,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8961,
											"end": 9029,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8961,
											"end": 9029,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8961,
											"end": 9029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8961,
											"end": 9029,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8961,
											"end": 9029,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8961,
											"end": 9029,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8961,
											"end": 9029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 8961,
											"end": 9029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8961,
											"end": 9029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 8961,
											"end": 9029,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8961,
											"end": 9029,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 8961,
											"end": 9029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 44072,
											"end": 44097,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44072,
											"end": 44097,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44064,
											"end": 44118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 44064,
											"end": 44118,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44064,
											"end": 44118,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44064,
											"end": 44118,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 44064,
											"end": 44118,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44064,
											"end": 44118,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1076,
											"end": 1078,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 44064,
											"end": 44118,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44064,
											"end": 44118,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44064,
											"end": 44118,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1058,
											"end": 1079,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1115,
											"end": 1117,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 1095,
											"end": 1113,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1095,
											"end": 1113,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1095,
											"end": 1113,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1088,
											"end": 1118,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3130B2103732BB9037B832B930BA37B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1134,
											"end": 1152,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1134,
											"end": 1152,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1134,
											"end": 1152,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1173,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1190,
											"end": 1208,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1190,
											"end": 1208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 44064,
											"end": 44118,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 874,
											"end": 1214,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 44064,
											"end": 44118,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 44064,
											"end": 44118,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44150,
											"end": 44158,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 44150,
											"end": 44158,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44150,
											"end": 44158,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 44168,
											"end": 44190,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44168,
											"end": 44190,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44168,
											"end": 44190,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 44168,
											"end": 44190,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44168,
											"end": 44190,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44168,
											"end": 44190,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44168,
											"end": 44190,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 44168,
											"end": 44190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44168,
											"end": 44190,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 44168,
											"end": 44190,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 44205,
											"end": 44242,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44205,
											"end": 44242,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44150,
											"end": 44158,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44150,
											"end": 44158,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44150,
											"end": 44158,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44168,
											"end": 44190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44150,
											"end": 44158,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44150,
											"end": 44158,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44205,
											"end": 44242,
											"name": "PUSH",
											"source": 0,
											"value": "2709918445F306D3E94D280907C62C5D2525AC3192D2E544774C7F181D65AF3E"
										},
										{
											"begin": 44205,
											"end": 44242,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44128,
											"end": 44147,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44128,
											"end": 44147,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44205,
											"end": 44242,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 44054,
											"end": 44249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43995,
											"end": 44249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43995,
											"end": 44249,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9639,
											"end": 9837,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 9639,
											"end": 9837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8803,
											"end": 8810,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8829,
											"end": 8835,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8829,
											"end": 8835,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7598,
											"end": 7608,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 8969,
											"end": 8992,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8961,
											"end": 9029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 8961,
											"end": 9029,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8961,
											"end": 9029,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8961,
											"end": 9029,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8961,
											"end": 9029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8961,
											"end": 9029,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8961,
											"end": 9029,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8961,
											"end": 9029,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8961,
											"end": 9029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 8961,
											"end": 9029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8961,
											"end": 9029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 8961,
											"end": 9029,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8961,
											"end": 9029,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 8961,
											"end": 9029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9727,
											"end": 9749,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9727,
											"end": 9749,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9719,
											"end": 9792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 9719,
											"end": 9792,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9719,
											"end": 9792,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9719,
											"end": 9792,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9719,
											"end": 9792,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9719,
											"end": 9792,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1421,
											"end": 1423,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9719,
											"end": 9792,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9719,
											"end": 9792,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9719,
											"end": 9792,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1460,
											"end": 1462,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1440,
											"end": 1458,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1440,
											"end": 1458,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1458,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1433,
											"end": 1463,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1499,
											"end": 1533,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 1479,
											"end": 1497,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1479,
											"end": 1497,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1479,
											"end": 1497,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1472,
											"end": 1534,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1550,
											"end": 1568,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 1550,
											"end": 1568,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1550,
											"end": 1568,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1543,
											"end": 1579,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1596,
											"end": 1615,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 1596,
											"end": 1615,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9719,
											"end": 9792,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1219,
											"end": 1621,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9719,
											"end": 9792,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 9719,
											"end": 9792,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9802,
											"end": 9830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 9821,
											"end": 9829,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9802,
											"end": 9820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 9802,
											"end": 9830,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9802,
											"end": 9830,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 9802,
											"end": 9830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9639,
											"end": 9837,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9639,
											"end": 9837,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9991,
											"end": 10178,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 9991,
											"end": 10178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10064,
											"end": 10080,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10083,
											"end": 10089,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10083,
											"end": 10089,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10099,
											"end": 10116,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10116,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 10099,
											"end": 10116,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10116,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10116,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10116,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10099,
											"end": 10116,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 10131,
											"end": 10171,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10131,
											"end": 10171,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10083,
											"end": 10089,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10083,
											"end": 10089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10083,
											"end": 10089,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10083,
											"end": 10089,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10083,
											"end": 10089,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10083,
											"end": 10089,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10083,
											"end": 10089,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10131,
											"end": 10171,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 10131,
											"end": 10171,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10064,
											"end": 10080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10131,
											"end": 10171,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 10054,
											"end": 10178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9991,
											"end": 10178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9991,
											"end": 10178,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 222,
											"end": 508,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 222,
											"end": 508,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 281,
											"end": 287,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 336,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 322,
											"end": 331,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 313,
											"end": 320,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 309,
											"end": 332,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 305,
											"end": 337,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 302,
											"end": 354,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 302,
											"end": 354,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 302,
											"end": 354,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 350,
											"end": 351,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 347,
											"end": 348,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 340,
											"end": 352,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 302,
											"end": 354,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 302,
											"end": 354,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 376,
											"end": 399,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 376,
											"end": 399,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 428,
											"end": 459,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 428,
											"end": 459,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 418,
											"end": 460,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 418,
											"end": 460,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 408,
											"end": 478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 408,
											"end": 478,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 474,
											"end": 475,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 471,
											"end": 472,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 464,
											"end": 476,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 408,
											"end": 478,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 408,
											"end": 478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 497,
											"end": 502,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 222,
											"end": 508,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 222,
											"end": 508,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 513,
											"end": 869,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 513,
											"end": 869,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 715,
											"end": 717,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 697,
											"end": 718,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 697,
											"end": 718,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 697,
											"end": 718,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 734,
											"end": 752,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 734,
											"end": 752,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 734,
											"end": 752,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 727,
											"end": 757,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 793,
											"end": 827,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 788,
											"end": 790,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 773,
											"end": 791,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 773,
											"end": 791,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 766,
											"end": 828,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 860,
											"end": 862,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 845,
											"end": 863,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 845,
											"end": 863,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 513,
											"end": 869,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"operator()": "570ca735",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setOperator(address)": "b3ab15fb",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOperator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOperator\",\"type\":\"address\"}],\"name\":\"SetOperator\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"operator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOperator\",\"type\":\"address\"}],\"name\":\"setOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Boost.sol\":\"Operatable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Boost.sol\":{\"keccak256\":\"0x51890f50b6dafdea68176c9872b64a7e1e3600d6953fba67131a979bf5896a4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5823f5aa5cdd3ab82cc93d673ef6f672609120ed18f3f76e079eb74fdf9bae0a\",\"dweb:/ipfs/QmW3EYcqJKHLo6e6VgxxHmjDkyns4etxkBkYYzGVajGHBx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 230,
								"contract": "contracts/Boost.sol:Operatable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 1957,
								"contract": "contracts/Boost.sol:Operatable",
								"label": "operator",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Boost.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Boost.sol\":{\"keccak256\":\"0x51890f50b6dafdea68176c9872b64a7e1e3600d6953fba67131a979bf5896a4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5823f5aa5cdd3ab82cc93d673ef6f672609120ed18f3f76e079eb74fdf9bae0a\",\"dweb:/ipfs/QmW3EYcqJKHLo6e6VgxxHmjDkyns4etxkBkYYzGVajGHBx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 230,
								"contract": "contracts/Boost.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Boost.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Boost.sol\":{\"keccak256\":\"0x51890f50b6dafdea68176c9872b64a7e1e3600d6953fba67131a979bf5896a4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5823f5aa5cdd3ab82cc93d673ef6f672609120ed18f3f76e079eb74fdf9bae0a\",\"dweb:/ipfs/QmW3EYcqJKHLo6e6VgxxHmjDkyns4etxkBkYYzGVajGHBx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 97,
								"contract": "contracts/Boost.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Boost.sol\":19639:22909  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Boost.sol\":19639:22909  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220932cea78e681ba09e88df3ddf81e70e977e06764c283248392e512fb4f9a173764736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220932cea78e681ba09e88df3ddf81e70e977e06764c283248392e512fb4f9a173764736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 0x2C 0xEA PUSH25 0xE681BA09E88DF3DDF81E70E977E06764C283248392E512FB4F SWAP11 OR CALLDATACOPY PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "19639:3270:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;19639:3270:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220932cea78e681ba09e88df3ddf81e70e977e06764c283248392e512fb4f9a173764736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 0x2C 0xEA PUSH25 0xE681BA09E88DF3DDF81E70E977E06764C283248392E512FB4F SWAP11 OR CALLDATACOPY PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ",
							"sourceMap": "19639:3270:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 19639,
									"end": 22909,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 19639,
									"end": 22909,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 19639,
									"end": 22909,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 19639,
									"end": 22909,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19639,
									"end": 22909,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19639,
									"end": 22909,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19639,
									"end": 22909,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 19639,
									"end": 22909,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 19639,
									"end": 22909,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 19639,
									"end": 22909,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19639,
									"end": 22909,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 19639,
									"end": 22909,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 19639,
									"end": 22909,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 19639,
									"end": 22909,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 19639,
									"end": 22909,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 19639,
									"end": 22909,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19639,
									"end": 22909,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 19639,
									"end": 22909,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19639,
									"end": 22909,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 19639,
									"end": 22909,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 19639,
									"end": 22909,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 19639,
									"end": 22909,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19639,
									"end": 22909,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 19639,
									"end": 22909,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 19639,
									"end": 22909,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19639,
									"end": 22909,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 19639,
									"end": 22909,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19639,
									"end": 22909,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 19639,
									"end": 22909,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 19639,
									"end": 22909,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 19639,
									"end": 22909,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 19639,
									"end": 22909,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19639,
									"end": 22909,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 19639,
									"end": 22909,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220932cea78e681ba09e88df3ddf81e70e977e06764c283248392e512fb4f9a173764736f6c634300080a0033",
									".code": [
										{
											"begin": 19639,
											"end": 22909,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 19639,
											"end": 22909,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 19639,
											"end": 22909,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19639,
											"end": 22909,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 19639,
											"end": 22909,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19639,
											"end": 22909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19639,
											"end": 22909,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19639,
											"end": 22909,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19639,
											"end": 22909,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Boost.sol\":\"SafeERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Boost.sol\":{\"keccak256\":\"0x51890f50b6dafdea68176c9872b64a7e1e3600d6953fba67131a979bf5896a4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5823f5aa5cdd3ab82cc93d673ef6f672609120ed18f3f76e079eb74fdf9bae0a\",\"dweb:/ipfs/QmW3EYcqJKHLo6e6VgxxHmjDkyns4etxkBkYYzGVajGHBx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Boost.sol\":23412:29713  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Boost.sol\":23412:29713  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200fae3728c834d8eb17e4a8fa92b7d664873654ff078143b32a6d447ff8b2bf3c64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200fae3728c834d8eb17e4a8fa92b7d664873654ff078143b32a6d447ff8b2bf3c64736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF 0xAE CALLDATACOPY 0x28 0xC8 CALLVALUE 0xD8 0xEB OR 0xE4 0xA8 STATICCALL SWAP3 0xB7 0xD6 PUSH5 0x873654FF07 DUP2 NUMBER 0xB3 0x2A PUSH14 0x447FF8B2BF3C64736F6C63430008 EXP STOP CALLER ",
							"sourceMap": "23412:6301:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;23412:6301:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200fae3728c834d8eb17e4a8fa92b7d664873654ff078143b32a6d447ff8b2bf3c64736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF 0xAE CALLDATACOPY 0x28 0xC8 CALLVALUE 0xD8 0xEB OR 0xE4 0xA8 STATICCALL SWAP3 0xB7 0xD6 PUSH5 0x873654FF07 DUP2 NUMBER 0xB3 0x2A PUSH14 0x447FF8B2BF3C64736F6C63430008 EXP STOP CALLER ",
							"sourceMap": "23412:6301:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 23412,
									"end": 29713,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 23412,
									"end": 29713,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 23412,
									"end": 29713,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 23412,
									"end": 29713,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 23412,
									"end": 29713,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 23412,
									"end": 29713,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 23412,
									"end": 29713,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 23412,
									"end": 29713,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23412,
									"end": 29713,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 23412,
									"end": 29713,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23412,
									"end": 29713,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 23412,
									"end": 29713,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 23412,
									"end": 29713,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 23412,
									"end": 29713,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 23412,
									"end": 29713,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 23412,
									"end": 29713,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23412,
									"end": 29713,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 23412,
									"end": 29713,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23412,
									"end": 29713,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 23412,
									"end": 29713,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 23412,
									"end": 29713,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 23412,
									"end": 29713,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23412,
									"end": 29713,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 23412,
									"end": 29713,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 23412,
									"end": 29713,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23412,
									"end": 29713,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 23412,
									"end": 29713,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23412,
									"end": 29713,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 23412,
									"end": 29713,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 23412,
									"end": 29713,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23412,
									"end": 29713,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 23412,
									"end": 29713,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 23412,
									"end": 29713,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23412,
									"end": 29713,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200fae3728c834d8eb17e4a8fa92b7d664873654ff078143b32a6d447ff8b2bf3c64736f6c634300080a0033",
									".code": [
										{
											"begin": 23412,
											"end": 29713,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 23412,
											"end": 29713,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 23412,
											"end": 29713,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23412,
											"end": 29713,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 23412,
											"end": 29713,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23412,
											"end": 29713,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23412,
											"end": 29713,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23412,
											"end": 29713,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23412,
											"end": 29713,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Boost.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Boost.sol\":{\"keccak256\":\"0x51890f50b6dafdea68176c9872b64a7e1e3600d6953fba67131a979bf5896a4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5823f5aa5cdd3ab82cc93d673ef6f672609120ed18f3f76e079eb74fdf9bae0a\",\"dweb:/ipfs/QmW3EYcqJKHLo6e6VgxxHmjDkyns4etxkBkYYzGVajGHBx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"TokenReward": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "point",
									"type": "uint256"
								}
							],
							"name": "AddPool",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldOperator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOperator",
									"type": "address"
								}
							],
							"name": "SetOperatorContract",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "pool",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "point",
									"type": "uint256"
								}
							],
							"name": "SetPool",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "massUpdatePools",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "minTokenReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "mintMulti",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "operatable",
							"outputs": [
								{
									"internalType": "contract Operatable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "operator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "period",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "periodEndBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_block",
									"type": "uint256"
								}
							],
							"name": "setHalvingPeriod",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_reward",
									"type": "uint256"
								}
							],
							"name": "setMinTokenReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_multi",
									"type": "uint256"
								}
							],
							"name": "setMintMulti",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_oper",
									"type": "address"
								}
							],
							"name": "setOperContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newPerBlock",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "_withUpdate",
									"type": "bool"
								}
							],
							"name": "setTokenPerBlock",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "swapToken",
							"outputs": [
								{
									"internalType": "contract IToken",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenPerBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"massUpdatePools()": "630b5ba1",
							"minTokenReward()": "812632ec",
							"mintMulti()": "37550684",
							"operatable()": "48ee26a3",
							"operator()": "570ca735",
							"owner()": "8da5cb5b",
							"period()": "ef78d4fd",
							"periodEndBlock()": "442da82f",
							"setHalvingPeriod(uint256)": "b5ec5c99",
							"setMinTokenReward(uint256)": "aa70fb98",
							"setMintMulti(uint256)": "71dd4bda",
							"setOperContract(address)": "0f589d63",
							"setTokenPerBlock(uint256,bool)": "4ade739b",
							"startBlock()": "48cd4cb1",
							"swapToken()": "dc73e49c",
							"tokenPerBlock()": "4198709a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"point\",\"type\":\"uint256\"}],\"name\":\"AddPool\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOperator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOperator\",\"type\":\"address\"}],\"name\":\"SetOperatorContract\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"point\",\"type\":\"uint256\"}],\"name\":\"SetPool\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"massUpdatePools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minTokenReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintMulti\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operatable\",\"outputs\":[{\"internalType\":\"contract Operatable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"period\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"periodEndBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_block\",\"type\":\"uint256\"}],\"name\":\"setHalvingPeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_reward\",\"type\":\"uint256\"}],\"name\":\"setMinTokenReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_multi\",\"type\":\"uint256\"}],\"name\":\"setMintMulti\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oper\",\"type\":\"address\"}],\"name\":\"setOperContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newPerBlock\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_withUpdate\",\"type\":\"bool\"}],\"name\":\"setTokenPerBlock\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapToken\",\"outputs\":[{\"internalType\":\"contract IToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Boost.sol\":\"TokenReward\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Boost.sol\":{\"keccak256\":\"0x51890f50b6dafdea68176c9872b64a7e1e3600d6953fba67131a979bf5896a4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5823f5aa5cdd3ab82cc93d673ef6f672609120ed18f3f76e079eb74fdf9bae0a\",\"dweb:/ipfs/QmW3EYcqJKHLo6e6VgxxHmjDkyns4etxkBkYYzGVajGHBx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2042,
								"contract": "contracts/Boost.sol:TokenReward",
								"label": "operatable",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(Operatable)2024"
							},
							{
								"astId": 2195,
								"contract": "contracts/Boost.sol:TokenReward",
								"label": "swapToken",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IToken)2170"
							},
							{
								"astId": 2197,
								"contract": "contracts/Boost.sol:TokenReward",
								"label": "tokenPerBlock",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 2201,
								"contract": "contracts/Boost.sol:TokenReward",
								"label": "periodEndBlock",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 2203,
								"contract": "contracts/Boost.sol:TokenReward",
								"label": "period",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 2205,
								"contract": "contracts/Boost.sol:TokenReward",
								"label": "mintMulti",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 2208,
								"contract": "contracts/Boost.sol:TokenReward",
								"label": "minTokenReward",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_contract(IToken)2170": {
								"encoding": "inplace",
								"label": "contract IToken",
								"numberOfBytes": "20"
							},
							"t_contract(Operatable)2024": {
								"encoding": "inplace",
								"label": "contract Operatable",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"TransferHelper": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Boost.sol\":42123:43473  library TransferHelper {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Boost.sol\":42123:43473  library TransferHelper {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122001b2ff895f3ee0d1ff5d475eaee7469bb902cda45126dcf1f404d913e46ee4cc64736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122001b2ff895f3ee0d1ff5d475eaee7469bb902cda45126dcf1f404d913e46ee4cc64736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD 0xB2 SELFDESTRUCT DUP10 0x5F RETURNDATACOPY 0xE0 0xD1 SELFDESTRUCT 0x5D SELFBALANCE 0x5E 0xAE 0xE7 CHAINID SWAP12 0xB9 MUL 0xCD LOG4 MLOAD 0x26 0xDC CALL DELEGATECALL DIV 0xD9 SGT 0xE4 PUSH15 0xE4CC64736F6C634300080A00330000 ",
							"sourceMap": "42123:1350:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;42123:1350:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122001b2ff895f3ee0d1ff5d475eaee7469bb902cda45126dcf1f404d913e46ee4cc64736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADD 0xB2 SELFDESTRUCT DUP10 0x5F RETURNDATACOPY 0xE0 0xD1 SELFDESTRUCT 0x5D SELFBALANCE 0x5E 0xAE 0xE7 CHAINID SWAP12 0xB9 MUL 0xCD LOG4 MLOAD 0x26 0xDC CALL DELEGATECALL DIV 0xD9 SGT 0xE4 PUSH15 0xE4CC64736F6C634300080A00330000 ",
							"sourceMap": "42123:1350:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"safeApprove(address,address,uint256)": "infinite",
								"safeTransfer(address,address,uint256)": "infinite",
								"safeTransferETH(address,uint256)": "infinite",
								"safeTransferFrom(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 42123,
									"end": 43473,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 42123,
									"end": 43473,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 42123,
									"end": 43473,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 42123,
									"end": 43473,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 42123,
									"end": 43473,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 42123,
									"end": 43473,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 42123,
									"end": 43473,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 42123,
									"end": 43473,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 42123,
									"end": 43473,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 42123,
									"end": 43473,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 42123,
									"end": 43473,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 42123,
									"end": 43473,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 42123,
									"end": 43473,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 42123,
									"end": 43473,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 42123,
									"end": 43473,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 42123,
									"end": 43473,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 42123,
									"end": 43473,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 42123,
									"end": 43473,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 42123,
									"end": 43473,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 42123,
									"end": 43473,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 42123,
									"end": 43473,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 42123,
									"end": 43473,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 42123,
									"end": 43473,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 42123,
									"end": 43473,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 42123,
									"end": 43473,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 42123,
									"end": 43473,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 42123,
									"end": 43473,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 42123,
									"end": 43473,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 42123,
									"end": 43473,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 42123,
									"end": 43473,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 42123,
									"end": 43473,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 42123,
									"end": 43473,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 42123,
									"end": 43473,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 42123,
									"end": 43473,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122001b2ff895f3ee0d1ff5d475eaee7469bb902cda45126dcf1f404d913e46ee4cc64736f6c634300080a0033",
									".code": [
										{
											"begin": 42123,
											"end": 43473,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 42123,
											"end": 43473,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 42123,
											"end": 43473,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 42123,
											"end": 43473,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 42123,
											"end": 43473,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42123,
											"end": 43473,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42123,
											"end": 43473,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42123,
											"end": 43473,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42123,
											"end": 43473,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Boost.sol\":\"TransferHelper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Boost.sol\":{\"keccak256\":\"0x51890f50b6dafdea68176c9872b64a7e1e3600d6953fba67131a979bf5896a4f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5823f5aa5cdd3ab82cc93d673ef6f672609120ed18f3f76e079eb74fdf9bae0a\",\"dweb:/ipfs/QmW3EYcqJKHLo6e6VgxxHmjDkyns4etxkBkYYzGVajGHBx\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Boost.sol": {
				"ast": {
					"absolutePath": "contracts/Boost.sol",
					"exportedSymbols": {
						"AbstractBoost": [
							3078
						],
						"Address": [
							663
						],
						"Boost": [
							3775
						],
						"CheckOper": [
							2152
						],
						"Context": [
							224
						],
						"EnumerableSet": [
							1793
						],
						"IERC20": [
							203
						],
						"IGauge": [
							358
						],
						"IGaugeFactory": [
							369
						],
						"IOperContract": [
							2036
						],
						"IToken": [
							2170
						],
						"IVeToken": [
							2517
						],
						"Math": [
							87
						],
						"Operatable": [
							2024
						],
						"Ownable": [
							327
						],
						"ReentrancyGuard": [
							126
						],
						"SafeERC20": [
							884
						],
						"SafeMath": [
							1195
						],
						"TokenReward": [
							2449
						],
						"TransferHelper": [
							1952
						]
					},
					"id": 3776,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "225:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "250:73:0",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 87,
							"linearizedBaseContracts": [
								87
							],
							"name": "Math",
							"nameLocation": "332:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "474:38:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 14,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 12,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "491:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 13,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "496:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "491:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 16,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "504:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "491:14:0",
													"trueExpression": {
														"id": 15,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "500:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 11,
												"id": 18,
												"nodeType": "Return",
												"src": "484:21:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "343:59:0",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "416:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "428:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "420:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "420:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "439:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "431:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "419:22:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "465:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 9,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "464:9:0"
									},
									"scope": 87,
									"src": "407:105:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "650:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 32,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 30,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "667:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 31,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "671:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "667:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 34,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "679:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "667:13:0",
													"trueExpression": {
														"id": 33,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "675:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 29,
												"id": 36,
												"nodeType": "Return",
												"src": "660:20:0"
											}
										]
									},
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "518:60:0",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 38,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "592:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "604:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "596:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 22,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "615:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "607:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "607:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "641:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "641:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "640:9:0"
									},
									"scope": 87,
									"src": "583:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 60,
										"nodeType": "Block",
										"src": "871:82:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 50,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 48,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 41,
																	"src": "926:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 49,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 43,
																	"src": "930:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "926:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 51,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "925:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 57,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 54,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 52,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 41,
																		"src": "936:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 53,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 43,
																		"src": "940:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "936:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 55,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "935:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "945:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "935:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "925:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 47,
												"id": 59,
												"nodeType": "Return",
												"src": "918:28:0"
											}
										]
									},
									"documentation": {
										"id": 39,
										"nodeType": "StructuredDocumentation",
										"src": "693:102:0",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 61,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "809:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "825:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "817:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "817:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "836:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "828:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 42,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "828:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:22:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "862:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "862:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:9:0"
									},
									"scope": 87,
									"src": "800:153:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 85,
										"nodeType": "Block",
										"src": "1223:123:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 73,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 71,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 64,
															"src": "1311:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 72,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 66,
															"src": "1315:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1311:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 78,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 76,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 74,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 64,
																			"src": "1320:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "%",
																		"rightExpression": {
																			"id": 75,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 66,
																			"src": "1324:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1320:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1329:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "1320:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"hexValue": "31",
																	"id": 80,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1337:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "1320:18:0",
																"trueExpression": {
																	"hexValue": "30",
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1333:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"id": 82,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1319:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1311:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 70,
												"id": 84,
												"nodeType": "Return",
												"src": "1304:35:0"
											}
										]
									},
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "959:188:0",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 86,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1161:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1177:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "1169:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1169:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1188:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "1180:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1180:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1168:22:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "1214:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 68,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1214:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1213:9:0"
									},
									"scope": 87,
									"src": "1152:194:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3776,
							"src": "324:1024:0",
							"usedErrors": []
						},
						{
							"id": 88,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1486:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 89,
								"nodeType": "StructuredDocumentation",
								"src": "1511:750:0",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 126,
							"linearizedBaseContracts": [
								126
							],
							"name": "ReentrancyGuard",
							"nameLocation": "2280:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 92,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "3075:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 126,
									"src": "3050:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 90,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3050:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 91,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3090:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 95,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "3122:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 126,
									"src": "3097:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 93,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3097:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 94,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3133:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 97,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "3157:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 126,
									"src": "3141:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 96,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3141:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "3185:39:0",
										"statements": [
											{
												"expression": {
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 100,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "3195:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 101,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 92,
														"src": "3205:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3195:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 103,
												"nodeType": "ExpressionStatement",
												"src": "3195:22:0"
											}
										]
									},
									"id": 105,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3182:2:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3185:0:0"
									},
									"scope": 126,
									"src": "3171:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "3625:421:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 109,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "3714:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 110,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 95,
																"src": "3725:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3714:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 112,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3735:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 108,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3706:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3706:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 114,
												"nodeType": "ExpressionStatement",
												"src": "3706:63:0"
											},
											{
												"expression": {
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 115,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "3844:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 116,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "3854:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3844:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 118,
												"nodeType": "ExpressionStatement",
												"src": "3844:18:0"
											},
											{
												"id": 119,
												"nodeType": "PlaceholderStatement",
												"src": "3873:1:0"
											},
											{
												"expression": {
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 120,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "4017:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 121,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 92,
														"src": "4027:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4017:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 123,
												"nodeType": "ExpressionStatement",
												"src": "4017:22:0"
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "3230:366:0",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 125,
									"name": "nonReentrant",
									"nameLocation": "3610:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3622:2:0"
									},
									"src": "3601:445:0",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3776,
							"src": "2262:1786:0",
							"usedErrors": []
						},
						{
							"id": 127,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "4189:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 128,
								"nodeType": "StructuredDocumentation",
								"src": "4214:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 203,
							"linearizedBaseContracts": [
								203
							],
							"name": "IERC20",
							"nameLocation": "4295:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "4308:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 134,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "4388:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4399:2:0"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "4425:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4425:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4424:9:0"
									},
									"scope": 203,
									"src": "4379:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 135,
										"nodeType": "StructuredDocumentation",
										"src": "4440:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 142,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4526:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4544:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "4536:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4536:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4535:17:0"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "4576:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4576:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4575:9:0"
									},
									"scope": 203,
									"src": "4517:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 143,
										"nodeType": "StructuredDocumentation",
										"src": "4591:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 152,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "4807:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4824:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "4816:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4816:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4836:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "4828:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4828:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4815:28:0"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "4862:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 149,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4862:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4861:6:0"
									},
									"scope": 203,
									"src": "4798:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "4874:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 162,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "5152:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5170:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "5162:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5162:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5185:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "5177:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5177:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5161:32:0"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "5217:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5217:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5216:9:0"
									},
									"scope": 203,
									"src": "5143:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "5232:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 172,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "5888:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5904:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "5896:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5896:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5921:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "5913:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5913:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5895:33:0"
									},
									"returnParameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "5947:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 169,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5947:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5946:6:0"
									},
									"scope": 203,
									"src": "5879:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "5959:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 184,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6260:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6290:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "6282:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6282:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6312:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "6304:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6304:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6332:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "6324:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6324:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6272:72:0"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "6363:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 181,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6363:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6362:6:0"
									},
									"scope": 203,
									"src": "6251:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 185,
										"nodeType": "StructuredDocumentation",
										"src": "6375:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 193,
									"name": "Transfer",
									"nameLocation": "6544:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6569:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "6553:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6553:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6591:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "6575:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6575:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6603:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "6595:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6595:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6552:57:0"
									},
									"src": "6538:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "6616:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 202,
									"name": "Approval",
									"nameLocation": "6775:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6800:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "6784:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6823:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "6807:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6807:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6840:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "6832:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6783:63:0"
									},
									"src": "6769:78:0"
								}
							],
							"scope": 3776,
							"src": "4285:2564:0",
							"usedErrors": []
						},
						{
							"id": 204,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "6965:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 205,
								"nodeType": "StructuredDocumentation",
								"src": "6990:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 224,
							"linearizedBaseContracts": [
								224
							],
							"name": "Context",
							"nameLocation": "7505:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 213,
										"nodeType": "Block",
										"src": "7581:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 210,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "7598:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "7598:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 209,
												"id": 212,
												"nodeType": "Return",
												"src": "7591:17:0"
											}
										]
									},
									"id": 214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "7528:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7538:2:0"
									},
									"returnParameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "7572:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 207,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7571:9:0"
									},
									"scope": 224,
									"src": "7519:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 222,
										"nodeType": "Block",
										"src": "7688:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 219,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "7705:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "7705:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 218,
												"id": 221,
												"nodeType": "Return",
												"src": "7698:15:0"
											}
										]
									},
									"id": 223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "7630:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7638:2:0"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "7672:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 216,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7672:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7671:16:0"
									},
									"scope": 224,
									"src": "7621:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3776,
							"src": "7487:235:0",
							"usedErrors": []
						},
						{
							"id": 225,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "7840:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 227,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 224,
										"src": "8389:7:0"
									},
									"id": 228,
									"nodeType": "InheritanceSpecifier",
									"src": "8389:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 226,
								"nodeType": "StructuredDocumentation",
								"src": "7865:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 327,
							"linearizedBaseContracts": [
								327,
								224
							],
							"name": "Ownable",
							"nameLocation": "8378:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 230,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "8419:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 327,
									"src": "8403:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 229,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "8403:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 236,
									"name": "OwnershipTransferred",
									"nameLocation": "8438:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "8475:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "8459:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8459:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "8506:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "8490:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8490:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8458:57:0"
									},
									"src": "8432:84:0"
								},
								{
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "8632:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 241,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 214,
																"src": "8661:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8661:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 240,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 326,
														"src": "8642:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8642:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 244,
												"nodeType": "ExpressionStatement",
												"src": "8642:32:0"
											}
										]
									},
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "8522:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 246,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8629:2:0"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8632:0:0"
									},
									"scope": 327,
									"src": "8618:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 254,
										"nodeType": "Block",
										"src": "8812:30:0",
										"statements": [
											{
												"expression": {
													"id": 252,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 230,
													"src": "8829:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 251,
												"id": 253,
												"nodeType": "Return",
												"src": "8822:13:0"
											}
										]
									},
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "8687:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "8766:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8771:2:0"
									},
									"returnParameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "8803:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8803:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8802:9:0"
									},
									"scope": 327,
									"src": "8757:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 268,
										"nodeType": "Block",
										"src": "8951:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 259,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 255,
																	"src": "8969:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 260,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8969:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 261,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "8980:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 262,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8980:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8969:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 264,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8994:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 258,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8961:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8961:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 266,
												"nodeType": "ExpressionStatement",
												"src": "8961:68:0"
											},
											{
												"id": 267,
												"nodeType": "PlaceholderStatement",
												"src": "9039:1:0"
											}
										]
									},
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "8848:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 269,
									"name": "onlyOwner",
									"nameLocation": "8939:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8948:2:0"
									},
									"src": "8930:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "9443:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9480:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 277,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9472:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 276,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9472:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 279,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9472:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 275,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 326,
														"src": "9453:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 280,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9453:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 281,
												"nodeType": "ExpressionStatement",
												"src": "9453:30:0"
											}
										]
									},
									"documentation": {
										"id": 270,
										"nodeType": "StructuredDocumentation",
										"src": "9053:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 283,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 273,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 272,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 269,
												"src": "9433:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "9433:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "9398:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9415:2:0"
									},
									"returnParameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9443:0:0"
									},
									"scope": 327,
									"src": "9389:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 305,
										"nodeType": "Block",
										"src": "9709:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 292,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 286,
																"src": "9727:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 295,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9747:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 294,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9739:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 293,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9739:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 296,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9739:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9727:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 298,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9751:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 291,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9719:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9719:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 300,
												"nodeType": "ExpressionStatement",
												"src": "9719:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 302,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "9821:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 301,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 326,
														"src": "9802:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9802:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 304,
												"nodeType": "ExpressionStatement",
												"src": "9802:28:0"
											}
										]
									},
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "9496:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 306,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 289,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 288,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 269,
												"src": "9699:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "9699:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "9648:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "9674:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "9666:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9666:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9665:18:0"
									},
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9709:0:0"
									},
									"scope": 327,
									"src": "9639:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "10054:124:0",
										"statements": [
											{
												"assignments": [
													313
												],
												"declarations": [
													{
														"constant": false,
														"id": 313,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "10072:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 325,
														"src": "10064:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 312,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10064:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 315,
												"initialValue": {
													"id": 314,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 230,
													"src": "10083:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10064:25:0"
											},
											{
												"expression": {
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 316,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 230,
														"src": "10099:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 317,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 309,
														"src": "10108:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10099:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 319,
												"nodeType": "ExpressionStatement",
												"src": "10099:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 321,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "10152:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 322,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "10162:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 320,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 236,
														"src": "10131:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10131:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "EmitStatement",
												"src": "10126:45:0"
											}
										]
									},
									"documentation": {
										"id": 307,
										"nodeType": "StructuredDocumentation",
										"src": "9843:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "10000:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "10027:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "10019:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 308,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10019:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10018:18:0"
									},
									"returnParameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10054:0:0"
									},
									"scope": 327,
									"src": "9991:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3776,
							"src": "8360:1820:0",
							"usedErrors": []
						},
						{
							"id": 328,
							"literals": [
								"solidity",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "10223:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IGauge",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 358,
							"linearizedBaseContracts": [
								358
							],
							"name": "IGauge",
							"nameLocation": "10258:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "b66503cf",
									"id": 335,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "notifyRewardAmount",
									"nameLocation": "10280:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "10307:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "10299:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10299:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "10319:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "10314:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10314:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10298:28:0"
									},
									"returnParameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10335:0:0"
									},
									"scope": 358,
									"src": "10271:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "31279d3d",
									"id": 343,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReward",
									"nameLocation": "10351:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "10369:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "10361:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10361:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "tokens",
												"nameLocation": "10395:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "10378:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 338,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "10378:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 339,
													"nodeType": "ArrayTypeName",
													"src": "10378:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10360:42:0"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10411:0:0"
									},
									"scope": 358,
									"src": "10342:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d294f093",
									"id": 350,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "claimFees",
									"nameLocation": "10427:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10436:2:0"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "claimed0",
												"nameLocation": "10462:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "10457:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10457:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "claimed1",
												"nameLocation": "10477:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 350,
												"src": "10472:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10472:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10456:30:0"
									},
									"scope": 358,
									"src": "10418:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "99bcc052",
									"id": 357,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "left",
									"nameLocation": "10502:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "10515:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "10507:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10507:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10506:15:0"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "10545:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "10545:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10544:6:0"
									},
									"scope": 358,
									"src": "10493:58:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3776,
							"src": "10248:305:0",
							"usedErrors": []
						},
						{
							"id": 359,
							"literals": [
								"solidity",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "10603:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IGaugeFactory",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 369,
							"linearizedBaseContracts": [
								369
							],
							"name": "IGaugeFactory",
							"nameLocation": "10638:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "794cea3c",
									"id": 368,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createGauge",
									"nameLocation": "10667:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "10679:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10679:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "10688:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 362,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10678:18:0"
									},
									"returnParameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 368,
												"src": "10715:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10715:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10714:9:0"
									},
									"scope": 369,
									"src": "10658:66:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3776,
							"src": "10628:98:0",
							"usedErrors": []
						},
						{
							"id": 370,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "10857:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 371,
								"nodeType": "StructuredDocumentation",
								"src": "10882:67:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 663,
							"linearizedBaseContracts": [
								663
							],
							"name": "Address",
							"nameLocation": "10958:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 385,
										"nodeType": "Block",
										"src": "11997:254:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 379,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 374,
																"src": "12221:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "12221:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 381,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "12221:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12243:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12221:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 378,
												"id": 384,
												"nodeType": "Return",
												"src": "12214:30:0"
											}
										]
									},
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "10972:954:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 386,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "11940:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "11959:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "11951:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11951:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11950:17:0"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 386,
												"src": "11991:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 376,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "11991:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11990:6:0"
									},
									"scope": 663,
									"src": "11931:320:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 419,
										"nodeType": "Block",
										"src": "13239:241:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 401,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 397,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "13265:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$663",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$663",
																				"typeString": "library Address"
																			}
																		],
																		"id": 396,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "13257:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 395,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "13257:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 398,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "13257:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "13257:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 400,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 391,
																"src": "13282:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13257:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 402,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13290:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 394,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13249:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13249:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 404,
												"nodeType": "ExpressionStatement",
												"src": "13249:73:0"
											},
											{
												"assignments": [
													406,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 406,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "13339:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 419,
														"src": "13334:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 405,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "13334:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 413,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13382:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 407,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 389,
																"src": "13352:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "13352:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 410,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 409,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 391,
																"src": "13374:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "13352:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13352:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13333:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 415,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "13403:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13412:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 414,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13395:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13395:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "13395:78:0"
											}
										]
									},
									"documentation": {
										"id": 387,
										"nodeType": "StructuredDocumentation",
										"src": "12257:906:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "13177:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "13203:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "13187:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 388,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13187:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "13222:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 420,
												"src": "13214:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 390,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13214:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13186:43:0"
									},
									"returnParameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13239:0:0"
									},
									"scope": 663,
									"src": "13168:312:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "14311:84:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 431,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "14341:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 432,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "14349:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 433,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14355:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 430,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															437,
															457
														],
														"referencedDeclaration": 457,
														"src": "14328:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14328:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 429,
												"id": 435,
												"nodeType": "Return",
												"src": "14321:67:0"
											}
										]
									},
									"documentation": {
										"id": 421,
										"nodeType": "StructuredDocumentation",
										"src": "13486:731:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "14231:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "14252:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "14244:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14244:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14273:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "14260:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 424,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14260:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14243:35:0"
									},
									"returnParameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "14297:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 427,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14297:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14296:14:0"
									},
									"scope": 663,
									"src": "14222:173:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 456,
										"nodeType": "Block",
										"src": "14764:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 450,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 440,
															"src": "14803:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 451,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 442,
															"src": "14811:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 452,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14817:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 453,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "14820:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 449,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															477,
															527
														],
														"referencedDeclaration": 527,
														"src": "14781:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14781:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 448,
												"id": 455,
												"nodeType": "Return",
												"src": "14774:59:0"
											}
										]
									},
									"documentation": {
										"id": 438,
										"nodeType": "StructuredDocumentation",
										"src": "14401:211:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "14626:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "14656:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "14648:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14648:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "14685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "14672:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 441,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14672:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "14713:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "14699:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 443,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "14699:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14638:93:0"
									},
									"returnParameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "14750:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 446,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14750:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14749:14:0"
									},
									"scope": 663,
									"src": "14617:223:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "15345:111:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 470,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "15384:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 471,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "15392:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 472,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 464,
															"src": "15398:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 473,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15405:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 469,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															477,
															527
														],
														"referencedDeclaration": 527,
														"src": "15362:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 474,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15362:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 468,
												"id": 475,
												"nodeType": "Return",
												"src": "15355:94:0"
											}
										]
									},
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "14846:351:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "15211:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "15250:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "15242:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15242:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15279:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "15266:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 461,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15266:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15301:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "15293:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 463,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15293:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15232:80:0"
									},
									"returnParameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "15331:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 466,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15331:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15330:14:0"
									},
									"scope": 663,
									"src": "15202:254:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 526,
										"nodeType": "Block",
										"src": "15883:320:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 494,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "15909:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$663",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$663",
																				"typeString": "library Address"
																			}
																		],
																		"id": 493,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "15901:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 492,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "15901:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 495,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "15901:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "15901:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 497,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 484,
																"src": "15926:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "15901:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 499,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15933:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 491,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15893:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15893:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 501,
												"nodeType": "ExpressionStatement",
												"src": "15893:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 504,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "16003:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 503,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 386,
																"src": "15992:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15992:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16012:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 502,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15984:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15984:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 508,
												"nodeType": "ExpressionStatement",
												"src": "15984:60:0"
											},
											{
												"assignments": [
													510,
													512
												],
												"declarations": [
													{
														"constant": false,
														"id": 510,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "16061:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 526,
														"src": "16056:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 509,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "16056:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 512,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "16083:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 526,
														"src": "16070:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 511,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "16070:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 519,
												"initialValue": {
													"arguments": [
														{
															"id": 517,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "16123:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 513,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 480,
																"src": "16097:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "16097:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 516,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 515,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 484,
																"src": "16116:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "16097:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16097:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16055:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 521,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "16162:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 522,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "16171:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 523,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "16183:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 520,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "16145:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16145:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 490,
												"id": 525,
												"nodeType": "Return",
												"src": "16138:58:0"
											}
										]
									},
									"documentation": {
										"id": 478,
										"nodeType": "StructuredDocumentation",
										"src": "15462:237:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "15713:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "15752:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "15744:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15744:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "15781:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "15768:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 481,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15768:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15803:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "15795:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 483,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15795:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "15832:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "15818:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 485,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "15818:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15734:116:0"
									},
									"returnParameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "15869:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 488,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "15869:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15868:14:0"
									},
									"scope": 663,
									"src": "15704:499:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 543,
										"nodeType": "Block",
										"src": "16480:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 538,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 530,
															"src": "16516:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 539,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 532,
															"src": "16524:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 540,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16530:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 537,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															544,
															579
														],
														"referencedDeclaration": 579,
														"src": "16497:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16497:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 536,
												"id": 542,
												"nodeType": "Return",
												"src": "16490:80:0"
											}
										]
									},
									"documentation": {
										"id": 528,
										"nodeType": "StructuredDocumentation",
										"src": "16209:166:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 544,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "16389:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "16416:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "16408:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16408:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "16437:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "16424:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 531,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16424:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16407:35:0"
									},
									"returnParameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 544,
												"src": "16466:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 534,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16466:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16465:14:0"
									},
									"scope": 663,
									"src": "16380:197:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 578,
										"nodeType": "Block",
										"src": "16919:228:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 558,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 547,
																	"src": "16948:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 557,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 386,
																"src": "16937:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16937:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16957:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 556,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16929:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16929:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 562,
												"nodeType": "ExpressionStatement",
												"src": "16929:67:0"
											},
											{
												"assignments": [
													564,
													566
												],
												"declarations": [
													{
														"constant": false,
														"id": 564,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "17013:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 578,
														"src": "17008:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 563,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "17008:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 566,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "17035:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 578,
														"src": "17022:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 565,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "17022:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 571,
												"initialValue": {
													"arguments": [
														{
															"id": 569,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 549,
															"src": "17067:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 567,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 547,
															"src": "17049:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 568,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "17049:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17049:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17007:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 573,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 564,
															"src": "17106:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 574,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 566,
															"src": "17115:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 575,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 551,
															"src": "17127:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 572,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "17089:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17089:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 555,
												"id": 577,
												"nodeType": "Return",
												"src": "17082:58:0"
											}
										]
									},
									"documentation": {
										"id": 545,
										"nodeType": "StructuredDocumentation",
										"src": "16583:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 579,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "16770:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "16806:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "16798:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 546,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16798:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "16835:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "16822:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 548,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16822:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "16863:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "16849:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 550,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "16849:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16788:93:0"
									},
									"returnParameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 579,
												"src": "16905:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 553,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16905:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16904:14:0"
									},
									"scope": 663,
									"src": "16761:386:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 595,
										"nodeType": "Block",
										"src": "17423:101:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 590,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 582,
															"src": "17461:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 591,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 584,
															"src": "17469:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17475:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 589,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															596,
															631
														],
														"referencedDeclaration": 631,
														"src": "17440:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 593,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17440:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 588,
												"id": 594,
												"nodeType": "Return",
												"src": "17433:84:0"
											}
										]
									},
									"documentation": {
										"id": 580,
										"nodeType": "StructuredDocumentation",
										"src": "17153:168:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 596,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "17335:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "17364:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "17356:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17356:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17385:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "17372:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 583,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17372:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17355:35:0"
									},
									"returnParameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 596,
												"src": "17409:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 586,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17409:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17408:14:0"
									},
									"scope": 663,
									"src": "17326:198:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 630,
										"nodeType": "Block",
										"src": "17865:232:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 610,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 599,
																	"src": "17894:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 609,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 386,
																"src": "17883:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17883:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17903:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															},
															"value": "Address: delegate call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520",
																"typeString": "literal_string \"Address: delegate call to non-contract\""
															}
														],
														"id": 608,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17875:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17875:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 614,
												"nodeType": "ExpressionStatement",
												"src": "17875:69:0"
											},
											{
												"assignments": [
													616,
													618
												],
												"declarations": [
													{
														"constant": false,
														"id": 616,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "17961:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 630,
														"src": "17956:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 615,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "17956:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 618,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "17983:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 630,
														"src": "17970:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 617,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "17970:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 623,
												"initialValue": {
													"arguments": [
														{
															"id": 621,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 601,
															"src": "18017:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 619,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 599,
															"src": "17997:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 620,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "17997:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17997:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17955:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 625,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "18056:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 626,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 618,
															"src": "18065:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 627,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 603,
															"src": "18077:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 624,
														"name": "verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 662,
														"src": "18039:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18039:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 607,
												"id": 629,
												"nodeType": "Return",
												"src": "18032:58:0"
											}
										]
									},
									"documentation": {
										"id": 597,
										"nodeType": "StructuredDocumentation",
										"src": "17530:175:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 631,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "17719:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "17757:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "17749:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17749:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17786:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "17773:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 600,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17773:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "17814:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "17800:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 602,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "17800:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17739:93:0"
									},
									"returnParameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "17851:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 605,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "17851:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17850:14:0"
									},
									"scope": 663,
									"src": "17710:387:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "18477:532:0",
										"statements": [
											{
												"condition": {
													"id": 643,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 634,
													"src": "18491:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 659,
													"nodeType": "Block",
													"src": "18548:455:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 647,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 636,
																		"src": "18632:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 648,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "18632:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 649,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18652:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "18632:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 657,
																"nodeType": "Block",
																"src": "18940:53:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 654,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 638,
																					"src": "18965:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 653,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "18958:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "18958:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 656,
																		"nodeType": "ExpressionStatement",
																		"src": "18958:20:0"
																	}
																]
															},
															"id": 658,
															"nodeType": "IfStatement",
															"src": "18628:365:0",
															"trueBody": {
																"id": 652,
																"nodeType": "Block",
																"src": "18655:279:0",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "18775:145:0",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "18797:40:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "18826:10:0"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "18820:5:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "18820:17:0"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "18801:15:0",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "18869:2:0",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "18873:10:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "18865:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "18865:19:0"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "18886:15:0"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "18858:6:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "18858:44:0"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "18858:44:0"
																				}
																			]
																		},
																		"evmVersion": "london",
																		"externalReferences": [
																			{
																				"declaration": 636,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "18826:10:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 636,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "18873:10:0",
																				"valueSize": 1
																			}
																		],
																		"id": 651,
																		"nodeType": "InlineAssembly",
																		"src": "18766:154:0"
																	}
																]
															}
														}
													]
												},
												"id": 660,
												"nodeType": "IfStatement",
												"src": "18487:516:0",
												"trueBody": {
													"id": 646,
													"nodeType": "Block",
													"src": "18500:42:0",
													"statements": [
														{
															"expression": {
																"id": 644,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 636,
																"src": "18521:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 642,
															"id": 645,
															"nodeType": "Return",
															"src": "18514:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 632,
										"nodeType": "StructuredDocumentation",
										"src": "18103:209:0",
										"text": " @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"
									},
									"id": 662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "18326:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "18357:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "18352:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 633,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18352:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "18387:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "18374:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 635,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18374:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "18421:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "18407:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 637,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "18407:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18342:97:0"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "18463:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 640,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18463:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18462:14:0"
									},
									"scope": 663,
									"src": "18317:692:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3776,
							"src": "10950:8061:0",
							"usedErrors": []
						},
						{
							"id": 664,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "19155:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 665,
								"nodeType": "StructuredDocumentation",
								"src": "19181:457:0",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 884,
							"linearizedBaseContracts": [
								884
							],
							"name": "SafeERC20",
							"nameLocation": "19647:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 668,
									"libraryName": {
										"id": 666,
										"name": "Address",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 663,
										"src": "19669:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "19663:26:0",
									"typeName": {
										"id": 667,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "19681:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 690,
										"nodeType": "Block",
										"src": "19797:103:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 679,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 671,
															"src": "19827:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$203",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 682,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 671,
																			"src": "19857:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$203",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 683,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 152,
																		"src": "19857:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 684,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "19857:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 685,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 673,
																	"src": "19882:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 686,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 675,
																	"src": "19886:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 680,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "19834:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 681,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "19834:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19834:58:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$203",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 678,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "19807:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$203_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19807:86:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 689,
												"nodeType": "ExpressionStatement",
												"src": "19807:86:0"
											}
										]
									},
									"id": 691,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "19704:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "19733:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "19726:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$203",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 670,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 669,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 203,
														"src": "19726:6:0"
													},
													"referencedDeclaration": 203,
													"src": "19726:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$203",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "19756:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "19748:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 672,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19748:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19776:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 691,
												"src": "19768:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19768:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19716:71:0"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19797:0:0"
									},
									"scope": 884,
									"src": "19695:205:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 716,
										"nodeType": "Block",
										"src": "20034:113:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 704,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "20064:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$203",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 707,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 694,
																			"src": "20094:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$203",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 708,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 184,
																		"src": "20094:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 709,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "20094:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 710,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 696,
																	"src": "20123:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 711,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 698,
																	"src": "20129:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 712,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 700,
																	"src": "20133:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 705,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "20071:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 706,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "20071:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 713,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20071:68:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$203",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 703,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "20044:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$203_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20044:96:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 715,
												"nodeType": "ExpressionStatement",
												"src": "20044:96:0"
											}
										]
									},
									"id": 717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "19915:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 694,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "19948:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "19941:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$203",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 693,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 692,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 203,
														"src": "19941:6:0"
													},
													"referencedDeclaration": 203,
													"src": "19941:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$203",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 696,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "19971:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "19963:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19963:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 698,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "19993:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "19985:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 697,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19985:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20013:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "20005:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20005:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19931:93:0"
									},
									"returnParameters": {
										"id": 702,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20034:0:0"
									},
									"scope": 884,
									"src": "19906:241:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 760,
										"nodeType": "Block",
										"src": "20513:497:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 729,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 725,
																			"src": "20762:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 730,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20771:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "20762:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 732,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "20761:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 742,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 737,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967268,
																							"src": "20802:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$884",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$884",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 736,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "20794:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 735,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "20794:7:0",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 738,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "20794:13:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 739,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 723,
																					"src": "20809:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"id": 733,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 721,
																					"src": "20778:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$203",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 734,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 162,
																				"src": "20778:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 740,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "20778:39:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 741,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20821:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "20778:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 743,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "20777:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "20761:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 745,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20837:56:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 728,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "20740:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20740:163:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 747,
												"nodeType": "ExpressionStatement",
												"src": "20740:163:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 749,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 721,
															"src": "20933:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$203",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 752,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 721,
																			"src": "20963:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$203",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 753,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 172,
																		"src": "20963:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 754,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "20963:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 755,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 723,
																	"src": "20987:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 756,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 725,
																	"src": "20996:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 750,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "20940:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 751,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "20940:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 757,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20940:62:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$203",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 748,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "20913:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$203_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20913:90:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 759,
												"nodeType": "ExpressionStatement",
												"src": "20913:90:0"
											}
										]
									},
									"documentation": {
										"id": 718,
										"nodeType": "StructuredDocumentation",
										"src": "20153:249:0",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "20416:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "20444:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "20437:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$203",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 720,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 719,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 203,
														"src": "20437:6:0"
													},
													"referencedDeclaration": 203,
													"src": "20437:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$203",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "20467:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "20459:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20459:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20492:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "20484:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20484:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20427:76:0"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20513:0:0"
									},
									"scope": 884,
									"src": "20407:603:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 796,
										"nodeType": "Block",
										"src": "21132:194:0",
										"statements": [
											{
												"assignments": [
													772
												],
												"declarations": [
													{
														"constant": false,
														"id": 772,
														"mutability": "mutable",
														"name": "newAllowance",
														"nameLocation": "21150:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 796,
														"src": "21142:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 771,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21142:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 783,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 777,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "21189:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SafeERC20_$884",
																			"typeString": "library SafeERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SafeERC20_$884",
																			"typeString": "library SafeERC20"
																		}
																	],
																	"id": 776,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 775,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "21181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 778,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21181:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 779,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 766,
																"src": "21196:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"id": 773,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 764,
																"src": "21165:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$203",
																	"typeString": "contract IERC20"
																}
															},
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 162,
															"src": "21165:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 780,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21165:39:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 781,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 768,
														"src": "21207:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21165:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21142:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 785,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 764,
															"src": "21242:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$203",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 788,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 764,
																			"src": "21272:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$203",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 789,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 172,
																		"src": "21272:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 790,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "21272:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 791,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 766,
																	"src": "21296:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 792,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 772,
																	"src": "21305:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 786,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "21249:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 787,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "21249:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21249:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$203",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 784,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "21222:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$203_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21222:97:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 795,
												"nodeType": "ExpressionStatement",
												"src": "21222:97:0"
											}
										]
									},
									"id": 797,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "21025:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "21063:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "21056:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$203",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 763,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 762,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 203,
														"src": "21056:6:0"
													},
													"referencedDeclaration": 203,
													"src": "21056:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$203",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "21086:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "21078:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 765,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21078:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 768,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21111:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "21103:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 767,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21103:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21046:76:0"
									},
									"returnParameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21132:0:0"
									},
									"scope": 884,
									"src": "21016:310:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 844,
										"nodeType": "Block",
										"src": "21448:370:0",
										"statements": [
											{
												"id": 843,
												"nodeType": "UncheckedBlock",
												"src": "21458:354:0",
												"statements": [
													{
														"assignments": [
															808
														],
														"declarations": [
															{
																"constant": false,
																"id": 808,
																"mutability": "mutable",
																"name": "oldAllowance",
																"nameLocation": "21490:12:0",
																"nodeType": "VariableDeclaration",
																"scope": 843,
																"src": "21482:20:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 807,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "21482:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 817,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 813,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "21529:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$884",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$884",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 812,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "21521:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 811,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "21521:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 814,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "21521:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 815,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 802,
																	"src": "21536:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 809,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 800,
																	"src": "21505:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$203",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 162,
																"src": "21505:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21505:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "21482:62:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 821,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 819,
																		"name": "oldAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 808,
																		"src": "21566:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"id": 820,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 804,
																		"src": "21582:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "21566:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 822,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21589:43:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	},
																	"value": "SafeERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																		"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
																	}
																],
																"id": 818,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "21558:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 823,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21558:75:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 824,
														"nodeType": "ExpressionStatement",
														"src": "21558:75:0"
													},
													{
														"assignments": [
															826
														],
														"declarations": [
															{
																"constant": false,
																"id": 826,
																"mutability": "mutable",
																"name": "newAllowance",
																"nameLocation": "21655:12:0",
																"nodeType": "VariableDeclaration",
																"scope": 843,
																"src": "21647:20:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 825,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "21647:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 830,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 829,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 827,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 808,
																"src": "21670:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 828,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 804,
																"src": "21685:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21670:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "21647:43:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 832,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 800,
																	"src": "21724:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$203",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"arguments": [
																		{
																			"expression": {
																				"expression": {
																					"id": 835,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 800,
																					"src": "21754:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$203",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 836,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 172,
																				"src": "21754:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			"id": 837,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "21754:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		{
																			"id": 838,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 802,
																			"src": "21778:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 839,
																			"name": "newAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 826,
																			"src": "21787:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 833,
																			"name": "abi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967295,
																			"src": "21731:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_abi",
																				"typeString": "abi"
																			}
																		},
																		"id": 834,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "encodeWithSelector",
																		"nodeType": "MemberAccess",
																		"src": "21731:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																			"typeString": "function (bytes4) pure returns (bytes memory)"
																		}
																	},
																	"id": 840,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "21731:69:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$203",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 831,
																"name": "_callOptionalReturn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 883,
																"src": "21704:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$203_$_t_bytes_memory_ptr_$returns$__$",
																	"typeString": "function (contract IERC20,bytes memory)"
																}
															},
															"id": 841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21704:97:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 842,
														"nodeType": "ExpressionStatement",
														"src": "21704:97:0"
													}
												]
											}
										]
									},
									"id": 845,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "21341:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "21379:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "21372:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$203",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 799,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 798,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 203,
														"src": "21372:6:0"
													},
													"referencedDeclaration": 203,
													"src": "21372:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$203",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "21402:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "21394:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21394:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21427:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "21419:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21419:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21362:76:0"
									},
									"returnParameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21448:0:0"
									},
									"scope": 884,
									"src": "21332:486:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 882,
										"nodeType": "Block",
										"src": "22271:636:0",
										"statements": [
											{
												"assignments": [
													855
												],
												"declarations": [
													{
														"constant": false,
														"id": 855,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "22633:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 882,
														"src": "22620:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 854,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "22620:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 864,
												"initialValue": {
													"arguments": [
														{
															"id": 861,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "22674:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 862,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22680:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 858,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 849,
																	"src": "22654:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$203",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$203",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 857,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "22646:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 856,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "22646:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22646:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 860,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 457,
														"src": "22646:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22646:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22620:95:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 865,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 855,
															"src": "22729:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 866,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "22729:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 867,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "22749:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "22729:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 881,
												"nodeType": "IfStatement",
												"src": "22725:176:0",
												"trueBody": {
													"id": 880,
													"nodeType": "Block",
													"src": "22752:149:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 872,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 855,
																				"src": "22824:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 874,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "22837:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 873,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "22837:4:0",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 875,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "22836:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 870,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "22813:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 871,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "22813:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 876,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "22813:30:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 877,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22845:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 869,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "22805:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22805:85:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 879,
															"nodeType": "ExpressionStatement",
															"src": "22805:85:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 846,
										"nodeType": "StructuredDocumentation",
										"src": "21824:372:0",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 883,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "22210:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "22237:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "22230:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$203",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 848,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 847,
														"name": "IERC20",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 203,
														"src": "22230:6:0"
													},
													"referencedDeclaration": 203,
													"src": "22230:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$203",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "22257:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 883,
												"src": "22244:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 850,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "22244:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22229:33:0"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22271:0:0"
									},
									"scope": 884,
									"src": "22201:706:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 3776,
							"src": "19639:3270:0",
							"usedErrors": []
						},
						{
							"id": 885,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "23037:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 886,
								"nodeType": "StructuredDocumentation",
								"src": "23215:196:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 1195,
							"linearizedBaseContracts": [
								1195
							],
							"name": "SafeMath",
							"nameLocation": "23420:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 917,
										"nodeType": "Block",
										"src": "23647:140:0",
										"statements": [
											{
												"id": 916,
												"nodeType": "UncheckedBlock",
												"src": "23657:124:0",
												"statements": [
													{
														"assignments": [
															899
														],
														"declarations": [
															{
																"constant": false,
																"id": 899,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "23689:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 916,
																"src": "23681:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 898,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "23681:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 903,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 900,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 889,
																"src": "23693:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 901,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 891,
																"src": "23697:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23693:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "23681:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 904,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 899,
																"src": "23716:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 905,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 889,
																"src": "23720:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23716:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 911,
														"nodeType": "IfStatement",
														"src": "23712:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 907,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23731:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 908,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23738:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 909,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "23730:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 897,
															"id": 910,
															"nodeType": "Return",
															"src": "23723:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 912,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23762:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 913,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 899,
																	"src": "23768:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 914,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "23761:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 897,
														"id": 915,
														"nodeType": "Return",
														"src": "23754:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 887,
										"nodeType": "StructuredDocumentation",
										"src": "23435:131:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "23580:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "23595:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "23587:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23587:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "23606:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "23598:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23598:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23586:22:0"
									},
									"returnParameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "23632:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 893,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "23632:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "23638:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 895,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23638:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23631:15:0"
									},
									"scope": 1195,
									"src": "23571:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 945,
										"nodeType": "Block",
										"src": "24009:113:0",
										"statements": [
											{
												"id": 944,
												"nodeType": "UncheckedBlock",
												"src": "24019:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 930,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 923,
																"src": "24047:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 931,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 921,
																"src": "24051:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24047:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 937,
														"nodeType": "IfStatement",
														"src": "24043:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 933,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24062:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 934,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24069:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 935,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "24061:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 929,
															"id": 936,
															"nodeType": "Return",
															"src": "24054:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24093:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 941,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 939,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 921,
																		"src": "24099:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 940,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 923,
																		"src": "24103:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "24099:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 942,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "24092:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 929,
														"id": 943,
														"nodeType": "Return",
														"src": "24085:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 919,
										"nodeType": "StructuredDocumentation",
										"src": "23793:135:0",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 946,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "23942:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "23957:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "23949:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 920,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23949:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "23968:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "23960:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23960:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23948:22:0"
									},
									"returnParameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "23994:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 925,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "23994:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "24000:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24000:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23993:15:0"
									},
									"scope": 1195,
									"src": "23933:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 987,
										"nodeType": "Block",
										"src": "24346:417:0",
										"statements": [
											{
												"id": 986,
												"nodeType": "UncheckedBlock",
												"src": "24356:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 960,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 958,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 949,
																"src": "24614:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 959,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24619:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "24614:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 965,
														"nodeType": "IfStatement",
														"src": "24610:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 961,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24630:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 962,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24636:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 963,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "24629:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 957,
															"id": 964,
															"nodeType": "Return",
															"src": "24622:16:0"
														}
													},
													{
														"assignments": [
															967
														],
														"declarations": [
															{
																"constant": false,
																"id": 967,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "24660:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 986,
																"src": "24652:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 966,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "24652:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 971,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 970,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 968,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 949,
																"src": "24664:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 969,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 951,
																"src": "24668:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24664:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "24652:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 976,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 974,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 972,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 967,
																	"src": "24687:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 973,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 949,
																	"src": "24691:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24687:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 975,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 951,
																"src": "24696:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "24687:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 981,
														"nodeType": "IfStatement",
														"src": "24683:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 977,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24707:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 978,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24714:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 979,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "24706:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 957,
															"id": 980,
															"nodeType": "Return",
															"src": "24699:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 982,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24738:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 983,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 967,
																	"src": "24744:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 984,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "24737:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 957,
														"id": 985,
														"nodeType": "Return",
														"src": "24730:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 947,
										"nodeType": "StructuredDocumentation",
										"src": "24128:137:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 988,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "24279:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "24294:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "24286:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 948,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24286:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "24305:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "24297:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24297:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24285:22:0"
									},
									"returnParameters": {
										"id": 957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "24331:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 953,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "24331:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 956,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "24337:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 955,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24337:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24330:15:0"
									},
									"scope": 1195,
									"src": "24270:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1015,
										"nodeType": "Block",
										"src": "24988:114:0",
										"statements": [
											{
												"id": 1014,
												"nodeType": "UncheckedBlock",
												"src": "24998:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1002,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1000,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 993,
																"src": "25026:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1001,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25031:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "25026:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1007,
														"nodeType": "IfStatement",
														"src": "25022:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1003,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "25042:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1004,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "25049:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1005,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "25041:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 999,
															"id": 1006,
															"nodeType": "Return",
															"src": "25034:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1008,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25073:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1011,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1009,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 991,
																		"src": "25079:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1010,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 993,
																		"src": "25083:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "25079:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1012,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "25072:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 999,
														"id": 1013,
														"nodeType": "Return",
														"src": "25065:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 989,
										"nodeType": "StructuredDocumentation",
										"src": "24769:138:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1016,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "24921:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "24936:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "24928:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 990,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24928:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "24947:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "24939:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 992,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24939:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24927:22:0"
									},
									"returnParameters": {
										"id": 999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "24973:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 995,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "24973:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1016,
												"src": "24979:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 997,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24979:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24972:15:0"
									},
									"scope": 1195,
									"src": "24912:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1043,
										"nodeType": "Block",
										"src": "25337:114:0",
										"statements": [
											{
												"id": 1042,
												"nodeType": "UncheckedBlock",
												"src": "25347:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1030,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1028,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1021,
																"src": "25375:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "25380:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "25375:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1035,
														"nodeType": "IfStatement",
														"src": "25371:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1031,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "25391:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1032,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "25398:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1033,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "25390:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1027,
															"id": 1034,
															"nodeType": "Return",
															"src": "25383:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25422:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1039,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1037,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1019,
																		"src": "25428:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1038,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1021,
																		"src": "25432:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "25428:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1040,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "25421:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1027,
														"id": 1041,
														"nodeType": "Return",
														"src": "25414:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1017,
										"nodeType": "StructuredDocumentation",
										"src": "25108:148:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 1044,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "25270:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1019,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "25285:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "25277:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1018,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25277:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "25296:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "25288:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25288:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25276:22:0"
									},
									"returnParameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "25322:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1023,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "25322:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "25328:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1025,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25328:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25321:15:0"
									},
									"scope": 1195,
									"src": "25261:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1058,
										"nodeType": "Block",
										"src": "25753:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1054,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1047,
														"src": "25770:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1055,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1049,
														"src": "25774:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25770:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1053,
												"id": 1057,
												"nodeType": "Return",
												"src": "25763:12:0"
											}
										]
									},
									"documentation": {
										"id": 1045,
										"nodeType": "StructuredDocumentation",
										"src": "25457:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1059,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "25695:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "25707:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "25699:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1046,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25699:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "25718:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "25710:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25710:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25698:22:0"
									},
									"returnParameters": {
										"id": 1053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "25744:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25744:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25743:9:0"
									},
									"scope": 1195,
									"src": "25686:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1073,
										"nodeType": "Block",
										"src": "26120:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1069,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1062,
														"src": "26137:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1070,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1064,
														"src": "26141:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26137:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1068,
												"id": 1072,
												"nodeType": "Return",
												"src": "26130:12:0"
											}
										]
									},
									"documentation": {
										"id": 1060,
										"nodeType": "StructuredDocumentation",
										"src": "25788:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1074,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "26062:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "26074:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "26066:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1061,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26066:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "26085:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "26077:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26077:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26065:22:0"
									},
									"returnParameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "26111:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26111:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26110:9:0"
									},
									"scope": 1195,
									"src": "26053:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1088,
										"nodeType": "Block",
										"src": "26463:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1084,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1077,
														"src": "26480:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1085,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1079,
														"src": "26484:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26480:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1083,
												"id": 1087,
												"nodeType": "Return",
												"src": "26473:12:0"
											}
										]
									},
									"documentation": {
										"id": 1075,
										"nodeType": "StructuredDocumentation",
										"src": "26155:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1089,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "26405:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "26417:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "26409:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1076,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26409:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "26428:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "26420:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1078,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26420:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26408:22:0"
									},
									"returnParameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "26454:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1081,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26454:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26453:9:0"
									},
									"scope": 1195,
									"src": "26396:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1103,
										"nodeType": "Block",
										"src": "26848:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1101,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1099,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1092,
														"src": "26865:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1100,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1094,
														"src": "26869:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "26865:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1098,
												"id": 1102,
												"nodeType": "Return",
												"src": "26858:12:0"
											}
										]
									},
									"documentation": {
										"id": 1090,
										"nodeType": "StructuredDocumentation",
										"src": "26498:278:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "26790:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "26802:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "26794:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1091,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26794:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "26813:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "26805:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1093,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26805:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26793:22:0"
									},
									"returnParameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "26839:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1096,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26839:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26838:9:0"
									},
									"scope": 1195,
									"src": "26781:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1118,
										"nodeType": "Block",
										"src": "27397:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1116,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1114,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1107,
														"src": "27414:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 1115,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1109,
														"src": "27418:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27414:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1113,
												"id": 1117,
												"nodeType": "Return",
												"src": "27407:12:0"
											}
										]
									},
									"documentation": {
										"id": 1105,
										"nodeType": "StructuredDocumentation",
										"src": "26883:442:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1119,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "27339:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "27351:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "27343:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27343:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "27362:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "27354:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1108,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27354:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27342:22:0"
									},
									"returnParameters": {
										"id": 1113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1112,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1119,
												"src": "27388:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27388:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27387:9:0"
									},
									"scope": 1195,
									"src": "27330:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1143,
										"nodeType": "Block",
										"src": "28015:106:0",
										"statements": [
											{
												"id": 1142,
												"nodeType": "UncheckedBlock",
												"src": "28025:90:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1134,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1132,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1124,
																		"src": "28057:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 1133,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1122,
																		"src": "28062:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "28057:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1135,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1126,
																	"src": "28065:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1131,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "28049:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1136,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28049:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1137,
														"nodeType": "ExpressionStatement",
														"src": "28049:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1138,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1122,
																"src": "28099:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 1139,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1124,
																"src": "28103:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "28099:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1130,
														"id": 1141,
														"nodeType": "Return",
														"src": "28092:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1120,
										"nodeType": "StructuredDocumentation",
										"src": "27432:453:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1144,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "27899:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "27920:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "27912:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27912:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "27939:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "27931:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27931:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1126,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "27964:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "27950:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1125,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "27950:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27902:80:0"
									},
									"returnParameters": {
										"id": 1130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "28006:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28006:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28005:9:0"
									},
									"scope": 1195,
									"src": "27890:231:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1168,
										"nodeType": "Block",
										"src": "28730:105:0",
										"statements": [
											{
												"id": 1167,
												"nodeType": "UncheckedBlock",
												"src": "28740:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1157,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1149,
																		"src": "28772:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28776:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "28772:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1160,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1151,
																	"src": "28779:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1156,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "28764:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28764:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1162,
														"nodeType": "ExpressionStatement",
														"src": "28764:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1163,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1147,
																"src": "28813:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1164,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1149,
																"src": "28817:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "28813:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1155,
														"id": 1166,
														"nodeType": "Return",
														"src": "28806:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1145,
										"nodeType": "StructuredDocumentation",
										"src": "28127:473:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1169,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "28614:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "28635:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "28627:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28627:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "28654:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "28646:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28646:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "28679:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "28665:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1150,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "28665:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28617:80:0"
									},
									"returnParameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "28721:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28720:9:0"
									},
									"scope": 1195,
									"src": "28605:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1193,
										"nodeType": "Block",
										"src": "29606:105:0",
										"statements": [
											{
												"id": 1192,
												"nodeType": "UncheckedBlock",
												"src": "29616:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1182,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1174,
																		"src": "29648:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1183,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29652:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "29648:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 1185,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1176,
																	"src": "29655:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1181,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "29640:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 1186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29640:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1187,
														"nodeType": "ExpressionStatement",
														"src": "29640:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1190,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1188,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1172,
																"src": "29689:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1189,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1174,
																"src": "29693:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29689:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1180,
														"id": 1191,
														"nodeType": "Return",
														"src": "29682:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1170,
										"nodeType": "StructuredDocumentation",
										"src": "28841:635:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "29490:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "29511:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "29503:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29503:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "29530:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "29522:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29522:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "29555:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "29541:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "29541:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29493:80:0"
									},
									"returnParameters": {
										"id": 1180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1194,
												"src": "29597:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29597:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29596:9:0"
									},
									"scope": 1195,
									"src": "29481:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3776,
							"src": "23412:6301:0",
							"usedErrors": []
						},
						{
							"id": 1196,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "29857:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "EnumerableSet",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1197,
								"nodeType": "StructuredDocumentation",
								"src": "29882:686:0",
								"text": " @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported."
							},
							"fullyImplemented": true,
							"id": 1793,
							"linearizedBaseContracts": [
								1793
							],
							"name": "EnumerableSet",
							"nameLocation": "30577:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "EnumerableSet.Set",
									"id": 1205,
									"members": [
										{
											"constant": false,
											"id": 1200,
											"mutability": "mutable",
											"name": "_values",
											"nameLocation": "31101:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 1205,
											"src": "31091:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
												"typeString": "bytes32[]"
											},
											"typeName": {
												"baseType": {
													"id": 1198,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "31091:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 1199,
												"nodeType": "ArrayTypeName",
												"src": "31091:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1204,
											"mutability": "mutable",
											"name": "_indexes",
											"nameLocation": "31269:8:0",
											"nodeType": "VariableDeclaration",
											"scope": 1205,
											"src": "31241:36:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
												"typeString": "mapping(bytes32 => uint256)"
											},
											"typeName": {
												"id": 1203,
												"keyType": {
													"id": 1201,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "31249:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "31241:27:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
													"typeString": "mapping(bytes32 => uint256)"
												},
												"valueType": {
													"id": 1202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31260:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Set",
									"nameLocation": "31044:3:0",
									"nodeType": "StructDefinition",
									"scope": 1793,
									"src": "31037:247:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1246,
										"nodeType": "Block",
										"src": "31523:335:0",
										"statements": [
											{
												"condition": {
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "31537:22:0",
													"subExpression": {
														"arguments": [
															{
																"id": 1217,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1209,
																"src": "31548:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$1205_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															{
																"id": 1218,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1211,
																"src": "31553:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_Set_$1205_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 1216,
															"name": "_contains",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1350,
															"src": "31538:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1205_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
																"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
															}
														},
														"id": 1219,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31538:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1244,
													"nodeType": "Block",
													"src": "31815:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1242,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "31836:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1215,
															"id": 1243,
															"nodeType": "Return",
															"src": "31829:12:0"
														}
													]
												},
												"id": 1245,
												"nodeType": "IfStatement",
												"src": "31533:319:0",
												"trueBody": {
													"id": 1241,
													"nodeType": "Block",
													"src": "31561:248:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1226,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1211,
																		"src": "31592:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1221,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1209,
																			"src": "31575:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1205_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1224,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1200,
																		"src": "31575:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1225,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "31575:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer,bytes32)"
																	}
																},
																"id": 1227,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31575:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1228,
															"nodeType": "ExpressionStatement",
															"src": "31575:23:0"
														},
														{
															"expression": {
																"id": 1237,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"id": 1229,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1209,
																			"src": "31733:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1205_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1232,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1204,
																		"src": "31733:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 1233,
																	"indexExpression": {
																		"id": 1231,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1211,
																		"src": "31746:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "31733:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"expression": {
																			"id": 1234,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1209,
																			"src": "31755:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1205_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1235,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1200,
																		"src": "31755:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1236,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "31755:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "31733:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1238,
															"nodeType": "ExpressionStatement",
															"src": "31733:40:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1239,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "31794:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1215,
															"id": 1240,
															"nodeType": "Return",
															"src": "31787:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1206,
										"nodeType": "StructuredDocumentation",
										"src": "31290:159:0",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1247,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_add",
									"nameLocation": "31463:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "31480:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "31468:15:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1205_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1208,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1207,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1205,
														"src": "31468:3:0"
													},
													"referencedDeclaration": 1205,
													"src": "31468:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1205_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "31493:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "31485:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1210,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "31485:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31467:32:0"
									},
									"returnParameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1247,
												"src": "31517:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "31517:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31516:6:0"
									},
									"scope": 1793,
									"src": "31454:404:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1330,
										"nodeType": "Block",
										"src": "32098:1316:0",
										"statements": [
											{
												"assignments": [
													1259
												],
												"declarations": [
													{
														"constant": false,
														"id": 1259,
														"mutability": "mutable",
														"name": "valueIndex",
														"nameLocation": "32216:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 1330,
														"src": "32208:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1258,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "32208:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1264,
												"initialValue": {
													"baseExpression": {
														"expression": {
															"id": 1260,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1251,
															"src": "32229:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1205_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 1261,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_indexes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1204,
														"src": "32229:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 1263,
													"indexExpression": {
														"id": 1262,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1253,
														"src": "32242:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "32229:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32208:40:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1265,
														"name": "valueIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1259,
														"src": "32263:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1266,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "32277:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "32263:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1328,
													"nodeType": "Block",
													"src": "33371:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 1326,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33392:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 1257,
															"id": 1327,
															"nodeType": "Return",
															"src": "33385:12:0"
														}
													]
												},
												"id": 1329,
												"nodeType": "IfStatement",
												"src": "32259:1149:0",
												"trueBody": {
													"id": 1325,
													"nodeType": "Block",
													"src": "32280:1085:0",
													"statements": [
														{
															"assignments": [
																1269
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1269,
																	"mutability": "mutable",
																	"name": "toDeleteIndex",
																	"nameLocation": "32640:13:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1325,
																	"src": "32632:21:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1268,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "32632:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1273,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1272,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1270,
																	"name": "valueIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1259,
																	"src": "32656:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32669:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "32656:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "32632:38:0"
														},
														{
															"assignments": [
																1275
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1275,
																	"mutability": "mutable",
																	"name": "lastIndex",
																	"nameLocation": "32692:9:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1325,
																	"src": "32684:17:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1274,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "32684:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1281,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"expression": {
																			"id": 1276,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1251,
																			"src": "32704:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1205_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1277,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1200,
																		"src": "32704:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "32704:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "32725:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "32704:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "32684:42:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1282,
																	"name": "lastIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1275,
																	"src": "32745:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"id": 1283,
																	"name": "toDeleteIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1269,
																	"src": "32758:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "32745:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1309,
															"nodeType": "IfStatement",
															"src": "32741:398:0",
															"trueBody": {
																"id": 1308,
																"nodeType": "Block",
																"src": "32773:366:0",
																"statements": [
																	{
																		"assignments": [
																			1286
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1286,
																				"mutability": "mutable",
																				"name": "lastvalue",
																				"nameLocation": "32799:9:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1308,
																				"src": "32791:17:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				},
																				"typeName": {
																					"id": 1285,
																					"name": "bytes32",
																					"nodeType": "ElementaryTypeName",
																					"src": "32791:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1291,
																		"initialValue": {
																			"baseExpression": {
																				"expression": {
																					"id": 1287,
																					"name": "set",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1251,
																					"src": "32811:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$1205_storage_ptr",
																						"typeString": "struct EnumerableSet.Set storage pointer"
																					}
																				},
																				"id": 1288,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "_values",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1200,
																				"src": "32811:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																					"typeString": "bytes32[] storage ref"
																				}
																			},
																			"id": 1290,
																			"indexExpression": {
																				"id": 1289,
																				"name": "lastIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1275,
																				"src": "32823:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "32811:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "32791:42:0"
																	},
																	{
																		"expression": {
																			"id": 1298,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 1292,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1251,
																						"src": "32933:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$1205_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 1295,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "_values",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1200,
																					"src": "32933:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																						"typeString": "bytes32[] storage ref"
																					}
																				},
																				"id": 1296,
																				"indexExpression": {
																					"id": 1294,
																					"name": "toDeleteIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1269,
																					"src": "32945:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "32933:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1297,
																				"name": "lastvalue",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1286,
																				"src": "32962:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"src": "32933:38:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"id": 1299,
																		"nodeType": "ExpressionStatement",
																		"src": "32933:38:0"
																	},
																	{
																		"expression": {
																			"id": 1306,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"expression": {
																						"id": 1300,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1251,
																						"src": "33045:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Set_$1205_storage_ptr",
																							"typeString": "struct EnumerableSet.Set storage pointer"
																						}
																					},
																					"id": 1303,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "_indexes",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1204,
																					"src": "33045:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																						"typeString": "mapping(bytes32 => uint256)"
																					}
																				},
																				"id": 1304,
																				"indexExpression": {
																					"id": 1302,
																					"name": "lastvalue",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1286,
																					"src": "33058:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "33045:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1305,
																				"name": "valueIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1259,
																				"src": "33071:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "33045:36:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1307,
																		"nodeType": "ExpressionStatement",
																		"src": "33045:36:0"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"expression": {
																			"id": 1310,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1251,
																			"src": "33217:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1205_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1313,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1200,
																		"src": "33217:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"src": "33217:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$",
																		"typeString": "function (bytes32[] storage pointer)"
																	}
																},
																"id": 1315,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33217:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1316,
															"nodeType": "ExpressionStatement",
															"src": "33217:17:0"
														},
														{
															"expression": {
																"id": 1321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "33302:26:0",
																"subExpression": {
																	"baseExpression": {
																		"expression": {
																			"id": 1317,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1251,
																			"src": "33309:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$1205_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1318,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1204,
																		"src": "33309:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 1320,
																	"indexExpression": {
																		"id": 1319,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1253,
																		"src": "33322:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "33309:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1322,
															"nodeType": "ExpressionStatement",
															"src": "33302:26:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 1323,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "33350:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 1257,
															"id": 1324,
															"nodeType": "Return",
															"src": "33343:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1248,
										"nodeType": "StructuredDocumentation",
										"src": "31864:157:0",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_remove",
									"nameLocation": "32035:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "32055:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "32043:15:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1205_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1250,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1249,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1205,
														"src": "32043:3:0"
													},
													"referencedDeclaration": 1205,
													"src": "32043:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1205_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "32068:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "32060:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1252,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "32060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32042:32:0"
									},
									"returnParameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "32092:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1255,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "32092:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32091:6:0"
									},
									"scope": 1793,
									"src": "32026:1388:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1349,
										"nodeType": "Block",
										"src": "33574:48:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"expression": {
																"id": 1342,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1335,
																"src": "33591:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$1205_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															"id": 1343,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_indexes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1204,
															"src": "33591:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 1345,
														"indexExpression": {
															"id": 1344,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1337,
															"src": "33604:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "33591:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1346,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "33614:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "33591:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1341,
												"id": 1348,
												"nodeType": "Return",
												"src": "33584:31:0"
											}
										]
									},
									"documentation": {
										"id": 1332,
										"nodeType": "StructuredDocumentation",
										"src": "33420:70:0",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1350,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contains",
									"nameLocation": "33504:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "33526:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "33514:15:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1205_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1334,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1333,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1205,
														"src": "33514:3:0"
													},
													"referencedDeclaration": 1205,
													"src": "33514:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1205_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "33539:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "33531:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1336,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "33531:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33513:32:0"
									},
									"returnParameters": {
										"id": 1341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1340,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "33568:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1339,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "33568:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33567:6:0"
									},
									"scope": 1793,
									"src": "33495:127:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1363,
										"nodeType": "Block",
										"src": "33768:42:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 1359,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1354,
															"src": "33785:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1205_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 1360,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1200,
														"src": "33785:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 1361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "33785:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1358,
												"id": 1362,
												"nodeType": "Return",
												"src": "33778:25:0"
											}
										]
									},
									"documentation": {
										"id": 1351,
										"nodeType": "StructuredDocumentation",
										"src": "33628:70:0",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 1364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_length",
									"nameLocation": "33712:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "33732:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "33720:15:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1205_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1353,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1352,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1205,
														"src": "33720:3:0"
													},
													"referencedDeclaration": 1205,
													"src": "33720:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1205_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33719:17:0"
									},
									"returnParameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1364,
												"src": "33759:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1356,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33759:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33758:9:0"
									},
									"scope": 1793,
									"src": "33703:107:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1380,
										"nodeType": "Block",
										"src": "34228:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 1375,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1368,
															"src": "34245:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1205_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 1376,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1200,
														"src": "34245:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 1378,
													"indexExpression": {
														"id": 1377,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1370,
														"src": "34257:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "34245:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1374,
												"id": 1379,
												"nodeType": "Return",
												"src": "34238:25:0"
											}
										]
									},
									"documentation": {
										"id": 1365,
										"nodeType": "StructuredDocumentation",
										"src": "33816:331:0",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_at",
									"nameLocation": "34161:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "34177:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "34165:15:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1205_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1367,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1366,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1205,
														"src": "34165:3:0"
													},
													"referencedDeclaration": 1205,
													"src": "34165:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1205_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1370,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "34190:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "34182:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1369,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34182:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34164:32:0"
									},
									"returnParameters": {
										"id": 1374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1373,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1381,
												"src": "34219:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1372,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "34219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34218:9:0"
									},
									"scope": 1793,
									"src": "34152:118:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1394,
										"nodeType": "Block",
										"src": "34884:35:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1391,
														"name": "set",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1385,
														"src": "34901:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Set_$1205_storage_ptr",
															"typeString": "struct EnumerableSet.Set storage pointer"
														}
													},
													"id": 1392,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "_values",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1200,
													"src": "34901:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
														"typeString": "bytes32[] storage ref"
													}
												},
												"functionReturnParameters": 1390,
												"id": 1393,
												"nodeType": "Return",
												"src": "34894:18:0"
											}
										]
									},
									"documentation": {
										"id": 1382,
										"nodeType": "StructuredDocumentation",
										"src": "34276:529:0",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 1395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_values",
									"nameLocation": "34819:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "34839:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "34827:15:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1205_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"id": 1384,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1383,
														"name": "Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1205,
														"src": "34827:3:0"
													},
													"referencedDeclaration": 1205,
													"src": "34827:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$1205_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34826:17:0"
									},
									"returnParameters": {
										"id": 1390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1395,
												"src": "34866:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1387,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "34866:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1388,
													"nodeType": "ArrayTypeName",
													"src": "34866:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34865:18:0"
									},
									"scope": 1793,
									"src": "34810:109:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"canonicalName": "EnumerableSet.Bytes32Set",
									"id": 1399,
									"members": [
										{
											"constant": false,
											"id": 1398,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "34976:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 1399,
											"src": "34972:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$1205_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 1397,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1396,
													"name": "Set",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1205,
													"src": "34972:3:0"
												},
												"referencedDeclaration": 1205,
												"src": "34972:3:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1205_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Set",
									"nameLocation": "34951:10:0",
									"nodeType": "StructDefinition",
									"scope": 1793,
									"src": "34944:45:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1416,
										"nodeType": "Block",
										"src": "35235:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1411,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1403,
																"src": "35257:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1399_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1412,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1398,
															"src": "35257:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1205_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1413,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1405,
															"src": "35269:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1205_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1410,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1247,
														"src": "35252:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1205_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35252:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1409,
												"id": 1415,
												"nodeType": "Return",
												"src": "35245:30:0"
											}
										]
									},
									"documentation": {
										"id": 1400,
										"nodeType": "StructuredDocumentation",
										"src": "34995:159:0",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1417,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "35168:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "35191:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "35172:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1399_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1402,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1401,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1399,
														"src": "35172:10:0"
													},
													"referencedDeclaration": 1399,
													"src": "35172:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1399_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "35204:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "35196:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1404,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "35196:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35171:39:0"
									},
									"returnParameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1417,
												"src": "35229:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1407,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "35229:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35228:6:0"
									},
									"scope": 1793,
									"src": "35159:123:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1434,
										"nodeType": "Block",
										"src": "35529:50:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1429,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1421,
																"src": "35554:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1399_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1430,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1398,
															"src": "35554:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1205_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1431,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1423,
															"src": "35566:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1205_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1428,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1331,
														"src": "35546:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1205_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35546:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1427,
												"id": 1433,
												"nodeType": "Return",
												"src": "35539:33:0"
											}
										]
									},
									"documentation": {
										"id": 1418,
										"nodeType": "StructuredDocumentation",
										"src": "35288:157:0",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1435,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "35459:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "35485:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1435,
												"src": "35466:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1399_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1420,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1419,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1399,
														"src": "35466:10:0"
													},
													"referencedDeclaration": 1399,
													"src": "35466:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1399_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "35498:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1435,
												"src": "35490:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1422,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "35490:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35465:39:0"
									},
									"returnParameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1435,
												"src": "35523:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1425,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "35523:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35522:6:0"
									},
									"scope": 1793,
									"src": "35450:129:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1452,
										"nodeType": "Block",
										"src": "35746:52:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1447,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1439,
																"src": "35773:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1399_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1448,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1398,
															"src": "35773:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1205_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1449,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1441,
															"src": "35785:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1205_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1446,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1350,
														"src": "35763:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1205_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35763:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1445,
												"id": 1451,
												"nodeType": "Return",
												"src": "35756:35:0"
											}
										]
									},
									"documentation": {
										"id": 1436,
										"nodeType": "StructuredDocumentation",
										"src": "35585:70:0",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1453,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "35669:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "35697:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "35678:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1399_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1438,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1437,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1399,
														"src": "35678:10:0"
													},
													"referencedDeclaration": 1399,
													"src": "35678:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1399_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "35710:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "35702:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1440,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "35702:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35677:39:0"
									},
									"returnParameters": {
										"id": 1445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "35740:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1443,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "35740:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35739:6:0"
									},
									"scope": 1793,
									"src": "35660:138:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1467,
										"nodeType": "Block",
										"src": "35951:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1463,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1457,
																"src": "35976:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1399_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1464,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1398,
															"src": "35976:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1205_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1205_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1462,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1364,
														"src": "35968:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1205_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 1465,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35968:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1461,
												"id": 1466,
												"nodeType": "Return",
												"src": "35961:26:0"
											}
										]
									},
									"documentation": {
										"id": 1454,
										"nodeType": "StructuredDocumentation",
										"src": "35804:70:0",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 1468,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "35888:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "35914:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "35895:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1399_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1456,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1455,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1399,
														"src": "35895:10:0"
													},
													"referencedDeclaration": 1399,
													"src": "35895:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1399_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35894:24:0"
									},
									"returnParameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "35942:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35942:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35941:9:0"
									},
									"scope": 1793,
									"src": "35879:115:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1485,
										"nodeType": "Block",
										"src": "36419:46:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1480,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1472,
																"src": "36440:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1399_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1481,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1398,
															"src": "36440:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1205_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"id": 1482,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1474,
															"src": "36452:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1205_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1479,
														"name": "_at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1381,
														"src": "36436:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1205_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
														}
													},
													"id": 1483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36436:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1478,
												"id": 1484,
												"nodeType": "Return",
												"src": "36429:29:0"
											}
										]
									},
									"documentation": {
										"id": 1469,
										"nodeType": "StructuredDocumentation",
										"src": "36000:331:0",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1486,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "36345:2:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "36367:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "36348:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1399_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1471,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1470,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1399,
														"src": "36348:10:0"
													},
													"referencedDeclaration": 1399,
													"src": "36348:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1399_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "36380:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "36372:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36372:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36347:39:0"
									},
									"returnParameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1486,
												"src": "36410:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1476,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "36410:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36409:9:0"
									},
									"scope": 1793,
									"src": "36336:129:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1501,
										"nodeType": "Block",
										"src": "37086:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1497,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1490,
																"src": "37111:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1399_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1498,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1398,
															"src": "37111:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1205_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1205_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1496,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1395,
														"src": "37103:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1205_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 1499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37103:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"functionReturnParameters": 1495,
												"id": 1500,
												"nodeType": "Return",
												"src": "37096:26:0"
											}
										]
									},
									"documentation": {
										"id": 1487,
										"nodeType": "StructuredDocumentation",
										"src": "36471:529:0",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 1502,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "37014:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "37040:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "37021:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1399_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"id": 1489,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1488,
														"name": "Bytes32Set",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1399,
														"src": "37021:10:0"
													},
													"referencedDeclaration": 1399,
													"src": "37021:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1399_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37020:24:0"
									},
									"returnParameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1502,
												"src": "37068:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1492,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "37068:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1493,
													"nodeType": "ArrayTypeName",
													"src": "37068:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37067:18:0"
									},
									"scope": 1793,
									"src": "37005:124:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.AddressSet",
									"id": 1506,
									"members": [
										{
											"constant": false,
											"id": 1505,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "37186:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 1506,
											"src": "37182:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$1205_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 1504,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1503,
													"name": "Set",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1205,
													"src": "37182:3:0"
												},
												"referencedDeclaration": 1205,
												"src": "37182:3:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1205_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSet",
									"nameLocation": "37161:10:0",
									"nodeType": "StructDefinition",
									"scope": 1793,
									"src": "37154:45:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1532,
										"nodeType": "Block",
										"src": "37445:74:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1518,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1510,
																"src": "37467:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1506_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1519,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1505,
															"src": "37467:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1205_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1526,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1512,
																					"src": "37503:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1525,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "37495:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 1524,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "37495:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1527,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "37495:14:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 1523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "37487:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1522,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "37487:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1528,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "37487:23:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1521,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "37479:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1520,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "37479:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1529,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37479:32:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1205_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1517,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1247,
														"src": "37462:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1205_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37462:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1516,
												"id": 1531,
												"nodeType": "Return",
												"src": "37455:57:0"
											}
										]
									},
									"documentation": {
										"id": 1507,
										"nodeType": "StructuredDocumentation",
										"src": "37205:159:0",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "37378:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1510,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "37401:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "37382:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1506_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1509,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1508,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1506,
														"src": "37382:10:0"
													},
													"referencedDeclaration": 1506,
													"src": "37382:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1506_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "37414:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "37406:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37406:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37381:39:0"
									},
									"returnParameters": {
										"id": 1516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1515,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "37439:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1514,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "37439:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37438:6:0"
									},
									"scope": 1793,
									"src": "37369:150:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1559,
										"nodeType": "Block",
										"src": "37766:77:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1545,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1537,
																"src": "37791:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1506_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1546,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1505,
															"src": "37791:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1205_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1553,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1539,
																					"src": "37827:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1552,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "37819:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 1551,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "37819:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1554,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "37819:14:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 1550,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "37811:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1549,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "37811:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1555,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "37811:23:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1548,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "37803:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1547,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "37803:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37803:32:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1205_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1544,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1331,
														"src": "37783:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1205_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1557,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37783:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1543,
												"id": 1558,
												"nodeType": "Return",
												"src": "37776:60:0"
											}
										]
									},
									"documentation": {
										"id": 1534,
										"nodeType": "StructuredDocumentation",
										"src": "37525:157:0",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1560,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "37696:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "37722:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1560,
												"src": "37703:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1506_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1536,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1535,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1506,
														"src": "37703:10:0"
													},
													"referencedDeclaration": 1506,
													"src": "37703:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1506_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "37735:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1560,
												"src": "37727:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37727:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37702:39:0"
									},
									"returnParameters": {
										"id": 1543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1560,
												"src": "37760:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1541,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "37760:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37759:6:0"
									},
									"scope": 1793,
									"src": "37687:156:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1586,
										"nodeType": "Block",
										"src": "38010:79:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1572,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1564,
																"src": "38037:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1506_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1573,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1505,
															"src": "38037:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1205_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1580,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1566,
																					"src": "38073:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1579,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "38065:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 1578,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "38065:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1581,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "38065:14:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		],
																		"id": 1577,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "38057:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1576,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "38057:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1582,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "38057:23:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1575,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "38049:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1574,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "38049:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "38049:32:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1205_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1571,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1350,
														"src": "38027:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1205_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38027:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1570,
												"id": 1585,
												"nodeType": "Return",
												"src": "38020:62:0"
											}
										]
									},
									"documentation": {
										"id": 1561,
										"nodeType": "StructuredDocumentation",
										"src": "37849:70:0",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "37933:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1564,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "37961:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "37942:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1506_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1563,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1562,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1506,
														"src": "37942:10:0"
													},
													"referencedDeclaration": 1506,
													"src": "37942:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1506_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "37974:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "37966:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37966:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37941:39:0"
									},
									"returnParameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1569,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "38004:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1568,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "38004:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38003:6:0"
									},
									"scope": 1793,
									"src": "37924:165:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1601,
										"nodeType": "Block",
										"src": "38242:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1597,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1591,
																"src": "38267:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1506_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1598,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1505,
															"src": "38267:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1205_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1205_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1596,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1364,
														"src": "38259:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1205_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 1599,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38259:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1595,
												"id": 1600,
												"nodeType": "Return",
												"src": "38252:26:0"
											}
										]
									},
									"documentation": {
										"id": 1588,
										"nodeType": "StructuredDocumentation",
										"src": "38095:70:0",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 1602,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "38179:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1591,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "38205:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "38186:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1506_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1590,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1589,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1506,
														"src": "38186:10:0"
													},
													"referencedDeclaration": 1506,
													"src": "38186:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1506_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38185:24:0"
									},
									"returnParameters": {
										"id": 1595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "38233:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38233:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38232:9:0"
									},
									"scope": 1793,
									"src": "38170:115:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1628,
										"nodeType": "Block",
										"src": "38710:73:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 1620,
																						"name": "set",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1606,
																						"src": "38755:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_AddressSet_$1506_storage_ptr",
																							"typeString": "struct EnumerableSet.AddressSet storage pointer"
																						}
																					},
																					"id": 1621,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "_inner",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1505,
																					"src": "38755:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Set_$1205_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					}
																				},
																				{
																					"id": 1622,
																					"name": "index",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1608,
																					"src": "38767:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_struct$_Set_$1205_storage",
																						"typeString": "struct EnumerableSet.Set storage ref"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1619,
																				"name": "_at",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1381,
																				"src": "38751:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1205_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																					"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																				}
																			},
																			"id": 1623,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "38751:22:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		],
																		"id": 1618,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "38743:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1617,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "38743:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "38743:31:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1616,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "38735:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 1615,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "38735:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "38735:40:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 1614,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "38727:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1613,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "38727:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 1626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "38727:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1612,
												"id": 1627,
												"nodeType": "Return",
												"src": "38720:56:0"
											}
										]
									},
									"documentation": {
										"id": 1603,
										"nodeType": "StructuredDocumentation",
										"src": "38291:331:0",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1629,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "38636:2:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1609,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1606,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "38658:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1629,
												"src": "38639:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1506_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1605,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1604,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1506,
														"src": "38639:10:0"
													},
													"referencedDeclaration": 1506,
													"src": "38639:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1506_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1608,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "38671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1629,
												"src": "38663:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38663:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38638:39:0"
									},
									"returnParameters": {
										"id": 1612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1629,
												"src": "38701:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1610,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38701:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38700:9:0"
									},
									"scope": 1793,
									"src": "38627:156:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1658,
										"nodeType": "Block",
										"src": "39404:176:0",
										"statements": [
											{
												"assignments": [
													1643
												],
												"declarations": [
													{
														"constant": false,
														"id": 1643,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "39431:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1658,
														"src": "39414:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 1641,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "39414:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1642,
															"nodeType": "ArrayTypeName",
															"src": "39414:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1648,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1645,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1633,
																"src": "39447:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1506_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1646,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1505,
															"src": "39447:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1205_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1205_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1644,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1395,
														"src": "39439:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1205_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 1647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39439:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "39414:44:0"
											},
											{
												"assignments": [
													1653
												],
												"declarations": [
													{
														"constant": false,
														"id": 1653,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "39485:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1658,
														"src": "39468:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 1651,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "39468:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1652,
															"nodeType": "ArrayTypeName",
															"src": "39468:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1654,
												"nodeType": "VariableDeclarationStatement",
												"src": "39468:23:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "39511:39:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "39525:15:0",
															"value": {
																"name": "store",
																"nodeType": "YulIdentifier",
																"src": "39535:5:0"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "39525:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1653,
														"isOffset": false,
														"isSlot": false,
														"src": "39525:6:0",
														"valueSize": 1
													},
													{
														"declaration": 1643,
														"isOffset": false,
														"isSlot": false,
														"src": "39535:5:0",
														"valueSize": 1
													}
												],
												"id": 1655,
												"nodeType": "InlineAssembly",
												"src": "39502:48:0"
											},
											{
												"expression": {
													"id": 1656,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1653,
													"src": "39567:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
														"typeString": "address[] memory"
													}
												},
												"functionReturnParameters": 1638,
												"id": 1657,
												"nodeType": "Return",
												"src": "39560:13:0"
											}
										]
									},
									"documentation": {
										"id": 1630,
										"nodeType": "StructuredDocumentation",
										"src": "38789:529:0",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 1659,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "39332:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1633,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "39358:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1659,
												"src": "39339:22:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1506_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"id": 1632,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1631,
														"name": "AddressSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1506,
														"src": "39339:10:0"
													},
													"referencedDeclaration": 1506,
													"src": "39339:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1506_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39338:24:0"
									},
									"returnParameters": {
										"id": 1638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1637,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1659,
												"src": "39386:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1635,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "39386:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1636,
													"nodeType": "ArrayTypeName",
													"src": "39386:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39385:18:0"
									},
									"scope": 1793,
									"src": "39323:257:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.UintSet",
									"id": 1663,
									"members": [
										{
											"constant": false,
											"id": 1662,
											"mutability": "mutable",
											"name": "_inner",
											"nameLocation": "39631:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 1663,
											"src": "39627:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$1205_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"id": 1661,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1660,
													"name": "Set",
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1205,
													"src": "39627:3:0"
												},
												"referencedDeclaration": 1205,
												"src": "39627:3:0",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$1205_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UintSet",
									"nameLocation": "39609:7:0",
									"nodeType": "StructDefinition",
									"scope": 1793,
									"src": "39602:42:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1683,
										"nodeType": "Block",
										"src": "39887:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1675,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1667,
																"src": "39909:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1663_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1676,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1662,
															"src": "39909:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1205_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 1679,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1669,
																	"src": "39929:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1678,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "39921:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1677,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "39921:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1680,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "39921:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1205_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1674,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1247,
														"src": "39904:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1205_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39904:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1673,
												"id": 1682,
												"nodeType": "Return",
												"src": "39897:39:0"
											}
										]
									},
									"documentation": {
										"id": 1664,
										"nodeType": "StructuredDocumentation",
										"src": "39650:159:0",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1684,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "39823:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1667,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "39843:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "39827:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1663_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1666,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1665,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1663,
														"src": "39827:7:0"
													},
													"referencedDeclaration": 1663,
													"src": "39827:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1663_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1669,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "39856:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "39848:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39848:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39826:36:0"
									},
									"returnParameters": {
										"id": 1673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1684,
												"src": "39881:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1671,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "39881:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39880:6:0"
									},
									"scope": 1793,
									"src": "39814:129:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1704,
										"nodeType": "Block",
										"src": "40187:59:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1696,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1688,
																"src": "40212:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1663_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1697,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1662,
															"src": "40212:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1205_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 1700,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1690,
																	"src": "40232:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1699,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "40224:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1698,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "40224:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "40224:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1205_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1695,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1331,
														"src": "40204:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$1205_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40204:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1694,
												"id": 1703,
												"nodeType": "Return",
												"src": "40197:42:0"
											}
										]
									},
									"documentation": {
										"id": 1685,
										"nodeType": "StructuredDocumentation",
										"src": "39949:157:0",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1705,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nameLocation": "40120:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "40143:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1705,
												"src": "40127:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1663_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1687,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1686,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1663,
														"src": "40127:7:0"
													},
													"referencedDeclaration": 1663,
													"src": "40127:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1663_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1690,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "40156:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1705,
												"src": "40148:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40148:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40126:36:0"
									},
									"returnParameters": {
										"id": 1694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1705,
												"src": "40181:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1692,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "40181:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40180:6:0"
									},
									"scope": 1793,
									"src": "40111:135:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1725,
										"nodeType": "Block",
										"src": "40410:61:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1717,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1709,
																"src": "40437:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1663_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1718,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1662,
															"src": "40437:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1205_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"arguments": [
																{
																	"id": 1721,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1711,
																	"src": "40457:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1720,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "40449:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1719,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "40449:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "40449:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1205_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1716,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1350,
														"src": "40427:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1205_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40427:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1715,
												"id": 1724,
												"nodeType": "Return",
												"src": "40420:44:0"
											}
										]
									},
									"documentation": {
										"id": 1706,
										"nodeType": "StructuredDocumentation",
										"src": "40252:70:0",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1726,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nameLocation": "40336:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1709,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "40361:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "40345:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1663_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1708,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1707,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1663,
														"src": "40345:7:0"
													},
													"referencedDeclaration": 1663,
													"src": "40345:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1663_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1711,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "40374:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "40366:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40366:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40344:36:0"
									},
									"returnParameters": {
										"id": 1715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1714,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1726,
												"src": "40404:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1713,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "40404:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40403:6:0"
									},
									"scope": 1793,
									"src": "40327:144:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1740,
										"nodeType": "Block",
										"src": "40621:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1736,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1730,
																"src": "40646:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1663_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1737,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1662,
															"src": "40646:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1205_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1205_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1735,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1364,
														"src": "40638:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1205_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 1738,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40638:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1734,
												"id": 1739,
												"nodeType": "Return",
												"src": "40631:26:0"
											}
										]
									},
									"documentation": {
										"id": 1727,
										"nodeType": "StructuredDocumentation",
										"src": "40477:70:0",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 1741,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nameLocation": "40561:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1730,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "40584:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "40568:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1663_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1729,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1728,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1663,
														"src": "40568:7:0"
													},
													"referencedDeclaration": 1663,
													"src": "40568:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1663_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40567:21:0"
									},
									"returnParameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1733,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1741,
												"src": "40612:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1732,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40612:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40611:9:0"
									},
									"scope": 1793,
									"src": "40552:112:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1761,
										"nodeType": "Block",
										"src": "41086:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1755,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1745,
																		"src": "41115:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintSet_$1663_storage_ptr",
																			"typeString": "struct EnumerableSet.UintSet storage pointer"
																		}
																	},
																	"id": 1756,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1662,
																	"src": "41115:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Set_$1205_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	}
																},
																{
																	"id": 1757,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1747,
																	"src": "41127:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Set_$1205_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1754,
																"name": "_at",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1381,
																"src": "41111:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1205_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																}
															},
															"id": 1758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "41111:22:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1753,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "41103:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1752,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "41103:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 1759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41103:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1751,
												"id": 1760,
												"nodeType": "Return",
												"src": "41096:38:0"
											}
										]
									},
									"documentation": {
										"id": 1742,
										"nodeType": "StructuredDocumentation",
										"src": "40670:331:0",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1762,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nameLocation": "41015:2:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "41034:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "41018:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1663_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1744,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1743,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1663,
														"src": "41018:7:0"
													},
													"referencedDeclaration": 1663,
													"src": "41018:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1663_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1747,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "41047:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "41039:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41039:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41017:36:0"
									},
									"returnParameters": {
										"id": 1751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "41077:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41077:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41076:9:0"
									},
									"scope": 1793,
									"src": "41006:135:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1791,
										"nodeType": "Block",
										"src": "41759:176:0",
										"statements": [
											{
												"assignments": [
													1776
												],
												"declarations": [
													{
														"constant": false,
														"id": 1776,
														"mutability": "mutable",
														"name": "store",
														"nameLocation": "41786:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1791,
														"src": "41769:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 1774,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "41769:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1775,
															"nodeType": "ArrayTypeName",
															"src": "41769:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1781,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1778,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1766,
																"src": "41802:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1663_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1779,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1662,
															"src": "41802:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$1205_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$1205_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1777,
														"name": "_values",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1395,
														"src": "41794:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$1205_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"
														}
													},
													"id": 1780,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41794:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "41769:44:0"
											},
											{
												"assignments": [
													1786
												],
												"declarations": [
													{
														"constant": false,
														"id": 1786,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "41840:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1791,
														"src": "41823:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1784,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "41823:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1785,
															"nodeType": "ArrayTypeName",
															"src": "41823:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1787,
												"nodeType": "VariableDeclarationStatement",
												"src": "41823:23:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "41866:39:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "41880:15:0",
															"value": {
																"name": "store",
																"nodeType": "YulIdentifier",
																"src": "41890:5:0"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "41880:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "london",
												"externalReferences": [
													{
														"declaration": 1786,
														"isOffset": false,
														"isSlot": false,
														"src": "41880:6:0",
														"valueSize": 1
													},
													{
														"declaration": 1776,
														"isOffset": false,
														"isSlot": false,
														"src": "41890:5:0",
														"valueSize": 1
													}
												],
												"id": 1788,
												"nodeType": "InlineAssembly",
												"src": "41857:48:0"
											},
											{
												"expression": {
													"id": 1789,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1786,
													"src": "41922:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1771,
												"id": 1790,
												"nodeType": "Return",
												"src": "41915:13:0"
											}
										]
									},
									"documentation": {
										"id": 1763,
										"nodeType": "StructuredDocumentation",
										"src": "41147:529:0",
										"text": " @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."
									},
									"id": 1792,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "values",
									"nameLocation": "41690:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "set",
												"nameLocation": "41713:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1792,
												"src": "41697:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1663_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"id": 1765,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1764,
														"name": "UintSet",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1663,
														"src": "41697:7:0"
													},
													"referencedDeclaration": 1663,
													"src": "41697:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1663_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41696:21:0"
									},
									"returnParameters": {
										"id": 1771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1770,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1792,
												"src": "41741:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1768,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "41741:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1769,
													"nodeType": "ArrayTypeName",
													"src": "41741:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41740:18:0"
									},
									"scope": 1793,
									"src": "41681:254:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3776,
							"src": "30569:11368:0",
							"usedErrors": []
						},
						{
							"id": 1794,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "41985:25:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TransferHelper",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1952,
							"linearizedBaseContracts": [
								1952
							],
							"name": "TransferHelper",
							"nameLocation": "42131:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1836,
										"nodeType": "Block",
										"src": "42221:285:0",
										"statements": [
											{
												"assignments": [
													1804,
													1806
												],
												"declarations": [
													{
														"constant": false,
														"id": 1804,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "42302:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1836,
														"src": "42297:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1803,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "42297:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1806,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "42324:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1836,
														"src": "42311:17:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1805,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "42311:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1816,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30783039356561376233",
																	"id": 1811,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "42366:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_157198259_by_1",
																		"typeString": "int_const 157198259"
																	},
																	"value": "0x095ea7b3"
																},
																{
																	"id": 1812,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1798,
																	"src": "42378:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1813,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1800,
																	"src": "42382:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_157198259_by_1",
																		"typeString": "int_const 157198259"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1809,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "42343:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1810,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "42343:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1814,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "42343:45:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1807,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1796,
															"src": "42332:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1808,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "42332:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42332:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "42296:93:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1818,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1804,
																"src": "42407:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1822,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1819,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1806,
																					"src": "42419:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 1820,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "42419:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1821,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "42434:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "42419:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1825,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1806,
																					"src": "42450:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 1827,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "42457:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 1826,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "42457:4:0",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 1828,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "42456:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 1823,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "42439:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 1824,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "42439:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1829,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "42439:24:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "42419:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1831,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "42418:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "42407:57:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a20415050524f56455f4641494c4544",
															"id": 1833,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "42466:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e27be550bb5367a6d8a8b2dd8b5c52ee0710d2d5b26de50062207957ab5bd00",
																"typeString": "literal_string \"TransferHelper: APPROVE_FAILED\""
															},
															"value": "TransferHelper: APPROVE_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e27be550bb5367a6d8a8b2dd8b5c52ee0710d2d5b26de50062207957ab5bd00",
																"typeString": "literal_string \"TransferHelper: APPROVE_FAILED\""
															}
														],
														"id": 1817,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "42399:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42399:100:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1835,
												"nodeType": "ExpressionStatement",
												"src": "42399:100:0"
											}
										]
									},
									"id": 1837,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "42161:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1796,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "42181:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1837,
												"src": "42173:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1795,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42173:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1798,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "42196:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1837,
												"src": "42188:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1797,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42188:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1800,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "42205:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1837,
												"src": "42200:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1799,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "42200:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42172:39:0"
									},
									"returnParameters": {
										"id": 1802,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42221:0:0"
									},
									"scope": 1952,
									"src": "42152:354:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1879,
										"nodeType": "Block",
										"src": "42582:287:0",
										"statements": [
											{
												"assignments": [
													1847,
													1849
												],
												"declarations": [
													{
														"constant": false,
														"id": 1847,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "42664:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1879,
														"src": "42659:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1846,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "42659:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1849,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "42686:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1879,
														"src": "42673:17:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1848,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "42673:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1859,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30786139303539636262",
																	"id": 1854,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "42728:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2835717307_by_1",
																		"typeString": "int_const 2835717307"
																	},
																	"value": "0xa9059cbb"
																},
																{
																	"id": 1855,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1841,
																	"src": "42740:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1856,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1843,
																	"src": "42744:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_2835717307_by_1",
																		"typeString": "int_const 2835717307"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1852,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "42705:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1853,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "42705:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1857,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "42705:45:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1850,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1839,
															"src": "42694:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1851,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "42694:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42694:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "42658:93:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1861,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1847,
																"src": "42769:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1873,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1865,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1862,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1849,
																					"src": "42781:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 1863,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "42781:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1864,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "42796:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "42781:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1868,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1849,
																					"src": "42812:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 1870,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "42819:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 1869,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "42819:4:0",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 1871,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "42818:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 1866,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "42801:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 1867,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "42801:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1872,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "42801:24:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "42781:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1874,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "42780:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "42769:57:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a205452414e534645525f4641494c4544",
															"id": 1876,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "42828:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426",
																"typeString": "literal_string \"TransferHelper: TRANSFER_FAILED\""
															},
															"value": "TransferHelper: TRANSFER_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426",
																"typeString": "literal_string \"TransferHelper: TRANSFER_FAILED\""
															}
														],
														"id": 1860,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "42761:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42761:101:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1878,
												"nodeType": "ExpressionStatement",
												"src": "42761:101:0"
											}
										]
									},
									"id": 1880,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "42521:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "42542:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "42534:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1838,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42534:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1841,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "42557:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "42549:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1840,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42549:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1843,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "42566:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "42561:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1842,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "42561:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42533:39:0"
									},
									"returnParameters": {
										"id": 1845,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42582:0:0"
									},
									"scope": 1952,
									"src": "42512:357:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1925,
										"nodeType": "Block",
										"src": "42963:310:0",
										"statements": [
											{
												"assignments": [
													1892,
													1894
												],
												"declarations": [
													{
														"constant": false,
														"id": 1892,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "43057:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1925,
														"src": "43052:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1891,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "43052:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1894,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "43079:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1925,
														"src": "43066:17:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1893,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "43066:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1905,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30783233623837326464",
																	"id": 1899,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "43121:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_599290589_by_1",
																		"typeString": "int_const 599290589"
																	},
																	"value": "0x23b872dd"
																},
																{
																	"id": 1900,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1884,
																	"src": "43133:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1901,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1886,
																	"src": "43139:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1902,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1888,
																	"src": "43143:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_599290589_by_1",
																		"typeString": "int_const 599290589"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1897,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "43098:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1898,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "43098:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1903,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "43098:51:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1895,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1882,
															"src": "43087:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1896,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "43087:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1904,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43087:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "43051:99:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1921,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1907,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1892,
																"src": "43168:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1919,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1911,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1908,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1894,
																					"src": "43180:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 1909,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "43180:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1910,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "43195:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "43180:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1914,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1894,
																					"src": "43211:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 1916,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "43218:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 1915,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "43218:4:0",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 1917,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "43217:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 1912,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "43200:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 1913,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "43200:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1918,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "43200:24:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "43180:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1920,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "43179:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "43168:57:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a205452414e534645525f46524f4d5f4641494c4544",
															"id": 1922,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "43227:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18",
																"typeString": "literal_string \"TransferHelper: TRANSFER_FROM_FAILED\""
															},
															"value": "TransferHelper: TRANSFER_FROM_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18",
																"typeString": "literal_string \"TransferHelper: TRANSFER_FROM_FAILED\""
															}
														],
														"id": 1906,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "43160:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43160:106:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1924,
												"nodeType": "ExpressionStatement",
												"src": "43160:106:0"
											}
										]
									},
									"id": 1926,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "42884:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1882,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "42909:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1926,
												"src": "42901:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1881,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42901:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1884,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "42924:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1926,
												"src": "42916:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1883,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42916:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1886,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "42938:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1926,
												"src": "42930:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1885,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1888,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "42947:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1926,
												"src": "42942:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1887,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "42942:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42900:53:0"
									},
									"returnParameters": {
										"id": 1890,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42963:0:0"
									},
									"scope": 1952,
									"src": "42875:398:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1950,
										"nodeType": "Block",
										"src": "43337:134:0",
										"statements": [
											{
												"assignments": [
													1934,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1934,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "43353:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1950,
														"src": "43348:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1933,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "43348:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1944,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1941,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "43396:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1940,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "43386:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 1939,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "43390:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 1942,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "43386:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1935,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1928,
																"src": "43365:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1936,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "43365:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1938,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1937,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1930,
																"src": "43379:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "43365:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43365:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "43347:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1946,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1934,
															"src": "43417:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a204554485f5452414e534645525f4641494c4544",
															"id": 1947,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "43426:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d290720a9b119bbeaf8124eb771e119cbea85a2f430cbb39a8fead2398528881",
																"typeString": "literal_string \"TransferHelper: ETH_TRANSFER_FAILED\""
															},
															"value": "TransferHelper: ETH_TRANSFER_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d290720a9b119bbeaf8124eb771e119cbea85a2f430cbb39a8fead2398528881",
																"typeString": "literal_string \"TransferHelper: ETH_TRANSFER_FAILED\""
															}
														],
														"id": 1945,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "43409:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43409:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1949,
												"nodeType": "ExpressionStatement",
												"src": "43409:55:0"
											}
										]
									},
									"id": 1951,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferETH",
									"nameLocation": "43288:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1928,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "43312:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1951,
												"src": "43304:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43304:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1930,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "43321:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1951,
												"src": "43316:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1929,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "43316:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43303:24:0"
									},
									"returnParameters": {
										"id": 1932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "43337:0:0"
									},
									"scope": 1952,
									"src": "43279:192:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3776,
							"src": "42123:1350:0",
							"usedErrors": []
						},
						{
							"id": 1953,
							"literals": [
								"solidity",
								"=",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "43517:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1954,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 327,
										"src": "43659:7:0"
									},
									"id": 1955,
									"nodeType": "InheritanceSpecifier",
									"src": "43659:7:0"
								}
							],
							"canonicalName": "Operatable",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2024,
							"linearizedBaseContracts": [
								2024,
								327,
								224
							],
							"name": "Operatable",
							"nameLocation": "43645:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "570ca735",
									"id": 1957,
									"mutability": "mutable",
									"name": "operator",
									"nameLocation": "43688:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 2024,
									"src": "43673:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1956,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "43673:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 1963,
									"name": "SetOperator",
									"nameLocation": "43709:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1959,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldOperator",
												"nameLocation": "43737:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1963,
												"src": "43721:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1958,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43721:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1961,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOperator",
												"nameLocation": "43766:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1963,
												"src": "43750:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1960,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43750:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43720:58:0"
									},
									"src": "43703:76:0"
								},
								{
									"body": {
										"id": 1979,
										"nodeType": "Block",
										"src": "43798:86:0",
										"statements": [
											{
												"expression": {
													"id": 1969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1966,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1957,
														"src": "43808:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1967,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "43819:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1968,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "43819:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "43808:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1970,
												"nodeType": "ExpressionStatement",
												"src": "43808:21:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1974,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "43864:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1973,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "43856:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1972,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "43856:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1975,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "43856:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1976,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1957,
															"src": "43868:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1971,
														"name": "SetOperator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1963,
														"src": "43844:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43844:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1978,
												"nodeType": "EmitStatement",
												"src": "43839:38:0"
											}
										]
									},
									"id": 1980,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1964,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "43796:2:0"
									},
									"returnParameters": {
										"id": 1965,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "43798:0:0"
									},
									"scope": 2024,
									"src": "43785:99:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1991,
										"nodeType": "Block",
										"src": "43914:75:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1986,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1983,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "43932:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1984,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "43932:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1985,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1957,
																"src": "43946:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "43932:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f74206f70657261746f72",
															"id": 1987,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "43956:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ea8abe427f1015fb733675f1d280781b0e3aca591785833d6bb4041dafc3e169",
																"typeString": "literal_string \"not operator\""
															},
															"value": "not operator"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ea8abe427f1015fb733675f1d280781b0e3aca591785833d6bb4041dafc3e169",
																"typeString": "literal_string \"not operator\""
															}
														],
														"id": 1982,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "43924:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1988,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43924:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1989,
												"nodeType": "ExpressionStatement",
												"src": "43924:47:0"
											},
											{
												"id": 1990,
												"nodeType": "PlaceholderStatement",
												"src": "43981:1:0"
											}
										]
									},
									"id": 1992,
									"name": "onlyOperator",
									"nameLocation": "43899:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1981,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "43911:2:0"
									},
									"src": "43890:99:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2022,
										"nodeType": "Block",
										"src": "44054:195:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2000,
																"name": "newOperator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1994,
																"src": "44072:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2003,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "44095:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2002,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "44087:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2001,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "44087:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2004,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "44087:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "44072:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "626164206e6577206f70657261746f72",
															"id": 2006,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "44099:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bd8da5f7fa1b241e5cc51a80e871f13a4ea7aa28fe54091ef63906319b2ad5ed",
																"typeString": "literal_string \"bad new operator\""
															},
															"value": "bad new operator"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bd8da5f7fa1b241e5cc51a80e871f13a4ea7aa28fe54091ef63906319b2ad5ed",
																"typeString": "literal_string \"bad new operator\""
															}
														],
														"id": 1999,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "44064:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44064:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2008,
												"nodeType": "ExpressionStatement",
												"src": "44064:54:0"
											},
											{
												"assignments": [
													2010
												],
												"declarations": [
													{
														"constant": false,
														"id": 2010,
														"mutability": "mutable",
														"name": "oldOperator",
														"nameLocation": "44136:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 2022,
														"src": "44128:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2009,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "44128:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2012,
												"initialValue": {
													"id": 2011,
													"name": "operator",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1957,
													"src": "44150:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "44128:30:0"
											},
											{
												"expression": {
													"id": 2015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2013,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1957,
														"src": "44168:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2014,
														"name": "newOperator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1994,
														"src": "44179:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "44168:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2016,
												"nodeType": "ExpressionStatement",
												"src": "44168:22:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2018,
															"name": "oldOperator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2010,
															"src": "44217:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2019,
															"name": "newOperator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1994,
															"src": "44230:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2017,
														"name": "SetOperator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1963,
														"src": "44205:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44205:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2021,
												"nodeType": "EmitStatement",
												"src": "44200:42:0"
											}
										]
									},
									"functionSelector": "b3ab15fb",
									"id": 2023,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1997,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1996,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 269,
												"src": "44044:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "44044:9:0"
										}
									],
									"name": "setOperator",
									"nameLocation": "44004:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1994,
												"mutability": "mutable",
												"name": "newOperator",
												"nameLocation": "44024:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 2023,
												"src": "44016:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44016:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44015:21:0"
									},
									"returnParameters": {
										"id": 1998,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "44054:0:0"
									},
									"scope": 2024,
									"src": "43995:254:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3776,
							"src": "43636:615:0",
							"usedErrors": []
						},
						{
							"id": 2025,
							"literals": [
								"solidity",
								"=",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "44302:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IOperContract",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2036,
							"linearizedBaseContracts": [
								2036
							],
							"name": "IOperContract",
							"nameLocation": "44338:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "570ca735",
									"id": 2030,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "operator",
									"nameLocation": "44367:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2026,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "44375:2:0"
									},
									"returnParameters": {
										"id": 2029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2028,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2030,
												"src": "44401:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2027,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44401:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44400:9:0"
									},
									"scope": 2036,
									"src": "44358:52:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "8da5cb5b",
									"id": 2035,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "44425:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2031,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "44430:2:0"
									},
									"returnParameters": {
										"id": 2034,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2033,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2035,
												"src": "44456:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2032,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44456:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44455:9:0"
									},
									"scope": 2036,
									"src": "44416:49:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3776,
							"src": "44328:139:0",
							"usedErrors": []
						},
						{
							"id": 2037,
							"literals": [
								"solidity",
								"=",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "44510:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2038,
										"name": "IOperContract",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2036,
										"src": "44652:13:0"
									},
									"id": 2039,
									"nodeType": "InheritanceSpecifier",
									"src": "44652:13:0"
								}
							],
							"canonicalName": "CheckOper",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2152,
							"linearizedBaseContracts": [
								2152,
								2036
							],
							"name": "CheckOper",
							"nameLocation": "44639:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "48ee26a3",
									"id": 2042,
									"mutability": "mutable",
									"name": "operatable",
									"nameLocation": "44690:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 2152,
									"src": "44672:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_Operatable_$2024",
										"typeString": "contract Operatable"
									},
									"typeName": {
										"id": 2041,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2040,
											"name": "Operatable",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2024,
											"src": "44672:10:0"
										},
										"referencedDeclaration": 2024,
										"src": "44672:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Operatable_$2024",
											"typeString": "contract Operatable"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"id": 2048,
									"name": "SetOperatorContract",
									"nameLocation": "44713:19:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2044,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldOperator",
												"nameLocation": "44749:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 2048,
												"src": "44733:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2043,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44733:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2046,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOperator",
												"nameLocation": "44778:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 2048,
												"src": "44762:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2045,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44762:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44732:58:0"
									},
									"src": "44707:84:0"
								},
								{
									"body": {
										"id": 2067,
										"nodeType": "Block",
										"src": "44823:100:0",
										"statements": [
											{
												"expression": {
													"id": 2057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2053,
														"name": "operatable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2042,
														"src": "44833:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Operatable_$2024",
															"typeString": "contract Operatable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2055,
																"name": "_oper",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2050,
																"src": "44857:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2054,
															"name": "Operatable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2024,
															"src": "44846:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Operatable_$2024_$",
																"typeString": "type(contract Operatable)"
															}
														},
														"id": 2056,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "44846:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Operatable_$2024",
															"typeString": "contract Operatable"
														}
													},
													"src": "44833:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Operatable_$2024",
														"typeString": "contract Operatable"
													}
												},
												"id": 2058,
												"nodeType": "ExpressionStatement",
												"src": "44833:30:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2062,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "44906:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2061,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "44898:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2060,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "44898:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2063,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "44898:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2064,
															"name": "_oper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2050,
															"src": "44910:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2059,
														"name": "SetOperatorContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2048,
														"src": "44878:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2065,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44878:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2066,
												"nodeType": "EmitStatement",
												"src": "44873:43:0"
											}
										]
									},
									"id": 2068,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2050,
												"mutability": "mutable",
												"name": "_oper",
												"nameLocation": "44817:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2068,
												"src": "44809:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2049,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44809:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44808:15:0"
									},
									"returnParameters": {
										"id": 2052,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "44823:0:0"
									},
									"scope": 2152,
									"src": "44797:126:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2081,
										"nodeType": "Block",
										"src": "44953:88:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2076,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 2071,
																		"name": "operatable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2042,
																		"src": "44971:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Operatable_$2024",
																			"typeString": "contract Operatable"
																		}
																	},
																	"id": 2072,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "operator",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1957,
																	"src": "44971:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 2073,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "44971:21:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 2074,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "44996:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2075,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "44996:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "44971:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f74206f70657261746f72",
															"id": 2077,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "45008:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ea8abe427f1015fb733675f1d280781b0e3aca591785833d6bb4041dafc3e169",
																"typeString": "literal_string \"not operator\""
															},
															"value": "not operator"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ea8abe427f1015fb733675f1d280781b0e3aca591785833d6bb4041dafc3e169",
																"typeString": "literal_string \"not operator\""
															}
														],
														"id": 2070,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "44963:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2078,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44963:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2079,
												"nodeType": "ExpressionStatement",
												"src": "44963:60:0"
											},
											{
												"id": 2080,
												"nodeType": "PlaceholderStatement",
												"src": "45033:1:0"
											}
										]
									},
									"id": 2082,
									"name": "onlyOperator",
									"nameLocation": "44938:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2069,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "44950:2:0"
									},
									"src": "44929:112:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2095,
										"nodeType": "Block",
										"src": "45068:105:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2090,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 2085,
																		"name": "operatable",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2042,
																		"src": "45086:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Operatable_$2024",
																			"typeString": "contract Operatable"
																		}
																	},
																	"id": 2086,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "owner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 255,
																	"src": "45086:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																		"typeString": "function () view external returns (address)"
																	}
																},
																"id": 2087,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "45086:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 2088,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "45108:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2089,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "45108:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "45086:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 2091,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "45120:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 2084,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "45078:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45078:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2093,
												"nodeType": "ExpressionStatement",
												"src": "45078:77:0"
											},
											{
												"id": 2094,
												"nodeType": "PlaceholderStatement",
												"src": "45165:1:0"
											}
										]
									},
									"id": 2096,
									"name": "onlyOwner",
									"nameLocation": "45056:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2083,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "45065:2:0"
									},
									"src": "45047:126:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2030
									],
									"body": {
										"id": 2106,
										"nodeType": "Block",
										"src": "45238:45:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2102,
															"name": "operatable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2042,
															"src": "45255:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Operatable_$2024",
																"typeString": "contract Operatable"
															}
														},
														"id": 2103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "operator",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1957,
														"src": "45255:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 2104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45255:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2101,
												"id": 2105,
												"nodeType": "Return",
												"src": "45248:28:0"
											}
										]
									},
									"functionSelector": "570ca735",
									"id": 2107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "operator",
									"nameLocation": "45188:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2098,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "45211:8:0"
									},
									"parameters": {
										"id": 2097,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "45196:2:0"
									},
									"returnParameters": {
										"id": 2101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2100,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2107,
												"src": "45229:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2099,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45229:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45228:9:0"
									},
									"scope": 2152,
									"src": "45179:104:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2035
									],
									"body": {
										"id": 2117,
										"nodeType": "Block",
										"src": "45345:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2113,
															"name": "operatable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2042,
															"src": "45362:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Operatable_$2024",
																"typeString": "contract Operatable"
															}
														},
														"id": 2114,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 255,
														"src": "45362:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 2115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45362:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 2112,
												"id": 2116,
												"nodeType": "Return",
												"src": "45355:25:0"
											}
										]
									},
									"functionSelector": "8da5cb5b",
									"id": 2118,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "45298:5:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2109,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "45318:8:0"
									},
									"parameters": {
										"id": 2108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "45303:2:0"
									},
									"returnParameters": {
										"id": 2112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2118,
												"src": "45336:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45336:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45335:9:0"
									},
									"scope": 2152,
									"src": "45289:98:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2150,
										"nodeType": "Block",
										"src": "45450:196:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2126,
																"name": "_oper",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2120,
																"src": "45468:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2129,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "45485:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2128,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "45477:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2127,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "45477:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "45477:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "45468:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "626164206e6577206f70657261746f72",
															"id": 2132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "45489:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bd8da5f7fa1b241e5cc51a80e871f13a4ea7aa28fe54091ef63906319b2ad5ed",
																"typeString": "literal_string \"bad new operator\""
															},
															"value": "bad new operator"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bd8da5f7fa1b241e5cc51a80e871f13a4ea7aa28fe54091ef63906319b2ad5ed",
																"typeString": "literal_string \"bad new operator\""
															}
														],
														"id": 2125,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "45460:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45460:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2134,
												"nodeType": "ExpressionStatement",
												"src": "45460:48:0"
											},
											{
												"assignments": [
													2136
												],
												"declarations": [
													{
														"constant": false,
														"id": 2136,
														"mutability": "mutable",
														"name": "oldOperator",
														"nameLocation": "45526:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 2150,
														"src": "45518:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2135,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "45518:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2138,
												"initialValue": {
													"id": 2137,
													"name": "_oper",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2120,
													"src": "45540:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "45518:27:0"
											},
											{
												"expression": {
													"id": 2143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2139,
														"name": "operatable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2042,
														"src": "45555:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Operatable_$2024",
															"typeString": "contract Operatable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2141,
																"name": "_oper",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2120,
																"src": "45579:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2140,
															"name": "Operatable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2024,
															"src": "45568:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Operatable_$2024_$",
																"typeString": "type(contract Operatable)"
															}
														},
														"id": 2142,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "45568:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_Operatable_$2024",
															"typeString": "contract Operatable"
														}
													},
													"src": "45555:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Operatable_$2024",
														"typeString": "contract Operatable"
													}
												},
												"id": 2144,
												"nodeType": "ExpressionStatement",
												"src": "45555:30:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2146,
															"name": "oldOperator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2136,
															"src": "45620:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2147,
															"name": "_oper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2120,
															"src": "45633:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2145,
														"name": "SetOperatorContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2048,
														"src": "45600:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 2148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45600:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2149,
												"nodeType": "EmitStatement",
												"src": "45595:44:0"
											}
										]
									},
									"functionSelector": "0f589d63",
									"id": 2151,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2123,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2122,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2096,
												"src": "45440:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "45440:9:0"
										}
									],
									"name": "setOperContract",
									"nameLocation": "45402:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2120,
												"mutability": "mutable",
												"name": "_oper",
												"nameLocation": "45426:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2151,
												"src": "45418:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45418:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45417:15:0"
									},
									"returnParameters": {
										"id": 2124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "45450:0:0"
									},
									"scope": 2152,
									"src": "45393:253:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3776,
							"src": "44630:1018:0",
							"usedErrors": []
						},
						{
							"id": 2153,
							"literals": [
								"solidity",
								"=",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "45692:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2154,
										"name": "IERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 203,
										"src": "45738:6:0"
									},
									"id": 2155,
									"nodeType": "InheritanceSpecifier",
									"src": "45738:6:0"
								}
							],
							"canonicalName": "IToken",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2170,
							"linearizedBaseContracts": [
								2170,
								203
							],
							"name": "IToken",
							"nameLocation": "45728:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "40c10f19",
									"id": 2164,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "45760:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2157,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "45773:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2164,
												"src": "45765:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2159,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "45785:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2164,
												"src": "45777:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45777:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45764:28:0"
									},
									"returnParameters": {
										"id": 2163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2162,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2164,
												"src": "45811:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2161,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "45811:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45810:6:0"
									},
									"scope": 2170,
									"src": "45751:66:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "42966c68",
									"id": 2169,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "45832:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2166,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "45845:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2169,
												"src": "45837:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45837:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45836:17:0"
									},
									"returnParameters": {
										"id": 2168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "45862:0:0"
									},
									"scope": 2170,
									"src": "45823:40:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3776,
							"src": "45718:147:0",
							"usedErrors": []
						},
						{
							"id": 2171,
							"literals": [
								"solidity",
								"=",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "45908:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2172,
										"name": "CheckOper",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2152,
										"src": "45972:9:0"
									},
									"id": 2173,
									"nodeType": "InheritanceSpecifier",
									"src": "45972:9:0"
								}
							],
							"canonicalName": "TokenReward",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": false,
							"id": 2449,
							"linearizedBaseContracts": [
								2449,
								2152,
								2036
							],
							"name": "TokenReward",
							"nameLocation": "45957:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 2176,
									"libraryName": {
										"id": 2174,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1195,
										"src": "45994:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "45988:27:0",
									"typeName": {
										"id": 2175,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "46007:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 2180,
									"libraryName": {
										"id": 2177,
										"name": "SafeERC20",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 884,
										"src": "46026:9:0"
									},
									"nodeType": "UsingForDirective",
									"src": "46020:27:0",
									"typeName": {
										"id": 2179,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2178,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 203,
											"src": "46040:6:0"
										},
										"referencedDeclaration": 203,
										"src": "46040:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$203",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"anonymous": false,
									"id": 2186,
									"name": "SetPool",
									"nameLocation": "46059:7:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2182,
												"indexed": true,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "46083:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2186,
												"src": "46067:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2181,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46067:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2184,
												"indexed": false,
												"mutability": "mutable",
												"name": "point",
												"nameLocation": "46097:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2186,
												"src": "46089:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "46089:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46066:37:0"
									},
									"src": "46053:51:0"
								},
								{
									"anonymous": false,
									"id": 2192,
									"name": "AddPool",
									"nameLocation": "46115:7:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2188,
												"indexed": true,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "46139:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2192,
												"src": "46123:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46123:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2190,
												"indexed": false,
												"mutability": "mutable",
												"name": "point",
												"nameLocation": "46153:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2192,
												"src": "46145:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "46145:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46122:37:0"
									},
									"src": "46109:51:0"
								},
								{
									"constant": false,
									"functionSelector": "dc73e49c",
									"id": 2195,
									"mutability": "mutable",
									"name": "swapToken",
									"nameLocation": "46180:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 2449,
									"src": "46166:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IToken_$2170",
										"typeString": "contract IToken"
									},
									"typeName": {
										"id": 2194,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2193,
											"name": "IToken",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2170,
											"src": "46166:6:0"
										},
										"referencedDeclaration": 2170,
										"src": "46166:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IToken_$2170",
											"typeString": "contract IToken"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4198709a",
									"id": 2197,
									"mutability": "mutable",
									"name": "tokenPerBlock",
									"nameLocation": "46211:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 2449,
									"src": "46196:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2196,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "46196:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "48cd4cb1",
									"id": 2199,
									"mutability": "immutable",
									"name": "startBlock",
									"nameLocation": "46255:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 2449,
									"src": "46230:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2198,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "46230:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "442da82f",
									"id": 2201,
									"mutability": "mutable",
									"name": "periodEndBlock",
									"nameLocation": "46286:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 2449,
									"src": "46271:29:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2200,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "46271:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ef78d4fd",
									"id": 2203,
									"mutability": "mutable",
									"name": "period",
									"nameLocation": "46373:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 2449,
									"src": "46358:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2202,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "46358:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "37550684",
									"id": 2205,
									"mutability": "mutable",
									"name": "mintMulti",
									"nameLocation": "46401:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 2449,
									"src": "46386:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2204,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "46386:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "812632ec",
									"id": 2208,
									"mutability": "mutable",
									"name": "minTokenReward",
									"nameLocation": "46432:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 2449,
									"src": "46417:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2206,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "46417:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "312e3735653137",
										"id": 2207,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "46449:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_175000000000000000_by_1",
											"typeString": "int_const 175000000000000000"
										},
										"value": "1.75e17"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 2265,
										"nodeType": "Block",
										"src": "46648:286:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2234,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2228,
																		"name": "_swapToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2213,
																		"src": "46674:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IToken_$2170",
																			"typeString": "contract IToken"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IToken_$2170",
																			"typeString": "contract IToken"
																		}
																	],
																	"id": 2227,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "46666:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2226,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "46666:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2229,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "46666:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2232,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "46697:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "46689:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2230,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "46689:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2233,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "46689:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "46666:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "73776170546f6b656e2069732030",
															"id": 2235,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "46701:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dc1ce9b0d64aa8a8fc4d593ee211091e00184a9db3de628d6647e445c5a24103",
																"typeString": "literal_string \"swapToken is 0\""
															},
															"value": "swapToken is 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dc1ce9b0d64aa8a8fc4d593ee211091e00184a9db3de628d6647e445c5a24103",
																"typeString": "literal_string \"swapToken is 0\""
															}
														],
														"id": 2225,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "46658:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46658:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2237,
												"nodeType": "ExpressionStatement",
												"src": "46658:60:0"
											},
											{
												"expression": {
													"id": 2240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2238,
														"name": "swapToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2195,
														"src": "46728:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IToken_$2170",
															"typeString": "contract IToken"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2239,
														"name": "_swapToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2213,
														"src": "46740:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IToken_$2170",
															"typeString": "contract IToken"
														}
													},
													"src": "46728:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IToken_$2170",
														"typeString": "contract IToken"
													}
												},
												"id": 2241,
												"nodeType": "ExpressionStatement",
												"src": "46728:22:0"
											},
											{
												"expression": {
													"id": 2244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2242,
														"name": "tokenPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2197,
														"src": "46760:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2243,
														"name": "_tokenPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2215,
														"src": "46776:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "46760:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2245,
												"nodeType": "ExpressionStatement",
												"src": "46760:30:0"
											},
											{
												"expression": {
													"id": 2248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2246,
														"name": "startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2199,
														"src": "46800:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2247,
														"name": "_startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2217,
														"src": "46813:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "46800:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2249,
												"nodeType": "ExpressionStatement",
												"src": "46800:24:0"
											},
											{
												"expression": {
													"id": 2252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2250,
														"name": "period",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2203,
														"src": "46834:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2251,
														"name": "_period",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2219,
														"src": "46843:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "46834:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2253,
												"nodeType": "ExpressionStatement",
												"src": "46834:16:0"
											},
											{
												"expression": {
													"id": 2259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2254,
														"name": "periodEndBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2201,
														"src": "46860:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2257,
																"name": "_period",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2219,
																"src": "46893:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 2255,
																"name": "_startBlock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2217,
																"src": "46877:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1059,
															"src": "46877:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2258,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "46877:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "46860:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2260,
												"nodeType": "ExpressionStatement",
												"src": "46860:41:0"
											},
											{
												"expression": {
													"id": 2263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2261,
														"name": "mintMulti",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2205,
														"src": "46911:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31303030",
														"id": 2262,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "46923:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "46911:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2264,
												"nodeType": "ExpressionStatement",
												"src": "46911:16:0"
											}
										]
									},
									"id": 2266,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2222,
													"name": "_operatorMsg",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2210,
													"src": "46634:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 2223,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2221,
												"name": "CheckOper",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2152,
												"src": "46624:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "46624:23:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2210,
												"mutability": "mutable",
												"name": "_operatorMsg",
												"nameLocation": "46492:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2266,
												"src": "46484:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46484:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2213,
												"mutability": "mutable",
												"name": "_swapToken",
												"nameLocation": "46521:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2266,
												"src": "46514:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IToken_$2170",
													"typeString": "contract IToken"
												},
												"typeName": {
													"id": 2212,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2211,
														"name": "IToken",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2170,
														"src": "46514:6:0"
													},
													"referencedDeclaration": 2170,
													"src": "46514:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IToken_$2170",
														"typeString": "contract IToken"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2215,
												"mutability": "mutable",
												"name": "_tokenPerBlock",
												"nameLocation": "46549:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 2266,
												"src": "46541:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "46541:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2217,
												"mutability": "mutable",
												"name": "_startBlock",
												"nameLocation": "46581:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 2266,
												"src": "46573:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "46573:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2219,
												"mutability": "mutable",
												"name": "_period",
												"nameLocation": "46610:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2266,
												"src": "46602:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "46602:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46474:149:0"
									},
									"returnParameters": {
										"id": 2224,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "46648:0:0"
									},
									"scope": 2449,
									"src": "46463:471:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2312,
										"nodeType": "Block",
										"src": "46969:398:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2271,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2268,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "46983:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "46983:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2270,
															"name": "startBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2199,
															"src": "46998:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "46983:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2275,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 2272,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "47012:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "47012:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 2274,
															"name": "periodEndBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2201,
															"src": "47028:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "47012:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "46983:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2310,
												"nodeType": "IfStatement",
												"src": "46979:371:0",
												"trueBody": {
													"id": 2309,
													"nodeType": "Block",
													"src": "47044:306:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2277,
																	"name": "tokenPerBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2197,
																	"src": "47062:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 2278,
																	"name": "minTokenReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2208,
																	"src": "47078:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "47062:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2291,
															"nodeType": "IfStatement",
															"src": "47058:115:0",
															"trueBody": {
																"id": 2290,
																"nodeType": "Block",
																"src": "47094:79:0",
																"statements": [
																	{
																		"expression": {
																			"id": 2288,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2280,
																				"name": "tokenPerBlock",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2197,
																				"src": "47112:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"hexValue": "313030",
																						"id": 2286,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "47154:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_100_by_1",
																							"typeString": "int_const 100"
																						},
																						"value": "100"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_rational_100_by_1",
																							"typeString": "int_const 100"
																						}
																					],
																					"expression": {
																						"arguments": [
																							{
																								"hexValue": "3830",
																								"id": 2283,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "47146:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_80_by_1",
																									"typeString": "int_const 80"
																								},
																								"value": "80"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_rational_80_by_1",
																									"typeString": "int_const 80"
																								}
																							],
																							"expression": {
																								"id": 2281,
																								"name": "tokenPerBlock",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2197,
																								"src": "47128:13:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 2282,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "mul",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1089,
																							"src": "47128:17:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 2284,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "47128:21:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2285,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "div",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1104,
																					"src": "47128:25:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 2287,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "47128:30:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "47112:46:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2289,
																		"nodeType": "ExpressionStatement",
																		"src": "47112:46:0"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2294,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2292,
																	"name": "tokenPerBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2197,
																	"src": "47190:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 2293,
																	"name": "minTokenReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2208,
																	"src": "47206:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "47190:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2300,
															"nodeType": "IfStatement",
															"src": "47186:99:0",
															"trueBody": {
																"id": 2299,
																"nodeType": "Block",
																"src": "47222:63:0",
																"statements": [
																	{
																		"expression": {
																			"id": 2297,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2295,
																				"name": "tokenPerBlock",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2197,
																				"src": "47240:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 2296,
																				"name": "minTokenReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2208,
																				"src": "47256:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "47240:30:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2298,
																		"nodeType": "ExpressionStatement",
																		"src": "47240:30:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 2307,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2301,
																	"name": "periodEndBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2201,
																	"src": "47298:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 2305,
																			"name": "period",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2203,
																			"src": "47332:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 2302,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "47315:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 2303,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "number",
																			"nodeType": "MemberAccess",
																			"src": "47315:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1059,
																		"src": "47315:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2306,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "47315:24:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "47298:41:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2308,
															"nodeType": "ExpressionStatement",
															"src": "47298:41:0"
														}
													]
												}
											},
											{
												"id": 2311,
												"nodeType": "PlaceholderStatement",
												"src": "47359:1:0"
											}
										]
									},
									"id": 2313,
									"name": "reduceBlockReward",
									"nameLocation": "46949:17:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2267,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "46966:2:0"
									},
									"src": "46940:427:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2324,
										"nodeType": "Block",
										"src": "47435:32:0",
										"statements": [
											{
												"expression": {
													"id": 2322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2320,
														"name": "period",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2203,
														"src": "47445:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2321,
														"name": "_block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2315,
														"src": "47454:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "47445:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2323,
												"nodeType": "ExpressionStatement",
												"src": "47445:15:0"
											}
										]
									},
									"functionSelector": "b5ec5c99",
									"id": 2325,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2318,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2317,
												"name": "onlyOperator",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2082,
												"src": "47422:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "47422:12:0"
										}
									],
									"name": "setHalvingPeriod",
									"nameLocation": "47382:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2315,
												"mutability": "mutable",
												"name": "_block",
												"nameLocation": "47407:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2325,
												"src": "47399:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "47399:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47398:16:0"
									},
									"returnParameters": {
										"id": 2319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "47435:0:0"
									},
									"scope": 2449,
									"src": "47373:94:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2336,
										"nodeType": "Block",
										"src": "47531:35:0",
										"statements": [
											{
												"expression": {
													"id": 2334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2332,
														"name": "mintMulti",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2205,
														"src": "47541:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2333,
														"name": "_multi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2327,
														"src": "47553:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "47541:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2335,
												"nodeType": "ExpressionStatement",
												"src": "47541:18:0"
											}
										]
									},
									"functionSelector": "71dd4bda",
									"id": 2337,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2330,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2329,
												"name": "onlyOperator",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2082,
												"src": "47518:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "47518:12:0"
										}
									],
									"name": "setMintMulti",
									"nameLocation": "47482:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2327,
												"mutability": "mutable",
												"name": "_multi",
												"nameLocation": "47503:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2337,
												"src": "47495:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "47495:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47494:16:0"
									},
									"returnParameters": {
										"id": 2331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "47531:0:0"
									},
									"scope": 2449,
									"src": "47473:93:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2348,
										"nodeType": "Block",
										"src": "47636:41:0",
										"statements": [
											{
												"expression": {
													"id": 2346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2344,
														"name": "minTokenReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2208,
														"src": "47646:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2345,
														"name": "_reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2339,
														"src": "47663:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "47646:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2347,
												"nodeType": "ExpressionStatement",
												"src": "47646:24:0"
											}
										]
									},
									"functionSelector": "aa70fb98",
									"id": 2349,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2342,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2341,
												"name": "onlyOperator",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2082,
												"src": "47623:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "47623:12:0"
										}
									],
									"name": "setMinTokenReward",
									"nameLocation": "47581:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2339,
												"mutability": "mutable",
												"name": "_reward",
												"nameLocation": "47607:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2349,
												"src": "47599:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "47599:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47598:17:0"
									},
									"returnParameters": {
										"id": 2343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "47636:0:0"
									},
									"scope": 2449,
									"src": "47572:105:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2368,
										"nodeType": "Block",
										"src": "47822:113:0",
										"statements": [
											{
												"condition": {
													"id": 2358,
													"name": "_withUpdate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2353,
													"src": "47836:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2363,
												"nodeType": "IfStatement",
												"src": "47832:59:0",
												"trueBody": {
													"id": 2362,
													"nodeType": "Block",
													"src": "47849:42:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2359,
																	"name": "massUpdatePools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2448,
																	"src": "47863:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 2360,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "47863:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2361,
															"nodeType": "ExpressionStatement",
															"src": "47863:17:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2364,
														"name": "tokenPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2197,
														"src": "47900:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2365,
														"name": "_newPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2351,
														"src": "47916:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "47900:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2367,
												"nodeType": "ExpressionStatement",
												"src": "47900:28:0"
											}
										]
									},
									"functionSelector": "4ade739b",
									"id": 2369,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2356,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2355,
												"name": "onlyOperator",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2082,
												"src": "47809:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "47809:12:0"
										}
									],
									"name": "setTokenPerBlock",
									"nameLocation": "47745:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2351,
												"mutability": "mutable",
												"name": "_newPerBlock",
												"nameLocation": "47770:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2369,
												"src": "47762:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "47762:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2353,
												"mutability": "mutable",
												"name": "_withUpdate",
												"nameLocation": "47789:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 2369,
												"src": "47784:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2352,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "47784:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47761:40:0"
									},
									"returnParameters": {
										"id": 2357,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "47822:0:0"
									},
									"scope": 2449,
									"src": "47736:199:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2410,
										"nodeType": "Block",
										"src": "48119:237:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2377,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2373,
															"src": "48146:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2376,
														"name": "_mintRewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2445,
														"src": "48129:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "48129:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2379,
												"nodeType": "ExpressionStatement",
												"src": "48129:25:0"
											},
											{
												"assignments": [
													2381
												],
												"declarations": [
													{
														"constant": false,
														"id": 2381,
														"mutability": "mutable",
														"name": "bal",
														"nameLocation": "48172:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 2410,
														"src": "48164:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2380,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "48164:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2389,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2386,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "48206:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TokenReward_$2449",
																		"typeString": "contract TokenReward"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TokenReward_$2449",
																		"typeString": "contract TokenReward"
																	}
																],
																"id": 2385,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "48198:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2384,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "48198:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "48198:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2382,
															"name": "swapToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2195,
															"src": "48178:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IToken_$2170",
																"typeString": "contract IToken"
															}
														},
														"id": 2383,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 142,
														"src": "48178:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "48178:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "48164:48:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2390,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2373,
														"src": "48226:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 2391,
														"name": "bal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2381,
														"src": "48236:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "48226:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2398,
												"nodeType": "IfStatement",
												"src": "48222:57:0",
												"trueBody": {
													"id": 2397,
													"nodeType": "Block",
													"src": "48241:38:0",
													"statements": [
														{
															"expression": {
																"id": 2395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2393,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2373,
																	"src": "48255:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2394,
																	"name": "bal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2381,
																	"src": "48265:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "48255:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2396,
															"nodeType": "ExpressionStatement",
															"src": "48255:13:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2404,
																	"name": "swapToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2195,
																	"src": "48324:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IToken_$2170",
																		"typeString": "contract IToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IToken_$2170",
																		"typeString": "contract IToken"
																	}
																],
																"id": 2403,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "48316:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2402,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "48316:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "48316:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2406,
															"name": "_to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2371,
															"src": "48336:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2407,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2373,
															"src": "48341:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2399,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1952,
															"src": "48288:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$1952_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 2401,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1880,
														"src": "48288:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "48288:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2409,
												"nodeType": "ExpressionStatement",
												"src": "48288:61:0"
											}
										]
									},
									"id": 2411,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTokenTransfer",
									"nameLocation": "48061:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2371,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "48088:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 2411,
												"src": "48080:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48080:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2373,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "48101:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2411,
												"src": "48093:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2372,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "48093:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48079:30:0"
									},
									"returnParameters": {
										"id": 2375,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "48119:0:0"
									},
									"scope": 2449,
									"src": "48052:304:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2444,
										"nodeType": "Block",
										"src": "48413:171:0",
										"statements": [
											{
												"assignments": [
													2417
												],
												"declarations": [
													{
														"constant": false,
														"id": 2417,
														"mutability": "mutable",
														"name": "bal",
														"nameLocation": "48431:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 2444,
														"src": "48423:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2416,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "48423:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2425,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2422,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "48465:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_TokenReward_$2449",
																		"typeString": "contract TokenReward"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_TokenReward_$2449",
																		"typeString": "contract TokenReward"
																	}
																],
																"id": 2421,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "48457:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2420,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "48457:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "48457:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2418,
															"name": "swapToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2195,
															"src": "48437:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IToken_$2170",
																"typeString": "contract IToken"
															}
														},
														"id": 2419,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 142,
														"src": "48437:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 2424,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "48437:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "48423:48:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2426,
														"name": "bal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2417,
														"src": "48485:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2427,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2413,
														"src": "48491:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "48485:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2443,
												"nodeType": "IfStatement",
												"src": "48481:97:0",
												"trueBody": {
													"id": 2442,
													"nodeType": "Block",
													"src": "48500:78:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 2434,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "48537:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_TokenReward_$2449",
																					"typeString": "contract TokenReward"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_TokenReward_$2449",
																					"typeString": "contract TokenReward"
																				}
																			],
																			"id": 2433,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "48529:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2432,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "48529:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "48529:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 2438,
																				"name": "mintMulti",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2205,
																				"src": "48556:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 2436,
																				"name": "_amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2413,
																				"src": "48544:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 2437,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1089,
																			"src": "48544:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 2439,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "48544:22:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2429,
																		"name": "swapToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2195,
																		"src": "48514:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IToken_$2170",
																			"typeString": "contract IToken"
																		}
																	},
																	"id": 2431,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2164,
																	"src": "48514:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																"id": 2440,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "48514:53:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2441,
															"nodeType": "ExpressionStatement",
															"src": "48514:53:0"
														}
													]
												}
											}
										]
									},
									"id": 2445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintRewardToken",
									"nameLocation": "48371:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2413,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "48396:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2445,
												"src": "48388:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "48388:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48387:17:0"
									},
									"returnParameters": {
										"id": 2415,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "48413:0:0"
									},
									"scope": 2449,
									"src": "48362:222:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"functionSelector": "630b5ba1",
									"id": 2448,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "massUpdatePools",
									"nameLocation": "48599:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2446,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "48614:2:0"
									},
									"returnParameters": {
										"id": 2447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "48631:0:0"
									},
									"scope": 2449,
									"src": "48590:42:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 3776,
							"src": "45939:2695:0",
							"usedErrors": []
						},
						{
							"id": 2450,
							"literals": [
								"solidity",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "48679:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IVeToken",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2517,
							"linearizedBaseContracts": [
								2517
							],
							"name": "IVeToken",
							"nameLocation": "48715:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "fc0c546a",
									"id": 2455,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token",
									"nameLocation": "48739:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2451,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "48744:2:0"
									},
									"returnParameters": {
										"id": 2454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2453,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2455,
												"src": "48770:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48770:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48769:9:0"
									},
									"scope": 2517,
									"src": "48730:49:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2f745c59",
									"id": 2464,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "48793:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2457,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "48821:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2464,
												"src": "48813:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48813:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2459,
												"mutability": "mutable",
												"name": "_tokenIndex",
												"nameLocation": "48834:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 2464,
												"src": "48829:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2458,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "48829:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48812:34:0"
									},
									"returnParameters": {
										"id": 2463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2462,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2464,
												"src": "48870:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2461,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "48870:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48869:6:0"
									},
									"scope": 2517,
									"src": "48784:92:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e7e242d4",
									"id": 2471,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfNFT",
									"nameLocation": "48890:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2466,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2471,
												"src": "48903:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2465,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "48903:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48902:6:0"
									},
									"returnParameters": {
										"id": 2470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2469,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2471,
												"src": "48932:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2468,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "48932:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48931:6:0"
									},
									"scope": 2517,
									"src": "48881:57:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "430c2081",
									"id": 2480,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedOrOwner",
									"nameLocation": "48952:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2476,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2473,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2480,
												"src": "48970:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2472,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48970:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2475,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2480,
												"src": "48979:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2474,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "48979:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48969:15:0"
									},
									"returnParameters": {
										"id": 2479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2478,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2480,
												"src": "49008:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2477,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "49008:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49007:6:0"
									},
									"scope": 2517,
									"src": "48943:71:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6352211e",
									"id": 2487,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "49028:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2482,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2487,
												"src": "49036:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2481,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "49036:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49035:6:0"
									},
									"returnParameters": {
										"id": 2486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2485,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2487,
												"src": "49065:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49065:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49064:9:0"
									},
									"scope": 2517,
									"src": "49019:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 2496,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "49088:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2489,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2496,
												"src": "49101:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49101:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2491,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2496,
												"src": "49110:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2493,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2496,
												"src": "49119:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2492,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "49119:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49100:24:0"
									},
									"returnParameters": {
										"id": 2495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49133:0:0"
									},
									"scope": 2517,
									"src": "49079:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "020fe6e5",
									"id": 2501,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "used",
									"nameLocation": "49148:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2498,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "49158:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2501,
												"src": "49153:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2497,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "49153:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49152:14:0"
									},
									"returnParameters": {
										"id": 2500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49175:0:0"
									},
									"scope": 2517,
									"src": "49139:37:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "986b7d8a",
									"id": 2506,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "detach",
									"nameLocation": "49190:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2503,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "49202:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2506,
												"src": "49197:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2502,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "49197:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49196:14:0"
									},
									"returnParameters": {
										"id": 2505,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49219:0:0"
									},
									"scope": 2517,
									"src": "49181:39:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fd4a77f1",
									"id": 2511,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "voting",
									"nameLocation": "49234:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2508,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "49246:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2511,
												"src": "49241:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2507,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "49241:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49240:14:0"
									},
									"returnParameters": {
										"id": 2510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49263:0:0"
									},
									"scope": 2517,
									"src": "49225:39:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c1f0fb9f",
									"id": 2516,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "abstain",
									"nameLocation": "49278:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2513,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "49291:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2516,
												"src": "49286:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2512,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "49286:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49285:14:0"
									},
									"returnParameters": {
										"id": 2515,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49308:0:0"
									},
									"scope": 2517,
									"src": "49269:40:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3776,
							"src": "48705:606:0",
							"usedErrors": []
						},
						{
							"id": 2518,
							"literals": [
								"solidity",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "49355:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2519,
										"name": "TokenReward",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2449,
										"src": "49419:11:0"
									},
									"id": 2520,
									"nodeType": "InheritanceSpecifier",
									"src": "49419:11:0"
								}
							],
							"canonicalName": "AbstractBoost",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": false,
							"id": 3078,
							"linearizedBaseContracts": [
								3078,
								2449,
								2152,
								2036
							],
							"name": "AbstractBoost",
							"nameLocation": "49402:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 2523,
									"libraryName": {
										"id": 2521,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1195,
										"src": "49443:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "49437:27:0",
									"typeName": {
										"id": 2522,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "49456:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"anonymous": false,
									"id": 2531,
									"name": "Attach",
									"nameLocation": "49476:6:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2525,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "49499:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2531,
												"src": "49483:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2524,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49483:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2527,
												"indexed": true,
												"mutability": "mutable",
												"name": "gauge",
												"nameLocation": "49522:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2531,
												"src": "49506:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2526,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49506:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2529,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "49534:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2531,
												"src": "49529:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2528,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "49529:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49482:60:0"
									},
									"src": "49470:73:0"
								},
								{
									"anonymous": false,
									"id": 2539,
									"name": "Detach",
									"nameLocation": "49554:6:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2538,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2533,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "49577:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2539,
												"src": "49561:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2532,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49561:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2535,
												"indexed": true,
												"mutability": "mutable",
												"name": "gauge",
												"nameLocation": "49600:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2539,
												"src": "49584:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49584:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2537,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "49612:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2539,
												"src": "49607:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2536,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "49607:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49560:60:0"
									},
									"src": "49548:73:0"
								},
								{
									"anonymous": false,
									"id": 2547,
									"name": "Voted",
									"nameLocation": "49632:5:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2541,
												"indexed": true,
												"mutability": "mutable",
												"name": "voter",
												"nameLocation": "49654:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2547,
												"src": "49638:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49638:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2543,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "49666:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2547,
												"src": "49661:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2542,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "49661:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2545,
												"indexed": false,
												"mutability": "mutable",
												"name": "weight",
												"nameLocation": "49682:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2547,
												"src": "49675:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2544,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "49675:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49637:52:0"
									},
									"src": "49626:64:0"
								},
								{
									"anonymous": false,
									"id": 2553,
									"name": "Abstained",
									"nameLocation": "49701:9:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2549,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "49716:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2553,
												"src": "49711:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2548,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "49711:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2551,
												"indexed": false,
												"mutability": "mutable",
												"name": "weight",
												"nameLocation": "49732:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2553,
												"src": "49725:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2550,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "49725:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49710:29:0"
									},
									"src": "49695:45:0"
								},
								{
									"constant": false,
									"functionSelector": "96c82e57",
									"id": 2555,
									"mutability": "mutable",
									"name": "totalWeight",
									"nameLocation": "49758:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 3078,
									"src": "49746:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2554,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "49746:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3b92eb23",
									"id": 2557,
									"mutability": "immutable",
									"name": "veToken",
									"nameLocation": "49824:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 3078,
									"src": "49799:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2556,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "49799:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2559,
									"mutability": "immutable",
									"name": "base",
									"nameLocation": "49909:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 3078,
									"src": "49882:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2558,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "49882:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "a7cac846",
									"id": 2563,
									"mutability": "mutable",
									"name": "weights",
									"nameLocation": "49954:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 3078,
									"src": "49920:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
										"typeString": "mapping(address => int256)"
									},
									"typeName": {
										"id": 2562,
										"keyType": {
											"id": 2560,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "49928:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "49920:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
											"typeString": "mapping(address => int256)"
										},
										"valueType": {
											"id": 2561,
											"name": "int256",
											"nodeType": "ElementaryTypeName",
											"src": "49939:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_int256",
												"typeString": "int256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d23254b4",
									"id": 2569,
									"mutability": "mutable",
									"name": "votes",
									"nameLocation": "50036:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 3078,
									"src": "49985:56:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_int256_$_$",
										"typeString": "mapping(uint256 => mapping(address => int256))"
									},
									"typeName": {
										"id": 2568,
										"keyType": {
											"id": 2564,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "49993:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "49985:43:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_int256_$_$",
											"typeString": "mapping(uint256 => mapping(address => int256))"
										},
										"valueType": {
											"id": 2567,
											"keyType": {
												"id": 2565,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "50009:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "50001:26:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
												"typeString": "mapping(address => int256)"
											},
											"valueType": {
												"id": 2566,
												"name": "int256",
												"nodeType": "ElementaryTypeName",
												"src": "50020:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a86a366d",
									"id": 2574,
									"mutability": "mutable",
									"name": "poolVote",
									"nameLocation": "50105:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 3078,
									"src": "50071:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
										"typeString": "mapping(uint256 => address[])"
									},
									"typeName": {
										"id": 2573,
										"keyType": {
											"id": 2570,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "50079:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "50071:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
											"typeString": "mapping(uint256 => address[])"
										},
										"valueType": {
											"baseType": {
												"id": 2571,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "50087:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"id": 2572,
											"nodeType": "ArrayTypeName",
											"src": "50087:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "79e93824",
									"id": 2578,
									"mutability": "mutable",
									"name": "usedWeights",
									"nameLocation": "50164:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 3078,
									"src": "50135:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 2577,
										"keyType": {
											"id": 2575,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "50143:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "50135:21:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 2576,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "50151:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 2613,
										"nodeType": "Block",
										"src": "50458:71:0",
										"statements": [
											{
												"expression": {
													"id": 2603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2601,
														"name": "veToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2557,
														"src": "50468:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2602,
														"name": "__ve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2582,
														"src": "50478:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "50468:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2604,
												"nodeType": "ExpressionStatement",
												"src": "50468:14:0"
											},
											{
												"expression": {
													"id": 2611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2605,
														"name": "base",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2559,
														"src": "50492:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"arguments": [
																	{
																		"id": 2607,
																		"name": "__ve",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2582,
																		"src": "50508:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2606,
																	"name": "IVeToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2517,
																	"src": "50499:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IVeToken_$2517_$",
																		"typeString": "type(contract IVeToken)"
																	}
																},
																"id": 2608,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "50499:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IVeToken_$2517",
																	"typeString": "contract IVeToken"
																}
															},
															"id": 2609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "token",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2455,
															"src": "50499:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																"typeString": "function () view external returns (address)"
															}
														},
														"id": 2610,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "50499:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "50492:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2612,
												"nodeType": "ExpressionStatement",
												"src": "50492:29:0"
											}
										]
									},
									"id": 2614,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2594,
													"name": "_operatorMsg",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2580,
													"src": "50394:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 2595,
													"name": "_swapToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2585,
													"src": "50408:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IToken_$2170",
														"typeString": "contract IToken"
													}
												},
												{
													"id": 2596,
													"name": "_tokenPerBlock",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2587,
													"src": "50420:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												{
													"id": 2597,
													"name": "_startBlock",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2589,
													"src": "50436:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												{
													"id": 2598,
													"name": "_period",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2591,
													"src": "50449:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 2599,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2593,
												"name": "TokenReward",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2449,
												"src": "50382:11:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "50382:75:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2580,
												"mutability": "mutable",
												"name": "_operatorMsg",
												"nameLocation": "50242:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 2614,
												"src": "50234:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50234:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2582,
												"mutability": "mutable",
												"name": "__ve",
												"nameLocation": "50264:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2614,
												"src": "50256:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2581,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50256:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2585,
												"mutability": "mutable",
												"name": "_swapToken",
												"nameLocation": "50285:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 2614,
												"src": "50278:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IToken_$2170",
													"typeString": "contract IToken"
												},
												"typeName": {
													"id": 2584,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2583,
														"name": "IToken",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2170,
														"src": "50278:6:0"
													},
													"referencedDeclaration": 2170,
													"src": "50278:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IToken_$2170",
														"typeString": "contract IToken"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2587,
												"mutability": "mutable",
												"name": "_tokenPerBlock",
												"nameLocation": "50313:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 2614,
												"src": "50305:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2586,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50305:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2589,
												"mutability": "mutable",
												"name": "_startBlock",
												"nameLocation": "50345:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 2614,
												"src": "50337:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50337:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2591,
												"mutability": "mutable",
												"name": "_period",
												"nameLocation": "50374:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2614,
												"src": "50366:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50366:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50233:149:0"
									},
									"returnParameters": {
										"id": 2600,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50458:0:0"
									},
									"scope": 3078,
									"src": "50222:307:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2626,
										"nodeType": "Block",
										"src": "50611:41:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2622,
														"name": "poolVote",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2574,
														"src": "50628:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
															"typeString": "mapping(uint256 => address[] storage ref)"
														}
													},
													"id": 2624,
													"indexExpression": {
														"id": 2623,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2616,
														"src": "50637:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "50628:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"functionReturnParameters": 2621,
												"id": 2625,
												"nodeType": "Return",
												"src": "50621:24:0"
											}
										]
									},
									"functionSelector": "146650df",
									"id": 2627,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolVote",
									"nameLocation": "50544:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2616,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "50564:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2627,
												"src": "50556:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50556:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50555:17:0"
									},
									"returnParameters": {
										"id": 2621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2620,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2627,
												"src": "50594:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2618,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "50594:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2619,
													"nodeType": "ArrayTypeName",
													"src": "50594:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50593:18:0"
									},
									"scope": 3078,
									"src": "50535:117:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2654,
										"nodeType": "Block",
										"src": "50697:154:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2637,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "50751:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "50751:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2639,
																	"name": "_tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2629,
																	"src": "50763:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 2634,
																			"name": "veToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2557,
																			"src": "50724:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2633,
																		"name": "IVeToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2517,
																		"src": "50715:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IVeToken_$2517_$",
																			"typeString": "type(contract IVeToken)"
																		}
																	},
																	"id": 2635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "50715:17:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IVeToken_$2517",
																		"typeString": "contract IVeToken"
																	}
																},
																"id": 2636,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "isApprovedOrOwner",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2480,
																"src": "50715:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view external returns (bool)"
																}
															},
															"id": 2640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "50715:57:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2632,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "50707:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50707:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2642,
												"nodeType": "ExpressionStatement",
												"src": "50707:66:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2644,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2629,
															"src": "50790:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2643,
														"name": "_reset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2765,
														"src": "50783:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50783:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2646,
												"nodeType": "ExpressionStatement",
												"src": "50783:16:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2651,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2629,
															"src": "50835:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2648,
																	"name": "veToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2557,
																	"src": "50818:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2647,
																"name": "IVeToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2517,
																"src": "50809:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IVeToken_$2517_$",
																	"typeString": "type(contract IVeToken)"
																}
															},
															"id": 2649,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "50809:17:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IVeToken_$2517",
																"typeString": "contract IVeToken"
															}
														},
														"id": 2650,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "abstain",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2516,
														"src": "50809:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256) external"
														}
													},
													"id": 2652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50809:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2653,
												"nodeType": "ExpressionStatement",
												"src": "50809:35:0"
											}
										]
									},
									"functionSelector": "310bd74b",
									"id": 2655,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "50667:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2629,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "50678:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2655,
												"src": "50673:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2628,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "50673:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50672:15:0"
									},
									"returnParameters": {
										"id": 2631,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50697:0:0"
									},
									"scope": 3078,
									"src": "50658:193:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2764,
										"nodeType": "Block",
										"src": "50897:809:0",
										"statements": [
											{
												"assignments": [
													2664
												],
												"declarations": [
													{
														"constant": false,
														"id": 2664,
														"mutability": "mutable",
														"name": "_poolVote",
														"nameLocation": "50925:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 2764,
														"src": "50907:27:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 2662,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "50907:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2663,
															"nodeType": "ArrayTypeName",
															"src": "50907:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2668,
												"initialValue": {
													"baseExpression": {
														"id": 2665,
														"name": "poolVote",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2574,
														"src": "50937:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
															"typeString": "mapping(uint256 => address[] storage ref)"
														}
													},
													"id": 2667,
													"indexExpression": {
														"id": 2666,
														"name": "_tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2657,
														"src": "50946:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "50937:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "50907:48:0"
											},
											{
												"assignments": [
													2670
												],
												"declarations": [
													{
														"constant": false,
														"id": 2670,
														"mutability": "mutable",
														"name": "_poolVoteCnt",
														"nameLocation": "50970:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 2764,
														"src": "50965:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2669,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "50965:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2673,
												"initialValue": {
													"expression": {
														"id": 2671,
														"name": "_poolVote",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2664,
														"src": "50985:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
															"typeString": "address[] storage pointer"
														}
													},
													"id": 2672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "50985:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "50965:36:0"
											},
											{
												"assignments": [
													2675
												],
												"declarations": [
													{
														"constant": false,
														"id": 2675,
														"mutability": "mutable",
														"name": "_totalWeight",
														"nameLocation": "51018:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 2764,
														"src": "51011:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2674,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "51011:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2677,
												"initialValue": {
													"hexValue": "30",
													"id": 2676,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "51033:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "51011:23:0"
											},
											{
												"body": {
													"id": 2744,
													"nodeType": "Block",
													"src": "51086:498:0",
													"statements": [
														{
															"assignments": [
																2689
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2689,
																	"mutability": "mutable",
																	"name": "_pool",
																	"nameLocation": "51108:5:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2744,
																	"src": "51100:13:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 2688,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "51100:7:0",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2693,
															"initialValue": {
																"baseExpression": {
																	"id": 2690,
																	"name": "_poolVote",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2664,
																	"src": "51116:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																		"typeString": "address[] storage pointer"
																	}
																},
																"id": 2692,
																"indexExpression": {
																	"id": 2691,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2679,
																	"src": "51126:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "51116:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "51100:28:0"
														},
														{
															"assignments": [
																2695
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2695,
																	"mutability": "mutable",
																	"name": "_votes",
																	"nameLocation": "51149:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2744,
																	"src": "51142:13:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	},
																	"typeName": {
																		"id": 2694,
																		"name": "int256",
																		"nodeType": "ElementaryTypeName",
																		"src": "51142:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2701,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 2696,
																		"name": "votes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2569,
																		"src": "51158:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_int256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => int256))"
																		}
																	},
																	"id": 2698,
																	"indexExpression": {
																		"id": 2697,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2657,
																		"src": "51164:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "51158:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																		"typeString": "mapping(address => int256)"
																	}
																},
																"id": 2700,
																"indexExpression": {
																	"id": 2699,
																	"name": "_pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2689,
																	"src": "51174:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "51158:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "51142:38:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2702,
																	"name": "_votes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2695,
																	"src": "51199:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2703,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "51209:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "51199:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2743,
															"nodeType": "IfStatement",
															"src": "51195:379:0",
															"trueBody": {
																"id": 2742,
																"nodeType": "Block",
																"src": "51212:362:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2706,
																					"name": "_pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2689,
																					"src": "51246:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2705,
																				"name": "_updatePoolInfo",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3070,
																				"src": "51230:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																					"typeString": "function (address)"
																				}
																			},
																			"id": 2707,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "51230:22:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2708,
																		"nodeType": "ExpressionStatement",
																		"src": "51230:22:0"
																	},
																	{
																		"expression": {
																			"id": 2713,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 2709,
																					"name": "weights",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2563,
																					"src": "51270:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																						"typeString": "mapping(address => int256)"
																					}
																				},
																				"id": 2711,
																				"indexExpression": {
																					"id": 2710,
																					"name": "_pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2689,
																					"src": "51278:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "51270:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "-=",
																			"rightHandSide": {
																				"id": 2712,
																				"name": "_votes",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2695,
																				"src": "51288:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "51270:24:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"id": 2714,
																		"nodeType": "ExpressionStatement",
																		"src": "51270:24:0"
																	},
																	{
																		"expression": {
																			"id": 2721,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"baseExpression": {
																						"id": 2715,
																						"name": "votes",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2569,
																						"src": "51312:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_int256_$_$",
																							"typeString": "mapping(uint256 => mapping(address => int256))"
																						}
																					},
																					"id": 2718,
																					"indexExpression": {
																						"id": 2716,
																						"name": "_tokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2657,
																						"src": "51318:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "51312:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																						"typeString": "mapping(address => int256)"
																					}
																				},
																				"id": 2719,
																				"indexExpression": {
																					"id": 2717,
																					"name": "_pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2689,
																					"src": "51328:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "51312:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "-=",
																			"rightHandSide": {
																				"id": 2720,
																				"name": "_votes",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2695,
																				"src": "51338:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "51312:32:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"id": 2722,
																		"nodeType": "ExpressionStatement",
																		"src": "51312:32:0"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2725,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2723,
																				"name": "_votes",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2695,
																				"src": "51366:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 2724,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "51375:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "51366:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"id": 2735,
																			"nodeType": "Block",
																			"src": "51447:63:0",
																			"statements": [
																				{
																					"expression": {
																						"id": 2733,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 2731,
																							"name": "_totalWeight",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2675,
																							"src": "51469:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "-=",
																						"rightHandSide": {
																							"id": 2732,
																							"name": "_votes",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2695,
																							"src": "51485:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						},
																						"src": "51469:22:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"id": 2734,
																					"nodeType": "ExpressionStatement",
																					"src": "51469:22:0"
																				}
																			]
																		},
																		"id": 2736,
																		"nodeType": "IfStatement",
																		"src": "51362:148:0",
																		"trueBody": {
																			"id": 2730,
																			"nodeType": "Block",
																			"src": "51378:63:0",
																			"statements": [
																				{
																					"expression": {
																						"id": 2728,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 2726,
																							"name": "_totalWeight",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2675,
																							"src": "51400:12:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "+=",
																						"rightHandSide": {
																							"id": 2727,
																							"name": "_votes",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2695,
																							"src": "51416:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						},
																						"src": "51400:22:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"id": 2729,
																					"nodeType": "ExpressionStatement",
																					"src": "51400:22:0"
																				}
																			]
																		}
																	},
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 2738,
																					"name": "_tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2657,
																					"src": "51542:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 2739,
																					"name": "_votes",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2695,
																					"src": "51552:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"id": 2737,
																				"name": "Abstained",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2553,
																				"src": "51532:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_int256_$returns$__$",
																					"typeString": "function (uint256,int256)"
																				}
																			},
																			"id": 2740,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "51532:27:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2741,
																		"nodeType": "EmitStatement",
																		"src": "51527:32:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2682,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2679,
														"src": "51062:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2683,
														"name": "_poolVoteCnt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2670,
														"src": "51066:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "51062:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2745,
												"initializationExpression": {
													"assignments": [
														2679
													],
													"declarations": [
														{
															"constant": false,
															"id": 2679,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "51055:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 2745,
															"src": "51050:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2678,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "51050:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2681,
													"initialValue": {
														"hexValue": "30",
														"id": 2680,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "51059:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "51050:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 2686,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "51080:4:0",
														"subExpression": {
															"id": 2685,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2679,
															"src": "51080:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2687,
													"nodeType": "ExpressionStatement",
													"src": "51080:4:0"
												},
												"nodeType": "ForStatement",
												"src": "51045:539:0"
											},
											{
												"expression": {
													"id": 2751,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2746,
														"name": "totalWeight",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2555,
														"src": "51593:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2749,
																"name": "_totalWeight",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2675,
																"src": "51616:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2748,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "51608:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 2747,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "51608:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2750,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "51608:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "51593:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2752,
												"nodeType": "ExpressionStatement",
												"src": "51593:36:0"
											},
											{
												"expression": {
													"id": 2757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2753,
															"name": "usedWeights",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2578,
															"src": "51639:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2755,
														"indexExpression": {
															"id": 2754,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2657,
															"src": "51651:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "51639:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2756,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "51663:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "51639:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2758,
												"nodeType": "ExpressionStatement",
												"src": "51639:25:0"
											},
											{
												"expression": {
													"id": 2762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "51674:25:0",
													"subExpression": {
														"baseExpression": {
															"id": 2759,
															"name": "poolVote",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2574,
															"src": "51681:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
																"typeString": "mapping(uint256 => address[] storage ref)"
															}
														},
														"id": 2761,
														"indexExpression": {
															"id": 2760,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2657,
															"src": "51690:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "51681:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage",
															"typeString": "address[] storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2763,
												"nodeType": "ExpressionStatement",
												"src": "51674:25:0"
											}
										]
									},
									"id": 2765,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reset",
									"nameLocation": "50866:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2657,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "50878:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2765,
												"src": "50873:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2656,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "50873:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50872:15:0"
									},
									"returnParameters": {
										"id": 2659,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50897:0:0"
									},
									"scope": 3078,
									"src": "50857:849:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2966,
										"nodeType": "Block",
										"src": "51805:1393:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2777,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2767,
															"src": "51822:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2776,
														"name": "_reset",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2765,
														"src": "51815:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2778,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51815:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2779,
												"nodeType": "ExpressionStatement",
												"src": "51815:16:0"
											},
											{
												"assignments": [
													2781
												],
												"declarations": [
													{
														"constant": false,
														"id": 2781,
														"mutability": "mutable",
														"name": "_poolCnt",
														"nameLocation": "51846:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 2966,
														"src": "51841:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2780,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "51841:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2784,
												"initialValue": {
													"expression": {
														"id": 2782,
														"name": "_poolVote",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2770,
														"src": "51857:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"id": 2783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "51857:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "51841:32:0"
											},
											{
												"assignments": [
													2786
												],
												"declarations": [
													{
														"constant": false,
														"id": 2786,
														"mutability": "mutable",
														"name": "_weight",
														"nameLocation": "51890:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 2966,
														"src": "51883:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2785,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "51883:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2796,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2793,
																	"name": "_tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2767,
																	"src": "51938:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 2790,
																			"name": "veToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2557,
																			"src": "51916:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2789,
																		"name": "IVeToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2517,
																		"src": "51907:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IVeToken_$2517_$",
																			"typeString": "type(contract IVeToken)"
																		}
																	},
																	"id": 2791,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "51907:17:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IVeToken_$2517",
																		"typeString": "contract IVeToken"
																	}
																},
																"id": 2792,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOfNFT",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2471,
																"src": "51907:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) view external returns (uint256)"
																}
															},
															"id": 2794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "51907:40:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2788,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "51900:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int256_$",
															"typeString": "type(int256)"
														},
														"typeName": {
															"id": 2787,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "51900:6:0",
															"typeDescriptions": {}
														}
													},
													"id": 2795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51900:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "51883:65:0"
											},
											{
												"assignments": [
													2798
												],
												"declarations": [
													{
														"constant": false,
														"id": 2798,
														"mutability": "mutable",
														"name": "_totalVoteWeight",
														"nameLocation": "51965:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 2966,
														"src": "51958:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2797,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "51958:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2800,
												"initialValue": {
													"hexValue": "30",
													"id": 2799,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "51984:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "51958:27:0"
											},
											{
												"assignments": [
													2802
												],
												"declarations": [
													{
														"constant": false,
														"id": 2802,
														"mutability": "mutable",
														"name": "_totalWeight",
														"nameLocation": "52002:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 2966,
														"src": "51995:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2801,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "51995:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2804,
												"initialValue": {
													"hexValue": "30",
													"id": 2803,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "52017:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "51995:23:0"
											},
											{
												"assignments": [
													2806
												],
												"declarations": [
													{
														"constant": false,
														"id": 2806,
														"mutability": "mutable",
														"name": "_usedWeight",
														"nameLocation": "52035:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 2966,
														"src": "52028:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2805,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "52028:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2808,
												"initialValue": {
													"hexValue": "30",
													"id": 2807,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "52049:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "52028:22:0"
											},
											{
												"body": {
													"id": 2835,
													"nodeType": "Block",
													"src": "52097:90:0",
													"statements": [
														{
															"expression": {
																"id": 2833,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2819,
																	"name": "_totalVoteWeight",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2798,
																	"src": "52111:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2824,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 2820,
																				"name": "_weights",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2773,
																				"src": "52131:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
																					"typeString": "int256[] memory"
																				}
																			},
																			"id": 2822,
																			"indexExpression": {
																				"id": 2821,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2810,
																				"src": "52140:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "52131:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2823,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "52145:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "52131:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 2831,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "52163:13:0",
																		"subExpression": {
																			"baseExpression": {
																				"id": 2828,
																				"name": "_weights",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2773,
																				"src": "52165:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
																					"typeString": "int256[] memory"
																				}
																			},
																			"id": 2830,
																			"indexExpression": {
																				"id": 2829,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2810,
																				"src": "52174:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "52165:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 2832,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "52131:45:0",
																	"trueExpression": {
																		"baseExpression": {
																			"id": 2825,
																			"name": "_weights",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2773,
																			"src": "52149:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
																				"typeString": "int256[] memory"
																			}
																		},
																		"id": 2827,
																		"indexExpression": {
																			"id": 2826,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2810,
																			"src": "52158:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "52149:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "52111:65:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 2834,
															"nodeType": "ExpressionStatement",
															"src": "52111:65:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2813,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2810,
														"src": "52078:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2814,
														"name": "_poolCnt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2781,
														"src": "52082:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "52078:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2836,
												"initializationExpression": {
													"assignments": [
														2810
													],
													"declarations": [
														{
															"constant": false,
															"id": 2810,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "52071:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 2836,
															"src": "52066:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2809,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "52066:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2812,
													"initialValue": {
														"hexValue": "30",
														"id": 2811,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "52075:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "52066:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 2817,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "52092:3:0",
														"subExpression": {
															"id": 2816,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2810,
															"src": "52092:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2818,
													"nodeType": "ExpressionStatement",
													"src": "52092:3:0"
												},
												"nodeType": "ForStatement",
												"src": "52061:126:0"
											},
											{
												"body": {
													"id": 2937,
													"nodeType": "Block",
													"src": "52233:794:0",
													"statements": [
														{
															"assignments": [
																2848
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2848,
																	"mutability": "mutable",
																	"name": "_pool",
																	"nameLocation": "52255:5:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2937,
																	"src": "52247:13:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 2847,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "52247:7:0",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2852,
															"initialValue": {
																"baseExpression": {
																	"id": 2849,
																	"name": "_poolVote",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2770,
																	"src": "52263:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 2851,
																"indexExpression": {
																	"id": 2850,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2838,
																	"src": "52273:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "52263:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "52247:28:0"
														},
														{
															"condition": {
																"arguments": [
																	{
																		"id": 2854,
																		"name": "_pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2848,
																		"src": "52309:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2853,
																	"name": "isGaugeForPool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3077,
																	"src": "52294:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address) view returns (bool)"
																	}
																},
																"id": 2855,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "52294:21:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2936,
															"nodeType": "IfStatement",
															"src": "52290:727:0",
															"trueBody": {
																"id": 2935,
																"nodeType": "Block",
																"src": "52317:700:0",
																"statements": [
																	{
																		"assignments": [
																			2857
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2857,
																				"mutability": "mutable",
																				"name": "_poolWeight",
																				"nameLocation": "52342:11:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 2935,
																				"src": "52335:18:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"typeName": {
																					"id": 2856,
																					"name": "int256",
																					"nodeType": "ElementaryTypeName",
																					"src": "52335:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2865,
																		"initialValue": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2864,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 2862,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"baseExpression": {
																						"id": 2858,
																						"name": "_weights",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2773,
																						"src": "52356:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
																							"typeString": "int256[] memory"
																						}
																					},
																					"id": 2860,
																					"indexExpression": {
																						"id": 2859,
																						"name": "i",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2838,
																						"src": "52365:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "52356:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 2861,
																					"name": "_weight",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2786,
																					"src": "52370:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "52356:21:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 2863,
																				"name": "_totalVoteWeight",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2798,
																				"src": "52380:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "52356:40:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "52335:61:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					},
																					"id": 2873,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"baseExpression": {
																							"baseExpression": {
																								"id": 2867,
																								"name": "votes",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2569,
																								"src": "52422:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_int256_$_$",
																									"typeString": "mapping(uint256 => mapping(address => int256))"
																								}
																							},
																							"id": 2869,
																							"indexExpression": {
																								"id": 2868,
																								"name": "_tokenId",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2767,
																								"src": "52428:8:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "52422:15:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																								"typeString": "mapping(address => int256)"
																							}
																						},
																						"id": 2871,
																						"indexExpression": {
																							"id": 2870,
																							"name": "_pool",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2848,
																							"src": "52438:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "52422:22:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 2872,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "52448:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "52422:27:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "746f6b656e20706f6f6c2069732030",
																					"id": 2874,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "52451:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_0f59f276028eb3edbb11af1c87653139d4936680909681dab8fd16eda0979be8",
																						"typeString": "literal_string \"token pool is 0\""
																					},
																					"value": "token pool is 0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_0f59f276028eb3edbb11af1c87653139d4936680909681dab8fd16eda0979be8",
																						"typeString": "literal_string \"token pool is 0\""
																					}
																				],
																				"id": 2866,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "52414:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 2875,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "52414:55:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2876,
																		"nodeType": "ExpressionStatement",
																		"src": "52414:55:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					},
																					"id": 2880,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2878,
																						"name": "_poolWeight",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2857,
																						"src": "52495:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 2879,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "52510:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "52495:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "7765696768742069732030",
																					"id": 2881,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "52513:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_dbaf3424ad2e7c16209d8ac14e463c2077844cc22131ae81d8b662c6ff9d007b",
																						"typeString": "literal_string \"weight is 0\""
																					},
																					"value": "weight is 0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_dbaf3424ad2e7c16209d8ac14e463c2077844cc22131ae81d8b662c6ff9d007b",
																						"typeString": "literal_string \"weight is 0\""
																					}
																				],
																				"id": 2877,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "52487:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 2882,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "52487:40:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2883,
																		"nodeType": "ExpressionStatement",
																		"src": "52487:40:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2885,
																					"name": "_pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2848,
																					"src": "52561:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 2884,
																				"name": "_updatePoolInfo",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3070,
																				"src": "52545:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																					"typeString": "function (address)"
																				}
																			},
																			"id": 2886,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "52545:22:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2887,
																		"nodeType": "ExpressionStatement",
																		"src": "52545:22:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2892,
																					"name": "_pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2848,
																					"src": "52610:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"baseExpression": {
																						"id": 2888,
																						"name": "poolVote",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2574,
																						"src": "52586:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
																							"typeString": "mapping(uint256 => address[] storage ref)"
																						}
																					},
																					"id": 2890,
																					"indexExpression": {
																						"id": 2889,
																						"name": "_tokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2767,
																						"src": "52595:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "52586:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 2891,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "push",
																				"nodeType": "MemberAccess",
																				"src": "52586:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
																					"typeString": "function (address[] storage pointer,address)"
																				}
																			},
																			"id": 2893,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "52586:30:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2894,
																		"nodeType": "ExpressionStatement",
																		"src": "52586:30:0"
																	},
																	{
																		"expression": {
																			"id": 2899,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 2895,
																					"name": "weights",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2563,
																					"src": "52635:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																						"typeString": "mapping(address => int256)"
																					}
																				},
																				"id": 2897,
																				"indexExpression": {
																					"id": 2896,
																					"name": "_pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2848,
																					"src": "52643:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "52635:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 2898,
																				"name": "_poolWeight",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2857,
																				"src": "52653:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "52635:29:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"id": 2900,
																		"nodeType": "ExpressionStatement",
																		"src": "52635:29:0"
																	},
																	{
																		"expression": {
																			"id": 2907,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"baseExpression": {
																						"id": 2901,
																						"name": "votes",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2569,
																						"src": "52682:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_int256_$_$",
																							"typeString": "mapping(uint256 => mapping(address => int256))"
																						}
																					},
																					"id": 2904,
																					"indexExpression": {
																						"id": 2902,
																						"name": "_tokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2767,
																						"src": "52688:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "52682:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																						"typeString": "mapping(address => int256)"
																					}
																				},
																				"id": 2905,
																				"indexExpression": {
																					"id": 2903,
																					"name": "_pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2848,
																					"src": "52698:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "52682:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 2906,
																				"name": "_poolWeight",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2857,
																				"src": "52708:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "52682:37:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"id": 2908,
																		"nodeType": "ExpressionStatement",
																		"src": "52682:37:0"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2911,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2909,
																				"name": "_poolWeight",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2857,
																				"src": "52741:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 2910,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "52755:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "52741:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseBody": {
																			"id": 2918,
																			"nodeType": "Block",
																			"src": "52783:68:0",
																			"statements": [
																				{
																					"expression": {
																						"id": 2916,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 2913,
																							"name": "_poolWeight",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2857,
																							"src": "52805:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"id": 2915,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "UnaryOperation",
																							"operator": "-",
																							"prefix": true,
																							"src": "52819:13:0",
																							"subExpression": {
																								"id": 2914,
																								"name": "_poolWeight",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2857,
																								"src": "52821:11:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_int256",
																									"typeString": "int256"
																								}
																							},
																							"typeDescriptions": {
																								"typeIdentifier": "t_int256",
																								"typeString": "int256"
																							}
																						},
																						"src": "52805:27:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					},
																					"id": 2917,
																					"nodeType": "ExpressionStatement",
																					"src": "52805:27:0"
																				}
																			]
																		},
																		"id": 2919,
																		"nodeType": "IfStatement",
																		"src": "52737:114:0",
																		"trueBody": {
																			"id": 2912,
																			"nodeType": "Block",
																			"src": "52758:19:0",
																			"statements": []
																		}
																	},
																	{
																		"expression": {
																			"id": 2922,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2920,
																				"name": "_usedWeight",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2806,
																				"src": "52868:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 2921,
																				"name": "_poolWeight",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2857,
																				"src": "52883:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "52868:26:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"id": 2923,
																		"nodeType": "ExpressionStatement",
																		"src": "52868:26:0"
																	},
																	{
																		"expression": {
																			"id": 2926,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2924,
																				"name": "_totalWeight",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2802,
																				"src": "52912:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 2925,
																				"name": "_poolWeight",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2857,
																				"src": "52928:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "52912:27:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"id": 2927,
																		"nodeType": "ExpressionStatement",
																		"src": "52912:27:0"
																	},
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 2929,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "52968:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 2930,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "52968:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2931,
																					"name": "_tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2767,
																					"src": "52980:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 2932,
																					"name": "_poolWeight",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2857,
																					"src": "52990:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"id": 2928,
																				"name": "Voted",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2547,
																				"src": "52962:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_int256_$returns$__$",
																					"typeString": "function (address,uint256,int256)"
																				}
																			},
																			"id": 2933,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "52962:40:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2934,
																		"nodeType": "EmitStatement",
																		"src": "52957:45:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2841,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2838,
														"src": "52214:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2842,
														"name": "_poolCnt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2781,
														"src": "52218:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "52214:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2938,
												"initializationExpression": {
													"assignments": [
														2838
													],
													"declarations": [
														{
															"constant": false,
															"id": 2838,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "52207:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 2938,
															"src": "52202:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2837,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "52202:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2840,
													"initialValue": {
														"hexValue": "30",
														"id": 2839,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "52211:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "52202:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 2845,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "52228:3:0",
														"subExpression": {
															"id": 2844,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2838,
															"src": "52228:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2846,
													"nodeType": "ExpressionStatement",
													"src": "52228:3:0"
												},
												"nodeType": "ForStatement",
												"src": "52197:830:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2939,
														"name": "_usedWeight",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2806,
														"src": "53040:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2940,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "53054:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "53040:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2949,
												"nodeType": "IfStatement",
												"src": "53036:55:0",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"id": 2946,
																"name": "_tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2767,
																"src": "53082:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 2943,
																		"name": "veToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2557,
																		"src": "53066:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2942,
																	"name": "IVeToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2517,
																	"src": "53057:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IVeToken_$2517_$",
																		"typeString": "type(contract IVeToken)"
																	}
																},
																"id": 2944,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "53057:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IVeToken_$2517",
																	"typeString": "contract IVeToken"
																}
															},
															"id": 2945,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "voting",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2511,
															"src": "53057:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
																"typeString": "function (uint256) external"
															}
														},
														"id": 2947,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "53057:34:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 2948,
													"nodeType": "ExpressionStatement",
													"src": "53057:34:0"
												}
											},
											{
												"expression": {
													"id": 2955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2950,
														"name": "totalWeight",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2555,
														"src": "53101:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2953,
																"name": "_totalWeight",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2802,
																"src": "53124:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2952,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "53116:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 2951,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "53116:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2954,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "53116:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "53101:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2956,
												"nodeType": "ExpressionStatement",
												"src": "53101:36:0"
											},
											{
												"expression": {
													"id": 2964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2957,
															"name": "usedWeights",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2578,
															"src": "53147:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 2959,
														"indexExpression": {
															"id": 2958,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2767,
															"src": "53159:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "53147:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2962,
																"name": "_usedWeight",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2806,
																"src": "53179:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 2961,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "53171:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 2960,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "53171:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2963,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "53171:20:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "53147:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2965,
												"nodeType": "ExpressionStatement",
												"src": "53147:44:0"
											}
										]
									},
									"id": 2967,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_vote",
									"nameLocation": "51721:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2767,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "51732:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2967,
												"src": "51727:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2766,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "51727:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2770,
												"mutability": "mutable",
												"name": "_poolVote",
												"nameLocation": "51759:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 2967,
												"src": "51742:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 2768,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "51742:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 2769,
													"nodeType": "ArrayTypeName",
													"src": "51742:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2773,
												"mutability": "mutable",
												"name": "_weights",
												"nameLocation": "51786:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2967,
												"src": "51770:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
													"typeString": "int256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2771,
														"name": "int256",
														"nodeType": "ElementaryTypeName",
														"src": "51770:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2772,
													"nodeType": "ArrayTypeName",
													"src": "51770:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int256_$dyn_storage_ptr",
														"typeString": "int256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51726:69:0"
									},
									"returnParameters": {
										"id": 2775,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "51805:0:0"
									},
									"scope": 3078,
									"src": "51712:1486:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3027,
										"nodeType": "Block",
										"src": "53242:327:0",
										"statements": [
											{
												"assignments": [
													2976
												],
												"declarations": [
													{
														"constant": false,
														"id": 2976,
														"mutability": "mutable",
														"name": "_poolVote",
														"nameLocation": "53269:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 3027,
														"src": "53252:26:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 2974,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "53252:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2975,
															"nodeType": "ArrayTypeName",
															"src": "53252:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2980,
												"initialValue": {
													"baseExpression": {
														"id": 2977,
														"name": "poolVote",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2574,
														"src": "53281:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_array$_t_address_$dyn_storage_$",
															"typeString": "mapping(uint256 => address[] storage ref)"
														}
													},
													"id": 2979,
													"indexExpression": {
														"id": 2978,
														"name": "_tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2969,
														"src": "53290:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "53281:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "53252:47:0"
											},
											{
												"assignments": [
													2982
												],
												"declarations": [
													{
														"constant": false,
														"id": 2982,
														"mutability": "mutable",
														"name": "_poolCnt",
														"nameLocation": "53314:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 3027,
														"src": "53309:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2981,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "53309:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2985,
												"initialValue": {
													"expression": {
														"id": 2983,
														"name": "_poolVote",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2976,
														"src": "53325:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[] memory"
														}
													},
													"id": 2984,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "53325:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "53309:32:0"
											},
											{
												"assignments": [
													2990
												],
												"declarations": [
													{
														"constant": false,
														"id": 2990,
														"mutability": "mutable",
														"name": "_weights",
														"nameLocation": "53367:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 3027,
														"src": "53351:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
															"typeString": "int256[]"
														},
														"typeName": {
															"baseType": {
																"id": 2988,
																"name": "int256",
																"nodeType": "ElementaryTypeName",
																"src": "53351:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 2989,
															"nodeType": "ArrayTypeName",
															"src": "53351:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_int256_$dyn_storage_ptr",
																"typeString": "int256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2996,
												"initialValue": {
													"arguments": [
														{
															"id": 2994,
															"name": "_poolCnt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2982,
															"src": "53391:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2993,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "53378:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_int256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (int256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 2991,
																"name": "int256",
																"nodeType": "ElementaryTypeName",
																"src": "53382:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 2992,
															"nodeType": "ArrayTypeName",
															"src": "53382:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_int256_$dyn_storage_ptr",
																"typeString": "int256[]"
															}
														}
													},
													"id": 2995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "53378:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
														"typeString": "int256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "53351:49:0"
											},
											{
												"body": {
													"id": 3019,
													"nodeType": "Block",
													"src": "53448:68:0",
													"statements": [
														{
															"expression": {
																"id": 3017,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 3007,
																		"name": "_weights",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2990,
																		"src": "53462:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
																			"typeString": "int256[] memory"
																		}
																	},
																	"id": 3009,
																	"indexExpression": {
																		"id": 3008,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2998,
																		"src": "53471:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "53462:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 3010,
																			"name": "votes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2569,
																			"src": "53476:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_int256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => int256))"
																			}
																		},
																		"id": 3012,
																		"indexExpression": {
																			"id": 3011,
																			"name": "_tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2969,
																			"src": "53482:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "53476:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_int256_$",
																			"typeString": "mapping(address => int256)"
																		}
																	},
																	"id": 3016,
																	"indexExpression": {
																		"baseExpression": {
																			"id": 3013,
																			"name": "_poolVote",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2976,
																			"src": "53492:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 3015,
																		"indexExpression": {
																			"id": 3014,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2998,
																			"src": "53502:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "53492:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "53476:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "53462:43:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"id": 3018,
															"nodeType": "ExpressionStatement",
															"src": "53462:43:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3001,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2998,
														"src": "53428:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 3002,
														"name": "_poolCnt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2982,
														"src": "53432:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "53428:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3020,
												"initializationExpression": {
													"assignments": [
														2998
													],
													"declarations": [
														{
															"constant": false,
															"id": 2998,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "53421:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 3020,
															"src": "53416:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2997,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "53416:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3000,
													"initialValue": {
														"hexValue": "30",
														"id": 2999,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "53425:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "53416:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 3005,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "53442:4:0",
														"subExpression": {
															"id": 3004,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2998,
															"src": "53442:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3006,
													"nodeType": "ExpressionStatement",
													"src": "53442:4:0"
												},
												"nodeType": "ForStatement",
												"src": "53411:105:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3022,
															"name": "_tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2969,
															"src": "53532:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3023,
															"name": "_poolVote",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2976,
															"src": "53542:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														{
															"id": 3024,
															"name": "_weights",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2990,
															"src": "53553:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
																"typeString": "int256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_int256_$dyn_memory_ptr",
																"typeString": "int256[] memory"
															}
														],
														"id": 3021,
														"name": "_vote",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2967,
														"src": "53526:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_int256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (uint256,address[] memory,int256[] memory)"
														}
													},
													"id": 3025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "53526:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3026,
												"nodeType": "ExpressionStatement",
												"src": "53526:36:0"
											}
										]
									},
									"functionSelector": "32145f90",
									"id": 3028,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "poke",
									"nameLocation": "53213:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2969,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "53223:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 3028,
												"src": "53218:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2968,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "53218:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53217:15:0"
									},
									"returnParameters": {
										"id": 2971,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53242:0:0"
									},
									"scope": 3078,
									"src": "53204:365:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3064,
										"nodeType": "Block",
										"src": "53671:181:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 3044,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "53725:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 3045,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "53725:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 3046,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3030,
																	"src": "53737:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 3041,
																			"name": "veToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2557,
																			"src": "53698:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 3040,
																		"name": "IVeToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2517,
																		"src": "53689:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IVeToken_$2517_$",
																			"typeString": "type(contract IVeToken)"
																		}
																	},
																	"id": 3042,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "53689:17:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IVeToken_$2517",
																		"typeString": "contract IVeToken"
																	}
																},
																"id": 3043,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "isApprovedOrOwner",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2480,
																"src": "53689:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) view external returns (bool)"
																}
															},
															"id": 3047,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "53689:56:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3039,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "53681:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 3048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "53681:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3049,
												"nodeType": "ExpressionStatement",
												"src": "53681:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3055,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3051,
																	"name": "_poolVote",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3033,
																	"src": "53764:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																		"typeString": "address[] calldata"
																	}
																},
																"id": 3052,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "53764:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 3053,
																	"name": "_weights",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3036,
																	"src": "53784:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_int256_$dyn_calldata_ptr",
																		"typeString": "int256[] calldata"
																	}
																},
																"id": 3054,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "53784:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "53764:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3050,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "53756:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 3056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "53756:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3057,
												"nodeType": "ExpressionStatement",
												"src": "53756:44:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3059,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3030,
															"src": "53816:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3060,
															"name": "_poolVote",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3033,
															"src": "53825:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															}
														},
														{
															"id": 3061,
															"name": "_weights",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3036,
															"src": "53836:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_int256_$dyn_calldata_ptr",
																"typeString": "int256[] calldata"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
																"typeString": "address[] calldata"
															},
															{
																"typeIdentifier": "t_array$_t_int256_$dyn_calldata_ptr",
																"typeString": "int256[] calldata"
															}
														],
														"id": 3058,
														"name": "_vote",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2967,
														"src": "53810:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_int256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (uint256,address[] memory,int256[] memory)"
														}
													},
													"id": 3062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "53810:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3063,
												"nodeType": "ExpressionStatement",
												"src": "53810:35:0"
											}
										]
									},
									"functionSelector": "fecdad60",
									"id": 3065,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "vote",
									"nameLocation": "53585:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3030,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "53595:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3065,
												"src": "53590:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3029,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "53590:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3033,
												"mutability": "mutable",
												"name": "_poolVote",
												"nameLocation": "53623:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 3065,
												"src": "53604:28:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 3031,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "53604:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 3032,
													"nodeType": "ArrayTypeName",
													"src": "53604:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3036,
												"mutability": "mutable",
												"name": "_weights",
												"nameLocation": "53652:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 3065,
												"src": "53634:26:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int256_$dyn_calldata_ptr",
													"typeString": "int256[]"
												},
												"typeName": {
													"baseType": {
														"id": 3034,
														"name": "int256",
														"nodeType": "ElementaryTypeName",
														"src": "53634:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3035,
													"nodeType": "ArrayTypeName",
													"src": "53634:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int256_$dyn_storage_ptr",
														"typeString": "int256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53589:72:0"
									},
									"returnParameters": {
										"id": 3038,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53671:0:0"
									},
									"scope": 3078,
									"src": "53576:276:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"id": 3070,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_updatePoolInfo",
									"nameLocation": "53868:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3067,
												"mutability": "mutable",
												"name": "_pool",
												"nameLocation": "53892:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3070,
												"src": "53884:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3066,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53884:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53883:15:0"
									},
									"returnParameters": {
										"id": 3069,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53915:0:0"
									},
									"scope": 3078,
									"src": "53859:57:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"id": 3077,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isGaugeForPool",
									"nameLocation": "53931:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3072,
												"mutability": "mutable",
												"name": "_pool",
												"nameLocation": "53954:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3077,
												"src": "53946:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3071,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53946:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53945:15:0"
									},
									"returnParameters": {
										"id": 3076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3075,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3077,
												"src": "53992:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3074,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "53992:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53991:6:0"
									},
									"scope": 3078,
									"src": "53922:76:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 3776,
							"src": "49384:4616:0",
							"usedErrors": []
						},
						{
							"id": 3079,
							"literals": [
								"solidity",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "54037:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3080,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 126,
										"src": "54084:15:0"
									},
									"id": 3081,
									"nodeType": "InheritanceSpecifier",
									"src": "54084:15:0"
								},
								{
									"baseName": {
										"id": 3082,
										"name": "AbstractBoost",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3078,
										"src": "54101:13:0"
									},
									"id": 3083,
									"nodeType": "InheritanceSpecifier",
									"src": "54101:13:0"
								}
							],
							"canonicalName": "Boost",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3775,
							"linearizedBaseContracts": [
								3775,
								3078,
								2449,
								2152,
								2036,
								126
							],
							"name": "Boost",
							"nameLocation": "54075:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 3086,
									"libraryName": {
										"id": 3084,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1195,
										"src": "54127:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "54121:27:0",
									"typeName": {
										"id": 3085,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "54140:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"anonymous": false,
									"id": 3094,
									"name": "GaugeCreated",
									"nameLocation": "54160:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3088,
												"indexed": true,
												"mutability": "mutable",
												"name": "gauge",
												"nameLocation": "54189:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3094,
												"src": "54173:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3087,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54173:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3090,
												"indexed": false,
												"mutability": "mutable",
												"name": "creator",
												"nameLocation": "54204:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3094,
												"src": "54196:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3089,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54196:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3092,
												"indexed": true,
												"mutability": "mutable",
												"name": "pool",
												"nameLocation": "54229:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3094,
												"src": "54213:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3091,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54213:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54172:62:0"
									},
									"src": "54154:81:0"
								},
								{
									"anonymous": false,
									"id": 3104,
									"name": "Deposit",
									"nameLocation": "54247:7:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3096,
												"indexed": true,
												"mutability": "mutable",
												"name": "lp",
												"nameLocation": "54271:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 3104,
												"src": "54255:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3095,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54255:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3098,
												"indexed": true,
												"mutability": "mutable",
												"name": "gauge",
												"nameLocation": "54291:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3104,
												"src": "54275:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3097,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54275:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3100,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "54303:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3104,
												"src": "54298:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3099,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "54298:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3102,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "54317:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3104,
												"src": "54312:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3101,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "54312:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54254:70:0"
									},
									"src": "54241:84:0"
								},
								{
									"anonymous": false,
									"id": 3114,
									"name": "Withdraw",
									"nameLocation": "54336:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3113,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3106,
												"indexed": true,
												"mutability": "mutable",
												"name": "lp",
												"nameLocation": "54361:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 3114,
												"src": "54345:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54345:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3108,
												"indexed": true,
												"mutability": "mutable",
												"name": "gauge",
												"nameLocation": "54381:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3114,
												"src": "54365:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54365:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3110,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "54393:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3114,
												"src": "54388:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3109,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "54388:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3112,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "54407:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3114,
												"src": "54402:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3111,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "54402:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54344:70:0"
									},
									"src": "54330:85:0"
								},
								{
									"anonymous": false,
									"id": 3122,
									"name": "NotifyReward",
									"nameLocation": "54426:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3116,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "54455:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3122,
												"src": "54439:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54439:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3118,
												"indexed": true,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "54479:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3122,
												"src": "54463:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54463:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3120,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "54492:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3122,
												"src": "54487:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3119,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "54487:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54438:61:0"
									},
									"src": "54420:80:0"
								},
								{
									"anonymous": false,
									"id": 3130,
									"name": "DistributeReward",
									"nameLocation": "54511:16:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3124,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "54544:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3130,
												"src": "54528:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3123,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54528:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3126,
												"indexed": true,
												"mutability": "mutable",
												"name": "gauge",
												"nameLocation": "54568:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3130,
												"src": "54552:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54552:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3128,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "54580:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3130,
												"src": "54575:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3127,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "54575:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54527:60:0"
									},
									"src": "54505:83:0"
								},
								{
									"canonicalName": "Boost.PoolInfo",
									"id": 3137,
									"members": [
										{
											"constant": false,
											"id": 3132,
											"mutability": "mutable",
											"name": "lpToken",
											"nameLocation": "54654:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 3137,
											"src": "54646:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 3131,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "54646:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3134,
											"mutability": "mutable",
											"name": "allocPoint",
											"nameLocation": "54679:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 3137,
											"src": "54671:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3133,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "54671:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3136,
											"mutability": "mutable",
											"name": "lastRewardBlock",
											"nameLocation": "54707:15:0",
											"nodeType": "VariableDeclaration",
											"scope": 3137,
											"src": "54699:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3135,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "54699:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PoolInfo",
									"nameLocation": "54627:8:0",
									"nodeType": "StructDefinition",
									"scope": 3775,
									"src": "54620:109:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0d52333c",
									"id": 3139,
									"mutability": "immutable",
									"name": "gaugeFactory",
									"nameLocation": "54760:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 3775,
									"src": "54735:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3138,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "54735:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "17caf6f1",
									"id": 3142,
									"mutability": "mutable",
									"name": "totalAllocPoint",
									"nameLocation": "54793:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 3775,
									"src": "54778:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3140,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "54778:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 3141,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "54811:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1526fe27",
									"id": 3146,
									"mutability": "mutable",
									"name": "poolInfo",
									"nameLocation": "54836:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 3775,
									"src": "54818:26:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_PoolInfo_$3137_storage_$dyn_storage",
										"typeString": "struct Boost.PoolInfo[]"
									},
									"typeName": {
										"baseType": {
											"id": 3144,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 3143,
												"name": "PoolInfo",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3137,
												"src": "54818:8:0"
											},
											"referencedDeclaration": 3137,
											"src": "54818:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_PoolInfo_$3137_storage_ptr",
												"typeString": "struct Boost.PoolInfo"
											}
										},
										"id": 3145,
										"nodeType": "ArrayTypeName",
										"src": "54818:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_PoolInfo_$3137_storage_$dyn_storage_ptr",
											"typeString": "struct Boost.PoolInfo[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b0c7044b",
									"id": 3150,
									"mutability": "mutable",
									"name": "LpOfPid",
									"nameLocation": "54918:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 3775,
									"src": "54883:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 3149,
										"keyType": {
											"id": 3147,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "54891:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "54883:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 3148,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "54902:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "0fb5a6b4",
									"id": 3153,
									"mutability": "constant",
									"name": "duration",
									"nameLocation": "54954:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 3775,
									"src": "54933:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3151,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "54933:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "37",
										"id": 3152,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "54965:6:0",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_604800_by_1",
											"typeString": "int_const 604800"
										},
										"value": "7"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ac4afa38",
									"id": 3156,
									"mutability": "mutable",
									"name": "pools",
									"nameLocation": "55031:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 3775,
									"src": "55014:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 3154,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "55014:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 3155,
										"nodeType": "ArrayTypeName",
										"src": "55014:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b9a09fd5",
									"id": 3160,
									"mutability": "mutable",
									"name": "gauges",
									"nameLocation": "55112:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 3775,
									"src": "55077:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 3159,
										"keyType": {
											"id": 3157,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "55085:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "55077:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueType": {
											"id": 3158,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "55096:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "06d6a1b2",
									"id": 3164,
									"mutability": "mutable",
									"name": "poolForGauge",
									"nameLocation": "55176:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 3775,
									"src": "55141:47:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
										"typeString": "mapping(address => address)"
									},
									"typeName": {
										"id": 3163,
										"keyType": {
											"id": 3161,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "55149:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "55141:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
											"typeString": "mapping(address => address)"
										},
										"valueType": {
											"id": 3162,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "55160:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "aa79979b",
									"id": 3168,
									"mutability": "mutable",
									"name": "isGauge",
									"nameLocation": "55243:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 3775,
									"src": "55211:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 3167,
										"keyType": {
											"id": 3165,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "55219:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "55211:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 3166,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "55230:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 3198,
										"nodeType": "Block",
										"src": "55518:41:0",
										"statements": [
											{
												"expression": {
													"id": 3196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3194,
														"name": "gaugeFactory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3139,
														"src": "55529:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3195,
														"name": "_gauges",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3174,
														"src": "55544:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "55529:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3197,
												"nodeType": "ExpressionStatement",
												"src": "55529:22:0"
											}
										]
									},
									"id": 3199,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3186,
													"name": "_operatorMsg",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3170,
													"src": "55448:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 3187,
													"name": "__ve",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3172,
													"src": "55462:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 3188,
													"name": "_swapToken",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3177,
													"src": "55468:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IToken_$2170",
														"typeString": "contract IToken"
													}
												},
												{
													"id": 3189,
													"name": "_tokenPerBlock",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3179,
													"src": "55480:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												{
													"id": 3190,
													"name": "_startBlock",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3181,
													"src": "55496:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												{
													"id": 3191,
													"name": "_period",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3183,
													"src": "55509:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 3192,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3185,
												"name": "AbstractBoost",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3078,
												"src": "55434:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "55434:83:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3170,
												"mutability": "mutable",
												"name": "_operatorMsg",
												"nameLocation": "55277:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 3199,
												"src": "55269:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "55269:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3172,
												"mutability": "mutable",
												"name": "__ve",
												"nameLocation": "55299:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3199,
												"src": "55291:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "55291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3174,
												"mutability": "mutable",
												"name": "_gauges",
												"nameLocation": "55313:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3199,
												"src": "55305:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "55305:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3177,
												"mutability": "mutable",
												"name": "_swapToken",
												"nameLocation": "55337:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 3199,
												"src": "55330:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IToken_$2170",
													"typeString": "contract IToken"
												},
												"typeName": {
													"id": 3176,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3175,
														"name": "IToken",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2170,
														"src": "55330:6:0"
													},
													"referencedDeclaration": 2170,
													"src": "55330:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IToken_$2170",
														"typeString": "contract IToken"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3179,
												"mutability": "mutable",
												"name": "_tokenPerBlock",
												"nameLocation": "55365:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 3199,
												"src": "55357:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "55357:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3181,
												"mutability": "mutable",
												"name": "_startBlock",
												"nameLocation": "55397:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 3199,
												"src": "55389:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "55389:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3183,
												"mutability": "mutable",
												"name": "_period",
												"nameLocation": "55426:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3199,
												"src": "55418:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "55418:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55268:166:0"
									},
									"returnParameters": {
										"id": 3193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "55518:0:0"
									},
									"scope": 3775,
									"src": "55257:302:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3207,
										"nodeType": "Block",
										"src": "55617:39:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 3204,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3146,
														"src": "55634:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$3137_storage_$dyn_storage",
															"typeString": "struct Boost.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 3205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "55634:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3203,
												"id": 3206,
												"nodeType": "Return",
												"src": "55627:22:0"
											}
										]
									},
									"functionSelector": "081e3eda",
									"id": 3208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "poolLength",
									"nameLocation": "55574:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "55584:2:0"
									},
									"returnParameters": {
										"id": 3203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3202,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3208,
												"src": "55608:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "55608:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55607:9:0"
									},
									"scope": 3775,
									"src": "55565:91:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3346,
										"nodeType": "Block",
										"src": "55764:924:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 3220,
																	"name": "gauges",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3160,
																	"src": "55782:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																		"typeString": "mapping(address => address)"
																	}
																},
																"id": 3222,
																"indexExpression": {
																	"id": 3221,
																	"name": "_pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3210,
																	"src": "55789:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "55782:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307830",
																		"id": 3225,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "55807:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0x0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3224,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "55799:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3223,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "55799:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 3226,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "55799:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "55782:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "657869737473",
															"id": 3228,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "55813:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_01e37c7ed6a06a994c20fbd2f42bf29a9f5d6c8e3fc27051e5e2335817ef219a",
																"typeString": "literal_string \"exists\""
															},
															"value": "exists"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_01e37c7ed6a06a994c20fbd2f42bf29a9f5d6c8e3fc27051e5e2335817ef219a",
																"typeString": "literal_string \"exists\""
															}
														],
														"id": 3219,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "55774:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "55774:48:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3230,
												"nodeType": "ExpressionStatement",
												"src": "55774:48:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 3234,
																		"name": "_pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3210,
																		"src": "55849:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3233,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "55841:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3232,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "55841:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 3235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "55841:14:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 3238,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "55867:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 3237,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "55859:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 3236,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "55859:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 3239,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "55859:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "55841:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5f6c70546f6b656e20697320746865207a65726f2061646472657373",
															"id": 3241,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "55871:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eefe2a51b746a11f8faffa0a886e61f8e4f519bdec38e798bdc8e449c78cd933",
																"typeString": "literal_string \"_lpToken is the zero address\""
															},
															"value": "_lpToken is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eefe2a51b746a11f8faffa0a886e61f8e4f519bdec38e798bdc8e449c78cd933",
																"typeString": "literal_string \"_lpToken is the zero address\""
															}
														],
														"id": 3231,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "55833:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "55833:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3243,
												"nodeType": "ExpressionStatement",
												"src": "55833:69:0"
											},
											{
												"condition": {
													"id": 3244,
													"name": "_withUpdate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3214,
													"src": "55916:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3249,
												"nodeType": "IfStatement",
												"src": "55912:59:0",
												"trueBody": {
													"id": 3248,
													"nodeType": "Block",
													"src": "55929:42:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 3245,
																	"name": "massUpdatePools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		3411
																	],
																	"referencedDeclaration": 3411,
																	"src": "55943:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 3246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "55943:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3247,
															"nodeType": "ExpressionStatement",
															"src": "55943:17:0"
														}
													]
												}
											},
											{
												"assignments": [
													3251
												],
												"declarations": [
													{
														"constant": false,
														"id": 3251,
														"mutability": "mutable",
														"name": "lastRewardBlock",
														"nameLocation": "55988:15:0",
														"nodeType": "VariableDeclaration",
														"scope": 3346,
														"src": "55980:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3250,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "55980:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3260,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3255,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 3252,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "56006:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 3253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "56006:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 3254,
															"name": "startBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2199,
															"src": "56021:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "56006:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3258,
														"name": "startBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2199,
														"src": "56049:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "56006:53:0",
													"trueExpression": {
														"expression": {
															"id": 3256,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "56034:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 3257,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "56034:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "55980:79:0"
											},
											{
												"expression": {
													"id": 3266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3261,
														"name": "totalAllocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3142,
														"src": "56069:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3264,
																"name": "_allocPoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3212,
																"src": "56107:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 3262,
																"name": "totalAllocPoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3142,
																"src": "56087:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1059,
															"src": "56087:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 3265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "56087:32:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "56069:50:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3267,
												"nodeType": "ExpressionStatement",
												"src": "56069:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3272,
																	"name": "_pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3210,
																	"src": "56172:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 3273,
																	"name": "_allocPoint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3212,
																	"src": "56200:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 3274,
																	"name": "lastRewardBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3251,
																	"src": "56239:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3271,
																"name": "PoolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3137,
																"src": "56143:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_PoolInfo_$3137_storage_ptr_$",
																	"typeString": "type(struct Boost.PoolInfo storage pointer)"
																}
															},
															"id": 3275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [
																"lpToken",
																"allocPoint",
																"lastRewardBlock"
															],
															"nodeType": "FunctionCall",
															"src": "56143:122:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$3137_memory_ptr",
																"typeString": "struct Boost.PoolInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_PoolInfo_$3137_memory_ptr",
																"typeString": "struct Boost.PoolInfo memory"
															}
														],
														"expression": {
															"id": 3268,
															"name": "poolInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3146,
															"src": "56129:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_PoolInfo_$3137_storage_$dyn_storage",
																"typeString": "struct Boost.PoolInfo storage ref[] storage ref"
															}
														},
														"id": 3270,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "56129:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_PoolInfo_$3137_storage_$dyn_storage_ptr_$_t_struct$_PoolInfo_$3137_storage_$returns$__$bound_to$_t_array$_t_struct$_PoolInfo_$3137_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct Boost.PoolInfo storage ref[] storage pointer,struct Boost.PoolInfo storage ref)"
														}
													},
													"id": 3276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "56129:137:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3277,
												"nodeType": "ExpressionStatement",
												"src": "56129:137:0"
											},
											{
												"expression": {
													"id": 3288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3278,
															"name": "LpOfPid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3150,
															"src": "56276:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 3283,
														"indexExpression": {
															"arguments": [
																{
																	"id": 3281,
																	"name": "_pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3210,
																	"src": "56292:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3280,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "56284:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3279,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "56284:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3282,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "56284:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "56276:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 3284,
																"name": "poolLength",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3208,
																"src": "56302:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																	"typeString": "function () view returns (uint256)"
																}
															},
															"id": 3285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "56302:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 3286,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "56317:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "56302:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "56276:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3289,
												"nodeType": "ExpressionStatement",
												"src": "56276:42:0"
											},
											{
												"assignments": [
													3291
												],
												"declarations": [
													{
														"constant": false,
														"id": 3291,
														"mutability": "mutable",
														"name": "_gauge",
														"nameLocation": "56337:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 3346,
														"src": "56329:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3290,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "56329:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3299,
												"initialValue": {
													"arguments": [
														{
															"id": 3296,
															"name": "_pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3210,
															"src": "56386:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3297,
															"name": "veToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2557,
															"src": "56393:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 3293,
																	"name": "gaugeFactory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3139,
																	"src": "56360:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3292,
																"name": "IGaugeFactory",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 369,
																"src": "56346:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IGaugeFactory_$369_$",
																	"typeString": "type(contract IGaugeFactory)"
																}
															},
															"id": 3294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "56346:27:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IGaugeFactory_$369",
																"typeString": "contract IGaugeFactory"
															}
														},
														"id": 3295,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "createGauge",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 368,
														"src": "56346:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,address) external returns (address)"
														}
													},
													"id": 3298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "56346:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "56329:72:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3307,
															"name": "_gauge",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3291,
															"src": "56446:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 3310,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "56459:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 3309,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "56459:4:0",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		}
																	],
																	"id": 3308,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "56454:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 3311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "56454:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint256",
																	"typeString": "type(uint256)"
																}
															},
															"id": 3312,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "56454:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 3303,
																			"name": "swapToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2195,
																			"src": "56426:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IToken_$2170",
																				"typeString": "contract IToken"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IToken_$2170",
																				"typeString": "contract IToken"
																			}
																		],
																		"id": 3302,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "56418:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 3301,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "56418:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "56418:18:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3300,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "56411:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$203_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 3305,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "56411:26:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$203",
																"typeString": "contract IERC20"
															}
														},
														"id": 3306,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 172,
														"src": "56411:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 3313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "56411:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3314,
												"nodeType": "ExpressionStatement",
												"src": "56411:58:0"
											},
											{
												"expression": {
													"id": 3319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3315,
															"name": "gauges",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3160,
															"src": "56479:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 3317,
														"indexExpression": {
															"id": 3316,
															"name": "_pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3210,
															"src": "56486:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "56479:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3318,
														"name": "_gauge",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3291,
														"src": "56495:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "56479:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3320,
												"nodeType": "ExpressionStatement",
												"src": "56479:22:0"
											},
											{
												"expression": {
													"id": 3325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3321,
															"name": "poolForGauge",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3164,
															"src": "56511:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 3323,
														"indexExpression": {
															"id": 3322,
															"name": "_gauge",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3291,
															"src": "56524:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "56511:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3324,
														"name": "_pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3210,
														"src": "56534:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "56511:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 3326,
												"nodeType": "ExpressionStatement",
												"src": "56511:28:0"
											},
											{
												"expression": {
													"id": 3331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3327,
															"name": "isGauge",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3168,
															"src": "56549:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 3329,
														"indexExpression": {
															"id": 3328,
															"name": "_gauge",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3291,
															"src": "56557:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "56549:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 3330,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "56567:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "56549:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3332,
												"nodeType": "ExpressionStatement",
												"src": "56549:22:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3334,
															"name": "_gauge",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3291,
															"src": "56597:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3333,
														"name": "_updateForGauge",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3699,
														"src": "56581:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 3335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "56581:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3336,
												"nodeType": "ExpressionStatement",
												"src": "56581:23:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3338,
															"name": "_gauge",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3291,
															"src": "56632:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3339,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "56640:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3340,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "56640:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3341,
															"name": "_pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3210,
															"src": "56652:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3337,
														"name": "GaugeCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3094,
														"src": "56619:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address,address)"
														}
													},
													"id": 3342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "56619:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3343,
												"nodeType": "EmitStatement",
												"src": "56614:44:0"
											},
											{
												"expression": {
													"id": 3344,
													"name": "_gauge",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3291,
													"src": "56675:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 3218,
												"id": 3345,
												"nodeType": "Return",
												"src": "56668:13:0"
											}
										]
									},
									"functionSelector": "0c9c7ef5",
									"id": 3347,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createGauge",
									"nameLocation": "55671:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3210,
												"mutability": "mutable",
												"name": "_pool",
												"nameLocation": "55691:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3347,
												"src": "55683:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "55683:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3212,
												"mutability": "mutable",
												"name": "_allocPoint",
												"nameLocation": "55706:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 3347,
												"src": "55698:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "55698:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3214,
												"mutability": "mutable",
												"name": "_withUpdate",
												"nameLocation": "55724:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 3347,
												"src": "55719:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "55719:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55682:54:0"
									},
									"returnParameters": {
										"id": 3218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3347,
												"src": "55755:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "55755:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55754:9:0"
									},
									"scope": 3775,
									"src": "55662:1026:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3384,
										"nodeType": "Block",
										"src": "56777:216:0",
										"statements": [
											{
												"expression": {
													"id": 3369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3358,
														"name": "totalAllocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3142,
														"src": "56788:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3367,
																"name": "_allocPoint",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3351,
																"src": "56857:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 3361,
																				"name": "poolInfo",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3146,
																				"src": "56826:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_PoolInfo_$3137_storage_$dyn_storage",
																					"typeString": "struct Boost.PoolInfo storage ref[] storage ref"
																				}
																			},
																			"id": 3363,
																			"indexExpression": {
																				"id": 3362,
																				"name": "_pid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3349,
																				"src": "56835:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "56826:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_PoolInfo_$3137_storage",
																				"typeString": "struct Boost.PoolInfo storage ref"
																			}
																		},
																		"id": 3364,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "allocPoint",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3134,
																		"src": "56826:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 3359,
																		"name": "totalAllocPoint",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3142,
																		"src": "56806:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3360,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1074,
																	"src": "56806:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 3365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "56806:46:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1059,
															"src": "56806:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 3368,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "56806:63:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "56788:81:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3370,
												"nodeType": "ExpressionStatement",
												"src": "56788:81:0"
											},
											{
												"expression": {
													"id": 3376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 3371,
																"name": "poolInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3146,
																"src": "56879:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_PoolInfo_$3137_storage_$dyn_storage",
																	"typeString": "struct Boost.PoolInfo storage ref[] storage ref"
																}
															},
															"id": 3373,
															"indexExpression": {
																"id": 3372,
																"name": "_pid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3349,
																"src": "56888:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "56879:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$3137_storage",
																"typeString": "struct Boost.PoolInfo storage ref"
															}
														},
														"id": 3374,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "allocPoint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3134,
														"src": "56879:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3375,
														"name": "_allocPoint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3351,
														"src": "56907:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "56879:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3377,
												"nodeType": "ExpressionStatement",
												"src": "56879:39:0"
											},
											{
												"condition": {
													"id": 3378,
													"name": "_withUpdate",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3353,
													"src": "56932:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3383,
												"nodeType": "IfStatement",
												"src": "56928:59:0",
												"trueBody": {
													"id": 3382,
													"nodeType": "Block",
													"src": "56945:42:0",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 3379,
																	"name": "massUpdatePools",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		3411
																	],
																	"referencedDeclaration": 3411,
																	"src": "56959:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 3380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "56959:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3381,
															"nodeType": "ExpressionStatement",
															"src": "56959:17:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "64482f79",
									"id": 3385,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3356,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3355,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2096,
												"src": "56767:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "56767:9:0"
										}
									],
									"name": "set",
									"nameLocation": "56703:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3349,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "56715:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3385,
												"src": "56707:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "56707:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3351,
												"mutability": "mutable",
												"name": "_allocPoint",
												"nameLocation": "56729:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 3385,
												"src": "56721:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3350,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "56721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3353,
												"mutability": "mutable",
												"name": "_withUpdate",
												"nameLocation": "56747:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 3385,
												"src": "56742:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3352,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "56742:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56706:53:0"
									},
									"returnParameters": {
										"id": 3357,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "56777:0:0"
									},
									"scope": 3775,
									"src": "56694:299:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2448
									],
									"body": {
										"id": 3410,
										"nodeType": "Block",
										"src": "57042:141:0",
										"statements": [
											{
												"assignments": [
													3390
												],
												"declarations": [
													{
														"constant": false,
														"id": 3390,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "57060:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 3410,
														"src": "57052:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3389,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "57052:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3393,
												"initialValue": {
													"expression": {
														"id": 3391,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3146,
														"src": "57069:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$3137_storage_$dyn_storage",
															"typeString": "struct Boost.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 3392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "57069:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "57052:32:0"
											},
											{
												"body": {
													"id": 3408,
													"nodeType": "Block",
													"src": "57137:40:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 3405,
																		"name": "pid",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3395,
																		"src": "57162:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3404,
																	"name": "updatePool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3534,
																	"src": "57151:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 3406,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "57151:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3407,
															"nodeType": "ExpressionStatement",
															"src": "57151:15:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3398,
														"name": "pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3395,
														"src": "57116:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 3399,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3390,
														"src": "57122:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "57116:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3409,
												"initializationExpression": {
													"assignments": [
														3395
													],
													"declarations": [
														{
															"constant": false,
															"id": 3395,
															"mutability": "mutable",
															"name": "pid",
															"nameLocation": "57107:3:0",
															"nodeType": "VariableDeclaration",
															"scope": 3409,
															"src": "57099:11:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3394,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "57099:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3397,
													"initialValue": {
														"hexValue": "30",
														"id": 3396,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "57113:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "57099:15:0"
												},
												"loopExpression": {
													"expression": {
														"id": 3402,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "57130:5:0",
														"subExpression": {
															"id": 3401,
															"name": "pid",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3395,
															"src": "57132:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3403,
													"nodeType": "ExpressionStatement",
													"src": "57130:5:0"
												},
												"nodeType": "ForStatement",
												"src": "57094:83:0"
											}
										]
									},
									"functionSelector": "630b5ba1",
									"id": 3411,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "massUpdatePools",
									"nameLocation": "57008:15:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3387,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "57033:8:0"
									},
									"parameters": {
										"id": 3386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "57023:2:0"
									},
									"returnParameters": {
										"id": 3388,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "57042:0:0"
									},
									"scope": 3775,
									"src": "56999:184:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3533,
										"nodeType": "Block",
										"src": "57315:867:0",
										"statements": [
											{
												"assignments": [
													3420
												],
												"declarations": [
													{
														"constant": false,
														"id": 3420,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "57342:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 3533,
														"src": "57325:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PoolInfo_$3137_storage_ptr",
															"typeString": "struct Boost.PoolInfo"
														},
														"typeName": {
															"id": 3419,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3418,
																"name": "PoolInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 3137,
																"src": "57325:8:0"
															},
															"referencedDeclaration": 3137,
															"src": "57325:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$3137_storage_ptr",
																"typeString": "struct Boost.PoolInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3424,
												"initialValue": {
													"baseExpression": {
														"id": 3421,
														"name": "poolInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3146,
														"src": "57349:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_PoolInfo_$3137_storage_$dyn_storage",
															"typeString": "struct Boost.PoolInfo storage ref[] storage ref"
														}
													},
													"id": 3423,
													"indexExpression": {
														"id": 3422,
														"name": "_pid",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3413,
														"src": "57358:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "57349:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolInfo_$3137_storage",
														"typeString": "struct Boost.PoolInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "57325:38:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 3425,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "57377:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 3426,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "57377:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"expression": {
															"id": 3427,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3420,
															"src": "57393:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$3137_storage_ptr",
																"typeString": "struct Boost.PoolInfo storage pointer"
															}
														},
														"id": 3428,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "lastRewardBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3136,
														"src": "57393:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "57377:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3432,
												"nodeType": "IfStatement",
												"src": "57373:73:0",
												"trueBody": {
													"id": 3431,
													"nodeType": "Block",
													"src": "57415:31:0",
													"statements": [
														{
															"functionReturnParameters": 3417,
															"id": 3430,
															"nodeType": "Return",
															"src": "57429:7:0"
														}
													]
												}
											},
											{
												"assignments": [
													3434
												],
												"declarations": [
													{
														"constant": false,
														"id": 3434,
														"mutability": "mutable",
														"name": "lpSupply",
														"nameLocation": "57463:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 3533,
														"src": "57455:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3433,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "57455:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3445,
												"initialValue": {
													"arguments": [
														{
															"baseExpression": {
																"id": 3440,
																"name": "gauges",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3160,
																"src": "57505:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																	"typeString": "mapping(address => address)"
																}
															},
															"id": 3443,
															"indexExpression": {
																"expression": {
																	"id": 3441,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3420,
																	"src": "57512:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$3137_storage_ptr",
																		"typeString": "struct Boost.PoolInfo storage pointer"
																	}
																},
																"id": 3442,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "lpToken",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3132,
																"src": "57512:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "57505:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 3436,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3420,
																		"src": "57481:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$3137_storage_ptr",
																			"typeString": "struct Boost.PoolInfo storage pointer"
																		}
																	},
																	"id": 3437,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "lpToken",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3132,
																	"src": "57481:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 3435,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "57474:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$203_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 3438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "57474:20:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$203",
																"typeString": "contract IERC20"
															}
														},
														"id": 3439,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 142,
														"src": "57474:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 3444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "57474:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "57455:71:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3446,
														"name": "lpSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3434,
														"src": "57540:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 3447,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "57552:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "57540:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3458,
												"nodeType": "IfStatement",
												"src": "57536:99:0",
												"trueBody": {
													"id": 3457,
													"nodeType": "Block",
													"src": "57555:80:0",
													"statements": [
														{
															"expression": {
																"id": 3454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 3449,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3420,
																		"src": "57569:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$3137_storage_ptr",
																			"typeString": "struct Boost.PoolInfo storage pointer"
																		}
																	},
																	"id": 3451,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "lastRewardBlock",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3136,
																	"src": "57569:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 3452,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "57592:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 3453,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"src": "57592:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "57569:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3455,
															"nodeType": "ExpressionStatement",
															"src": "57569:35:0"
														},
														{
															"functionReturnParameters": 3417,
															"id": 3456,
															"nodeType": "Return",
															"src": "57618:7:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3459,
														"name": "tokenPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2197,
														"src": "57648:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 3460,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "57665:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "57648:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3464,
												"nodeType": "IfStatement",
												"src": "57644:55:0",
												"trueBody": {
													"id": 3463,
													"nodeType": "Block",
													"src": "57668:31:0",
													"statements": [
														{
															"functionReturnParameters": 3417,
															"id": 3462,
															"nodeType": "Return",
															"src": "57682:7:0"
														}
													]
												}
											},
											{
												"assignments": [
													3466
												],
												"declarations": [
													{
														"constant": false,
														"id": 3466,
														"mutability": "mutable",
														"name": "mul",
														"nameLocation": "57716:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 3533,
														"src": "57708:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3465,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "57708:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3473,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 3470,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3420,
																"src": "57739:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$3137_storage_ptr",
																	"typeString": "struct Boost.PoolInfo storage pointer"
																}
															},
															"id": 3471,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "lastRewardBlock",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3136,
															"src": "57739:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 3467,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "57722:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 3468,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "57722:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3469,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1074,
														"src": "57722:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 3472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "57722:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "57708:52:0"
											},
											{
												"assignments": [
													3475
												],
												"declarations": [
													{
														"constant": false,
														"id": 3475,
														"mutability": "mutable",
														"name": "tokenReward",
														"nameLocation": "57778:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 3533,
														"src": "57770:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3474,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "57770:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3487,
												"initialValue": {
													"arguments": [
														{
															"id": 3485,
															"name": "totalAllocPoint",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3142,
															"src": "57840:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 3481,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3420,
																		"src": "57819:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$3137_storage_ptr",
																			"typeString": "struct Boost.PoolInfo storage pointer"
																		}
																	},
																	"id": 3482,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "allocPoint",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3134,
																	"src": "57819:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 3478,
																			"name": "mul",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3466,
																			"src": "57810:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 3476,
																			"name": "tokenPerBlock",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2197,
																			"src": "57792:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3477,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1089,
																		"src": "57792:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 3479,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "57792:22:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 3480,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1089,
																"src": "57792:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 3483,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "57792:43:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 3484,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "div",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1104,
														"src": "57792:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 3486,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "57792:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "57770:86:0"
											},
											{
												"assignments": [
													3489
												],
												"declarations": [
													{
														"constant": false,
														"id": 3489,
														"mutability": "mutable",
														"name": "minRet",
														"nameLocation": "57895:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 3533,
														"src": "57890:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3488,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "57890:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3501,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3494,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "57927:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Boost_$3775",
																		"typeString": "contract Boost"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Boost_$3775",
																		"typeString": "contract Boost"
																	}
																],
																"id": 3493,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "57919:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3492,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "57919:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3495,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "57919:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 3498,
																	"name": "duration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3153,
																	"src": "57950:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 3496,
																	"name": "tokenReward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3475,
																	"src": "57934:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 3497,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1089,
																"src": "57934:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 3499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "57934:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3490,
															"name": "swapToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2195,
															"src": "57904:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IToken_$2170",
																"typeString": "contract IToken"
															}
														},
														"id": 3491,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2164,
														"src": "57904:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 3500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "57904:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "57890:70:0"
											},
											{
												"condition": {
													"id": 3502,
													"name": "minRet",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3489,
													"src": "57974:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3525,
												"nodeType": "IfStatement",
												"src": "57970:161:0",
												"trueBody": {
													"id": 3524,
													"nodeType": "Block",
													"src": "57982:149:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 3512,
																				"name": "swapToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2195,
																				"src": "58052:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IToken_$2170",
																					"typeString": "contract IToken"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IToken_$2170",
																					"typeString": "contract IToken"
																				}
																			],
																			"id": 3511,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "58044:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 3510,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "58044:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3513,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "58044:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 3520,
																				"name": "totalAllocPoint",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3142,
																				"src": "58103:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 3516,
																							"name": "pool",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3420,
																							"src": "58082:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_PoolInfo_$3137_storage_ptr",
																								"typeString": "struct Boost.PoolInfo storage pointer"
																							}
																						},
																						"id": 3517,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "allocPoint",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 3134,
																						"src": "58082:15:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 3514,
																						"name": "tokenPerBlock",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2197,
																						"src": "58064:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 3515,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "mul",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1089,
																					"src": "58064:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 3518,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "58064:34:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 3519,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "div",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1104,
																			"src": "58064:38:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 3521,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "58064:55:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"baseExpression": {
																					"id": 3504,
																					"name": "gauges",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3160,
																					"src": "58003:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																						"typeString": "mapping(address => address)"
																					}
																				},
																				"id": 3507,
																				"indexExpression": {
																					"expression": {
																						"id": 3505,
																						"name": "pool",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3420,
																						"src": "58010:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_PoolInfo_$3137_storage_ptr",
																							"typeString": "struct Boost.PoolInfo storage pointer"
																						}
																					},
																					"id": 3506,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "lpToken",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 3132,
																					"src": "58010:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "58003:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 3503,
																			"name": "IGauge",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 358,
																			"src": "57996:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IGauge_$358_$",
																				"typeString": "type(contract IGauge)"
																			}
																		},
																		"id": 3508,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "57996:28:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IGauge_$358",
																			"typeString": "contract IGauge"
																		}
																	},
																	"id": 3509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "notifyRewardAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 335,
																	"src": "57996:47:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256) external"
																	}
																},
																"id": 3522,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "57996:124:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3523,
															"nodeType": "ExpressionStatement",
															"src": "57996:124:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 3531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3526,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3420,
															"src": "58140:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolInfo_$3137_storage_ptr",
																"typeString": "struct Boost.PoolInfo storage pointer"
															}
														},
														"id": 3528,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastRewardBlock",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3136,
														"src": "58140:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 3529,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "58163:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 3530,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "58163:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "58140:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3532,
												"nodeType": "ExpressionStatement",
												"src": "58140:35:0"
											}
										]
									},
									"functionSelector": "51eb05a6",
									"id": 3534,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3416,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3415,
												"name": "reduceBlockReward",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2313,
												"src": "57297:17:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "57297:17:0"
										}
									],
									"name": "updatePool",
									"nameLocation": "57265:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3413,
												"mutability": "mutable",
												"name": "_pid",
												"nameLocation": "57284:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3534,
												"src": "57276:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "57276:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57275:14:0"
									},
									"returnParameters": {
										"id": 3417,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "57315:0:0"
									},
									"scope": 3775,
									"src": "57256:926:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3566,
										"nodeType": "Block",
										"src": "58257:154:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 3542,
																"name": "isGauge",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3168,
																"src": "58275:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 3545,
															"indexExpression": {
																"expression": {
																	"id": 3543,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "58283:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3544,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "58283:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "58275:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3541,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "58267:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 3546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58267:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3547,
												"nodeType": "ExpressionStatement",
												"src": "58267:28:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3548,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3536,
														"src": "58309:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 3549,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "58319:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "58309:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3558,
												"nodeType": "IfStatement",
												"src": "58305:48:0",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"id": 3555,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3536,
																"src": "58345:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 3552,
																		"name": "veToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2557,
																		"src": "58331:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3551,
																	"name": "IVeToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2517,
																	"src": "58322:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IVeToken_$2517_$",
																		"typeString": "type(contract IVeToken)"
																	}
																},
																"id": 3553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "58322:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IVeToken_$2517",
																	"typeString": "contract IVeToken"
																}
															},
															"id": 3554,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "used",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2501,
															"src": "58322:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
																"typeString": "function (uint256) external"
															}
														},
														"id": 3556,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "58322:31:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 3557,
													"nodeType": "ExpressionStatement",
													"src": "58322:31:0"
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3560,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3538,
															"src": "58375:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3561,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "58384:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "58384:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3563,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3536,
															"src": "58396:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3559,
														"name": "Attach",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2531,
														"src": "58368:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58368:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3565,
												"nodeType": "EmitStatement",
												"src": "58363:41:0"
											}
										]
									},
									"functionSelector": "698473e3",
									"id": 3567,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "attachTokenToGauge",
									"nameLocation": "58198:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3536,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "58222:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3567,
												"src": "58217:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3535,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "58217:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3538,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "58239:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3567,
												"src": "58231:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "58231:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58216:31:0"
									},
									"returnParameters": {
										"id": 3540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "58257:0:0"
									},
									"scope": 3775,
									"src": "58189:222:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3591,
										"nodeType": "Block",
										"src": "58491:105:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 3577,
																"name": "isGauge",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3168,
																"src": "58509:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 3580,
															"indexExpression": {
																"expression": {
																	"id": 3578,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "58517:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3579,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "58517:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "58509:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3576,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "58501:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 3581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58501:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3582,
												"nodeType": "ExpressionStatement",
												"src": "58501:28:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3584,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3571,
															"src": "58552:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3585,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "58561:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "58561:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3587,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3569,
															"src": "58573:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3588,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3573,
															"src": "58582:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3583,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3104,
														"src": "58544:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 3589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58544:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3590,
												"nodeType": "EmitStatement",
												"src": "58539:50:0"
											}
										]
									},
									"functionSelector": "a61c713a",
									"id": 3592,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "emitDeposit",
									"nameLocation": "58426:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3569,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "58443:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3592,
												"src": "58438:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3568,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "58438:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3571,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "58460:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3592,
												"src": "58452:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "58452:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3573,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "58474:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3592,
												"src": "58469:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3572,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "58469:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58437:44:0"
									},
									"returnParameters": {
										"id": 3575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "58491:0:0"
									},
									"scope": 3775,
									"src": "58417:179:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3624,
										"nodeType": "Block",
										"src": "58672:156:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 3600,
																"name": "isGauge",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3168,
																"src": "58690:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 3603,
															"indexExpression": {
																"expression": {
																	"id": 3601,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "58698:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3602,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "58698:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "58690:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3599,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "58682:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 3604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58682:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3605,
												"nodeType": "ExpressionStatement",
												"src": "58682:28:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3606,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3594,
														"src": "58724:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 3607,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "58734:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "58724:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3616,
												"nodeType": "IfStatement",
												"src": "58720:50:0",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"id": 3613,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3594,
																"src": "58762:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 3610,
																		"name": "veToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2557,
																		"src": "58746:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3609,
																	"name": "IVeToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2517,
																	"src": "58737:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IVeToken_$2517_$",
																		"typeString": "type(contract IVeToken)"
																	}
																},
																"id": 3611,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "58737:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IVeToken_$2517",
																	"typeString": "contract IVeToken"
																}
															},
															"id": 3612,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "detach",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2506,
															"src": "58737:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
																"typeString": "function (uint256) external"
															}
														},
														"id": 3614,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "58737:33:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 3615,
													"nodeType": "ExpressionStatement",
													"src": "58737:33:0"
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3618,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3596,
															"src": "58792:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3619,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "58801:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "58801:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3621,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3594,
															"src": "58813:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3617,
														"name": "Detach",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2539,
														"src": "58785:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58785:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3623,
												"nodeType": "EmitStatement",
												"src": "58780:41:0"
											}
										]
									},
									"functionSelector": "411b1f77",
									"id": 3625,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "detachTokenFromGauge",
									"nameLocation": "58611:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3594,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "58637:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3625,
												"src": "58632:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3593,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "58632:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3596,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "58654:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3625,
												"src": "58646:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "58646:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58631:31:0"
									},
									"returnParameters": {
										"id": 3598,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "58672:0:0"
									},
									"scope": 3775,
									"src": "58602:226:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3649,
										"nodeType": "Block",
										"src": "58909:106:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 3635,
																"name": "isGauge",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3168,
																"src": "58927:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 3638,
															"indexExpression": {
																"expression": {
																	"id": 3636,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "58935:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3637,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "58935:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "58927:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3634,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "58919:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 3639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58919:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3640,
												"nodeType": "ExpressionStatement",
												"src": "58919:28:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3642,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3629,
															"src": "58971:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3643,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "58980:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "58980:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3645,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3627,
															"src": "58992:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3646,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3631,
															"src": "59001:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3641,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3114,
														"src": "58962:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 3647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58962:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3648,
												"nodeType": "EmitStatement",
												"src": "58957:51:0"
											}
										]
									},
									"functionSelector": "ea94ee44",
									"id": 3650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "emitWithdraw",
									"nameLocation": "58843:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3632,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3627,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "58861:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3650,
												"src": "58856:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3626,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "58856:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3629,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "58878:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3650,
												"src": "58870:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3628,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "58870:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3631,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "58892:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3650,
												"src": "58887:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3630,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "58887:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58855:44:0"
									},
									"returnParameters": {
										"id": 3633,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "58909:0:0"
									},
									"scope": 3775,
									"src": "58834:181:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3680,
										"nodeType": "Block",
										"src": "59051:166:0",
										"statements": [
											{
												"body": {
													"id": 3678,
													"nodeType": "Block",
													"src": "59101:110:0",
													"statements": [
														{
															"assignments": [
																3666
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3666,
																	"mutability": "mutable",
																	"name": "pool",
																	"nameLocation": "59131:4:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 3678,
																	"src": "59115:20:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolInfo_$3137_memory_ptr",
																		"typeString": "struct Boost.PoolInfo"
																	},
																	"typeName": {
																		"id": 3665,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 3664,
																			"name": "PoolInfo",
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 3137,
																			"src": "59115:8:0"
																		},
																		"referencedDeclaration": 3137,
																		"src": "59115:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolInfo_$3137_storage_ptr",
																			"typeString": "struct Boost.PoolInfo"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3670,
															"initialValue": {
																"baseExpression": {
																	"id": 3667,
																	"name": "poolInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3146,
																	"src": "59138:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_PoolInfo_$3137_storage_$dyn_storage",
																		"typeString": "struct Boost.PoolInfo storage ref[] storage ref"
																	}
																},
																"id": 3669,
																"indexExpression": {
																	"id": 3668,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3654,
																	"src": "59147:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "59138:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_PoolInfo_$3137_storage",
																	"typeString": "struct Boost.PoolInfo storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "59115:34:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 3672,
																			"name": "gauges",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3160,
																			"src": "59179:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																				"typeString": "mapping(address => address)"
																			}
																		},
																		"id": 3675,
																		"indexExpression": {
																			"expression": {
																				"id": 3673,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3666,
																				"src": "59186:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_PoolInfo_$3137_memory_ptr",
																					"typeString": "struct Boost.PoolInfo memory"
																				}
																			},
																			"id": 3674,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "lpToken",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3132,
																			"src": "59186:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "59179:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3671,
																	"name": "_updateForGauge",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3699,
																	"src": "59163:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
																		"typeString": "function (address)"
																	}
																},
																"id": 3676,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "59163:37:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3677,
															"nodeType": "ExpressionStatement",
															"src": "59163:37:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3657,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3654,
														"src": "59078:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 3658,
															"name": "poolLength",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3208,
															"src": "59082:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 3659,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "59082:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "59078:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3679,
												"initializationExpression": {
													"assignments": [
														3654
													],
													"declarations": [
														{
															"constant": false,
															"id": 3654,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "59071:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 3679,
															"src": "59066:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3653,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "59066:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3656,
													"initialValue": {
														"hexValue": "30",
														"id": 3655,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "59075:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "59066:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 3662,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "59096:3:0",
														"subExpression": {
															"id": 3661,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3654,
															"src": "59096:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3663,
													"nodeType": "ExpressionStatement",
													"src": "59096:3:0"
												},
												"nodeType": "ForStatement",
												"src": "59061:150:0"
											}
										]
									},
									"functionSelector": "53d78693",
									"id": 3681,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateAll",
									"nameLocation": "59030:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3651,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "59039:2:0"
									},
									"returnParameters": {
										"id": 3652,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "59051:0:0"
									},
									"scope": 3775,
									"src": "59021:196:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3698,
										"nodeType": "Block",
										"src": "59273:89:0",
										"statements": [
											{
												"assignments": [
													3687
												],
												"declarations": [
													{
														"constant": false,
														"id": 3687,
														"mutability": "mutable",
														"name": "_pool",
														"nameLocation": "59291:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 3698,
														"src": "59283:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3686,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "59283:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3691,
												"initialValue": {
													"baseExpression": {
														"id": 3688,
														"name": "poolForGauge",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3164,
														"src": "59299:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
															"typeString": "mapping(address => address)"
														}
													},
													"id": 3690,
													"indexExpression": {
														"id": 3689,
														"name": "_gauge",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3683,
														"src": "59312:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "59299:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "59283:36:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 3693,
																"name": "LpOfPid",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3150,
																"src": "59340:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 3695,
															"indexExpression": {
																"id": 3694,
																"name": "_pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3687,
																"src": "59348:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "59340:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3692,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3534,
														"src": "59329:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59329:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3697,
												"nodeType": "ExpressionStatement",
												"src": "59329:26:0"
											}
										]
									},
									"id": 3699,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateForGauge",
									"nameLocation": "59232:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3683,
												"mutability": "mutable",
												"name": "_gauge",
												"nameLocation": "59256:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3699,
												"src": "59248:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "59248:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59247:16:0"
									},
									"returnParameters": {
										"id": 3685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "59273:0:0"
									},
									"scope": 3775,
									"src": "59223:139:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3735,
										"nodeType": "Block",
										"src": "59453:135:0",
										"statements": [
											{
												"body": {
													"id": 3733,
													"nodeType": "Block",
													"src": "59505:77:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 3726,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "59548:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 3727,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "59548:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 3728,
																			"name": "_tokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3706,
																			"src": "59560:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_array$_t_address_$dyn_memory_ptr_$dyn_memory_ptr",
																				"typeString": "address[] memory[] memory"
																			}
																		},
																		"id": 3730,
																		"indexExpression": {
																			"id": 3729,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3710,
																			"src": "59568:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "59560:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																			"typeString": "address[] memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"baseExpression": {
																					"id": 3721,
																					"name": "_gauges",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3702,
																					"src": "59526:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				"id": 3723,
																				"indexExpression": {
																					"id": 3722,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3710,
																					"src": "59534:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "59526:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 3720,
																			"name": "IGauge",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 358,
																			"src": "59519:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IGauge_$358_$",
																				"typeString": "type(contract IGauge)"
																			}
																		},
																		"id": 3724,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "59519:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IGauge_$358",
																			"typeString": "contract IGauge"
																		}
																	},
																	"id": 3725,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "getReward",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 343,
																	"src": "59519:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
																		"typeString": "function (address,address[] memory) external"
																	}
																},
																"id": 3731,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "59519:52:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3732,
															"nodeType": "ExpressionStatement",
															"src": "59519:52:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3716,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3713,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3710,
														"src": "59480:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 3714,
															"name": "_gauges",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3702,
															"src": "59484:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 3715,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "59484:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "59480:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3734,
												"initializationExpression": {
													"assignments": [
														3710
													],
													"declarations": [
														{
															"constant": false,
															"id": 3710,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "59473:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 3734,
															"src": "59468:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3709,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "59468:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3712,
													"initialValue": {
														"hexValue": "30",
														"id": 3711,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "59477:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "59468:10:0"
												},
												"loopExpression": {
													"expression": {
														"id": 3718,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "59500:3:0",
														"subExpression": {
															"id": 3717,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3710,
															"src": "59500:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3719,
													"nodeType": "ExpressionStatement",
													"src": "59500:3:0"
												},
												"nodeType": "ForStatement",
												"src": "59463:119:0"
											}
										]
									},
									"functionSelector": "20b1cb6f",
									"id": 3736,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimRewards",
									"nameLocation": "59377:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3702,
												"mutability": "mutable",
												"name": "_gauges",
												"nameLocation": "59407:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3736,
												"src": "59390:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 3700,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "59390:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 3701,
													"nodeType": "ArrayTypeName",
													"src": "59390:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3706,
												"mutability": "mutable",
												"name": "_tokens",
												"nameLocation": "59435:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3736,
												"src": "59416:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_array$_t_address_$dyn_memory_ptr_$dyn_memory_ptr",
													"typeString": "address[][]"
												},
												"typeName": {
													"baseType": {
														"baseType": {
															"id": 3703,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "59416:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 3704,
														"nodeType": "ArrayTypeName",
														"src": "59416:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
															"typeString": "address[]"
														}
													},
													"id": 3705,
													"nodeType": "ArrayTypeName",
													"src": "59416:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_array$_t_address_$dyn_storage_$dyn_storage_ptr",
														"typeString": "address[][]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59389:54:0"
									},
									"returnParameters": {
										"id": 3708,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "59453:0:0"
									},
									"scope": 3775,
									"src": "59368:220:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3745,
										"nodeType": "Block",
										"src": "59637:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3742,
															"name": "_gauge",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3738,
															"src": "59663:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3741,
														"name": "_updateForGauge",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3699,
														"src": "59647:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 3743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59647:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3744,
												"nodeType": "ExpressionStatement",
												"src": "59647:23:0"
											}
										]
									},
									"functionSelector": "63453ae1",
									"id": 3746,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "distribute",
									"nameLocation": "59603:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3738,
												"mutability": "mutable",
												"name": "_gauge",
												"nameLocation": "59622:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3746,
												"src": "59614:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "59614:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59613:16:0"
									},
									"returnParameters": {
										"id": 3740,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "59637:0:0"
									},
									"scope": 3775,
									"src": "59594:84:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										3070
									],
									"body": {
										"id": 3758,
										"nodeType": "Block",
										"src": "59742:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 3753,
																"name": "gauges",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3160,
																"src": "59768:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																	"typeString": "mapping(address => address)"
																}
															},
															"id": 3755,
															"indexExpression": {
																"id": 3754,
																"name": "_pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3748,
																"src": "59775:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "59768:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3752,
														"name": "_updateForGauge",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3699,
														"src": "59752:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 3756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "59752:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3757,
												"nodeType": "ExpressionStatement",
												"src": "59752:30:0"
											}
										]
									},
									"id": 3759,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updatePoolInfo",
									"nameLocation": "59693:15:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3750,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "59733:8:0"
									},
									"parameters": {
										"id": 3749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3748,
												"mutability": "mutable",
												"name": "_pool",
												"nameLocation": "59717:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3759,
												"src": "59709:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3747,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "59709:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59708:15:0"
									},
									"returnParameters": {
										"id": 3751,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "59742:0:0"
									},
									"scope": 3775,
									"src": "59684:105:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										3077
									],
									"body": {
										"id": 3773,
										"nodeType": "Block",
										"src": "59871:46:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 3767,
														"name": "isGauge",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3168,
														"src": "59888:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 3771,
													"indexExpression": {
														"baseExpression": {
															"id": 3768,
															"name": "gauges",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3160,
															"src": "59896:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_address_$",
																"typeString": "mapping(address => address)"
															}
														},
														"id": 3770,
														"indexExpression": {
															"id": 3769,
															"name": "_pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3761,
															"src": "59903:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "59896:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "59888:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3766,
												"id": 3772,
												"nodeType": "Return",
												"src": "59881:29:0"
											}
										]
									},
									"id": 3774,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isGaugeForPool",
									"nameLocation": "59804:14:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3763,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "59843:8:0"
									},
									"parameters": {
										"id": 3762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3761,
												"mutability": "mutable",
												"name": "_pool",
												"nameLocation": "59827:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3774,
												"src": "59819:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "59819:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59818:15:0"
									},
									"returnParameters": {
										"id": 3766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3765,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3774,
												"src": "59866:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3764,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "59866:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59865:6:0"
									},
									"scope": 3775,
									"src": "59795:122:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3776,
							"src": "54066:5854:0",
							"usedErrors": []
						}
					],
					"src": "225:59696:0"
				},
				"id": 0
			}
		}
	}
}