{
	"id": "b91207a93d8436edd613a13d57a85237",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.10",
	"solcLongVersion": "0.8.10+commit.fc410830",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Gauge.sol": {
				"content": "// Sources flattened with hardhat v2.9.0 https://hardhat.org\n\n// File @openzeppelin/contracts/utils/math/Math.sol@v4.5.0\n\n// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a >= b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a / b + (a % b == 0 ? 0 : 1);\n    }\n}\n\n\n// File @openzeppelin/contracts/security/ReentrancyGuard.sol@v4.5.0\n\n\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n\n\n// File @openzeppelin/contracts/token/ERC20/IERC20.sol@v4.5.0\n\n\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n\n// File @openzeppelin/contracts/utils/math/SafeMath.sol@v4.5.0\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n\n\n// File contracts/interface/IVeToken.sol\n\npragma solidity 0.8.10;\n\n\ninterface IVeToken {\n    function token() external view returns (address);\n    function tokenOfOwnerByIndex(address _owner, uint _tokenIndex) external view returns (uint);\n    function balanceOfNFT(uint) external view returns (uint);\n    function isApprovedOrOwner(address, uint) external view returns (bool);\n    function ownerOf(uint) external view returns (address);\n    function transferFrom(address, address, uint) external;\n    function voting(uint tokenId) external;\n    function abstain(uint tokenId) external;\n}\n\n\n// File contracts/interface/IBoost.sol\n\npragma solidity 0.8.10;\n\ninterface IBoost {\n\n    function distribute(address _gauge) external;\n\n    function weights(address _pool) external view returns (uint256);\n\n    function votes(uint256 _tokeId, address _pool) external view returns (uint256);\n\n    function usedWeights(uint256 _tokeId) external view returns (uint256);\n}\n\n\n// File contracts/tools/TransferHelper.sol\n\n\npragma solidity >=0.6.11;\n\n// helper methods for interacting with ERC20 tokens and sending ETH that do not consistently return true/false\nlibrary TransferHelper {\n    function safeApprove(address token, address to, uint value) internal {\n        // bytes4(keccak256(bytes('approve(address,uint256)')));\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x095ea7b3, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: APPROVE_FAILED');\n    }\n\n    function safeTransfer(address token, address to, uint value) internal {\n        // bytes4(keccak256(bytes('transfer(address,uint256)')));\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0xa9059cbb, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FAILED');\n    }\n\n    function safeTransferFrom(address token, address from, address to, uint value) internal {\n        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FROM_FAILED');\n    }\n\n    function safeTransferETH(address to, uint value) internal {\n        (bool success,) = to.call{value:value}(new bytes(0));\n        require(success, 'TransferHelper: ETH_TRANSFER_FAILED');\n    }\n}\n\n\n// File contracts/dao/Gauge.sol\n\n\npragma solidity 0.8.10;\n\n\n\n\n\n\n// Gauges are used to incentivize pools, they emit reward tokens over 7 days for staked LP tokens\ncontract Gauge is ReentrancyGuard {\n    using SafeMath for uint256;\n\n    event Deposit(address indexed from, uint tokenId, uint amount);\n    event Withdraw(address indexed from, uint tokenId, uint amount);\n    event NotifyReward(address indexed from, address indexed reward, uint rewardRate);\n    event ClaimRewards(address indexed from, address indexed reward, uint amount);\n\n    // Info of each user.\n    struct UserInfo {\n        uint256 amount;     // How many LP tokens the user has provided.\n        uint256 rewardDebt; // Reward debt.\n\n    }\n\n    address public immutable stake; // the LP token that needs to be staked for rewards\n    address public immutable veToken; // the ve token used for gauges\n    address public immutable boost;\n    address public immutable rewardToken;\n    uint internal constant PRECISION = 10 ** 18;\n    mapping(address => uint) public tokenIds;\n\n    uint256 public tokenPerBlock;\n    uint256 public accTokenPerShare; // Accumulated swap token per share, times 1e12.\n    uint256 public lastRewardBlock;  // Last block number that swap token distribution occurs\n\n    uint public totalSupply;\n\n    mapping(address => UserInfo) public userInfo;\n\n    constructor(address _stake, address __ve, address _boost, address _rewardToken) {\n        stake = _stake;\n        veToken = __ve;\n        boost = _boost;\n        rewardToken = _rewardToken;\n    }\n\n\n    modifier onlyBoost() {\n        require(msg.sender == boost, 'only boost');\n        _;\n    }\n\n    function _safeTransferFromToken(address token, uint256 _amount) private {\n        uint256 bal = IERC20(token).balanceOf(address(this));\n        if (bal < _amount) {\n            TransferHelper.safeTransferFrom(token, boost, address(this), _amount);\n        }\n    }\n\n    function _safeTokenTransfer(address token, address account, uint256 _amount) internal {\n        _safeTransferFromToken(token, _amount);\n        uint256 bal = IERC20(token).balanceOf(address(this));\n        if (_amount > bal) {\n            _amount = bal;\n        }\n        _amount = derivedBalance(account, _amount);\n        TransferHelper.safeTransfer(token, account, _amount);\n    }\n\n    function getReward(address account) external nonReentrant {\n        require(msg.sender == account || msg.sender == boost);\n        updatePool();\n        UserInfo storage user = userInfo[account];\n        uint256 pendingAmount = pendingMax(account);\n        if (pendingAmount > 0) {\n            _safeTokenTransfer(rewardToken, account, pendingAmount);\n            emit ClaimRewards(msg.sender, rewardToken, pendingAmount);\n        }\n        user.rewardDebt = user.amount.mul(accTokenPerShare).div(1e12);\n        IBoost(boost).distribute(address(this));\n    }\n\n    function derivedBalance(address account, uint _balance) public view returns (uint) {\n        uint _tokenId = tokenIds[account];\n        uint _derived = _balance * 30 / 100;\n        uint _adjusted = 0;\n        uint _supply = IBoost(boost).weights(stake);\n        if (account == IVeToken(veToken).ownerOf(_tokenId) && _supply > 0) {\n            uint usedWeight = IBoost(boost).usedWeights(_tokenId);\n            uint useVe = IVeToken(veToken).balanceOfNFT(_tokenId);\n            _adjusted = IBoost(boost).votes(_tokenId, stake).mul(1e12).mul(useVe).div(usedWeight);\n            _adjusted = (totalSupply * _adjusted / _supply) * 70 / 100;\n        }\n        return Math.min((_derived + _adjusted), _balance);\n    }\n\n\n    function depositAll(uint tokenId) external {\n        deposit(IERC20(stake).balanceOf(msg.sender), tokenId);\n    }\n\n    function deposit(uint amount, uint tokenId) public nonReentrant {\n        require(amount > 0, \"amount is 0\");\n        updatePool();\n        UserInfo storage user = userInfo[msg.sender];\n        if (user.amount > 0) {\n            uint256 pendingAmount = pendingMax(msg.sender);\n            if (pendingAmount > 0) {\n                _safeTokenTransfer(rewardToken, msg.sender, pendingAmount);\n            }\n        }\n        if (amount > 0) {\n            TransferHelper.safeTransferFrom(stake, msg.sender, address(this), amount);\n            totalSupply += amount;\n            user.amount = user.amount.add(amount);\n        }\n        if (tokenId > 0) {\n            require(IVeToken(veToken).ownerOf(tokenId) == msg.sender);\n            if (tokenIds[msg.sender] == 0) {\n                tokenIds[msg.sender] = tokenId;\n            }\n            require(tokenIds[msg.sender] == tokenId);\n        } else {\n            tokenId = tokenIds[msg.sender];\n        }\n        user.rewardDebt = user.amount.mul(accTokenPerShare).div(1e12);\n        emit Deposit(msg.sender, tokenId, amount);\n    }\n\n    function withdrawAll() external {\n        withdraw(userInfo[msg.sender].amount);\n    }\n\n    function withdraw(uint amount) public {\n        uint tokenId = 0;\n        if (amount == userInfo[msg.sender].amount) {\n            tokenId = tokenIds[msg.sender];\n        }\n        withdrawToken(amount, tokenId);\n    }\n\n    function withdrawToken(uint _amount, uint tokenId) public nonReentrant {\n        UserInfo storage user = userInfo[msg.sender];\n        require(user.amount >= _amount, \"withdrawSwap: not good\");\n        updatePool();\n        uint256 pendingAmount = pendingMax(msg.sender);\n        if (pendingAmount > 0) {\n            _safeTokenTransfer(rewardToken, msg.sender, pendingAmount);\n        }\n        if (_amount > 0) {\n            user.amount = user.amount.sub(_amount);\n            totalSupply = totalSupply.sub(_amount);\n            TransferHelper.safeTransfer(stake, msg.sender, _amount);\n        }\n\n        user.rewardDebt = user.amount.mul(accTokenPerShare).div(1e12);\n\n        if (tokenId > 0) {\n            require(tokenId == tokenIds[msg.sender]);\n            tokenIds[msg.sender] = 0;\n        } else {\n            tokenId = tokenIds[msg.sender];\n        }\n        emit Withdraw(msg.sender, tokenId, _amount);\n    }\n\n    function updatePool() public {\n        if (block.number <= lastRewardBlock) {\n            return;\n        }\n\n        if (totalSupply == 0) {\n            lastRewardBlock = block.number;\n            return;\n        }\n        if (tokenPerBlock <= 0) {\n            return;\n        }\n        uint256 mul = block.number.sub(lastRewardBlock);\n        uint256 tokenReward = tokenPerBlock.mul(mul);\n\n        accTokenPerShare = accTokenPerShare.add(tokenReward.mul(1e12).div(totalSupply));\n        lastRewardBlock = block.number;\n    }\n\n\n    // View function to see pending swap token on frontend.\n    function pendingMax(address _user) public view returns (uint256){\n        UserInfo storage user = userInfo[_user];\n        uint256 _accTokenPerShare = accTokenPerShare;\n        if (user.amount > 0) {\n            if (block.number > lastRewardBlock) {\n                uint256 mul = block.number.sub(lastRewardBlock);\n                uint256 tokenReward = tokenPerBlock.mul(mul);\n                _accTokenPerShare = _accTokenPerShare.add(tokenReward.mul(1e12).div(totalSupply));\n                return user.amount.mul(_accTokenPerShare).div(1e12).sub(user.rewardDebt);\n            }\n            if (block.number == lastRewardBlock) {\n                return user.amount.mul(accTokenPerShare).div(1e12).sub(user.rewardDebt);\n            }\n        }\n        return 0;\n    }\n\n    function pending(address _user) public view returns (uint256){\n        uint256 amount = pendingMax(_user);\n        return derivedBalance(_user, amount);\n    }\n\n\n    function notifyRewardAmount(address token, uint _rewardRate) external onlyBoost {\n        require(token != stake, \"no stake\");\n        if (block.number <= lastRewardBlock) {\n            return;\n        }\n        tokenPerBlock = _rewardRate;\n        if (totalSupply > 0) {\n            uint256 mul = block.number.sub(lastRewardBlock);\n            accTokenPerShare = accTokenPerShare.add(_rewardRate.mul(mul).mul(1e12).div(totalSupply));\n            lastRewardBlock = block.number;\n        }\n        emit NotifyReward(msg.sender, token, _rewardRate);\n    }\n\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/Gauge.sol": {
				"Gauge": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_stake",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "__ve",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_boost",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_rewardToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "reward",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "ClaimRewards",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposit",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "reward",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewardRate",
									"type": "uint256"
								}
							],
							"name": "NotifyReward",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdraw",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "accTokenPerShare",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "boost",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "depositAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_balance",
									"type": "uint256"
								}
							],
							"name": "derivedBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastRewardBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_rewardRate",
									"type": "uint256"
								}
							],
							"name": "notifyRewardAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "pending",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								}
							],
							"name": "pendingMax",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stake",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "tokenIds",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenPerBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "updatePool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardDebt",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "veToken",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "withdrawToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Gauge.sol\":16315:24265  contract Gauge is ReentrancyGuard {... */\n  mstore(0x40, 0x0100)\n    /* \"contracts/Gauge.sol\":17497:17692  constructor(address _stake, address __ve, address _boost, address _rewardToken) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/Gauge.sol\":3090:3091  1 */\n  0x01\n    /* \"contracts/Gauge.sol\":3195:3202  _status */\n  0x00\n    /* \"contracts/Gauge.sol\":3195:3217  _status = _NOT_ENTERED */\n  sstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/Gauge.sol\":17587:17601  stake = _stake */\n  swap4\n  dup5\n  and\n  0x80\n  mstore\n    /* \"contracts/Gauge.sol\":17611:17625  veToken = __ve */\n  swap2\n  dup4\n  and\n  0xa0\n  mstore\n    /* \"contracts/Gauge.sol\":17635:17649  boost = _boost */\n  dup3\n  and\n  0xc0\n  mstore\n    /* \"contracts/Gauge.sol\":17659:17685  rewardToken = _rewardToken */\n  and\n  0xe0\n  mstore\n    /* \"contracts/Gauge.sol\":16315:24265  contract Gauge is ReentrancyGuard {... */\n  jump(tag_10)\n    /* \"#utility.yul\":14:191   */\ntag_9:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_12\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_12:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:660   */\ntag_3:\n    /* \"#utility.yul\":293:299   */\n  0x00\n    /* \"#utility.yul\":301:307   */\n  dup1\n    /* \"#utility.yul\":309:315   */\n  0x00\n    /* \"#utility.yul\":317:323   */\n  dup1\n    /* \"#utility.yul\":370:373   */\n  0x80\n    /* \"#utility.yul\":358:367   */\n  dup6\n    /* \"#utility.yul\":349:356   */\n  dup8\n    /* \"#utility.yul\":345:368   */\n  sub\n    /* \"#utility.yul\":341:374   */\n  slt\n    /* \"#utility.yul\":338:391   */\n  iszero\n  tag_14\n  jumpi\n    /* \"#utility.yul\":387:388   */\n  0x00\n    /* \"#utility.yul\":384:385   */\n  dup1\n    /* \"#utility.yul\":377:389   */\n  revert\n    /* \"#utility.yul\":338:391   */\ntag_14:\n    /* \"#utility.yul\":410:450   */\n  tag_15\n    /* \"#utility.yul\":440:449   */\n  dup6\n    /* \"#utility.yul\":410:450   */\n  tag_9\n  jump\t// in\ntag_15:\n    /* \"#utility.yul\":400:450   */\n  swap4\n  pop\n    /* \"#utility.yul\":469:518   */\n  tag_16\n    /* \"#utility.yul\":514:516   */\n  0x20\n    /* \"#utility.yul\":503:512   */\n  dup7\n    /* \"#utility.yul\":499:517   */\n  add\n    /* \"#utility.yul\":469:518   */\n  tag_9\n  jump\t// in\ntag_16:\n    /* \"#utility.yul\":459:518   */\n  swap3\n  pop\n    /* \"#utility.yul\":537:586   */\n  tag_17\n    /* \"#utility.yul\":582:584   */\n  0x40\n    /* \"#utility.yul\":571:580   */\n  dup7\n    /* \"#utility.yul\":567:585   */\n  add\n    /* \"#utility.yul\":537:586   */\n  tag_9\n  jump\t// in\ntag_17:\n    /* \"#utility.yul\":527:586   */\n  swap2\n  pop\n    /* \"#utility.yul\":605:654   */\n  tag_18\n    /* \"#utility.yul\":650:652   */\n  0x60\n    /* \"#utility.yul\":639:648   */\n  dup7\n    /* \"#utility.yul\":635:653   */\n  add\n    /* \"#utility.yul\":605:654   */\n  tag_9\n  jump\t// in\ntag_18:\n    /* \"#utility.yul\":595:654   */\n  swap1\n  pop\n    /* \"#utility.yul\":196:660   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\ntag_10:\n    /* \"contracts/Gauge.sol\":16315:24265  contract Gauge is ReentrancyGuard {... */\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  mload(0xe0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x51432b6f6ffff9c0d91073ef7f23a4f639ef505c3fc71bae7794b27877f54eff\")\n  0x00\n  assignImmutable(\"0xba317e1d5aa05b5861702d06e2202816a8a6452d32b68558d200060c06eac391\")\n  0x00\n  assignImmutable(\"0xeae3a40291c102cf85748609ff9046ea32530afca3ce058bd94a667258369fd6\")\n  0x00\n  assignImmutable(\"0x6d7e9d25f7937a025d098651c32892e1256b8f7bcedf36aadd28cccf92a5a08d\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/Gauge.sol\":16315:24265  contract Gauge is ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa66f42c0\n      gt\n      tag_24\n      jumpi\n      dup1\n      0xc73b399b\n      gt\n      tag_25\n      jumpi\n      dup1\n      0xc73b399b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xe2bbb158\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xe3161ddd\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf7c618c1\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xfc97a303\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xfdb483c7\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      dup1\n      0xa66f42c0\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa9f8d181\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xb66503cf\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xc00007b0\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xc6f678bd\n      eq\n      tag_17\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup1\n      0x4198709a\n      gt\n      tag_26\n      jumpi\n      dup1\n      0x4198709a\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x5eebea20\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x853828b6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x892f4805\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8f662915\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      dup1\n      0x18160ddd\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1959a002\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3a4b66f1\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x3b92eb23\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Gauge.sol\":17416:17439  uint public totalSupply */\n    tag_3:\n      tag_27\n      sload(0x05)\n      dup2\n      jump\n    tag_27:\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/Gauge.sol\":17416:17439  uint public totalSupply */\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Gauge.sol\":17446:17490  mapping(address => UserInfo) public userInfo */\n    tag_4:\n      tag_31\n      tag_32\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_32:\n      mstore(0x20, 0x06)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      swap1\n      swap2\n      add\n      sload\n      dup3\n      jump\n    tag_31:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":758:783   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":814:816   */\n      0x20\n        /* \"#utility.yul\":799:817   */\n      dup4\n      add\n        /* \"#utility.yul\":792:826   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":731:749   */\n      add\n        /* \"contracts/Gauge.sol\":17446:17490  mapping(address => UserInfo) public userInfo */\n      tag_29\n        /* \"#utility.yul\":584:832   */\n      jump\n        /* \"contracts/Gauge.sol\":21031:21249  function withdraw(uint amount) public {... */\n    tag_5:\n      tag_37\n      tag_38\n      calldatasize\n      0x04\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      stop\n        /* \"contracts/Gauge.sol\":16869:16899  address public immutable stake */\n    tag_6:\n      tag_41\n      immutable(\"0x6d7e9d25f7937a025d098651c32892e1256b8f7bcedf36aadd28cccf92a5a08d\")\n      dup2\n      jump\n    tag_41:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":1186:1218   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1168:1219   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1156:1158   */\n      0x20\n        /* \"#utility.yul\":1141:1159   */\n      add\n        /* \"contracts/Gauge.sol\":16869:16899  address public immutable stake */\n      tag_29\n        /* \"#utility.yul\":1022:1225   */\n      jump\n        /* \"contracts/Gauge.sol\":16957:16989  address public immutable veToken */\n    tag_7:\n      tag_41\n      immutable(\"0xeae3a40291c102cf85748609ff9046ea32530afca3ce058bd94a667258369fd6\")\n      dup2\n      jump\n        /* \"contracts/Gauge.sol\":17201:17229  uint256 public tokenPerBlock */\n    tag_8:\n      tag_27\n      sload(0x02)\n      dup2\n      jump\n        /* \"contracts/Gauge.sol\":23544:23702  function pending(address _user) public view returns (uint256){... */\n    tag_9:\n      tag_27\n      tag_52\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n        /* \"contracts/Gauge.sol\":20939:21025  function withdrawAll() external {... */\n    tag_10:\n      tag_37\n      tag_56\n      jump\t// in\n        /* \"contracts/Gauge.sol\":19017:19727  function derivedBalance(address account, uint _balance) public view returns (uint) {... */\n    tag_11:\n      tag_27\n      tag_58\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_58:\n      tag_60\n      jump\t// in\n        /* \"contracts/Gauge.sol\":17235:17266  uint256 public accTokenPerShare */\n    tag_12:\n      tag_27\n      sload(0x03)\n      dup2\n      jump\n        /* \"contracts/Gauge.sol\":17027:17057  address public immutable boost */\n    tag_13:\n      tag_41\n      immutable(\"0xba317e1d5aa05b5861702d06e2202816a8a6452d32b68558d200060c06eac391\")\n      dup2\n      jump\n        /* \"contracts/Gauge.sol\":17321:17351  uint256 public lastRewardBlock */\n    tag_14:\n      tag_27\n      sload(0x04)\n      dup2\n      jump\n        /* \"contracts/Gauge.sol\":23709:24262  function notifyRewardAmount(address token, uint _rewardRate) external onlyBoost {... */\n    tag_15:\n      tag_37\n      tag_72\n      calldatasize\n      0x04\n      tag_59\n      jump\t// in\n    tag_72:\n      tag_73\n      jump\t// in\n        /* \"contracts/Gauge.sol\":18454:19011  function getReward(address account) external nonReentrant {... */\n    tag_16:\n      tag_37\n      tag_75\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n        /* \"contracts/Gauge.sol\":19734:19847  function depositAll(uint tokenId) external {... */\n    tag_17:\n      tag_37\n      tag_78\n      calldatasize\n      0x04\n      tag_39\n      jump\t// in\n    tag_78:\n      tag_79\n      jump\t// in\n        /* \"contracts/Gauge.sol\":22771:23538  function pendingMax(address _user) public view returns (uint256){... */\n    tag_18:\n      tag_27\n      tag_81\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_81:\n      tag_82\n      jump\t// in\n        /* \"contracts/Gauge.sol\":19853:20933  function deposit(uint amount, uint tokenId) public nonReentrant {... */\n    tag_19:\n      tag_37\n      tag_85\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_85:\n      tag_87\n      jump\t// in\n        /* \"contracts/Gauge.sol\":22179:22704  function updatePool() public {... */\n    tag_20:\n      tag_37\n      tag_89\n      jump\t// in\n        /* \"contracts/Gauge.sol\":17063:17099  address public immutable rewardToken */\n    tag_21:\n      tag_41\n      immutable(\"0x51432b6f6ffff9c0d91073ef7f23a4f639ef505c3fc71bae7794b27877f54eff\")\n      dup2\n      jump\n        /* \"contracts/Gauge.sol\":17154:17194  mapping(address => uint) public tokenIds */\n    tag_22:\n      tag_27\n      tag_94\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_94:\n      mstore(0x20, 0x01)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"contracts/Gauge.sol\":21255:22173  function withdrawToken(uint _amount, uint tokenId) public nonReentrant {... */\n    tag_23:\n      tag_37\n      tag_98\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_98:\n      tag_99\n      jump\t// in\n        /* \"contracts/Gauge.sol\":21031:21249  function withdraw(uint amount) public {... */\n    tag_40:\n        /* \"contracts/Gauge.sol\":21128:21138  msg.sender */\n      caller\n        /* \"contracts/Gauge.sol\":21079:21091  uint tokenId */\n      0x00\n        /* \"contracts/Gauge.sol\":21119:21139  userInfo[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Gauge.sol\":21119:21127  userInfo */\n      0x06\n        /* \"contracts/Gauge.sol\":21119:21139  userInfo[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Gauge.sol\":21119:21146  userInfo[msg.sender].amount */\n      sload\n        /* \"contracts/Gauge.sol\":21109:21146  amount == userInfo[msg.sender].amount */\n      dup3\n      eq\n        /* \"contracts/Gauge.sol\":21105:21203  if (amount == userInfo[msg.sender].amount) {... */\n      iszero\n      tag_101\n      jumpi\n      pop\n        /* \"contracts/Gauge.sol\":21181:21191  msg.sender */\n      caller\n        /* \"contracts/Gauge.sol\":21172:21192  tokenIds[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Gauge.sol\":21172:21180  tokenIds */\n      0x01\n        /* \"contracts/Gauge.sol\":21172:21192  tokenIds[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Gauge.sol\":21105:21203  if (amount == userInfo[msg.sender].amount) {... */\n    tag_101:\n        /* \"contracts/Gauge.sol\":21212:21242  withdrawToken(amount, tokenId) */\n      tag_102\n        /* \"contracts/Gauge.sol\":21226:21232  amount */\n      dup3\n        /* \"contracts/Gauge.sol\":21234:21241  tokenId */\n      dup3\n        /* \"contracts/Gauge.sol\":21212:21225  withdrawToken */\n      tag_99\n        /* \"contracts/Gauge.sol\":21212:21242  withdrawToken(amount, tokenId) */\n      jump\t// in\n    tag_102:\n        /* \"contracts/Gauge.sol\":21069:21249  {... */\n      pop\n        /* \"contracts/Gauge.sol\":21031:21249  function withdraw(uint amount) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/Gauge.sol\":23544:23702  function pending(address _user) public view returns (uint256){... */\n    tag_53:\n        /* \"contracts/Gauge.sol\":23597:23604  uint256 */\n      0x00\n        /* \"contracts/Gauge.sol\":23615:23629  uint256 amount */\n      dup1\n        /* \"contracts/Gauge.sol\":23632:23649  pendingMax(_user) */\n      tag_104\n        /* \"contracts/Gauge.sol\":23643:23648  _user */\n      dup4\n        /* \"contracts/Gauge.sol\":23632:23642  pendingMax */\n      tag_82\n        /* \"contracts/Gauge.sol\":23632:23649  pendingMax(_user) */\n      jump\t// in\n    tag_104:\n        /* \"contracts/Gauge.sol\":23615:23649  uint256 amount = pendingMax(_user) */\n      swap1\n      pop\n        /* \"contracts/Gauge.sol\":23666:23695  derivedBalance(_user, amount) */\n      tag_105\n        /* \"contracts/Gauge.sol\":23681:23686  _user */\n      dup4\n        /* \"contracts/Gauge.sol\":23688:23694  amount */\n      dup3\n        /* \"contracts/Gauge.sol\":23666:23680  derivedBalance */\n      tag_60\n        /* \"contracts/Gauge.sol\":23666:23695  derivedBalance(_user, amount) */\n      jump\t// in\n    tag_105:\n        /* \"contracts/Gauge.sol\":23659:23695  return derivedBalance(_user, amount) */\n      swap4\n        /* \"contracts/Gauge.sol\":23544:23702  function pending(address _user) public view returns (uint256){... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Gauge.sol\":20939:21025  function withdrawAll() external {... */\n    tag_56:\n        /* \"contracts/Gauge.sol\":20999:21009  msg.sender */\n      caller\n        /* \"contracts/Gauge.sol\":20990:21010  userInfo[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Gauge.sol\":20990:20998  userInfo */\n      0x06\n        /* \"contracts/Gauge.sol\":20990:21010  userInfo[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Gauge.sol\":20990:21017  userInfo[msg.sender].amount */\n      sload\n        /* \"contracts/Gauge.sol\":20981:21018  withdraw(userInfo[msg.sender].amount) */\n      tag_107\n      swap1\n        /* \"contracts/Gauge.sol\":20981:20989  withdraw */\n      tag_40\n        /* \"contracts/Gauge.sol\":20981:21018  withdraw(userInfo[msg.sender].amount) */\n      jump\t// in\n    tag_107:\n        /* \"contracts/Gauge.sol\":20939:21025  function withdrawAll() external {... */\n      jump\t// out\n        /* \"contracts/Gauge.sol\":19017:19727  function derivedBalance(address account, uint _balance) public view returns (uint) {... */\n    tag_60:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Gauge.sol\":19126:19143  tokenIds[account] */\n      dup3\n      and\n        /* \"contracts/Gauge.sol\":19094:19098  uint */\n      0x00\n        /* \"contracts/Gauge.sol\":19126:19143  tokenIds[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Gauge.sol\":19126:19134  tokenIds */\n      0x01\n        /* \"contracts/Gauge.sol\":19126:19143  tokenIds[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"contracts/Gauge.sol\":19094:19098  uint */\n      dup2\n        /* \"contracts/Gauge.sol\":19185:19188  100 */\n      0x64\n        /* \"contracts/Gauge.sol\":19169:19182  _balance * 30 */\n      tag_109\n        /* \"contracts/Gauge.sol\":19169:19177  _balance */\n      dup6\n        /* \"contracts/Gauge.sol\":19180:19182  30 */\n      0x1e\n        /* \"contracts/Gauge.sol\":19169:19182  _balance * 30 */\n      tag_110\n      jump\t// in\n    tag_109:\n        /* \"contracts/Gauge.sol\":19169:19188  _balance * 30 / 100 */\n      tag_111\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n        /* \"contracts/Gauge.sol\":19241:19269  IBoost(boost).weights(stake) */\n      mload(0x40)\n      shl(0xe1, 0x53e56423)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Gauge.sol\":19263:19268  stake */\n      immutable(\"0x6d7e9d25f7937a025d098651c32892e1256b8f7bcedf36aadd28cccf92a5a08d\")\n        /* \"#utility.yul\":1186:1218   */\n      dup2\n      and\n        /* \"contracts/Gauge.sol\":19241:19269  IBoost(boost).weights(stake) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":1168:1219   */\n      mstore\n        /* \"contracts/Gauge.sol\":19153:19188  uint _derived = _balance * 30 / 100 */\n      swap2\n      swap3\n      pop\n      0x00\n      swap2\n      dup3\n      swap2\n        /* \"contracts/Gauge.sol\":19248:19253  boost */\n      immutable(\"0xba317e1d5aa05b5861702d06e2202816a8a6452d32b68558d200060c06eac391\")\n        /* \"contracts/Gauge.sol\":19241:19262  IBoost(boost).weights */\n      swap1\n      swap2\n      and\n      swap1\n      0xa7cac846\n      swap1\n        /* \"#utility.yul\":1141:1159   */\n      0x24\n      add\n        /* \"contracts/Gauge.sol\":19241:19269  IBoost(boost).weights(stake) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_115\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_115:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_116\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n        /* \"contracts/Gauge.sol\":19294:19329  IVeToken(veToken).ownerOf(_tokenId) */\n      mload(0x40)\n      shl(0xe1, 0x31a9108f)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup7\n      swap1\n      mstore\n        /* \"contracts/Gauge.sol\":19226:19269  uint _supply = IBoost(boost).weights(stake) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/Gauge.sol\":19303:19310  veToken */\n      immutable(\"0xeae3a40291c102cf85748609ff9046ea32530afca3ce058bd94a667258369fd6\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Gauge.sol\":19294:19319  IVeToken(veToken).ownerOf */\n      and\n      swap1\n      0x6352211e\n      swap1\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"contracts/Gauge.sol\":19294:19329  IVeToken(veToken).ownerOf(_tokenId) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_120\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_120:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_121\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Gauge.sol\":19283:19329  account == IVeToken(veToken).ownerOf(_tokenId) */\n      and\n        /* \"contracts/Gauge.sol\":19283:19290  account */\n      dup8\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Gauge.sol\":19283:19329  account == IVeToken(veToken).ownerOf(_tokenId) */\n      and\n      eq\n        /* \"contracts/Gauge.sol\":19283:19344  account == IVeToken(veToken).ownerOf(_tokenId) && _supply > 0 */\n      dup1\n      iszero\n      tag_123\n      jumpi\n      pop\n        /* \"contracts/Gauge.sol\":19343:19344  0 */\n      0x00\n        /* \"contracts/Gauge.sol\":19333:19340  _supply */\n      dup2\n        /* \"contracts/Gauge.sol\":19333:19344  _supply > 0 */\n      gt\n        /* \"contracts/Gauge.sol\":19283:19344  account == IVeToken(veToken).ownerOf(_tokenId) && _supply > 0 */\n    tag_123:\n        /* \"contracts/Gauge.sol\":19279:19662  if (account == IVeToken(veToken).ownerOf(_tokenId) && _supply > 0) {... */\n      iszero\n      tag_124\n      jumpi\n        /* \"contracts/Gauge.sol\":19378:19413  IBoost(boost).usedWeights(_tokenId) */\n      mload(0x40)\n      shl(0xe2, 0x1e7a4e09)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup6\n      swap1\n      mstore\n        /* \"contracts/Gauge.sol\":19360:19375  uint usedWeight */\n      0x00\n      swap1\n        /* \"contracts/Gauge.sol\":19385:19390  boost */\n      immutable(\"0xba317e1d5aa05b5861702d06e2202816a8a6452d32b68558d200060c06eac391\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Gauge.sol\":19378:19403  IBoost(boost).usedWeights */\n      and\n      swap1\n      0x79e93824\n      swap1\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"contracts/Gauge.sol\":19378:19413  IBoost(boost).usedWeights(_tokenId) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_127\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_127:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_128\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_128:\n        /* \"contracts/Gauge.sol\":19440:19480  IVeToken(veToken).balanceOfNFT(_tokenId) */\n      mload(0x40)\n      shl(0xe2, 0x39f890b5)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup8\n      swap1\n      mstore\n        /* \"contracts/Gauge.sol\":19360:19413  uint usedWeight = IBoost(boost).usedWeights(_tokenId) */\n      swap1\n      swap2\n      pop\n        /* \"contracts/Gauge.sol\":19427:19437  uint useVe */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Gauge.sol\":19449:19456  veToken */\n      immutable(\"0xeae3a40291c102cf85748609ff9046ea32530afca3ce058bd94a667258369fd6\")\n        /* \"contracts/Gauge.sol\":19440:19470  IVeToken(veToken).balanceOfNFT */\n      and\n      swap1\n      0xe7e242d4\n      swap1\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"contracts/Gauge.sol\":19440:19480  IVeToken(veToken).balanceOfNFT(_tokenId) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_131\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_131:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_132\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_132:\n        /* \"contracts/Gauge.sol\":19427:19480  uint useVe = IVeToken(veToken).balanceOfNFT(_tokenId) */\n      swap1\n      pop\n        /* \"contracts/Gauge.sol\":19506:19579  IBoost(boost).votes(_tokenId, stake).mul(1e12).mul(useVe).div(usedWeight) */\n      tag_133\n        /* \"contracts/Gauge.sol\":19568:19578  usedWeight */\n      dup3\n        /* \"contracts/Gauge.sol\":19506:19563  IBoost(boost).votes(_tokenId, stake).mul(1e12).mul(useVe) */\n      tag_134\n        /* \"contracts/Gauge.sol\":19557:19562  useVe */\n      dup4\n        /* \"contracts/Gauge.sol\":19506:19552  IBoost(boost).votes(_tokenId, stake).mul(1e12) */\n      tag_140\n        /* \"contracts/Gauge.sol\":19547:19551  1e12 */\n      0xe8d4a51000\n        /* \"contracts/Gauge.sol\":19513:19518  boost */\n      immutable(\"0xba317e1d5aa05b5861702d06e2202816a8a6452d32b68558d200060c06eac391\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Gauge.sol\":19506:19525  IBoost(boost).votes */\n      and\n      0xd23254b4\n        /* \"contracts/Gauge.sol\":19526:19534  _tokenId */\n      dup14\n        /* \"contracts/Gauge.sol\":19536:19541  stake */\n      immutable(\"0x6d7e9d25f7937a025d098651c32892e1256b8f7bcedf36aadd28cccf92a5a08d\")\n        /* \"contracts/Gauge.sol\":19506:19542  IBoost(boost).votes(_tokenId, stake) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap3\n      swap2\n      swap1\n        /* \"#utility.yul\":2949:2974   */\n      swap2\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":3010:3042   */\n      and\n        /* \"#utility.yul\":3005:3007   */\n      0x20\n        /* \"#utility.yul\":2990:3008   */\n      dup3\n      add\n        /* \"#utility.yul\":2983:3043   */\n      mstore\n        /* \"#utility.yul\":2937:2939   */\n      0x40\n        /* \"#utility.yul\":2922:2940   */\n      add\n      swap1\n        /* \"#utility.yul\":2775:3049   */\n      jump\n        /* \"contracts/Gauge.sol\":19506:19542  IBoost(boost).votes(_tokenId, stake) */\n    tag_136:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_139\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_139:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_140\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_140:\n        /* \"contracts/Gauge.sol\":19506:19546  IBoost(boost).votes(_tokenId, stake).mul */\n      swap1\n      tag_141\n        /* \"contracts/Gauge.sol\":19506:19552  IBoost(boost).votes(_tokenId, stake).mul(1e12) */\n      jump\t// in\n        /* \"contracts/Gauge.sol\":19506:19563  IBoost(boost).votes(_tokenId, stake).mul(1e12).mul(useVe) */\n    tag_134:\n        /* \"contracts/Gauge.sol\":19506:19567  IBoost(boost).votes(_tokenId, stake).mul(1e12).mul(useVe).div */\n      swap1\n      tag_142\n        /* \"contracts/Gauge.sol\":19506:19579  IBoost(boost).votes(_tokenId, stake).mul(1e12).mul(useVe).div(usedWeight) */\n      jump\t// in\n    tag_133:\n        /* \"contracts/Gauge.sol\":19494:19579  _adjusted = IBoost(boost).votes(_tokenId, stake).mul(1e12).mul(useVe).div(usedWeight) */\n      swap4\n      pop\n        /* \"contracts/Gauge.sol\":19648:19651  100 */\n      0x64\n        /* \"contracts/Gauge.sol\":19632:19639  _supply */\n      dup4\n        /* \"contracts/Gauge.sol\":19620:19629  _adjusted */\n      dup6\n        /* \"contracts/Gauge.sol\":19606:19617  totalSupply */\n      sload(0x05)\n        /* \"contracts/Gauge.sol\":19606:19629  totalSupply * _adjusted */\n      tag_143\n      swap2\n      swap1\n      tag_110\n      jump\t// in\n    tag_143:\n        /* \"contracts/Gauge.sol\":19606:19639  totalSupply * _adjusted / _supply */\n      tag_144\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_144:\n        /* \"contracts/Gauge.sol\":19605:19645  (totalSupply * _adjusted / _supply) * 70 */\n      tag_145\n      swap1\n        /* \"contracts/Gauge.sol\":19643:19645  70 */\n      0x46\n        /* \"contracts/Gauge.sol\":19605:19645  (totalSupply * _adjusted / _supply) * 70 */\n      tag_110\n      jump\t// in\n    tag_145:\n        /* \"contracts/Gauge.sol\":19605:19651  (totalSupply * _adjusted / _supply) * 70 / 100 */\n      tag_146\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_146:\n        /* \"contracts/Gauge.sol\":19593:19651  _adjusted = (totalSupply * _adjusted / _supply) * 70 / 100 */\n      swap4\n      pop\n        /* \"contracts/Gauge.sol\":19346:19662  {... */\n      pop\n      pop\n        /* \"contracts/Gauge.sol\":19279:19662  if (account == IVeToken(veToken).ownerOf(_tokenId) && _supply > 0) {... */\n    tag_124:\n        /* \"contracts/Gauge.sol\":19678:19720  Math.min((_derived + _adjusted), _balance) */\n      tag_147\n        /* \"contracts/Gauge.sol\":19688:19708  _derived + _adjusted */\n      tag_148\n        /* \"contracts/Gauge.sol\":19699:19708  _adjusted */\n      dup4\n        /* \"contracts/Gauge.sol\":19688:19696  _derived */\n      dup6\n        /* \"contracts/Gauge.sol\":19688:19708  _derived + _adjusted */\n      tag_149\n      jump\t// in\n    tag_148:\n        /* \"contracts/Gauge.sol\":19711:19719  _balance */\n      dup8\n        /* \"contracts/Gauge.sol\":19678:19686  Math.min */\n      tag_150\n        /* \"contracts/Gauge.sol\":19678:19720  Math.min((_derived + _adjusted), _balance) */\n      jump\t// in\n    tag_147:\n        /* \"contracts/Gauge.sol\":19671:19720  return Math.min((_derived + _adjusted), _balance) */\n      swap8\n        /* \"contracts/Gauge.sol\":19017:19727  function derivedBalance(address account, uint _balance) public view returns (uint) {... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Gauge.sol\":23709:24262  function notifyRewardAmount(address token, uint _rewardRate) external onlyBoost {... */\n    tag_73:\n        /* \"contracts/Gauge.sol\":17738:17748  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Gauge.sol\":17752:17757  boost */\n      immutable(\"0xba317e1d5aa05b5861702d06e2202816a8a6452d32b68558d200060c06eac391\")\n        /* \"contracts/Gauge.sol\":17738:17757  msg.sender == boost */\n      and\n      eq\n        /* \"contracts/Gauge.sol\":17730:17772  require(msg.sender == boost, 'only boost') */\n      tag_152\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3389:3391   */\n      0x20\n        /* \"contracts/Gauge.sol\":17730:17772  require(msg.sender == boost, 'only boost') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3371:3392   */\n      mstore\n        /* \"#utility.yul\":3428:3430   */\n      0x0a\n        /* \"#utility.yul\":3408:3426   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3401:3431   */\n      mstore\n      shl(0xb2, 0x1bdb9b1e48189bdbdcdd)\n        /* \"#utility.yul\":3447:3465   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3440:3480   */\n      mstore\n        /* \"#utility.yul\":3497:3515   */\n      0x64\n      add\n        /* \"contracts/Gauge.sol\":17730:17772  require(msg.sender == boost, 'only boost') */\n    tag_153:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_152:\n        /* \"contracts/Gauge.sol\":23816:23821  stake */\n      immutable(\"0x6d7e9d25f7937a025d098651c32892e1256b8f7bcedf36aadd28cccf92a5a08d\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Gauge.sol\":23807:23821  token != stake */\n      and\n        /* \"contracts/Gauge.sol\":23807:23812  token */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Gauge.sol\":23807:23821  token != stake */\n      and\n      eq\n      iszero\n        /* \"contracts/Gauge.sol\":23799:23834  require(token != stake, \"no stake\") */\n      tag_156\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3728:3730   */\n      0x20\n        /* \"contracts/Gauge.sol\":23799:23834  require(token != stake, \"no stake\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3710:3731   */\n      mstore\n        /* \"#utility.yul\":3767:3768   */\n      0x08\n        /* \"#utility.yul\":3747:3765   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3740:3769   */\n      mstore\n      shl(0xc0, 0x6e6f207374616b65)\n        /* \"#utility.yul\":3785:3803   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3778:3816   */\n      mstore\n        /* \"#utility.yul\":3833:3851   */\n      0x64\n      add\n        /* \"contracts/Gauge.sol\":23799:23834  require(token != stake, \"no stake\") */\n      tag_153\n        /* \"#utility.yul\":3526:3857   */\n      jump\n        /* \"contracts/Gauge.sol\":23799:23834  require(token != stake, \"no stake\") */\n    tag_156:\n        /* \"contracts/Gauge.sol\":23864:23879  lastRewardBlock */\n      sload(0x04)\n        /* \"contracts/Gauge.sol\":23848:23860  block.number */\n      number\n        /* \"contracts/Gauge.sol\":23848:23879  block.number <= lastRewardBlock */\n      gt\n        /* \"contracts/Gauge.sol\":23844:23912  if (block.number <= lastRewardBlock) {... */\n      tag_159\n      jumpi\n        /* \"contracts/Gauge.sol\":21069:21249  {... */\n      pop\n        /* \"contracts/Gauge.sol\":21031:21249  function withdraw(uint amount) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/Gauge.sol\":23844:23912  if (block.number <= lastRewardBlock) {... */\n    tag_159:\n        /* \"contracts/Gauge.sol\":23921:23934  tokenPerBlock */\n      0x02\n        /* \"contracts/Gauge.sol\":23921:23948  tokenPerBlock = _rewardRate */\n      dup2\n      swap1\n      sstore\n        /* \"contracts/Gauge.sol\":23962:23973  totalSupply */\n      sload(0x05)\n        /* \"contracts/Gauge.sol\":23962:23977  totalSupply > 0 */\n      iszero\n        /* \"contracts/Gauge.sol\":23958:24197  if (totalSupply > 0) {... */\n      tag_160\n      jumpi\n        /* \"contracts/Gauge.sol\":23993:24004  uint256 mul */\n      0x00\n        /* \"contracts/Gauge.sol\":24007:24040  block.number.sub(lastRewardBlock) */\n      tag_161\n        /* \"contracts/Gauge.sol\":24024:24039  lastRewardBlock */\n      sload(0x04)\n        /* \"contracts/Gauge.sol\":24007:24019  block.number */\n      number\n        /* \"contracts/Gauge.sol\":24007:24023  block.number.sub */\n      tag_162\n      swap1\n        /* \"contracts/Gauge.sol\":24007:24040  block.number.sub(lastRewardBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_161:\n        /* \"contracts/Gauge.sol\":23993:24040  uint256 mul = block.number.sub(lastRewardBlock) */\n      swap1\n      pop\n        /* \"contracts/Gauge.sol\":24073:24142  accTokenPerShare.add(_rewardRate.mul(mul).mul(1e12).div(totalSupply)) */\n      tag_163\n        /* \"contracts/Gauge.sol\":24094:24141  _rewardRate.mul(mul).mul(1e12).div(totalSupply) */\n      tag_164\n        /* \"contracts/Gauge.sol\":24129:24140  totalSupply */\n      sload(0x05)\n        /* \"contracts/Gauge.sol\":24094:24124  _rewardRate.mul(mul).mul(1e12) */\n      tag_134\n        /* \"contracts/Gauge.sol\":24119:24123  1e12 */\n      0xe8d4a51000\n        /* \"contracts/Gauge.sol\":24094:24114  _rewardRate.mul(mul) */\n      tag_140\n        /* \"contracts/Gauge.sol\":24110:24113  mul */\n      dup7\n        /* \"contracts/Gauge.sol\":24094:24105  _rewardRate */\n      dup9\n        /* \"contracts/Gauge.sol\":24094:24109  _rewardRate.mul */\n      tag_141\n      swap1\n        /* \"contracts/Gauge.sol\":24094:24114  _rewardRate.mul(mul) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/Gauge.sol\":24094:24141  _rewardRate.mul(mul).mul(1e12).div(totalSupply) */\n    tag_164:\n        /* \"contracts/Gauge.sol\":24073:24089  accTokenPerShare */\n      sload(0x03)\n      swap1\n        /* \"contracts/Gauge.sol\":24073:24093  accTokenPerShare.add */\n      tag_167\n        /* \"contracts/Gauge.sol\":24073:24142  accTokenPerShare.add(_rewardRate.mul(mul).mul(1e12).div(totalSupply)) */\n      jump\t// in\n    tag_163:\n        /* \"contracts/Gauge.sol\":24054:24070  accTokenPerShare */\n      0x03\n        /* \"contracts/Gauge.sol\":24054:24142  accTokenPerShare = accTokenPerShare.add(_rewardRate.mul(mul).mul(1e12).div(totalSupply)) */\n      sstore\n      pop\n        /* \"contracts/Gauge.sol\":24174:24186  block.number */\n      number\n        /* \"contracts/Gauge.sol\":24156:24171  lastRewardBlock */\n      0x04\n        /* \"contracts/Gauge.sol\":24156:24186  lastRewardBlock = block.number */\n      sstore\n        /* \"contracts/Gauge.sol\":23958:24197  if (totalSupply > 0) {... */\n    tag_160:\n        /* \"contracts/Gauge.sol\":24211:24255  NotifyReward(msg.sender, token, _rewardRate) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup2\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Gauge.sol\":24211:24255  NotifyReward(msg.sender, token, _rewardRate) */\n      dup4\n      and\n      swap1\n        /* \"contracts/Gauge.sol\":24224:24234  msg.sender */\n      caller\n      swap1\n        /* \"contracts/Gauge.sol\":24211:24255  NotifyReward(msg.sender, token, _rewardRate) */\n      0xf70d5c697de7ea828df48e5c4573cb2194c659f1901f70110c52b066dcf50826\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/Gauge.sol\":24211:24255  NotifyReward(msg.sender, token, _rewardRate) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Gauge.sol\":23709:24262  function notifyRewardAmount(address token, uint _rewardRate) external onlyBoost {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Gauge.sol\":18454:19011  function getReward(address account) external nonReentrant {... */\n    tag_76:\n        /* \"contracts/Gauge.sol\":3133:3134  2 */\n      0x02\n        /* \"contracts/Gauge.sol\":3714:3721  _status */\n      sload(0x00)\n        /* \"contracts/Gauge.sol\":3714:3733  _status != _ENTERED */\n      eq\n      iszero\n        /* \"contracts/Gauge.sol\":3706:3769  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_170\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_172\n      jump\t// in\n    tag_170:\n        /* \"contracts/Gauge.sol\":3133:3134  2 */\n      0x02\n        /* \"contracts/Gauge.sol\":3844:3851  _status */\n      0x00\n        /* \"contracts/Gauge.sol\":3844:3862  _status = _ENTERED */\n      sstore\n        /* \"contracts/Gauge.sol\":18530:18540  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Gauge.sol\":18530:18551  msg.sender == account */\n      dup3\n      and\n      eq\n      dup1\n        /* \"contracts/Gauge.sol\":18530:18574  msg.sender == account || msg.sender == boost */\n      tag_174\n      jumpi\n      pop\n        /* \"contracts/Gauge.sol\":18555:18565  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Gauge.sol\":18569:18574  boost */\n      immutable(\"0xba317e1d5aa05b5861702d06e2202816a8a6452d32b68558d200060c06eac391\")\n        /* \"contracts/Gauge.sol\":18555:18574  msg.sender == boost */\n      and\n      eq\n        /* \"contracts/Gauge.sol\":18530:18574  msg.sender == account || msg.sender == boost */\n    tag_174:\n        /* \"contracts/Gauge.sol\":18522:18575  require(msg.sender == account || msg.sender == boost) */\n      tag_175\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_175:\n        /* \"contracts/Gauge.sol\":18585:18597  updatePool() */\n      tag_176\n        /* \"contracts/Gauge.sol\":18585:18595  updatePool */\n      tag_89\n        /* \"contracts/Gauge.sol\":18585:18597  updatePool() */\n      jump\t// in\n    tag_176:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Gauge.sol\":18631:18648  userInfo[account] */\n      dup2\n      and\n        /* \"contracts/Gauge.sol\":18607:18628  UserInfo storage user */\n      0x00\n        /* \"contracts/Gauge.sol\":18631:18648  userInfo[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Gauge.sol\":18631:18639  userInfo */\n      0x06\n        /* \"contracts/Gauge.sol\":18631:18648  userInfo[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"contracts/Gauge.sol\":18682:18701  pendingMax(account) */\n      tag_177\n        /* \"contracts/Gauge.sol\":18640:18647  account */\n      dup4\n        /* \"contracts/Gauge.sol\":18682:18692  pendingMax */\n      tag_82\n        /* \"contracts/Gauge.sol\":18682:18701  pendingMax(account) */\n      jump\t// in\n    tag_177:\n        /* \"contracts/Gauge.sol\":18658:18701  uint256 pendingAmount = pendingMax(account) */\n      swap1\n      pop\n        /* \"contracts/Gauge.sol\":18715:18732  pendingAmount > 0 */\n      dup1\n      iszero\n        /* \"contracts/Gauge.sol\":18711:18885  if (pendingAmount > 0) {... */\n      tag_178\n      jumpi\n        /* \"contracts/Gauge.sol\":18748:18803  _safeTokenTransfer(rewardToken, account, pendingAmount) */\n      tag_179\n        /* \"contracts/Gauge.sol\":18767:18778  rewardToken */\n      immutable(\"0x51432b6f6ffff9c0d91073ef7f23a4f639ef505c3fc71bae7794b27877f54eff\")\n        /* \"contracts/Gauge.sol\":18780:18787  account */\n      dup5\n        /* \"contracts/Gauge.sol\":18789:18802  pendingAmount */\n      dup4\n        /* \"contracts/Gauge.sol\":18748:18766  _safeTokenTransfer */\n      tag_180\n        /* \"contracts/Gauge.sol\":18748:18803  _safeTokenTransfer(rewardToken, account, pendingAmount) */\n      jump\t// in\n    tag_179:\n        /* \"contracts/Gauge.sol\":18822:18874  ClaimRewards(msg.sender, rewardToken, pendingAmount) */\n      mload(0x40)\n        /* \"#utility.yul\":160:185   */\n      dup2\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Gauge.sol\":18847:18858  rewardToken */\n      immutable(\"0x51432b6f6ffff9c0d91073ef7f23a4f639ef505c3fc71bae7794b27877f54eff\")\n        /* \"contracts/Gauge.sol\":18822:18874  ClaimRewards(msg.sender, rewardToken, pendingAmount) */\n      and\n      swap1\n        /* \"contracts/Gauge.sol\":18835:18845  msg.sender */\n      caller\n      swap1\n        /* \"contracts/Gauge.sol\":18822:18874  ClaimRewards(msg.sender, rewardToken, pendingAmount) */\n      0x9aa05b3d70a9e3e2f004f039648839560576334fb45c81f91b6db03ad9e2efc9\n      swap1\n        /* \"#utility.yul\":148:150   */\n      0x20\n        /* \"#utility.yul\":133:151   */\n      add\n        /* \"contracts/Gauge.sol\":18822:18874  ClaimRewards(msg.sender, rewardToken, pendingAmount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/Gauge.sol\":18711:18885  if (pendingAmount > 0) {... */\n    tag_178:\n        /* \"contracts/Gauge.sol\":18928:18944  accTokenPerShare */\n      sload(0x03)\n        /* \"contracts/Gauge.sol\":18912:18923  user.amount */\n      dup3\n      sload\n        /* \"contracts/Gauge.sol\":18912:18955  user.amount.mul(accTokenPerShare).div(1e12) */\n      tag_182\n      swap2\n        /* \"contracts/Gauge.sol\":18950:18954  1e12 */\n      0xe8d4a51000\n      swap2\n        /* \"contracts/Gauge.sol\":18912:18945  user.amount.mul(accTokenPerShare) */\n      tag_134\n      swap2\n        /* \"contracts/Gauge.sol\":18912:18927  user.amount.mul */\n      tag_141\n        /* \"contracts/Gauge.sol\":18912:18945  user.amount.mul(accTokenPerShare) */\n      jump\t// in\n        /* \"contracts/Gauge.sol\":18912:18955  user.amount.mul(accTokenPerShare).div(1e12) */\n    tag_182:\n        /* \"contracts/Gauge.sol\":18894:18909  user.rewardDebt */\n      0x01\n      dup4\n      add\n        /* \"contracts/Gauge.sol\":18894:18955  user.rewardDebt = user.amount.mul(accTokenPerShare).div(1e12) */\n      sstore\n        /* \"contracts/Gauge.sol\":18965:19004  IBoost(boost).distribute(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x63453ae1)\n      dup2\n      mstore\n        /* \"contracts/Gauge.sol\":18998:19002  this */\n      address\n        /* \"contracts/Gauge.sol\":18965:19004  IBoost(boost).distribute(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1168:1219   */\n      mstore\n        /* \"contracts/Gauge.sol\":18972:18977  boost */\n      immutable(\"0xba317e1d5aa05b5861702d06e2202816a8a6452d32b68558d200060c06eac391\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Gauge.sol\":18965:18989  IBoost(boost).distribute */\n      and\n      swap1\n      0x63453ae1\n      swap1\n        /* \"#utility.yul\":1141:1159   */\n      0x24\n      add\n        /* \"contracts/Gauge.sol\":18965:19004  IBoost(boost).distribute(address(this)) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_185\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_185:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_187\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_187:\n      pop\n      pop\n        /* \"contracts/Gauge.sol\":3090:3091  1 */\n      0x01\n        /* \"contracts/Gauge.sol\":4017:4024  _status */\n      0x00\n        /* \"contracts/Gauge.sol\":4017:4039  _status = _NOT_ENTERED */\n      sstore\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Gauge.sol\":18454:19011  function getReward(address account) external nonReentrant {... */\n      jump\t// out\n        /* \"contracts/Gauge.sol\":19734:19847  function depositAll(uint tokenId) external {... */\n    tag_79:\n        /* \"contracts/Gauge.sol\":19795:19830  IERC20(stake).balanceOf(msg.sender) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/Gauge.sol\":19819:19829  msg.sender */\n      caller\n        /* \"contracts/Gauge.sol\":19795:19830  IERC20(stake).balanceOf(msg.sender) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1168:1219   */\n      mstore\n        /* \"contracts/Gauge.sol\":19787:19840  deposit(IERC20(stake).balanceOf(msg.sender), tokenId) */\n      tag_189\n      swap1\n        /* \"contracts/Gauge.sol\":19802:19807  stake */\n      immutable(\"0x6d7e9d25f7937a025d098651c32892e1256b8f7bcedf36aadd28cccf92a5a08d\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Gauge.sol\":19795:19818  IERC20(stake).balanceOf */\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1141:1159   */\n      0x24\n      add\n        /* \"contracts/Gauge.sol\":19795:19830  IERC20(stake).balanceOf(msg.sender) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_192\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_192:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_193\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_193:\n        /* \"contracts/Gauge.sol\":19832:19839  tokenId */\n      dup3\n        /* \"contracts/Gauge.sol\":19787:19794  deposit */\n      tag_87\n        /* \"contracts/Gauge.sol\":19787:19840  deposit(IERC20(stake).balanceOf(msg.sender), tokenId) */\n      jump\t// in\n    tag_189:\n        /* \"contracts/Gauge.sol\":19734:19847  function depositAll(uint tokenId) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/Gauge.sol\":22771:23538  function pendingMax(address _user) public view returns (uint256){... */\n    tag_82:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Gauge.sol\":22869:22884  userInfo[_user] */\n      dup2\n      and\n        /* \"contracts/Gauge.sol\":22827:22834  uint256 */\n      0x00\n        /* \"contracts/Gauge.sol\":22869:22884  userInfo[_user] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Gauge.sol\":22869:22877  userInfo */\n      0x06\n        /* \"contracts/Gauge.sol\":22869:22884  userInfo[_user] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Gauge.sol\":22922:22938  accTokenPerShare */\n      sload(0x03)\n        /* \"contracts/Gauge.sol\":22952:22963  user.amount */\n      dup2\n      sload\n        /* \"contracts/Gauge.sol\":22952:22967  user.amount > 0 */\n      iszero\n        /* \"contracts/Gauge.sol\":22948:23514  if (user.amount > 0) {... */\n      tag_205\n      jumpi\n        /* \"contracts/Gauge.sol\":23002:23017  lastRewardBlock */\n      sload(0x04)\n        /* \"contracts/Gauge.sol\":22987:22999  block.number */\n      number\n        /* \"contracts/Gauge.sol\":22987:23017  block.number > lastRewardBlock */\n      gt\n        /* \"contracts/Gauge.sol\":22983:23350  if (block.number > lastRewardBlock) {... */\n      iszero\n      tag_196\n      jumpi\n        /* \"contracts/Gauge.sol\":23037:23048  uint256 mul */\n      0x00\n        /* \"contracts/Gauge.sol\":23051:23084  block.number.sub(lastRewardBlock) */\n      tag_197\n        /* \"contracts/Gauge.sol\":23068:23083  lastRewardBlock */\n      sload(0x04)\n        /* \"contracts/Gauge.sol\":23051:23063  block.number */\n      number\n        /* \"contracts/Gauge.sol\":23051:23067  block.number.sub */\n      tag_162\n      swap1\n        /* \"contracts/Gauge.sol\":23051:23084  block.number.sub(lastRewardBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_197:\n        /* \"contracts/Gauge.sol\":23037:23084  uint256 mul = block.number.sub(lastRewardBlock) */\n      swap1\n      pop\n        /* \"contracts/Gauge.sol\":23102:23121  uint256 tokenReward */\n      0x00\n        /* \"contracts/Gauge.sol\":23124:23146  tokenPerBlock.mul(mul) */\n      tag_198\n        /* \"contracts/Gauge.sol\":23142:23145  mul */\n      dup3\n        /* \"contracts/Gauge.sol\":23124:23137  tokenPerBlock */\n      sload(0x02)\n        /* \"contracts/Gauge.sol\":23124:23141  tokenPerBlock.mul */\n      tag_141\n      swap1\n        /* \"contracts/Gauge.sol\":23124:23146  tokenPerBlock.mul(mul) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_198:\n        /* \"contracts/Gauge.sol\":23102:23146  uint256 tokenReward = tokenPerBlock.mul(mul) */\n      swap1\n      pop\n        /* \"contracts/Gauge.sol\":23184:23245  _accTokenPerShare.add(tokenReward.mul(1e12).div(totalSupply)) */\n      tag_199\n        /* \"contracts/Gauge.sol\":23206:23244  tokenReward.mul(1e12).div(totalSupply) */\n      tag_200\n        /* \"contracts/Gauge.sol\":23232:23243  totalSupply */\n      sload(0x05)\n        /* \"contracts/Gauge.sol\":23206:23227  tokenReward.mul(1e12) */\n      tag_134\n        /* \"contracts/Gauge.sol\":23222:23226  1e12 */\n      0xe8d4a51000\n        /* \"contracts/Gauge.sol\":23206:23217  tokenReward */\n      dup6\n        /* \"contracts/Gauge.sol\":23206:23221  tokenReward.mul */\n      tag_141\n      swap1\n        /* \"contracts/Gauge.sol\":23206:23227  tokenReward.mul(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/Gauge.sol\":23206:23244  tokenReward.mul(1e12).div(totalSupply) */\n    tag_200:\n        /* \"contracts/Gauge.sol\":23184:23201  _accTokenPerShare */\n      dup5\n      swap1\n        /* \"contracts/Gauge.sol\":23184:23205  _accTokenPerShare.add */\n      tag_167\n        /* \"contracts/Gauge.sol\":23184:23245  _accTokenPerShare.add(tokenReward.mul(1e12).div(totalSupply)) */\n      jump\t// in\n    tag_199:\n        /* \"contracts/Gauge.sol\":23164:23245  _accTokenPerShare = _accTokenPerShare.add(tokenReward.mul(1e12).div(totalSupply)) */\n      swap3\n      pop\n        /* \"contracts/Gauge.sol\":23270:23335  user.amount.mul(_accTokenPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_202\n        /* \"contracts/Gauge.sol\":23319:23323  user */\n      dup5\n        /* \"contracts/Gauge.sol\":23319:23334  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/Gauge.sol\":23270:23314  user.amount.mul(_accTokenPerShare).div(1e12) */\n      tag_203\n        /* \"contracts/Gauge.sol\":23309:23313  1e12 */\n      0xe8d4a51000\n        /* \"contracts/Gauge.sol\":23270:23304  user.amount.mul(_accTokenPerShare) */\n      tag_134\n        /* \"contracts/Gauge.sol\":23286:23303  _accTokenPerShare */\n      dup8\n        /* \"contracts/Gauge.sol\":23270:23274  user */\n      dup10\n        /* \"contracts/Gauge.sol\":23270:23281  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/Gauge.sol\":23270:23285  user.amount.mul */\n      tag_141\n      swap1\n        /* \"contracts/Gauge.sol\":23270:23304  user.amount.mul(_accTokenPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/Gauge.sol\":23270:23314  user.amount.mul(_accTokenPerShare).div(1e12) */\n    tag_203:\n        /* \"contracts/Gauge.sol\":23270:23318  user.amount.mul(_accTokenPerShare).div(1e12).sub */\n      swap1\n      tag_162\n        /* \"contracts/Gauge.sol\":23270:23335  user.amount.mul(_accTokenPerShare).div(1e12).sub(user.rewardDebt) */\n      jump\t// in\n    tag_202:\n        /* \"contracts/Gauge.sol\":23263:23335  return user.amount.mul(_accTokenPerShare).div(1e12).sub(user.rewardDebt) */\n      swap7\n        /* \"contracts/Gauge.sol\":22771:23538  function pendingMax(address _user) public view returns (uint256){... */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Gauge.sol\":22983:23350  if (block.number > lastRewardBlock) {... */\n    tag_196:\n        /* \"contracts/Gauge.sol\":23383:23398  lastRewardBlock */\n      sload(0x04)\n        /* \"contracts/Gauge.sol\":23367:23379  block.number */\n      number\n        /* \"contracts/Gauge.sol\":23367:23398  block.number == lastRewardBlock */\n      eq\n        /* \"contracts/Gauge.sol\":23363:23504  if (block.number == lastRewardBlock) {... */\n      iszero\n      tag_205\n      jumpi\n        /* \"contracts/Gauge.sol\":23425:23489  user.amount.mul(accTokenPerShare).div(1e12).sub(user.rewardDebt) */\n      tag_206\n        /* \"contracts/Gauge.sol\":23473:23477  user */\n      dup3\n        /* \"contracts/Gauge.sol\":23473:23488  user.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/Gauge.sol\":23425:23468  user.amount.mul(accTokenPerShare).div(1e12) */\n      tag_203\n        /* \"contracts/Gauge.sol\":23463:23467  1e12 */\n      0xe8d4a51000\n        /* \"contracts/Gauge.sol\":23425:23458  user.amount.mul(accTokenPerShare) */\n      tag_134\n        /* \"contracts/Gauge.sol\":23441:23457  accTokenPerShare */\n      sload(0x03)\n        /* \"contracts/Gauge.sol\":23425:23429  user */\n      dup8\n        /* \"contracts/Gauge.sol\":23425:23436  user.amount */\n      0x00\n      add\n      sload\n        /* \"contracts/Gauge.sol\":23425:23440  user.amount.mul */\n      tag_141\n      swap1\n        /* \"contracts/Gauge.sol\":23425:23458  user.amount.mul(accTokenPerShare) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/Gauge.sol\":23425:23489  user.amount.mul(accTokenPerShare).div(1e12).sub(user.rewardDebt) */\n    tag_206:\n        /* \"contracts/Gauge.sol\":23418:23489  return user.amount.mul(accTokenPerShare).div(1e12).sub(user.rewardDebt) */\n      swap5\n        /* \"contracts/Gauge.sol\":22771:23538  function pendingMax(address _user) public view returns (uint256){... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Gauge.sol\":23363:23504  if (block.number == lastRewardBlock) {... */\n    tag_205:\n      pop\n        /* \"contracts/Gauge.sol\":23530:23531  0 */\n      0x00\n      swap4\n        /* \"contracts/Gauge.sol\":22771:23538  function pendingMax(address _user) public view returns (uint256){... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Gauge.sol\":19853:20933  function deposit(uint amount, uint tokenId) public nonReentrant {... */\n    tag_87:\n        /* \"contracts/Gauge.sol\":3133:3134  2 */\n      0x02\n        /* \"contracts/Gauge.sol\":3714:3721  _status */\n      sload(0x00)\n        /* \"contracts/Gauge.sol\":3714:3733  _status != _ENTERED */\n      eq\n      iszero\n        /* \"contracts/Gauge.sol\":3706:3769  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_210\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_172\n      jump\t// in\n    tag_210:\n        /* \"contracts/Gauge.sol\":3133:3134  2 */\n      0x02\n        /* \"contracts/Gauge.sol\":3844:3851  _status */\n      0x00\n        /* \"contracts/Gauge.sol\":3844:3862  _status = _ENTERED */\n      sstore\n        /* \"contracts/Gauge.sol\":19935:19945  amount > 0 */\n      dup2\n        /* \"contracts/Gauge.sol\":19927:19961  require(amount > 0, \"amount is 0\") */\n      tag_213\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4424:4426   */\n      0x20\n        /* \"contracts/Gauge.sol\":19927:19961  require(amount > 0, \"amount is 0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4406:4427   */\n      mstore\n        /* \"#utility.yul\":4463:4465   */\n      0x0b\n        /* \"#utility.yul\":4443:4461   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4436:4466   */\n      mstore\n      shl(0xac, 0x0616d6f756e74206973203)\n        /* \"#utility.yul\":4482:4500   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4475:4516   */\n      mstore\n        /* \"#utility.yul\":4533:4551   */\n      0x64\n      add\n        /* \"contracts/Gauge.sol\":19927:19961  require(amount > 0, \"amount is 0\") */\n      tag_153\n        /* \"#utility.yul\":4222:4557   */\n      jump\n        /* \"contracts/Gauge.sol\":19927:19961  require(amount > 0, \"amount is 0\") */\n    tag_213:\n        /* \"contracts/Gauge.sol\":19971:19983  updatePool() */\n      tag_216\n        /* \"contracts/Gauge.sol\":19971:19981  updatePool */\n      tag_89\n        /* \"contracts/Gauge.sol\":19971:19983  updatePool() */\n      jump\t// in\n    tag_216:\n        /* \"contracts/Gauge.sol\":20026:20036  msg.sender */\n      caller\n        /* \"contracts/Gauge.sol\":19993:20014  UserInfo storage user */\n      0x00\n        /* \"contracts/Gauge.sol\":20017:20037  userInfo[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Gauge.sol\":20017:20025  userInfo */\n      0x06\n        /* \"contracts/Gauge.sol\":20017:20037  userInfo[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Gauge.sol\":20051:20062  user.amount */\n      dup1\n      sload\n        /* \"contracts/Gauge.sol\":20051:20066  user.amount > 0 */\n      iszero\n        /* \"contracts/Gauge.sol\":20047:20266  if (user.amount > 0) {... */\n      tag_217\n      jumpi\n        /* \"contracts/Gauge.sol\":20082:20103  uint256 pendingAmount */\n      0x00\n        /* \"contracts/Gauge.sol\":20106:20128  pendingMax(msg.sender) */\n      tag_218\n        /* \"contracts/Gauge.sol\":20117:20127  msg.sender */\n      caller\n        /* \"contracts/Gauge.sol\":20106:20116  pendingMax */\n      tag_82\n        /* \"contracts/Gauge.sol\":20106:20128  pendingMax(msg.sender) */\n      jump\t// in\n    tag_218:\n        /* \"contracts/Gauge.sol\":20082:20128  uint256 pendingAmount = pendingMax(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/Gauge.sol\":20146:20163  pendingAmount > 0 */\n      dup1\n      iszero\n        /* \"contracts/Gauge.sol\":20142:20256  if (pendingAmount > 0) {... */\n      tag_220\n      jumpi\n        /* \"contracts/Gauge.sol\":20183:20241  _safeTokenTransfer(rewardToken, msg.sender, pendingAmount) */\n      tag_220\n        /* \"contracts/Gauge.sol\":20202:20213  rewardToken */\n      immutable(\"0x51432b6f6ffff9c0d91073ef7f23a4f639ef505c3fc71bae7794b27877f54eff\")\n        /* \"contracts/Gauge.sol\":20215:20225  msg.sender */\n      caller\n        /* \"contracts/Gauge.sol\":20227:20240  pendingAmount */\n      dup4\n        /* \"contracts/Gauge.sol\":20183:20201  _safeTokenTransfer */\n      tag_180\n        /* \"contracts/Gauge.sol\":20183:20241  _safeTokenTransfer(rewardToken, msg.sender, pendingAmount) */\n      jump\t// in\n    tag_220:\n        /* \"contracts/Gauge.sol\":20068:20266  {... */\n      pop\n        /* \"contracts/Gauge.sol\":20047:20266  if (user.amount > 0) {... */\n    tag_217:\n        /* \"contracts/Gauge.sol\":20279:20289  amount > 0 */\n      dup3\n      iszero\n        /* \"contracts/Gauge.sol\":20275:20475  if (amount > 0) {... */\n      tag_221\n      jumpi\n        /* \"contracts/Gauge.sol\":20305:20378  TransferHelper.safeTransferFrom(stake, msg.sender, address(this), amount) */\n      tag_222\n        /* \"contracts/Gauge.sol\":20337:20342  stake */\n      immutable(\"0x6d7e9d25f7937a025d098651c32892e1256b8f7bcedf36aadd28cccf92a5a08d\")\n        /* \"contracts/Gauge.sol\":20344:20354  msg.sender */\n      caller\n        /* \"contracts/Gauge.sol\":20364:20368  this */\n      address\n        /* \"contracts/Gauge.sol\":20371:20377  amount */\n      dup7\n        /* \"contracts/Gauge.sol\":20305:20336  TransferHelper.safeTransferFrom */\n      tag_223\n        /* \"contracts/Gauge.sol\":20305:20378  TransferHelper.safeTransferFrom(stake, msg.sender, address(this), amount) */\n      jump\t// in\n    tag_222:\n        /* \"contracts/Gauge.sol\":20407:20413  amount */\n      dup3\n        /* \"contracts/Gauge.sol\":20392:20403  totalSupply */\n      0x05\n      0x00\n        /* \"contracts/Gauge.sol\":20392:20413  totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_224\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_224:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/Gauge.sol\":20441:20452  user.amount */\n      dup1\n      sload\n        /* \"contracts/Gauge.sol\":20441:20464  user.amount.add(amount) */\n      tag_225\n      swap1\n        /* \"contracts/Gauge.sol\":20457:20463  amount */\n      dup5\n        /* \"contracts/Gauge.sol\":20441:20456  user.amount.add */\n      tag_167\n        /* \"contracts/Gauge.sol\":20441:20464  user.amount.add(amount) */\n      jump\t// in\n    tag_225:\n        /* \"contracts/Gauge.sol\":20427:20464  user.amount = user.amount.add(amount) */\n      dup2\n      sstore\n        /* \"contracts/Gauge.sol\":20275:20475  if (amount > 0) {... */\n    tag_221:\n        /* \"contracts/Gauge.sol\":20488:20499  tokenId > 0 */\n      dup2\n      iszero\n        /* \"contracts/Gauge.sol\":20484:20805  if (tokenId > 0) {... */\n      tag_226\n      jumpi\n        /* \"contracts/Gauge.sol\":20523:20557  IVeToken(veToken).ownerOf(tokenId) */\n      mload(0x40)\n      shl(0xe1, 0x31a9108f)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":160:185   */\n      dup4\n      swap1\n      mstore\n        /* \"contracts/Gauge.sol\":20561:20571  msg.sender */\n      caller\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Gauge.sol\":20532:20539  veToken */\n      immutable(\"0xeae3a40291c102cf85748609ff9046ea32530afca3ce058bd94a667258369fd6\")\n        /* \"contracts/Gauge.sol\":20523:20548  IVeToken(veToken).ownerOf */\n      and\n      swap1\n      0x6352211e\n      swap1\n        /* \"#utility.yul\":133:151   */\n      0x24\n      add\n        /* \"contracts/Gauge.sol\":20523:20557  IVeToken(veToken).ownerOf(tokenId) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_229\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_229:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_230\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_230:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Gauge.sol\":20523:20571  IVeToken(veToken).ownerOf(tokenId) == msg.sender */\n      and\n      eq\n        /* \"contracts/Gauge.sol\":20515:20572  require(IVeToken(veToken).ownerOf(tokenId) == msg.sender) */\n      tag_231\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_231:\n        /* \"contracts/Gauge.sol\":20599:20609  msg.sender */\n      caller\n        /* \"contracts/Gauge.sol\":20590:20610  tokenIds[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Gauge.sol\":20590:20598  tokenIds */\n      0x01\n        /* \"contracts/Gauge.sol\":20590:20610  tokenIds[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Gauge.sol\":20586:20680  if (tokenIds[msg.sender] == 0) {... */\n      tag_232\n      jumpi\n        /* \"contracts/Gauge.sol\":20644:20654  msg.sender */\n      caller\n        /* \"contracts/Gauge.sol\":20635:20655  tokenIds[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Gauge.sol\":20635:20643  tokenIds */\n      0x01\n        /* \"contracts/Gauge.sol\":20635:20655  tokenIds[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Gauge.sol\":20635:20665  tokenIds[msg.sender] = tokenId */\n      dup3\n      swap1\n      sstore\n        /* \"contracts/Gauge.sol\":20586:20680  if (tokenIds[msg.sender] == 0) {... */\n    tag_232:\n        /* \"contracts/Gauge.sol\":20710:20720  msg.sender */\n      caller\n        /* \"contracts/Gauge.sol\":20701:20721  tokenIds[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Gauge.sol\":20701:20709  tokenIds */\n      0x01\n        /* \"contracts/Gauge.sol\":20701:20721  tokenIds[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Gauge.sol\":20701:20732  tokenIds[msg.sender] == tokenId */\n      dup3\n      eq\n        /* \"contracts/Gauge.sol\":20693:20733  require(tokenIds[msg.sender] == tokenId) */\n      tag_233\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_233:\n        /* \"contracts/Gauge.sol\":20484:20805  if (tokenId > 0) {... */\n      jump(tag_234)\n    tag_226:\n        /* \"contracts/Gauge.sol\":20783:20793  msg.sender */\n      caller\n        /* \"contracts/Gauge.sol\":20774:20794  tokenIds[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Gauge.sol\":20774:20782  tokenIds */\n      0x01\n        /* \"contracts/Gauge.sol\":20774:20794  tokenIds[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap2\n      pop\n        /* \"contracts/Gauge.sol\":20484:20805  if (tokenId > 0) {... */\n    tag_234:\n        /* \"contracts/Gauge.sol\":20848:20864  accTokenPerShare */\n      sload(0x03)\n        /* \"contracts/Gauge.sol\":20832:20843  user.amount */\n      dup2\n      sload\n        /* \"contracts/Gauge.sol\":20832:20875  user.amount.mul(accTokenPerShare).div(1e12) */\n      tag_235\n      swap2\n        /* \"contracts/Gauge.sol\":20870:20874  1e12 */\n      0xe8d4a51000\n      swap2\n        /* \"contracts/Gauge.sol\":20832:20865  user.amount.mul(accTokenPerShare) */\n      tag_134\n      swap2\n        /* \"contracts/Gauge.sol\":20832:20847  user.amount.mul */\n      tag_141\n        /* \"contracts/Gauge.sol\":20832:20865  user.amount.mul(accTokenPerShare) */\n      jump\t// in\n        /* \"contracts/Gauge.sol\":20832:20875  user.amount.mul(accTokenPerShare).div(1e12) */\n    tag_235:\n        /* \"contracts/Gauge.sol\":20814:20829  user.rewardDebt */\n      0x01\n      dup3\n      add\n        /* \"contracts/Gauge.sol\":20814:20875  user.rewardDebt = user.amount.mul(accTokenPerShare).div(1e12) */\n      sstore\n        /* \"contracts/Gauge.sol\":20890:20926  Deposit(msg.sender, tokenId, amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":758:783   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":814:816   */\n      0x20\n        /* \"#utility.yul\":799:817   */\n      dup2\n      add\n        /* \"#utility.yul\":792:826   */\n      dup6\n      swap1\n      mstore\n        /* \"contracts/Gauge.sol\":20898:20908  msg.sender */\n      caller\n      swap2\n        /* \"contracts/Gauge.sol\":20890:20926  Deposit(msg.sender, tokenId, amount) */\n      0x90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15\n      swap2\n        /* \"#utility.yul\":731:749   */\n      add\n        /* \"contracts/Gauge.sol\":20890:20926  Deposit(msg.sender, tokenId, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n      pop\n      pop\n        /* \"contracts/Gauge.sol\":3090:3091  1 */\n      0x01\n        /* \"contracts/Gauge.sol\":4017:4024  _status */\n      0x00\n        /* \"contracts/Gauge.sol\":4017:4039  _status = _NOT_ENTERED */\n      sstore\n      pop\n        /* \"contracts/Gauge.sol\":19853:20933  function deposit(uint amount, uint tokenId) public nonReentrant {... */\n      jump\t// out\n        /* \"contracts/Gauge.sol\":22179:22704  function updatePool() public {... */\n    tag_89:\n        /* \"contracts/Gauge.sol\":22238:22253  lastRewardBlock */\n      sload(0x04)\n        /* \"contracts/Gauge.sol\":22222:22234  block.number */\n      number\n        /* \"contracts/Gauge.sol\":22222:22253  block.number <= lastRewardBlock */\n      gt\n        /* \"contracts/Gauge.sol\":22218:22286  if (block.number <= lastRewardBlock) {... */\n      tag_239\n      jumpi\n        /* \"contracts/Gauge.sol\":22179:22704  function updatePool() public {... */\n      jump\t// out\n        /* \"contracts/Gauge.sol\":22218:22286  if (block.number <= lastRewardBlock) {... */\n    tag_239:\n        /* \"contracts/Gauge.sol\":22300:22311  totalSupply */\n      sload(0x05)\n        /* \"contracts/Gauge.sol\":22296:22393  if (totalSupply == 0) {... */\n      tag_240\n      jumpi\n        /* \"contracts/Gauge.sol\":22350:22362  block.number */\n      number\n        /* \"contracts/Gauge.sol\":22332:22347  lastRewardBlock */\n      0x04\n        /* \"contracts/Gauge.sol\":22332:22362  lastRewardBlock = block.number */\n      sstore\n        /* \"contracts/Gauge.sol\":22179:22704  function updatePool() public {... */\n      jump\t// out\n        /* \"contracts/Gauge.sol\":22296:22393  if (totalSupply == 0) {... */\n    tag_240:\n        /* \"contracts/Gauge.sol\":22423:22424  0 */\n      0x00\n        /* \"contracts/Gauge.sol\":22406:22419  tokenPerBlock */\n      sload(0x02)\n        /* \"contracts/Gauge.sol\":22406:22424  tokenPerBlock <= 0 */\n      gt\n        /* \"contracts/Gauge.sol\":22402:22457  if (tokenPerBlock <= 0) {... */\n      tag_241\n      jumpi\n        /* \"contracts/Gauge.sol\":22179:22704  function updatePool() public {... */\n      jump\t// out\n        /* \"contracts/Gauge.sol\":22402:22457  if (tokenPerBlock <= 0) {... */\n    tag_241:\n        /* \"contracts/Gauge.sol\":22466:22477  uint256 mul */\n      0x00\n        /* \"contracts/Gauge.sol\":22480:22513  block.number.sub(lastRewardBlock) */\n      tag_242\n        /* \"contracts/Gauge.sol\":22497:22512  lastRewardBlock */\n      sload(0x04)\n        /* \"contracts/Gauge.sol\":22480:22492  block.number */\n      number\n        /* \"contracts/Gauge.sol\":22480:22496  block.number.sub */\n      tag_162\n      swap1\n        /* \"contracts/Gauge.sol\":22480:22513  block.number.sub(lastRewardBlock) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_242:\n        /* \"contracts/Gauge.sol\":22466:22513  uint256 mul = block.number.sub(lastRewardBlock) */\n      swap1\n      pop\n        /* \"contracts/Gauge.sol\":22523:22542  uint256 tokenReward */\n      0x00\n        /* \"contracts/Gauge.sol\":22545:22567  tokenPerBlock.mul(mul) */\n      tag_243\n        /* \"contracts/Gauge.sol\":22563:22566  mul */\n      dup3\n        /* \"contracts/Gauge.sol\":22545:22558  tokenPerBlock */\n      sload(0x02)\n        /* \"contracts/Gauge.sol\":22545:22562  tokenPerBlock.mul */\n      tag_141\n      swap1\n        /* \"contracts/Gauge.sol\":22545:22567  tokenPerBlock.mul(mul) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_243:\n        /* \"contracts/Gauge.sol\":22523:22567  uint256 tokenReward = tokenPerBlock.mul(mul) */\n      swap1\n      pop\n        /* \"contracts/Gauge.sol\":22597:22657  accTokenPerShare.add(tokenReward.mul(1e12).div(totalSupply)) */\n      tag_244\n        /* \"contracts/Gauge.sol\":22618:22656  tokenReward.mul(1e12).div(totalSupply) */\n      tag_164\n        /* \"contracts/Gauge.sol\":22644:22655  totalSupply */\n      sload(0x05)\n        /* \"contracts/Gauge.sol\":22618:22639  tokenReward.mul(1e12) */\n      tag_134\n        /* \"contracts/Gauge.sol\":22634:22638  1e12 */\n      0xe8d4a51000\n        /* \"contracts/Gauge.sol\":22618:22629  tokenReward */\n      dup6\n        /* \"contracts/Gauge.sol\":22618:22633  tokenReward.mul */\n      tag_141\n      swap1\n        /* \"contracts/Gauge.sol\":22618:22639  tokenReward.mul(1e12) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n        /* \"contracts/Gauge.sol\":22597:22657  accTokenPerShare.add(tokenReward.mul(1e12).div(totalSupply)) */\n    tag_244:\n        /* \"contracts/Gauge.sol\":22578:22594  accTokenPerShare */\n      0x03\n        /* \"contracts/Gauge.sol\":22578:22657  accTokenPerShare = accTokenPerShare.add(tokenReward.mul(1e12).div(totalSupply)) */\n      sstore\n      pop\n      pop\n        /* \"contracts/Gauge.sol\":22685:22697  block.number */\n      number\n        /* \"contracts/Gauge.sol\":22667:22682  lastRewardBlock */\n      0x04\n        /* \"contracts/Gauge.sol\":22667:22697  lastRewardBlock = block.number */\n      sstore\n        /* \"contracts/Gauge.sol\":22179:22704  function updatePool() public {... */\n      jump\t// out\n        /* \"contracts/Gauge.sol\":21255:22173  function withdrawToken(uint _amount, uint tokenId) public nonReentrant {... */\n    tag_99:\n        /* \"contracts/Gauge.sol\":3133:3134  2 */\n      0x02\n        /* \"contracts/Gauge.sol\":3714:3721  _status */\n      sload(0x00)\n        /* \"contracts/Gauge.sol\":3714:3733  _status != _ENTERED */\n      eq\n      iszero\n        /* \"contracts/Gauge.sol\":3706:3769  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_248\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap1\n      tag_172\n      jump\t// in\n    tag_248:\n        /* \"contracts/Gauge.sol\":3133:3134  2 */\n      0x02\n        /* \"contracts/Gauge.sol\":3844:3851  _status */\n      0x00\n        /* \"contracts/Gauge.sol\":3844:3862  _status = _ENTERED */\n      swap1\n      dup2\n      sstore\n        /* \"contracts/Gauge.sol\":21369:21379  msg.sender */\n      caller\n        /* \"contracts/Gauge.sol\":21360:21380  userInfo[msg.sender] */\n      dup2\n      mstore\n        /* \"contracts/Gauge.sol\":21360:21368  userInfo */\n      0x06\n        /* \"contracts/Gauge.sol\":21360:21380  userInfo[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"contracts/Gauge.sol\":21398:21409  user.amount */\n      dup1\n      sload\n        /* \"contracts/Gauge.sol\":21398:21420  user.amount >= _amount */\n      dup4\n      gt\n      iszero\n        /* \"contracts/Gauge.sol\":21390:21447  require(user.amount >= _amount, \"withdrawSwap: not good\") */\n      tag_251\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4764:4766   */\n      0x20\n        /* \"contracts/Gauge.sol\":21390:21447  require(user.amount >= _amount, \"withdrawSwap: not good\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4746:4767   */\n      mstore\n        /* \"#utility.yul\":4803:4805   */\n      0x16\n        /* \"#utility.yul\":4783:4801   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4776:4806   */\n      mstore\n      shl(0x52, 0x1dda5d1a191c985dd4ddd85c0e881b9bdd0819dbdbd9)\n        /* \"#utility.yul\":4822:4840   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4815:4867   */\n      mstore\n        /* \"#utility.yul\":4884:4902   */\n      0x64\n      add\n        /* \"contracts/Gauge.sol\":21390:21447  require(user.amount >= _amount, \"withdrawSwap: not good\") */\n      tag_153\n        /* \"#utility.yul\":4562:4908   */\n      jump\n        /* \"contracts/Gauge.sol\":21390:21447  require(user.amount >= _amount, \"withdrawSwap: not good\") */\n    tag_251:\n        /* \"contracts/Gauge.sol\":21457:21469  updatePool() */\n      tag_254\n        /* \"contracts/Gauge.sol\":21457:21467  updatePool */\n      tag_89\n        /* \"contracts/Gauge.sol\":21457:21469  updatePool() */\n      jump\t// in\n    tag_254:\n        /* \"contracts/Gauge.sol\":21479:21500  uint256 pendingAmount */\n      0x00\n        /* \"contracts/Gauge.sol\":21503:21525  pendingMax(msg.sender) */\n      tag_255\n        /* \"contracts/Gauge.sol\":21514:21524  msg.sender */\n      caller\n        /* \"contracts/Gauge.sol\":21503:21513  pendingMax */\n      tag_82\n        /* \"contracts/Gauge.sol\":21503:21525  pendingMax(msg.sender) */\n      jump\t// in\n    tag_255:\n        /* \"contracts/Gauge.sol\":21479:21525  uint256 pendingAmount = pendingMax(msg.sender) */\n      swap1\n      pop\n        /* \"contracts/Gauge.sol\":21539:21556  pendingAmount > 0 */\n      dup1\n      iszero\n        /* \"contracts/Gauge.sol\":21535:21641  if (pendingAmount > 0) {... */\n      tag_257\n      jumpi\n        /* \"contracts/Gauge.sol\":21572:21630  _safeTokenTransfer(rewardToken, msg.sender, pendingAmount) */\n      tag_257\n        /* \"contracts/Gauge.sol\":21591:21602  rewardToken */\n      immutable(\"0x51432b6f6ffff9c0d91073ef7f23a4f639ef505c3fc71bae7794b27877f54eff\")\n        /* \"contracts/Gauge.sol\":21604:21614  msg.sender */\n      caller\n        /* \"contracts/Gauge.sol\":21616:21629  pendingAmount */\n      dup4\n        /* \"contracts/Gauge.sol\":21572:21590  _safeTokenTransfer */\n      tag_180\n        /* \"contracts/Gauge.sol\":21572:21630  _safeTokenTransfer(rewardToken, msg.sender, pendingAmount) */\n      jump\t// in\n    tag_257:\n        /* \"contracts/Gauge.sol\":21654:21665  _amount > 0 */\n      dup4\n      iszero\n        /* \"contracts/Gauge.sol\":21650:21851  if (_amount > 0) {... */\n      tag_261\n      jumpi\n        /* \"contracts/Gauge.sol\":21695:21706  user.amount */\n      dup2\n      sload\n        /* \"contracts/Gauge.sol\":21695:21719  user.amount.sub(_amount) */\n      tag_259\n      swap1\n        /* \"contracts/Gauge.sol\":21711:21718  _amount */\n      dup6\n        /* \"contracts/Gauge.sol\":21695:21710  user.amount.sub */\n      tag_162\n        /* \"contracts/Gauge.sol\":21695:21719  user.amount.sub(_amount) */\n      jump\t// in\n    tag_259:\n        /* \"contracts/Gauge.sol\":21681:21719  user.amount = user.amount.sub(_amount) */\n      dup3\n      sstore\n        /* \"contracts/Gauge.sol\":21747:21758  totalSupply */\n      sload(0x05)\n        /* \"contracts/Gauge.sol\":21747:21771  totalSupply.sub(_amount) */\n      tag_260\n      swap1\n        /* \"contracts/Gauge.sol\":21763:21770  _amount */\n      dup6\n        /* \"contracts/Gauge.sol\":21747:21762  totalSupply.sub */\n      tag_162\n        /* \"contracts/Gauge.sol\":21747:21771  totalSupply.sub(_amount) */\n      jump\t// in\n    tag_260:\n        /* \"contracts/Gauge.sol\":21733:21744  totalSupply */\n      0x05\n        /* \"contracts/Gauge.sol\":21733:21771  totalSupply = totalSupply.sub(_amount) */\n      sstore\n        /* \"contracts/Gauge.sol\":21785:21840  TransferHelper.safeTransfer(stake, msg.sender, _amount) */\n      tag_261\n        /* \"contracts/Gauge.sol\":21813:21818  stake */\n      immutable(\"0x6d7e9d25f7937a025d098651c32892e1256b8f7bcedf36aadd28cccf92a5a08d\")\n        /* \"contracts/Gauge.sol\":21820:21830  msg.sender */\n      caller\n        /* \"contracts/Gauge.sol\":21832:21839  _amount */\n      dup7\n        /* \"contracts/Gauge.sol\":21785:21812  TransferHelper.safeTransfer */\n      tag_262\n        /* \"contracts/Gauge.sol\":21785:21840  TransferHelper.safeTransfer(stake, msg.sender, _amount) */\n      jump\t// in\n    tag_261:\n        /* \"contracts/Gauge.sol\":21895:21911  accTokenPerShare */\n      sload(0x03)\n        /* \"contracts/Gauge.sol\":21879:21890  user.amount */\n      dup3\n      sload\n        /* \"contracts/Gauge.sol\":21879:21922  user.amount.mul(accTokenPerShare).div(1e12) */\n      tag_263\n      swap2\n        /* \"contracts/Gauge.sol\":21917:21921  1e12 */\n      0xe8d4a51000\n      swap2\n        /* \"contracts/Gauge.sol\":21879:21912  user.amount.mul(accTokenPerShare) */\n      tag_134\n      swap2\n        /* \"contracts/Gauge.sol\":21879:21894  user.amount.mul */\n      tag_141\n        /* \"contracts/Gauge.sol\":21879:21912  user.amount.mul(accTokenPerShare) */\n      jump\t// in\n        /* \"contracts/Gauge.sol\":21879:21922  user.amount.mul(accTokenPerShare).div(1e12) */\n    tag_263:\n        /* \"contracts/Gauge.sol\":21861:21876  user.rewardDebt */\n      0x01\n      dup4\n      add\n        /* \"contracts/Gauge.sol\":21861:21922  user.rewardDebt = user.amount.mul(accTokenPerShare).div(1e12) */\n      sstore\n        /* \"contracts/Gauge.sol\":21937:21948  tokenId > 0 */\n      dup3\n      iszero\n        /* \"contracts/Gauge.sol\":21933:22114  if (tokenId > 0) {... */\n      tag_265\n      jumpi\n        /* \"contracts/Gauge.sol\":21992:22002  msg.sender */\n      caller\n        /* \"contracts/Gauge.sol\":21983:22003  tokenIds[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Gauge.sol\":21983:21991  tokenIds */\n      0x01\n        /* \"contracts/Gauge.sol\":21983:22003  tokenIds[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/Gauge.sol\":21972:22003  tokenId == tokenIds[msg.sender] */\n      dup4\n      eq\n        /* \"contracts/Gauge.sol\":21964:22004  require(tokenId == tokenIds[msg.sender]) */\n      tag_266\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_266:\n        /* \"contracts/Gauge.sol\":22027:22037  msg.sender */\n      caller\n        /* \"contracts/Gauge.sol\":22041:22042  0 */\n      0x00\n        /* \"contracts/Gauge.sol\":22018:22038  tokenIds[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Gauge.sol\":22018:22026  tokenIds */\n      0x01\n        /* \"contracts/Gauge.sol\":22018:22038  tokenIds[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"contracts/Gauge.sol\":22018:22042  tokenIds[msg.sender] = 0 */\n      sstore\n        /* \"contracts/Gauge.sol\":21933:22114  if (tokenId > 0) {... */\n      jump(tag_267)\n    tag_265:\n        /* \"contracts/Gauge.sol\":22092:22102  msg.sender */\n      caller\n        /* \"contracts/Gauge.sol\":22083:22103  tokenIds[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/Gauge.sol\":22083:22091  tokenIds */\n      0x01\n        /* \"contracts/Gauge.sol\":22083:22103  tokenIds[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap3\n      pop\n        /* \"contracts/Gauge.sol\":21933:22114  if (tokenId > 0) {... */\n    tag_267:\n        /* \"contracts/Gauge.sol\":22128:22166  Withdraw(msg.sender, tokenId, _amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":758:783   */\n      dup5\n      dup2\n      mstore\n        /* \"#utility.yul\":814:816   */\n      0x20\n        /* \"#utility.yul\":799:817   */\n      dup2\n      add\n        /* \"#utility.yul\":792:826   */\n      dup7\n      swap1\n      mstore\n        /* \"contracts/Gauge.sol\":22137:22147  msg.sender */\n      caller\n      swap2\n        /* \"contracts/Gauge.sol\":22128:22166  Withdraw(msg.sender, tokenId, _amount) */\n      0xf279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568\n      swap2\n        /* \"#utility.yul\":731:749   */\n      add\n        /* \"contracts/Gauge.sol\":22128:22166  Withdraw(msg.sender, tokenId, _amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n      pop\n      pop\n        /* \"contracts/Gauge.sol\":3090:3091  1 */\n      0x01\n        /* \"contracts/Gauge.sol\":4017:4024  _status */\n      0x00\n        /* \"contracts/Gauge.sol\":4017:4039  _status = _NOT_ENTERED */\n      sstore\n      pop\n      pop\n        /* \"contracts/Gauge.sol\":21255:22173  function withdrawToken(uint _amount, uint tokenId) public nonReentrant {... */\n      jump\t// out\n        /* \"contracts/Gauge.sol\":10336:10432  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_141:\n        /* \"contracts/Gauge.sol\":10394:10401  uint256 */\n      0x00\n        /* \"contracts/Gauge.sol\":10420:10425  a * b */\n      tag_105\n        /* \"contracts/Gauge.sol\":10424:10425  b */\n      dup3\n        /* \"contracts/Gauge.sol\":10420:10421  a */\n      dup5\n        /* \"contracts/Gauge.sol\":10420:10425  a * b */\n      tag_110\n      jump\t// in\n        /* \"contracts/Gauge.sol\":10721:10817  function div(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_142:\n        /* \"contracts/Gauge.sol\":10779:10786  uint256 */\n      0x00\n        /* \"contracts/Gauge.sol\":10805:10810  a / b */\n      tag_105\n        /* \"contracts/Gauge.sol\":10809:10810  b */\n      dup3\n        /* \"contracts/Gauge.sol\":10805:10806  a */\n      dup5\n        /* \"contracts/Gauge.sol\":10805:10810  a / b */\n      tag_112\n      jump\t// in\n        /* \"contracts/Gauge.sol\":583:687  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_150:\n        /* \"contracts/Gauge.sol\":641:648  uint256 */\n      0x00\n        /* \"contracts/Gauge.sol\":671:672  b */\n      dup2\n        /* \"contracts/Gauge.sol\":667:668  a */\n      dup4\n        /* \"contracts/Gauge.sol\":667:672  a < b */\n      lt\n        /* \"contracts/Gauge.sol\":667:680  a < b ? a : b */\n      tag_274\n      jumpi\n        /* \"contracts/Gauge.sol\":679:680  b */\n      dup2\n        /* \"contracts/Gauge.sol\":667:680  a < b ? a : b */\n      jump(tag_105)\n    tag_274:\n      pop\n        /* \"contracts/Gauge.sol\":675:676  a */\n      swap1\n      swap2\n        /* \"contracts/Gauge.sol\":583:687  function min(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Gauge.sol\":9993:10089  function sub(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_162:\n        /* \"contracts/Gauge.sol\":10051:10058  uint256 */\n      0x00\n        /* \"contracts/Gauge.sol\":10077:10082  a - b */\n      tag_105\n        /* \"contracts/Gauge.sol\":10081:10082  b */\n      dup3\n        /* \"contracts/Gauge.sol\":10077:10078  a */\n      dup5\n        /* \"contracts/Gauge.sol\":10077:10082  a - b */\n      tag_278\n      jump\t// in\n        /* \"contracts/Gauge.sol\":9626:9722  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_167:\n        /* \"contracts/Gauge.sol\":9684:9691  uint256 */\n      0x00\n        /* \"contracts/Gauge.sol\":9710:9715  a + b */\n      tag_105\n        /* \"contracts/Gauge.sol\":9714:9715  b */\n      dup3\n        /* \"contracts/Gauge.sol\":9710:9711  a */\n      dup5\n        /* \"contracts/Gauge.sol\":9710:9715  a + b */\n      tag_149\n      jump\t// in\n        /* \"contracts/Gauge.sol\":18065:18448  function _safeTokenTransfer(address token, address account, uint256 _amount) internal {... */\n    tag_180:\n        /* \"contracts/Gauge.sol\":18161:18199  _safeTransferFromToken(token, _amount) */\n      tag_282\n        /* \"contracts/Gauge.sol\":18184:18189  token */\n      dup4\n        /* \"contracts/Gauge.sol\":18191:18198  _amount */\n      dup3\n        /* \"contracts/Gauge.sol\":18161:18183  _safeTransferFromToken */\n      tag_283\n        /* \"contracts/Gauge.sol\":18161:18199  _safeTransferFromToken(token, _amount) */\n      jump\t// in\n    tag_282:\n        /* \"contracts/Gauge.sol\":18223:18261  IERC20(token).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/Gauge.sol\":18255:18259  this */\n      address\n        /* \"contracts/Gauge.sol\":18223:18261  IERC20(token).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1168:1219   */\n      mstore\n        /* \"contracts/Gauge.sol\":18209:18220  uint256 bal */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Gauge.sol\":18223:18246  IERC20(token).balanceOf */\n      dup6\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1141:1159   */\n      0x24\n      add\n        /* \"contracts/Gauge.sol\":18223:18261  IERC20(token).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_286\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_286:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_287\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_287:\n        /* \"contracts/Gauge.sol\":18209:18261  uint256 bal = IERC20(token).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/Gauge.sol\":18285:18288  bal */\n      dup1\n        /* \"contracts/Gauge.sol\":18275:18282  _amount */\n      dup3\n        /* \"contracts/Gauge.sol\":18275:18288  _amount > bal */\n      gt\n        /* \"contracts/Gauge.sol\":18271:18328  if (_amount > bal) {... */\n      iszero\n      tag_288\n      jumpi\n        /* \"contracts/Gauge.sol\":18314:18317  bal */\n      dup1\n        /* \"contracts/Gauge.sol\":18304:18317  _amount = bal */\n      swap2\n      pop\n        /* \"contracts/Gauge.sol\":18271:18328  if (_amount > bal) {... */\n    tag_288:\n        /* \"contracts/Gauge.sol\":18347:18379  derivedBalance(account, _amount) */\n      tag_289\n        /* \"contracts/Gauge.sol\":18362:18369  account */\n      dup4\n        /* \"contracts/Gauge.sol\":18371:18378  _amount */\n      dup4\n        /* \"contracts/Gauge.sol\":18347:18361  derivedBalance */\n      tag_60\n        /* \"contracts/Gauge.sol\":18347:18379  derivedBalance(account, _amount) */\n      jump\t// in\n    tag_289:\n        /* \"contracts/Gauge.sol\":18337:18379  _amount = derivedBalance(account, _amount) */\n      swap2\n      pop\n        /* \"contracts/Gauge.sol\":18389:18441  TransferHelper.safeTransfer(token, account, _amount) */\n      tag_290\n        /* \"contracts/Gauge.sol\":18417:18422  token */\n      dup5\n        /* \"contracts/Gauge.sol\":18424:18431  account */\n      dup5\n        /* \"contracts/Gauge.sol\":18433:18440  _amount */\n      dup5\n        /* \"contracts/Gauge.sol\":18389:18416  TransferHelper.safeTransfer */\n      tag_262\n        /* \"contracts/Gauge.sol\":18389:18441  TransferHelper.safeTransfer(token, account, _amount) */\n      jump\t// in\n    tag_290:\n        /* \"contracts/Gauge.sol\":18151:18448  {... */\n      pop\n        /* \"contracts/Gauge.sol\":18065:18448  function _safeTokenTransfer(address token, address account, uint256 _amount) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Gauge.sol\":15552:15950  function safeTransferFrom(address token, address from, address to, uint value) internal {... */\n    tag_223:\n        /* \"contracts/Gauge.sol\":15775:15826  abi.encodeWithSelector(0x23b872dd, from, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5301:5316   */\n      dup6\n      dup2\n      and\n        /* \"contracts/Gauge.sol\":15775:15826  abi.encodeWithSelector(0x23b872dd, from, to, value) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":5283:5317   */\n      mstore\n        /* \"#utility.yul\":5353:5368   */\n      dup5\n      dup2\n      and\n        /* \"#utility.yul\":5333:5351   */\n      0x44\n      dup4\n      add\n        /* \"#utility.yul\":5326:5369   */\n      mstore\n        /* \"#utility.yul\":5385:5403   */\n      0x64\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":5378:5412   */\n      dup6\n      swap1\n      mstore\n        /* \"contracts/Gauge.sol\":15775:15826  abi.encodeWithSelector(0x23b872dd, from, to, value) */\n      dup4\n      mload\n      dup1\n      dup5\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":5218:5236   */\n      0x84\n      swap1\n      swap3\n      add\n        /* \"contracts/Gauge.sol\":15775:15826  abi.encodeWithSelector(0x23b872dd, from, to, value) */\n      dup4\n      mstore\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0x23b872dd)\n      or\n      swap1\n      mstore\n        /* \"contracts/Gauge.sol\":15764:15827  token.call(abi.encodeWithSelector(0x23b872dd, from, to, value)) */\n      swap2\n      mload\n      0x00\n      swap3\n      dup4\n      swap3\n        /* \"contracts/Gauge.sol\":15764:15774  token.call */\n      swap1\n      dup9\n      and\n      swap2\n        /* \"contracts/Gauge.sol\":15764:15827  token.call(abi.encodeWithSelector(0x23b872dd, from, to, value)) */\n      tag_294\n      swap2\n        /* \"contracts/Gauge.sol\":15775:15826  abi.encodeWithSelector(0x23b872dd, from, to, value) */\n      swap1\n        /* \"contracts/Gauge.sol\":15764:15827  token.call(abi.encodeWithSelector(0x23b872dd, from, to, value)) */\n      tag_295\n      jump\t// in\n    tag_294:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_298\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_297)\n    tag_298:\n      0x60\n      swap2\n      pop\n    tag_297:\n      pop\n        /* \"contracts/Gauge.sol\":15728:15827  (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/Gauge.sol\":15845:15852  success */\n      dup2\n        /* \"contracts/Gauge.sol\":15845:15902  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_301\n      jumpi\n      pop\n        /* \"contracts/Gauge.sol\":15857:15868  data.length */\n      dup1\n      mload\n        /* \"contracts/Gauge.sol\":15857:15873  data.length == 0 */\n      iszero\n      dup1\n        /* \"contracts/Gauge.sol\":15857:15901  data.length == 0 || abi.decode(data, (bool)) */\n      tag_301\n      jumpi\n      pop\n        /* \"contracts/Gauge.sol\":15888:15892  data */\n      dup1\n        /* \"contracts/Gauge.sol\":15877:15901  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_301\n      swap2\n      swap1\n      tag_302\n      jump\t// in\n    tag_301:\n        /* \"contracts/Gauge.sol\":15837:15943  require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FROM_FAILED') */\n      tag_303\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6338:6340   */\n      0x20\n        /* \"contracts/Gauge.sol\":15837:15943  require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FROM_FAILED') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6320:6341   */\n      mstore\n        /* \"#utility.yul\":6377:6379   */\n      0x24\n        /* \"#utility.yul\":6357:6375   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":6350:6380   */\n      mstore\n        /* \"#utility.yul\":6416:6450   */\n      0x5472616e7366657248656c7065723a205452414e534645525f46524f4d5f4641\n        /* \"#utility.yul\":6396:6414   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6389:6451   */\n      mstore\n      shl(0xe2, 0x12531151)\n        /* \"#utility.yul\":6467:6485   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6460:6494   */\n      mstore\n        /* \"#utility.yul\":6511:6530   */\n      0x84\n      add\n        /* \"contracts/Gauge.sol\":15837:15943  require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FROM_FAILED') */\n      tag_153\n        /* \"#utility.yul\":6136:6536   */\n      jump\n        /* \"contracts/Gauge.sol\":15837:15943  require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FROM_FAILED') */\n    tag_303:\n        /* \"contracts/Gauge.sol\":15640:15950  {... */\n      pop\n      pop\n        /* \"contracts/Gauge.sol\":15552:15950  function safeTransferFrom(address token, address from, address to, uint value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Gauge.sol\":15189:15546  function safeTransfer(address token, address to, uint value) internal {... */\n    tag_262:\n        /* \"contracts/Gauge.sol\":15382:15427  abi.encodeWithSelector(0xa9059cbb, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":6733:6765   */\n      dup5\n      dup2\n      and\n        /* \"contracts/Gauge.sol\":15382:15427  abi.encodeWithSelector(0xa9059cbb, to, value) */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":6715:6766   */\n      mstore\n        /* \"#utility.yul\":6782:6800   */\n      0x44\n      dup1\n      dup4\n      add\n        /* \"#utility.yul\":6775:6809   */\n      dup6\n      swap1\n      mstore\n        /* \"contracts/Gauge.sol\":15382:15427  abi.encodeWithSelector(0xa9059cbb, to, value) */\n      dup4\n      mload\n      dup1\n      dup5\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n        /* \"#utility.yul\":6688:6706   */\n      0x64\n      swap1\n      swap3\n      add\n        /* \"contracts/Gauge.sol\":15382:15427  abi.encodeWithSelector(0xa9059cbb, to, value) */\n      dup4\n      mstore\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0xa9059cbb)\n      or\n      swap1\n      mstore\n        /* \"contracts/Gauge.sol\":15371:15428  token.call(abi.encodeWithSelector(0xa9059cbb, to, value)) */\n      swap2\n      mload\n      0x00\n      swap3\n      dup4\n      swap3\n        /* \"contracts/Gauge.sol\":15371:15381  token.call */\n      swap1\n      dup8\n      and\n      swap2\n        /* \"contracts/Gauge.sol\":15371:15428  token.call(abi.encodeWithSelector(0xa9059cbb, to, value)) */\n      tag_309\n      swap2\n        /* \"contracts/Gauge.sol\":15382:15427  abi.encodeWithSelector(0xa9059cbb, to, value) */\n      swap1\n        /* \"contracts/Gauge.sol\":15371:15428  token.call(abi.encodeWithSelector(0xa9059cbb, to, value)) */\n      tag_295\n      jump\t// in\n    tag_309:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_312\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_311)\n    tag_312:\n      0x60\n      swap2\n      pop\n    tag_311:\n      pop\n        /* \"contracts/Gauge.sol\":15335:15428  (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0xa9059cbb, to, value)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/Gauge.sol\":15446:15453  success */\n      dup2\n        /* \"contracts/Gauge.sol\":15446:15503  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_315\n      jumpi\n      pop\n        /* \"contracts/Gauge.sol\":15458:15469  data.length */\n      dup1\n      mload\n        /* \"contracts/Gauge.sol\":15458:15474  data.length == 0 */\n      iszero\n      dup1\n        /* \"contracts/Gauge.sol\":15458:15502  data.length == 0 || abi.decode(data, (bool)) */\n      tag_315\n      jumpi\n      pop\n        /* \"contracts/Gauge.sol\":15489:15493  data */\n      dup1\n        /* \"contracts/Gauge.sol\":15478:15502  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_315\n      swap2\n      swap1\n      tag_302\n      jump\t// in\n    tag_315:\n        /* \"contracts/Gauge.sol\":15438:15539  require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FAILED') */\n      tag_316\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":7022:7024   */\n      0x20\n        /* \"contracts/Gauge.sol\":15438:15539  require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FAILED') */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7004:7025   */\n      mstore\n        /* \"#utility.yul\":7061:7063   */\n      0x1f\n        /* \"#utility.yul\":7041:7059   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7034:7064   */\n      mstore\n        /* \"#utility.yul\":7100:7133   */\n      0x5472616e7366657248656c7065723a205452414e534645525f4641494c454400\n        /* \"#utility.yul\":7080:7098   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7073:7134   */\n      mstore\n        /* \"#utility.yul\":7151:7169   */\n      0x64\n      add\n        /* \"contracts/Gauge.sol\":15438:15539  require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FAILED') */\n      tag_153\n        /* \"#utility.yul\":6820:7175   */\n      jump\n        /* \"contracts/Gauge.sol\":15438:15539  require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FAILED') */\n    tag_316:\n        /* \"contracts/Gauge.sol\":15259:15546  {... */\n      pop\n      pop\n        /* \"contracts/Gauge.sol\":15189:15546  function safeTransfer(address token, address to, uint value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Gauge.sol\":17796:18059  function _safeTransferFromToken(address token, uint256 _amount) private {... */\n    tag_283:\n        /* \"contracts/Gauge.sol\":17892:17930  IERC20(token).balanceOf(address(this)) */\n      mload(0x40)\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"contracts/Gauge.sol\":17924:17928  this */\n      address\n        /* \"contracts/Gauge.sol\":17892:17930  IERC20(token).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1168:1219   */\n      mstore\n        /* \"contracts/Gauge.sol\":17878:17889  uint256 bal */\n      0x00\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/Gauge.sol\":17892:17915  IERC20(token).balanceOf */\n      dup5\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1141:1159   */\n      0x24\n      add\n        /* \"contracts/Gauge.sol\":17892:17930  IERC20(token).balanceOf(address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_322\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_322:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_323\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_323:\n        /* \"contracts/Gauge.sol\":17878:17930  uint256 bal = IERC20(token).balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"contracts/Gauge.sol\":17950:17957  _amount */\n      dup2\n        /* \"contracts/Gauge.sol\":17944:17947  bal */\n      dup2\n        /* \"contracts/Gauge.sol\":17944:17957  bal < _amount */\n      lt\n        /* \"contracts/Gauge.sol\":17940:18053  if (bal < _amount) {... */\n      iszero\n      tag_325\n      jumpi\n        /* \"contracts/Gauge.sol\":17973:18042  TransferHelper.safeTransferFrom(token, boost, address(this), _amount) */\n      tag_325\n        /* \"contracts/Gauge.sol\":18005:18010  token */\n      dup4\n        /* \"contracts/Gauge.sol\":18012:18017  boost */\n      immutable(\"0xba317e1d5aa05b5861702d06e2202816a8a6452d32b68558d200060c06eac391\")\n        /* \"contracts/Gauge.sol\":18027:18031  this */\n      address\n        /* \"contracts/Gauge.sol\":18034:18041  _amount */\n      dup6\n        /* \"contracts/Gauge.sol\":17973:18004  TransferHelper.safeTransferFrom */\n      tag_223\n        /* \"contracts/Gauge.sol\":17973:18042  TransferHelper.safeTransferFrom(token, boost, address(this), _amount) */\n      jump\t// in\n    tag_325:\n        /* \"contracts/Gauge.sol\":17868:18059  {... */\n      pop\n        /* \"contracts/Gauge.sol\":17796:18059  function _safeTransferFromToken(address token, uint256 _amount) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":196:327   */\n    tag_326:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":271:302   */\n      dup2\n      and\n        /* \"#utility.yul\":261:303   */\n      dup2\n      eq\n        /* \"#utility.yul\":251:321   */\n      tag_189\n      jumpi\n        /* \"#utility.yul\":317:318   */\n      0x00\n        /* \"#utility.yul\":314:315   */\n      dup1\n        /* \"#utility.yul\":307:319   */\n      revert\n        /* \"#utility.yul\":332:579   */\n    tag_33:\n        /* \"#utility.yul\":391:397   */\n      0x00\n        /* \"#utility.yul\":444:446   */\n      0x20\n        /* \"#utility.yul\":432:441   */\n      dup3\n        /* \"#utility.yul\":423:430   */\n      dup5\n        /* \"#utility.yul\":419:442   */\n      sub\n        /* \"#utility.yul\":415:447   */\n      slt\n        /* \"#utility.yul\":412:464   */\n      iszero\n      tag_333\n      jumpi\n        /* \"#utility.yul\":460:461   */\n      0x00\n        /* \"#utility.yul\":457:458   */\n      dup1\n        /* \"#utility.yul\":450:462   */\n      revert\n        /* \"#utility.yul\":412:464   */\n    tag_333:\n        /* \"#utility.yul\":499:508   */\n      dup2\n        /* \"#utility.yul\":486:509   */\n      calldataload\n        /* \"#utility.yul\":518:549   */\n      tag_105\n        /* \"#utility.yul\":543:548   */\n      dup2\n        /* \"#utility.yul\":518:549   */\n      tag_326\n      jump\t// in\n        /* \"#utility.yul\":837:1017   */\n    tag_39:\n        /* \"#utility.yul\":896:902   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:969   */\n      iszero\n      tag_337\n      jumpi\n        /* \"#utility.yul\":965:966   */\n      0x00\n        /* \"#utility.yul\":962:963   */\n      dup1\n        /* \"#utility.yul\":955:967   */\n      revert\n        /* \"#utility.yul\":917:969   */\n    tag_337:\n      pop\n        /* \"#utility.yul\":988:1011   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":837:1017   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1230:1545   */\n    tag_59:\n        /* \"#utility.yul\":1298:1304   */\n      0x00\n        /* \"#utility.yul\":1306:1312   */\n      dup1\n        /* \"#utility.yul\":1359:1361   */\n      0x40\n        /* \"#utility.yul\":1347:1356   */\n      dup4\n        /* \"#utility.yul\":1338:1345   */\n      dup6\n        /* \"#utility.yul\":1334:1357   */\n      sub\n        /* \"#utility.yul\":1330:1362   */\n      slt\n        /* \"#utility.yul\":1327:1379   */\n      iszero\n      tag_340\n      jumpi\n        /* \"#utility.yul\":1375:1376   */\n      0x00\n        /* \"#utility.yul\":1372:1373   */\n      dup1\n        /* \"#utility.yul\":1365:1377   */\n      revert\n        /* \"#utility.yul\":1327:1379   */\n    tag_340:\n        /* \"#utility.yul\":1414:1423   */\n      dup3\n        /* \"#utility.yul\":1401:1424   */\n      calldataload\n        /* \"#utility.yul\":1433:1464   */\n      tag_341\n        /* \"#utility.yul\":1458:1463   */\n      dup2\n        /* \"#utility.yul\":1433:1464   */\n      tag_326\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":1483:1488   */\n      swap5\n        /* \"#utility.yul\":1535:1537   */\n      0x20\n        /* \"#utility.yul\":1520:1538   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1507:1539   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1230:1545   */\n      jump\t// out\n        /* \"#utility.yul\":1550:1798   */\n    tag_86:\n        /* \"#utility.yul\":1618:1624   */\n      0x00\n        /* \"#utility.yul\":1626:1632   */\n      dup1\n        /* \"#utility.yul\":1679:1681   */\n      0x40\n        /* \"#utility.yul\":1667:1676   */\n      dup4\n        /* \"#utility.yul\":1658:1665   */\n      dup6\n        /* \"#utility.yul\":1654:1677   */\n      sub\n        /* \"#utility.yul\":1650:1682   */\n      slt\n        /* \"#utility.yul\":1647:1699   */\n      iszero\n      tag_343\n      jumpi\n        /* \"#utility.yul\":1695:1696   */\n      0x00\n        /* \"#utility.yul\":1692:1693   */\n      dup1\n        /* \"#utility.yul\":1685:1697   */\n      revert\n        /* \"#utility.yul\":1647:1699   */\n    tag_343:\n      pop\n      pop\n        /* \"#utility.yul\":1718:1741   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":1788:1790   */\n      0x20\n        /* \"#utility.yul\":1773:1791   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1760:1792   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":1550:1798   */\n      jump\t// out\n        /* \"#utility.yul\":1803:1930   */\n    tag_327:\n        /* \"#utility.yul\":1864:1874   */\n      0x4e487b71\n        /* \"#utility.yul\":1859:1862   */\n      0xe0\n        /* \"#utility.yul\":1855:1875   */\n      shl\n        /* \"#utility.yul\":1852:1853   */\n      0x00\n        /* \"#utility.yul\":1845:1876   */\n      mstore\n        /* \"#utility.yul\":1895:1899   */\n      0x11\n        /* \"#utility.yul\":1892:1893   */\n      0x04\n        /* \"#utility.yul\":1885:1900   */\n      mstore\n        /* \"#utility.yul\":1919:1923   */\n      0x24\n        /* \"#utility.yul\":1916:1917   */\n      0x00\n        /* \"#utility.yul\":1909:1924   */\n      revert\n        /* \"#utility.yul\":1935:2103   */\n    tag_110:\n        /* \"#utility.yul\":1975:1982   */\n      0x00\n        /* \"#utility.yul\":2041:2042   */\n      dup2\n        /* \"#utility.yul\":2037:2038   */\n      0x00\n        /* \"#utility.yul\":2033:2039   */\n      not\n        /* \"#utility.yul\":2029:2043   */\n      div\n        /* \"#utility.yul\":2026:2027   */\n      dup4\n        /* \"#utility.yul\":2023:2044   */\n      gt\n        /* \"#utility.yul\":2018:2019   */\n      dup3\n        /* \"#utility.yul\":2011:2020   */\n      iszero\n        /* \"#utility.yul\":2004:2021   */\n      iszero\n        /* \"#utility.yul\":2000:2045   */\n      and\n        /* \"#utility.yul\":1997:2068   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":2048:2066   */\n      tag_347\n      tag_327\n      jump\t// in\n    tag_347:\n      pop\n        /* \"#utility.yul\":2088:2097   */\n      mul\n      swap1\n        /* \"#utility.yul\":1935:2103   */\n      jump\t// out\n        /* \"#utility.yul\":2108:2325   */\n    tag_112:\n        /* \"#utility.yul\":2148:2149   */\n      0x00\n        /* \"#utility.yul\":2174:2175   */\n      dup3\n        /* \"#utility.yul\":2164:2296   */\n      tag_349\n      jumpi\n        /* \"#utility.yul\":2218:2228   */\n      0x4e487b71\n        /* \"#utility.yul\":2213:2216   */\n      0xe0\n        /* \"#utility.yul\":2209:2229   */\n      shl\n        /* \"#utility.yul\":2206:2207   */\n      0x00\n        /* \"#utility.yul\":2199:2230   */\n      mstore\n        /* \"#utility.yul\":2253:2257   */\n      0x12\n        /* \"#utility.yul\":2250:2251   */\n      0x04\n        /* \"#utility.yul\":2243:2258   */\n      mstore\n        /* \"#utility.yul\":2281:2285   */\n      0x24\n        /* \"#utility.yul\":2278:2279   */\n      0x00\n        /* \"#utility.yul\":2271:2286   */\n      revert\n        /* \"#utility.yul\":2164:2296   */\n    tag_349:\n      pop\n        /* \"#utility.yul\":2310:2319   */\n      div\n      swap1\n        /* \"#utility.yul\":2108:2325   */\n      jump\t// out\n        /* \"#utility.yul\":2330:2514   */\n    tag_117:\n        /* \"#utility.yul\":2400:2406   */\n      0x00\n        /* \"#utility.yul\":2453:2455   */\n      0x20\n        /* \"#utility.yul\":2441:2450   */\n      dup3\n        /* \"#utility.yul\":2432:2439   */\n      dup5\n        /* \"#utility.yul\":2428:2451   */\n      sub\n        /* \"#utility.yul\":2424:2456   */\n      slt\n        /* \"#utility.yul\":2421:2473   */\n      iszero\n      tag_351\n      jumpi\n        /* \"#utility.yul\":2469:2470   */\n      0x00\n        /* \"#utility.yul\":2466:2467   */\n      dup1\n        /* \"#utility.yul\":2459:2471   */\n      revert\n        /* \"#utility.yul\":2421:2473   */\n    tag_351:\n      pop\n        /* \"#utility.yul\":2492:2508   */\n      mload\n      swap2\n        /* \"#utility.yul\":2330:2514   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2519:2770   */\n    tag_122:\n        /* \"#utility.yul\":2589:2595   */\n      0x00\n        /* \"#utility.yul\":2642:2644   */\n      0x20\n        /* \"#utility.yul\":2630:2639   */\n      dup3\n        /* \"#utility.yul\":2621:2628   */\n      dup5\n        /* \"#utility.yul\":2617:2640   */\n      sub\n        /* \"#utility.yul\":2613:2645   */\n      slt\n        /* \"#utility.yul\":2610:2662   */\n      iszero\n      tag_353\n      jumpi\n        /* \"#utility.yul\":2658:2659   */\n      0x00\n        /* \"#utility.yul\":2655:2656   */\n      dup1\n        /* \"#utility.yul\":2648:2660   */\n      revert\n        /* \"#utility.yul\":2610:2662   */\n    tag_353:\n        /* \"#utility.yul\":2690:2699   */\n      dup2\n        /* \"#utility.yul\":2684:2700   */\n      mload\n        /* \"#utility.yul\":2709:2740   */\n      tag_105\n        /* \"#utility.yul\":2734:2739   */\n      dup2\n        /* \"#utility.yul\":2709:2740   */\n      tag_326\n      jump\t// in\n        /* \"#utility.yul\":3054:3182   */\n    tag_149:\n        /* \"#utility.yul\":3094:3097   */\n      0x00\n        /* \"#utility.yul\":3125:3126   */\n      dup3\n        /* \"#utility.yul\":3121:3127   */\n      not\n        /* \"#utility.yul\":3118:3119   */\n      dup3\n        /* \"#utility.yul\":3115:3128   */\n      gt\n        /* \"#utility.yul\":3112:3151   */\n      iszero\n      tag_358\n      jumpi\n        /* \"#utility.yul\":3131:3149   */\n      tag_358\n      tag_327\n      jump\t// in\n    tag_358:\n      pop\n        /* \"#utility.yul\":3167:3176   */\n      add\n      swap1\n        /* \"#utility.yul\":3054:3182   */\n      jump\t// out\n        /* \"#utility.yul\":3862:4217   */\n    tag_172:\n        /* \"#utility.yul\":4064:4066   */\n      0x20\n        /* \"#utility.yul\":4046:4067   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":4103:4105   */\n      0x1f\n        /* \"#utility.yul\":4083:4101   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":4076:4106   */\n      mstore\n        /* \"#utility.yul\":4142:4175   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":4137:4139   */\n      0x40\n        /* \"#utility.yul\":4122:4140   */\n      dup3\n      add\n        /* \"#utility.yul\":4115:4176   */\n      mstore\n        /* \"#utility.yul\":4208:4210   */\n      0x60\n        /* \"#utility.yul\":4193:4211   */\n      add\n      swap1\n        /* \"#utility.yul\":3862:4217   */\n      jump\t// out\n        /* \"#utility.yul\":4913:5038   */\n    tag_278:\n        /* \"#utility.yul\":4953:4957   */\n      0x00\n        /* \"#utility.yul\":4981:4982   */\n      dup3\n        /* \"#utility.yul\":4978:4979   */\n      dup3\n        /* \"#utility.yul\":4975:4983   */\n      lt\n        /* \"#utility.yul\":4972:5006   */\n      iszero\n      tag_366\n      jumpi\n        /* \"#utility.yul\":4986:5004   */\n      tag_366\n      tag_327\n      jump\t// in\n    tag_366:\n      pop\n        /* \"#utility.yul\":5023:5032   */\n      sub\n      swap1\n        /* \"#utility.yul\":4913:5038   */\n      jump\t// out\n        /* \"#utility.yul\":5423:5849   */\n    tag_295:\n        /* \"#utility.yul\":5552:5555   */\n      0x00\n        /* \"#utility.yul\":5590:5596   */\n      dup3\n        /* \"#utility.yul\":5584:5597   */\n      mload\n        /* \"#utility.yul\":5615:5616   */\n      0x00\n        /* \"#utility.yul\":5625:5754   */\n    tag_369:\n        /* \"#utility.yul\":5639:5645   */\n      dup2\n        /* \"#utility.yul\":5636:5637   */\n      dup2\n        /* \"#utility.yul\":5633:5646   */\n      lt\n        /* \"#utility.yul\":5625:5754   */\n      iszero\n      tag_371\n      jumpi\n        /* \"#utility.yul\":5737:5741   */\n      0x20\n        /* \"#utility.yul\":5721:5735   */\n      dup2\n      dup7\n      add\n        /* \"#utility.yul\":5717:5742   */\n      dup2\n      add\n        /* \"#utility.yul\":5711:5743   */\n      mload\n        /* \"#utility.yul\":5698:5709   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":5691:5744   */\n      mstore\n        /* \"#utility.yul\":5654:5666   */\n      add\n        /* \"#utility.yul\":5625:5754   */\n      jump(tag_369)\n    tag_371:\n        /* \"#utility.yul\":5772:5778   */\n      dup2\n        /* \"#utility.yul\":5769:5770   */\n      dup2\n        /* \"#utility.yul\":5766:5779   */\n      gt\n        /* \"#utility.yul\":5763:5811   */\n      iszero\n      tag_372\n      jumpi\n        /* \"#utility.yul\":5807:5808   */\n      0x00\n        /* \"#utility.yul\":5798:5804   */\n      dup3\n        /* \"#utility.yul\":5793:5796   */\n      dup6\n        /* \"#utility.yul\":5789:5805   */\n      add\n        /* \"#utility.yul\":5782:5809   */\n      mstore\n        /* \"#utility.yul\":5763:5811   */\n    tag_372:\n      pop\n        /* \"#utility.yul\":5827:5843   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":5423:5849   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5854:6131   */\n    tag_302:\n        /* \"#utility.yul\":5921:5927   */\n      0x00\n        /* \"#utility.yul\":5974:5976   */\n      0x20\n        /* \"#utility.yul\":5962:5971   */\n      dup3\n        /* \"#utility.yul\":5953:5960   */\n      dup5\n        /* \"#utility.yul\":5949:5972   */\n      sub\n        /* \"#utility.yul\":5945:5977   */\n      slt\n        /* \"#utility.yul\":5942:5994   */\n      iszero\n      tag_374\n      jumpi\n        /* \"#utility.yul\":5990:5991   */\n      0x00\n        /* \"#utility.yul\":5987:5988   */\n      dup1\n        /* \"#utility.yul\":5980:5992   */\n      revert\n        /* \"#utility.yul\":5942:5994   */\n    tag_374:\n        /* \"#utility.yul\":6022:6031   */\n      dup2\n        /* \"#utility.yul\":6016:6032   */\n      mload\n        /* \"#utility.yul\":6075:6080   */\n      dup1\n        /* \"#utility.yul\":6068:6081   */\n      iszero\n        /* \"#utility.yul\":6061:6082   */\n      iszero\n        /* \"#utility.yul\":6054:6059   */\n      dup2\n        /* \"#utility.yul\":6051:6083   */\n      eq\n        /* \"#utility.yul\":6041:6101   */\n      tag_105\n      jumpi\n        /* \"#utility.yul\":6097:6098   */\n      0x00\n        /* \"#utility.yul\":6094:6095   */\n      dup1\n        /* \"#utility.yul\":6087:6099   */\n      revert\n\n    auxdata: 0xa2646970667358221220b38ec98d81cbfa29259154b412fd72fd8bfd59145d6eab4cd0a156048453aa6264736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_105": {
									"entryPoint": null,
									"id": 105,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_862": {
									"entryPoint": null,
									"id": 862,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 93,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_address_fromMemory": {
									"entryPoint": 122,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:662:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "74:117:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "84:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "93:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "169:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "178:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "181:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "154:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "159:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "163:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "118:50:1"
															},
															"nodeType": "YulIf",
															"src": "115:70:1"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "53:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:1",
														"type": ""
													}
												],
												"src": "14:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "328:332:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "375:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "384:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "387:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "377:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "377:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "377:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "349:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "358:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "345:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "345:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "370:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "341:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "341:33:1"
															},
															"nodeType": "YulIf",
															"src": "338:53:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "400:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "440:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "410:29:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "410:40:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "400:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "459:59:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "503:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "514:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "499:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "499:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "469:29:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "469:49:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "459:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "527:59:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "571:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "582:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "567:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "567:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "537:29:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "537:49:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "527:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "595:59:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "639:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "650:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "635:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "635:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "605:29:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "605:49:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "595:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "270:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "281:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "293:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "301:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "309:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "317:6:1",
														"type": ""
													}
												],
												"src": "196:464:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n        value3 := abi_decode_address_fromMemory(add(headStart, 96))\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6101006040523480156200001257600080fd5b50604051620018d7380380620018d783398101604081905262000035916200007a565b60016000556001600160a01b0393841660805291831660a052821660c0521660e052620000d7565b80516001600160a01b03811681146200007557600080fd5b919050565b600080600080608085870312156200009157600080fd5b6200009c856200005d565b9350620000ac602086016200005d565b9250620000bc604086016200005d565b9150620000cc606086016200005d565b905092959194509250565b60805160a05160c05160e05161173a6200019d600039600081816102eb015281816109c3015281816109f901528181610d1f0152611022015260008181610254015281816104290152818161056001528181610677015281816107a20152818161096101528181610a7d01526114f00152600081816101ed015281816104af015281816105f70152610dc50152600081816101ae015281816103f9015281816106a70152818161080301528181610b0401528181610d520152611071015261173a6000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c8063a66f42c0116100b8578063c73b399b1161007c578063c73b399b146102b8578063e2bbb158146102cb578063e3161ddd146102de578063f7c618c1146102e6578063fc97a3031461030d578063fdb483c71461032d57600080fd5b8063a66f42c01461024f578063a9f8d18114610276578063b66503cf1461027f578063c00007b014610292578063c6f678bd146102a557600080fd5b80634198709a116100ff5780634198709a1461020f5780635eebea2014610218578063853828b61461022b578063892f4805146102335780638f6629151461024657600080fd5b806318160ddd1461013c5780631959a002146101585780632e1a7d4d146101945780633a4b66f1146101a95780633b92eb23146101e8575b600080fd5b61014560055481565b6040519081526020015b60405180910390f35b61017f610166366004611530565b6006602052600090815260409020805460019091015482565b6040805192835260208301919091520161014f565b6101a76101a236600461154d565b610340565b005b6101d07f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161014f565b6101d07f000000000000000000000000000000000000000000000000000000000000000081565b61014560025481565b610145610226366004611530565b610377565b6101a7610396565b610145610241366004611566565b6103b1565b61014560035481565b6101d07f000000000000000000000000000000000000000000000000000000000000000081565b61014560045481565b6101a761028d366004611566565b610797565b6101a76102a0366004611530565b61091c565b6101a76102b336600461154d565b610aeb565b6101456102c6366004611530565b610b80565b6101a76102d9366004611592565b610c86565b6101a7610f00565b6101d07f000000000000000000000000000000000000000000000000000000000000000081565b61014561031b366004611530565b60016020526000908152604090205481565b6101a761033b366004611592565b610f82565b336000908152600660205260408120548214156103695750336000908152600160205260409020545b6103738282610f82565b5050565b60008061038383610b80565b905061038f83826103b1565b9392505050565b336000908152600660205260409020546103af90610340565b565b6001600160a01b0382166000908152600160205260408120548160646103d885601e6115ca565b6103e291906115e9565b6040516353e5642360e11b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015291925060009182917f00000000000000000000000000000000000000000000000000000000000000009091169063a7cac84690602401602060405180830381865afa158015610472573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610496919061160b565b6040516331a9108f60e11b8152600481018690529091507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690636352211e90602401602060405180830381865afa1580156104fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105229190611624565b6001600160a01b0316876001600160a01b03161480156105425750600081115b1561077957604051631e7a4e0960e21b8152600481018590526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906379e9382490602401602060405180830381865afa1580156105af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d3919061160b565b6040516339f890b560e21b8152600481018790529091506000906001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063e7e242d490602401602060405180830381865afa15801561063e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610662919061160b565b90506107428261073c8361073664e8d4a510007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d23254b48d7f00000000000000000000000000000000000000000000000000000000000000006040518363ffffffff1660e01b81526004016106f59291909182526001600160a01b0316602082015260400190565b602060405180830381865afa158015610712573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610736919061160b565b90611144565b90611150565b93506064838560055461075591906115ca565b61075f91906115e9565b61076a9060466115ca565b61077491906115e9565b935050505b61078c6107868385611641565b8761115c565b979650505050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146108015760405162461bcd60e51b815260206004820152600a6024820152691bdb9b1e48189bdbdcdd60b21b60448201526064015b60405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b0316141561086e5760405162461bcd60e51b81526020600482015260086024820152676e6f207374616b6560c01b60448201526064016107f8565b600454431161087b575050565b6002819055600554156108d857600061089f6004544361117290919063ffffffff16565b90506108cf6108c660055461073c64e8d4a51000610736868861114490919063ffffffff16565b6003549061117e565b60035550436004555b6040518181526001600160a01b0383169033907ff70d5c697de7ea828df48e5c4573cb2194c659f1901f70110c52b066dcf508269060200160405180910390a35050565b6002600054141561093f5760405162461bcd60e51b81526004016107f890611659565b6002600055336001600160a01b03821614806109835750336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016145b61098c57600080fd5b610994610f00565b6001600160a01b0381166000908152600660205260408120906109b683610b80565b90508015610a4a576109e97f0000000000000000000000000000000000000000000000000000000000000000848361118a565b6040518181526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169033907f9aa05b3d70a9e3e2f004f039648839560576334fb45c81f91b6db03ad9e2efc99060200160405180910390a35b6003548254610a639164e8d4a510009161073c91611144565b60018301556040516363453ae160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906363453ae190602401600060405180830381600087803b158015610ac957600080fd5b505af1158015610add573d6000803e3d6000fd5b505060016000555050505050565b6040516370a0823160e01b8152336004820152610b7d907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa158015610b53573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b77919061160b565b82610c86565b50565b6001600160a01b0381166000908152600660205260408120600354815415610c7c57600454431115610c40576000610bc36004544361117290919063ffffffff16565b90506000610bdc8260025461114490919063ffffffff16565b9050610c06610bff60055461073c64e8d4a510008561114490919063ffffffff16565b849061117e565b9250610c368460010154610c3064e8d4a5100061073c87896000015461114490919063ffffffff16565b90611172565b9695505050505050565b600454431415610c7c57610c748260010154610c3064e8d4a5100061073c600354876000015461114490919063ffffffff16565b949350505050565b5060009392505050565b60026000541415610ca95760405162461bcd60e51b81526004016107f890611659565b600260005581610ce95760405162461bcd60e51b815260206004820152600b60248201526a0616d6f756e7420697320360ac1b60448201526064016107f8565b610cf1610f00565b336000908152600660205260409020805415610d47576000610d1233610b80565b90508015610d4557610d457f0000000000000000000000000000000000000000000000000000000000000000338361118a565b505b8215610d9f57610d797f000000000000000000000000000000000000000000000000000000000000000033308661122a565b8260056000828254610d8b9190611641565b90915550508054610d9c908461117e565b81555b8115610e8a576040516331a9108f60e11b81526004810183905233906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690636352211e90602401602060405180830381865afa158015610e0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e309190611624565b6001600160a01b031614610e4357600080fd5b33600090815260016020526040902054610e6a573360009081526001602052604090208290555b336000908152600160205260409020548214610e8557600080fd5b610e9d565b3360009081526001602052604090205491505b6003548154610eb69164e8d4a510009161073c91611144565b6001820155604080518381526020810185905233917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15910160405180910390a25050600160005550565b6004544311610f0b57565b600554610f185743600455565b600060025411610f2457565b6000610f3b6004544361117290919063ffffffff16565b90506000610f548260025461114490919063ffffffff16565b9050610f776108c660055461073c64e8d4a510008561114490919063ffffffff16565b600355505043600455565b60026000541415610fa55760405162461bcd60e51b81526004016107f890611659565b6002600090815533815260066020526040902080548311156110025760405162461bcd60e51b81526020600482015260166024820152751dda5d1a191c985dd4ddd85c0e881b9bdd0819dbdbd960521b60448201526064016107f8565b61100a610f00565b600061101533610b80565b90508015611048576110487f0000000000000000000000000000000000000000000000000000000000000000338361118a565b831561109757815461105a9085611172565b82556005546110699085611172565b6005556110977f0000000000000000000000000000000000000000000000000000000000000000338661135a565b60035482546110b09164e8d4a510009161073c91611144565b600183015582156110eb573360009081526001602052604090205483146110d657600080fd5b336000908152600160205260408120556110fe565b3360009081526001602052604090205492505b604080518481526020810186905233917ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568910160405180910390a2505060016000555050565b600061038f82846115ca565b600061038f82846115e9565b600081831061116b578161038f565b5090919050565b600061038f8284611690565b600061038f8284611641565b6111948382611475565b6040516370a0823160e01b81523060048201526000906001600160a01b038516906370a0823190602401602060405180830381865afa1580156111db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ff919061160b565b90508082111561120d578091505b61121783836103b1565b915061122484848461135a565b50505050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180516001600160e01b03166323b872dd60e01b179052915160009283929088169161128e91906116a7565b6000604051808303816000865af19150503d80600081146112cb576040519150601f19603f3d011682016040523d82523d6000602084013e6112d0565b606091505b50915091508180156112fa5750805115806112fa5750808060200190518101906112fa91906116e2565b6113525760405162461bcd60e51b8152602060048201526024808201527f5472616e7366657248656c7065723a205452414e534645525f46524f4d5f46416044820152631253115160e21b60648201526084016107f8565b505050505050565b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180516001600160e01b031663a9059cbb60e01b17905291516000928392908716916113b691906116a7565b6000604051808303816000865af19150503d80600081146113f3576040519150601f19603f3d011682016040523d82523d6000602084013e6113f8565b606091505b509150915081801561142257508051158061142257508080602001905181019061142291906116e2565b61146e5760405162461bcd60e51b815260206004820152601f60248201527f5472616e7366657248656c7065723a205452414e534645525f4641494c45440060448201526064016107f8565b5050505050565b6040516370a0823160e01b81523060048201526000906001600160a01b038416906370a0823190602401602060405180830381865afa1580156114bc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114e0919061160b565b90508181101561151657611516837f0000000000000000000000000000000000000000000000000000000000000000308561122a565b505050565b6001600160a01b0381168114610b7d57600080fd5b60006020828403121561154257600080fd5b813561038f8161151b565b60006020828403121561155f57600080fd5b5035919050565b6000806040838503121561157957600080fd5b82356115848161151b565b946020939093013593505050565b600080604083850312156115a557600080fd5b50508035926020909101359150565b634e487b7160e01b600052601160045260246000fd5b60008160001904831182151516156115e4576115e46115b4565b500290565b60008261160657634e487b7160e01b600052601260045260246000fd5b500490565b60006020828403121561161d57600080fd5b5051919050565b60006020828403121561163657600080fd5b815161038f8161151b565b60008219821115611654576116546115b4565b500190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b6000828210156116a2576116a26115b4565b500390565b6000825160005b818110156116c857602081860181015185830152016116ae565b818111156116d7576000828501525b509190910192915050565b6000602082840312156116f457600080fd5b8151801515811461038f57600080fdfea2646970667358221220b38ec98d81cbfa29259154b412fd72fd8bfd59145d6eab4cd0a156048453aa6264736f6c634300080a0033",
							"opcodes": "PUSH2 0x100 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x18D7 CODESIZE SUB DUP1 PUSH3 0x18D7 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x35 SWAP2 PUSH3 0x7A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND PUSH1 0x80 MSTORE SWAP2 DUP4 AND PUSH1 0xA0 MSTORE DUP3 AND PUSH1 0xC0 MSTORE AND PUSH1 0xE0 MSTORE PUSH3 0xD7 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x75 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH3 0x91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x9C DUP6 PUSH3 0x5D JUMP JUMPDEST SWAP4 POP PUSH3 0xAC PUSH1 0x20 DUP7 ADD PUSH3 0x5D JUMP JUMPDEST SWAP3 POP PUSH3 0xBC PUSH1 0x40 DUP7 ADD PUSH3 0x5D JUMP JUMPDEST SWAP2 POP PUSH3 0xCC PUSH1 0x60 DUP7 ADD PUSH3 0x5D JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x173A PUSH3 0x19D PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x2EB ADD MSTORE DUP2 DUP2 PUSH2 0x9C3 ADD MSTORE DUP2 DUP2 PUSH2 0x9F9 ADD MSTORE DUP2 DUP2 PUSH2 0xD1F ADD MSTORE PUSH2 0x1022 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x254 ADD MSTORE DUP2 DUP2 PUSH2 0x429 ADD MSTORE DUP2 DUP2 PUSH2 0x560 ADD MSTORE DUP2 DUP2 PUSH2 0x677 ADD MSTORE DUP2 DUP2 PUSH2 0x7A2 ADD MSTORE DUP2 DUP2 PUSH2 0x961 ADD MSTORE DUP2 DUP2 PUSH2 0xA7D ADD MSTORE PUSH2 0x14F0 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x1ED ADD MSTORE DUP2 DUP2 PUSH2 0x4AF ADD MSTORE DUP2 DUP2 PUSH2 0x5F7 ADD MSTORE PUSH2 0xDC5 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x1AE ADD MSTORE DUP2 DUP2 PUSH2 0x3F9 ADD MSTORE DUP2 DUP2 PUSH2 0x6A7 ADD MSTORE DUP2 DUP2 PUSH2 0x803 ADD MSTORE DUP2 DUP2 PUSH2 0xB04 ADD MSTORE DUP2 DUP2 PUSH2 0xD52 ADD MSTORE PUSH2 0x1071 ADD MSTORE PUSH2 0x173A PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA66F42C0 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xC73B399B GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xC73B399B EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0xE3161DDD EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x2E6 JUMPI DUP1 PUSH4 0xFC97A303 EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0xFDB483C7 EQ PUSH2 0x32D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA66F42C0 EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0xA9F8D181 EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0xB66503CF EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0xC00007B0 EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0xC6F678BD EQ PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4198709A GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x4198709A EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x5EEBEA20 EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x853828B6 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x892F4805 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0x8F662915 EQ PUSH2 0x246 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x1959A002 EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x3A4B66F1 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x3B92EB23 EQ PUSH2 0x1E8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x145 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH2 0x166 CALLDATASIZE PUSH1 0x4 PUSH2 0x1530 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x14F JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x154D JUMP JUMPDEST PUSH2 0x340 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D0 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14F JUMP JUMPDEST PUSH2 0x1D0 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x145 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x145 PUSH2 0x226 CALLDATASIZE PUSH1 0x4 PUSH2 0x1530 JUMP JUMPDEST PUSH2 0x377 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x396 JUMP JUMPDEST PUSH2 0x145 PUSH2 0x241 CALLDATASIZE PUSH1 0x4 PUSH2 0x1566 JUMP JUMPDEST PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x145 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1D0 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x145 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x28D CALLDATASIZE PUSH1 0x4 PUSH2 0x1566 JUMP JUMPDEST PUSH2 0x797 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x2A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1530 JUMP JUMPDEST PUSH2 0x91C JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x2B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x154D JUMP JUMPDEST PUSH2 0xAEB JUMP JUMPDEST PUSH2 0x145 PUSH2 0x2C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1530 JUMP JUMPDEST PUSH2 0xB80 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x2D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1592 JUMP JUMPDEST PUSH2 0xC86 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0xF00 JUMP JUMPDEST PUSH2 0x1D0 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x145 PUSH2 0x31B CALLDATASIZE PUSH1 0x4 PUSH2 0x1530 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x33B CALLDATASIZE PUSH1 0x4 PUSH2 0x1592 JUMP JUMPDEST PUSH2 0xF82 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 EQ ISZERO PUSH2 0x369 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST PUSH2 0x373 DUP3 DUP3 PUSH2 0xF82 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x383 DUP4 PUSH2 0xB80 JUMP JUMPDEST SWAP1 POP PUSH2 0x38F DUP4 DUP3 PUSH2 0x3B1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x3AF SWAP1 PUSH2 0x340 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 PUSH1 0x64 PUSH2 0x3D8 DUP6 PUSH1 0x1E PUSH2 0x15CA JUMP JUMPDEST PUSH2 0x3E2 SWAP2 SWAP1 PUSH2 0x15E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x53E56423 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0xA7CAC846 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x472 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x496 SWAP2 SWAP1 PUSH2 0x160B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4FE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x522 SWAP2 SWAP1 PUSH2 0x1624 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x542 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x779 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E7A4E09 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x79E93824 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5AF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5D3 SWAP2 SWAP1 PUSH2 0x160B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x39F890B5 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xE7E242D4 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x63E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x662 SWAP2 SWAP1 PUSH2 0x160B JUMP JUMPDEST SWAP1 POP PUSH2 0x742 DUP3 PUSH2 0x73C DUP4 PUSH2 0x736 PUSH5 0xE8D4A51000 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD23254B4 DUP14 PUSH32 0x0 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F5 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x712 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x736 SWAP2 SWAP1 PUSH2 0x160B JUMP JUMPDEST SWAP1 PUSH2 0x1144 JUMP JUMPDEST SWAP1 PUSH2 0x1150 JUMP JUMPDEST SWAP4 POP PUSH1 0x64 DUP4 DUP6 PUSH1 0x5 SLOAD PUSH2 0x755 SWAP2 SWAP1 PUSH2 0x15CA JUMP JUMPDEST PUSH2 0x75F SWAP2 SWAP1 PUSH2 0x15E9 JUMP JUMPDEST PUSH2 0x76A SWAP1 PUSH1 0x46 PUSH2 0x15CA JUMP JUMPDEST PUSH2 0x774 SWAP2 SWAP1 PUSH2 0x15E9 JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH2 0x78C PUSH2 0x786 DUP4 DUP6 PUSH2 0x1641 JUMP JUMPDEST DUP8 PUSH2 0x115C JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x801 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x1BDB9B1E48189BDBDCDD PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x86E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x6E6F207374616B65 PUSH1 0xC0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7F8 JUMP JUMPDEST PUSH1 0x4 SLOAD NUMBER GT PUSH2 0x87B JUMPI POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x5 SLOAD ISZERO PUSH2 0x8D8 JUMPI PUSH1 0x0 PUSH2 0x89F PUSH1 0x4 SLOAD NUMBER PUSH2 0x1172 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x8CF PUSH2 0x8C6 PUSH1 0x5 SLOAD PUSH2 0x73C PUSH5 0xE8D4A51000 PUSH2 0x736 DUP7 DUP9 PUSH2 0x1144 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 PUSH2 0x117E JUMP JUMPDEST PUSH1 0x3 SSTORE POP NUMBER PUSH1 0x4 SSTORE JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 CALLER SWAP1 PUSH32 0xF70D5C697DE7EA828DF48E5C4573CB2194C659F1901F70110C52B066DCF50826 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x93F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F8 SWAP1 PUSH2 0x1659 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x983 JUMPI POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ JUMPDEST PUSH2 0x98C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x994 PUSH2 0xF00 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x9B6 DUP4 PUSH2 0xB80 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xA4A JUMPI PUSH2 0x9E9 PUSH32 0x0 DUP5 DUP4 PUSH2 0x118A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 CALLER SWAP1 PUSH32 0x9AA05B3D70A9E3E2F004F039648839560576334FB45C81F91B6DB03AD9E2EFC9 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH1 0x3 SLOAD DUP3 SLOAD PUSH2 0xA63 SWAP2 PUSH5 0xE8D4A51000 SWAP2 PUSH2 0x73C SWAP2 PUSH2 0x1144 JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x40 MLOAD PUSH4 0x63453AE1 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x63453AE1 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x1 PUSH1 0x0 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH2 0xB7D SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB53 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB77 SWAP2 SWAP1 PUSH2 0x160B JUMP JUMPDEST DUP3 PUSH2 0xC86 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 SLOAD DUP2 SLOAD ISZERO PUSH2 0xC7C JUMPI PUSH1 0x4 SLOAD NUMBER GT ISZERO PUSH2 0xC40 JUMPI PUSH1 0x0 PUSH2 0xBC3 PUSH1 0x4 SLOAD NUMBER PUSH2 0x1172 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xBDC DUP3 PUSH1 0x2 SLOAD PUSH2 0x1144 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xC06 PUSH2 0xBFF PUSH1 0x5 SLOAD PUSH2 0x73C PUSH5 0xE8D4A51000 DUP6 PUSH2 0x1144 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 SWAP1 PUSH2 0x117E JUMP JUMPDEST SWAP3 POP PUSH2 0xC36 DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0xC30 PUSH5 0xE8D4A51000 PUSH2 0x73C DUP8 DUP10 PUSH1 0x0 ADD SLOAD PUSH2 0x1144 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x1172 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD NUMBER EQ ISZERO PUSH2 0xC7C JUMPI PUSH2 0xC74 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0xC30 PUSH5 0xE8D4A51000 PUSH2 0x73C PUSH1 0x3 SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x1144 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xCA9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F8 SWAP1 PUSH2 0x1659 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE DUP2 PUSH2 0xCE9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x616D6F756E74206973203 PUSH1 0xAC SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7F8 JUMP JUMPDEST PUSH2 0xCF1 PUSH2 0xF00 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD ISZERO PUSH2 0xD47 JUMPI PUSH1 0x0 PUSH2 0xD12 CALLER PUSH2 0xB80 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xD45 JUMPI PUSH2 0xD45 PUSH32 0x0 CALLER DUP4 PUSH2 0x118A JUMP JUMPDEST POP JUMPDEST DUP3 ISZERO PUSH2 0xD9F JUMPI PUSH2 0xD79 PUSH32 0x0 CALLER ADDRESS DUP7 PUSH2 0x122A JUMP JUMPDEST DUP3 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD8B SWAP2 SWAP1 PUSH2 0x1641 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP1 SLOAD PUSH2 0xD9C SWAP1 DUP5 PUSH2 0x117E JUMP JUMPDEST DUP2 SSTORE JUMPDEST DUP2 ISZERO PUSH2 0xE8A JUMPI PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE0C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE30 SWAP2 SWAP1 PUSH2 0x1624 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xE43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xE6A JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP3 SWAP1 SSTORE JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 EQ PUSH2 0xE85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE9D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 POP JUMPDEST PUSH1 0x3 SLOAD DUP2 SLOAD PUSH2 0xEB6 SWAP2 PUSH5 0xE8D4A51000 SWAP2 PUSH2 0x73C SWAP2 PUSH2 0x1144 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE CALLER SWAP2 PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 PUSH1 0x0 SSTORE POP JUMP JUMPDEST PUSH1 0x4 SLOAD NUMBER GT PUSH2 0xF0B JUMPI JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0xF18 JUMPI NUMBER PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD GT PUSH2 0xF24 JUMPI JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF3B PUSH1 0x4 SLOAD NUMBER PUSH2 0x1172 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xF54 DUP3 PUSH1 0x2 SLOAD PUSH2 0x1144 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xF77 PUSH2 0x8C6 PUSH1 0x5 SLOAD PUSH2 0x73C PUSH5 0xE8D4A51000 DUP6 PUSH2 0x1144 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 SSTORE POP POP NUMBER PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xFA5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F8 SWAP1 PUSH2 0x1659 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 DUP2 SSTORE CALLER DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP4 GT ISZERO PUSH2 0x1002 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x1DDA5D1A191C985DD4DDD85C0E881B9BDD0819DBDBD9 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7F8 JUMP JUMPDEST PUSH2 0x100A PUSH2 0xF00 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1015 CALLER PUSH2 0xB80 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1048 JUMPI PUSH2 0x1048 PUSH32 0x0 CALLER DUP4 PUSH2 0x118A JUMP JUMPDEST DUP4 ISZERO PUSH2 0x1097 JUMPI DUP2 SLOAD PUSH2 0x105A SWAP1 DUP6 PUSH2 0x1172 JUMP JUMPDEST DUP3 SSTORE PUSH1 0x5 SLOAD PUSH2 0x1069 SWAP1 DUP6 PUSH2 0x1172 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH2 0x1097 PUSH32 0x0 CALLER DUP7 PUSH2 0x135A JUMP JUMPDEST PUSH1 0x3 SLOAD DUP3 SLOAD PUSH2 0x10B0 SWAP2 PUSH5 0xE8D4A51000 SWAP2 PUSH2 0x73C SWAP2 PUSH2 0x1144 JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SSTORE DUP3 ISZERO PUSH2 0x10EB JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 EQ PUSH2 0x10D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH2 0x10FE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP3 POP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE CALLER SWAP2 PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 PUSH1 0x0 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38F DUP3 DUP5 PUSH2 0x15CA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38F DUP3 DUP5 PUSH2 0x15E9 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x116B JUMPI DUP2 PUSH2 0x38F JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38F DUP3 DUP5 PUSH2 0x1690 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38F DUP3 DUP5 PUSH2 0x1641 JUMP JUMPDEST PUSH2 0x1194 DUP4 DUP3 PUSH2 0x1475 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11DB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11FF SWAP2 SWAP1 PUSH2 0x160B JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x120D JUMPI DUP1 SWAP2 POP JUMPDEST PUSH2 0x1217 DUP4 DUP4 PUSH2 0x3B1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1224 DUP5 DUP5 DUP5 PUSH2 0x135A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP9 AND SWAP2 PUSH2 0x128E SWAP2 SWAP1 PUSH2 0x16A7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x12CB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12D0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x12FA JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x12FA JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x12FA SWAP2 SWAP1 PUSH2 0x16E2 JUMP JUMPDEST PUSH2 0x1352 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A205452414E534645525F46524F4D5F4641 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x12531151 PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7F8 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP8 AND SWAP2 PUSH2 0x13B6 SWAP2 SWAP1 PUSH2 0x16A7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x13F3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13F8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1422 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x1422 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1422 SWAP2 SWAP1 PUSH2 0x16E2 JUMP JUMPDEST PUSH2 0x146E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A205452414E534645525F4641494C454400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7F8 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14BC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14E0 SWAP2 SWAP1 PUSH2 0x160B JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1516 JUMPI PUSH2 0x1516 DUP4 PUSH32 0x0 ADDRESS DUP6 PUSH2 0x122A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1542 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x38F DUP2 PUSH2 0x151B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x155F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1579 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1584 DUP2 PUSH2 0x151B JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x15E4 JUMPI PUSH2 0x15E4 PUSH2 0x15B4 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1606 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x161D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1636 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x38F DUP2 PUSH2 0x151B JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1654 JUMPI PUSH2 0x1654 PUSH2 0x15B4 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x16A2 JUMPI PUSH2 0x16A2 PUSH2 0x15B4 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x16C8 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x16AE JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x16D7 JUMPI PUSH1 0x0 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x38F JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 DUP15 0xC9 DUP14 DUP2 0xCB STATICCALL 0x29 0x25 SWAP2 SLOAD 0xB4 SLT REVERT PUSH19 0xFD8BFD59145D6EAB4CD0A156048453AA626473 PUSH16 0x6C634300080A00330000000000000000 ",
							"sourceMap": "16315:7950:0:-:0;;;17497:195;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3090:1;3195:7;:22;-1:-1:-1;;;;;17587:14:0;;;;;17611;;;;;17635;;;;17659:26;;;16315:7950;;14:177:1;93:13;;-1:-1:-1;;;;;135:31:1;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:464::-;293:6;301;309;317;370:3;358:9;349:7;345:23;341:33;338:53;;;387:1;384;377:12;338:53;410:40;440:9;410:40;:::i;:::-;400:50;;469:49;514:2;503:9;499:18;469:49;:::i;:::-;459:59;;537:49;582:2;571:9;567:18;537:49;:::i;:::-;527:59;;605:49;650:2;639:9;635:18;605:49;:::i;:::-;595:59;;196:464;;;;;;;:::o;:::-;16315:7950:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_safeTokenTransfer_962": {
									"entryPoint": 4490,
									"id": 962,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_safeTransferFromToken_911": {
									"entryPoint": 5237,
									"id": 911,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@accTokenPerShare_825": {
									"entryPoint": null,
									"id": 825,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@add_378": {
									"entryPoint": 4478,
									"id": 378,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@boost_810": {
									"entryPoint": null,
									"id": 810,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@depositAll_1166": {
									"entryPoint": 2795,
									"id": 1166,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@deposit_1320": {
									"entryPoint": 3206,
									"id": 1320,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@derivedBalance_1149": {
									"entryPoint": 945,
									"id": 1149,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@div_423": {
									"entryPoint": 4432,
									"id": 423,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getReward_1039": {
									"entryPoint": 2332,
									"id": 1039,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@lastRewardBlock_827": {
									"entryPoint": null,
									"id": 827,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@min_38": {
									"entryPoint": 4444,
									"id": 38,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mul_408": {
									"entryPoint": 4420,
									"id": 408,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@notifyRewardAmount_1733": {
									"entryPoint": 1943,
									"id": 1733,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@pendingMax_1645": {
									"entryPoint": 2944,
									"id": 1645,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@pending_1664": {
									"entryPoint": 887,
									"id": 1664,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@rewardToken_812": {
									"entryPoint": null,
									"id": 812,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_735": {
									"entryPoint": 4650,
									"id": 735,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_689": {
									"entryPoint": 4954,
									"id": 689,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@stake_806": {
									"entryPoint": null,
									"id": 806,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@sub_393": {
									"entryPoint": 4466,
									"id": 393,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@tokenIds_821": {
									"entryPoint": null,
									"id": 821,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenPerBlock_823": {
									"entryPoint": null,
									"id": 823,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_829": {
									"entryPoint": null,
									"id": 829,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updatePool_1552": {
									"entryPoint": 3840,
									"id": 1552,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@userInfo_834": {
									"entryPoint": null,
									"id": 834,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@veToken_808": {
									"entryPoint": null,
									"id": 808,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawAll_1332": {
									"entryPoint": 918,
									"id": 1332,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawToken_1491": {
									"entryPoint": 3970,
									"id": 1491,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@withdraw_1363": {
									"entryPoint": 832,
									"id": 1363,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5424,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 5668,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5478,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 5858,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5453,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 5643,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 5522,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5799,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_44e1ac252b85693a6fa5f93daaff79f31ace63ae223bf96d2011a80ecd164649__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7d55ade5a47c34418054247bad18c9837700da1697152ff8d1c641ccc474c9e9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5721,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ed0b09a78e6ad75e5b35aa96c2e89689da2e1a3b0e3fcf7c3b1f4a7f00e87f29__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fbad808795e407b3997e34bfd6949d0e03d8e1b64d519d7675db0338f57f028e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 5609,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 5578,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5776,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5556,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 5403,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:7177:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "115:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "125:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "137:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "148:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "133:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "133:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "125:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "167:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "178:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "160:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "160:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "84:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "95:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "106:4:1",
														"type": ""
													}
												],
												"src": "14:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "241:86:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "305:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "314:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "317:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "307:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "307:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "307:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "264:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "275:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "290:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "295:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "286:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "286:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "299:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "282:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "282:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "271:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "271:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "261:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "261:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "254:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "254:50:1"
															},
															"nodeType": "YulIf",
															"src": "251:70:1"
														}
													]
												},
												"name": "validator_revert_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "230:5:1",
														"type": ""
													}
												],
												"src": "196:131:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "402:177:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "448:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "457:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "460:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "450:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "450:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "450:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "423:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "432:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "419:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "419:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "444:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "415:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "415:32:1"
															},
															"nodeType": "YulIf",
															"src": "412:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "473:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "499:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "486:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "486:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "477:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "543:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "518:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "518:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "518:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "558:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "568:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "558:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "368:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "379:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "391:6:1",
														"type": ""
													}
												],
												"src": "332:247:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "713:119:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "723:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "735:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "746:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "731:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "731:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "723:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "765:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "776:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "758:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "758:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "758:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "803:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "814:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "799:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "799:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "819:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "792:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "792:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "792:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "674:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "685:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "693:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "704:4:1",
														"type": ""
													}
												],
												"src": "584:248:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "907:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "953:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "962:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "965:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "955:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "955:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "955:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "949:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "920:32:1"
															},
															"nodeType": "YulIf",
															"src": "917:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "978:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1001:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "988:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "988:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "978:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "873:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "884:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "896:6:1",
														"type": ""
													}
												],
												"src": "837:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1123:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1133:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1145:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1156:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1141:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1141:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1133:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1175:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1190:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1206:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1211:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "1202:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1202:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1215:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "1198:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1198:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1186:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1186:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1168:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1168:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1168:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1092:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1103:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1114:4:1",
														"type": ""
													}
												],
												"src": "1022:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1317:228:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1363:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1372:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1375:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1365:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1365:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1365:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1338:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1347:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1334:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1334:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1359:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1330:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1330:32:1"
															},
															"nodeType": "YulIf",
															"src": "1327:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1388:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1414:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1401:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1401:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1392:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1458:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "1433:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1433:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1433:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1473:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1483:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1473:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1497:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1524:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1535:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1520:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1520:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1507:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1507:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1497:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1275:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1286:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1298:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1306:6:1",
														"type": ""
													}
												],
												"src": "1230:315:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1637:161:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1683:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1692:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1695:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1685:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1685:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1685:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1658:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1667:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1654:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1654:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1679:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1650:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1650:32:1"
															},
															"nodeType": "YulIf",
															"src": "1647:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1708:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1731:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1718:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1718:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1708:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1750:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1777:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1788:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1773:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1773:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1760:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1760:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1750:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1595:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1606:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1618:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1626:6:1",
														"type": ""
													}
												],
												"src": "1550:248:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1835:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1852:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1859:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1864:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1855:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1855:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1845:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1845:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1845:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1892:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1895:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1885:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1885:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1885:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1916:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1919:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1909:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1909:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1909:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1803:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1987:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2046:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "2048:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2048:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2048:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2018:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "2011:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2011:9:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "2004:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2004:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "2026:1:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2037:1:1",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "2033:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2033:6:1"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "2041:1:1"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "2029:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2029:14:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2023:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2023:21:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2000:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2000:45:1"
															},
															"nodeType": "YulIf",
															"src": "1997:71:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2077:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2092:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2095:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "2088:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2088:9:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "2077:7:1"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1966:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1969:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "1975:7:1",
														"type": ""
													}
												],
												"src": "1935:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2154:171:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2185:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2206:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2213:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2218:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "2209:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2209:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2199:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2199:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2199:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2250:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2253:4:1",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "2243:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2243:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2243:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2278:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2281:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2271:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2271:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2271:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2174:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2167:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2167:9:1"
															},
															"nodeType": "YulIf",
															"src": "2164:132:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2305:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "2314:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "2317:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "2310:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2310:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "2305:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "2139:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "2142:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "2148:1:1",
														"type": ""
													}
												],
												"src": "2108:217:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2411:103:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2457:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2466:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2469:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2459:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2459:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2459:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2432:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2441:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2428:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2428:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2453:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2424:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2424:32:1"
															},
															"nodeType": "YulIf",
															"src": "2421:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2482:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2498:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2492:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2492:16:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2482:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2377:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2388:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2400:6:1",
														"type": ""
													}
												],
												"src": "2330:184:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2600:170:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2646:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2655:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2658:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2648:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2648:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2648:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2621:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2630:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2617:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2617:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2642:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2613:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2613:32:1"
															},
															"nodeType": "YulIf",
															"src": "2610:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2671:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2690:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2684:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2684:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "2675:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2734:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nodeType": "YulIdentifier",
																	"src": "2709:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2709:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2709:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2749:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2759:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2749:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2566:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2577:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2589:6:1",
														"type": ""
													}
												],
												"src": "2519:251:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2904:145:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2914:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2926:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2937:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2922:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2922:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2914:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2956:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2967:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2949:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2949:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2949:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2994:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3005:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2990:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2990:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "3014:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3030:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3035:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "3026:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3026:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3039:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "3022:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3022:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3010:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3010:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2983:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2983:60:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2983:60:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2865:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2876:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2884:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2895:4:1",
														"type": ""
													}
												],
												"src": "2775:274:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3102:80:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3129:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "3131:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3131:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3131:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3118:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "3125:1:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "3121:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3121:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3115:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3115:13:1"
															},
															"nodeType": "YulIf",
															"src": "3112:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3160:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "3171:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "3174:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3167:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3167:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "3160:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "3085:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "3088:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "3094:3:1",
														"type": ""
													}
												],
												"src": "3054:128:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3361:160:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3378:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3389:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3371:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3371:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3371:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3412:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3423:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3408:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3408:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3428:2:1",
																		"type": "",
																		"value": "10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3401:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3401:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3401:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3451:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3462:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3447:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3447:18:1"
																	},
																	{
																		"hexValue": "6f6e6c7920626f6f7374",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3467:12:1",
																		"type": "",
																		"value": "only boost"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3440:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3440:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3440:40:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3489:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3501:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3512:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3497:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3497:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3489:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ed0b09a78e6ad75e5b35aa96c2e89689da2e1a3b0e3fcf7c3b1f4a7f00e87f29__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3338:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3352:4:1",
														"type": ""
													}
												],
												"src": "3187:334:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3700:157:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3717:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3728:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3710:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3710:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3710:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3751:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3762:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3747:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3747:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3767:1:1",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3740:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3740:29:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3740:29:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3789:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3800:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3785:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3785:18:1"
																	},
																	{
																		"hexValue": "6e6f207374616b65",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "3805:10:1",
																		"type": "",
																		"value": "no stake"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3778:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3778:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3778:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3825:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3837:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3848:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3833:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3833:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3825:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7d55ade5a47c34418054247bad18c9837700da1697152ff8d1c641ccc474c9e9__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3677:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3691:4:1",
														"type": ""
													}
												],
												"src": "3526:331:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4036:181:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4053:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4064:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4046:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4046:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4046:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4087:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4098:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4083:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4083:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4103:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4076:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4076:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4076:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4126:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4137:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4122:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4122:18:1"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4142:33:1",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4115:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4115:61:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4115:61:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4185:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4197:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4208:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4193:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4193:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4185:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4013:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4027:4:1",
														"type": ""
													}
												],
												"src": "3862:355:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4396:161:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4413:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4424:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4406:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4406:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4406:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4447:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4458:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4443:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4443:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4463:2:1",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4436:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4436:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4436:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4486:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4497:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4482:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4482:18:1"
																	},
																	{
																		"hexValue": "616d6f756e742069732030",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4502:13:1",
																		"type": "",
																		"value": "amount is 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4475:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4475:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4475:41:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4525:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4537:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4548:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4533:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4533:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4525:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fbad808795e407b3997e34bfd6949d0e03d8e1b64d519d7675db0338f57f028e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4373:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4387:4:1",
														"type": ""
													}
												],
												"src": "4222:335:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4736:172:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4753:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4764:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4746:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4746:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4746:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4787:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4798:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4783:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4783:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4803:2:1",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4776:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4776:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4776:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4826:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4837:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4822:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4822:18:1"
																	},
																	{
																		"hexValue": "7769746864726177537761703a206e6f7420676f6f64",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4842:24:1",
																		"type": "",
																		"value": "withdrawSwap: not good"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4815:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4815:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4815:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4876:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4888:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4899:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4884:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4884:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4876:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_44e1ac252b85693a6fa5f93daaff79f31ace63ae223bf96d2011a80ecd164649__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4713:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4727:4:1",
														"type": ""
													}
												],
												"src": "4562:346:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4962:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4984:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "4986:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4986:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4986:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "4978:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "4981:1:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "4975:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4975:8:1"
															},
															"nodeType": "YulIf",
															"src": "4972:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5015:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5027:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5030:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5023:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5023:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "5015:4:1"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "4944:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "4947:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "4953:4:1",
														"type": ""
													}
												],
												"src": "4913:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5200:218:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5210:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5222:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5233:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5218:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5218:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5210:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5245:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5263:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5268:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5259:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5259:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5272:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5255:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5255:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5249:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5290:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5305:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5313:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5301:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5301:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5283:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5283:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5283:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5337:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5348:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5333:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5333:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "5357:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5365:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5353:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5353:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5326:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5326:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5326:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5389:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5400:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5385:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5385:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5405:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5378:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5378:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5378:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5153:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5164:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5172:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5180:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5191:4:1",
														"type": ""
													}
												],
												"src": "5043:375:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5560:289:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5570:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5590:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5584:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5584:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "5574:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5606:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5615:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "5610:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5677:77:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "5702:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "5707:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5698:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5698:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value0",
																											"nodeType": "YulIdentifier",
																											"src": "5725:6:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "5733:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "5721:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "5721:14:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "5737:4:1",
																									"type": "",
																									"value": "0x20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "5717:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5717:25:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "5711:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5711:32:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5691:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5691:53:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5691:53:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5636:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5639:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5633:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5633:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5647:21:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5649:17:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "5658:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5661:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5654:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5654:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "5649:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5629:3:1",
																"statements": []
															},
															"src": "5625:129:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5780:31:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "pos",
																							"nodeType": "YulIdentifier",
																							"src": "5793:3:1"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "5798:6:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "5789:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5789:16:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5807:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5782:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5782:27:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5782:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "5769:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5772:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5766:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5766:13:1"
															},
															"nodeType": "YulIf",
															"src": "5763:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5820:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5831:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5836:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5827:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5827:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "5820:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5536:3:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5541:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "5552:3:1",
														"type": ""
													}
												],
												"src": "5423:426:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5932:199:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5978:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5987:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5990:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5980:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5980:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5980:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5953:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5962:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5949:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5949:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5974:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5945:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5945:32:1"
															},
															"nodeType": "YulIf",
															"src": "5942:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6003:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6022:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6016:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6016:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "6007:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6085:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6094:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6097:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6087:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6087:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6087:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6054:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "6075:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "6068:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6068:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "6061:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6061:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6051:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6051:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6044:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6044:40:1"
															},
															"nodeType": "YulIf",
															"src": "6041:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6110:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6120:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6110:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5898:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5909:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5921:6:1",
														"type": ""
													}
												],
												"src": "5854:277:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6310:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6327:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6338:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6320:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6320:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6320:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6361:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6372:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6357:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6357:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6377:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6350:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6350:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6350:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6400:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6411:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6396:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6396:18:1"
																	},
																	{
																		"hexValue": "5472616e7366657248656c7065723a205452414e534645525f46524f4d5f4641",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6416:34:1",
																		"type": "",
																		"value": "TransferHelper: TRANSFER_FROM_FA"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6389:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6389:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6389:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6471:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6482:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6467:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6467:18:1"
																	},
																	{
																		"hexValue": "494c4544",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6487:6:1",
																		"type": "",
																		"value": "ILED"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6460:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6460:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6460:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6503:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6515:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6526:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6511:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6511:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6503:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6287:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6301:4:1",
														"type": ""
													}
												],
												"src": "6136:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6670:145:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6680:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6692:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6703:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6688:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6688:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6680:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6722:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "6737:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6753:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6758:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "6749:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6749:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6762:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "6745:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6745:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6733:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6733:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6715:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6715:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6715:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6786:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6797:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6782:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6782:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "6802:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6775:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6775:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6775:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6631:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6642:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6650:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6661:4:1",
														"type": ""
													}
												],
												"src": "6541:274:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6994:181:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7011:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7022:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7004:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7004:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7004:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7045:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7056:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7041:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7041:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7061:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7034:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7034:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7034:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7084:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7095:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7080:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7080:18:1"
																	},
																	{
																		"hexValue": "5472616e7366657248656c7065723a205452414e534645525f4641494c4544",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7100:33:1",
																		"type": "",
																		"value": "TransferHelper: TRANSFER_FAILED"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7073:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7073:61:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7073:61:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7143:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7155:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7166:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7151:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7151:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7143:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6971:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6985:4:1",
														"type": ""
													}
												],
												"src": "6820:355:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_ed0b09a78e6ad75e5b35aa96c2e89689da2e1a3b0e3fcf7c3b1f4a7f00e87f29__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 10)\n        mstore(add(headStart, 64), \"only boost\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7d55ade5a47c34418054247bad18c9837700da1697152ff8d1c641ccc474c9e9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 8)\n        mstore(add(headStart, 64), \"no stake\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ReentrancyGuard: reentrant call\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fbad808795e407b3997e34bfd6949d0e03d8e1b64d519d7675db0338f57f028e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"amount is 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_44e1ac252b85693a6fa5f93daaff79f31ace63ae223bf96d2011a80ecd164649__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"withdrawSwap: not good\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        if gt(i, length) { mstore(add(pos, length), 0) }\n        end := add(pos, length)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"TransferHelper: TRANSFER_FROM_FA\")\n        mstore(add(headStart, 96), \"ILED\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"TransferHelper: TRANSFER_FAILED\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"806": [
									{
										"length": 32,
										"start": 430
									},
									{
										"length": 32,
										"start": 1017
									},
									{
										"length": 32,
										"start": 1703
									},
									{
										"length": 32,
										"start": 2051
									},
									{
										"length": 32,
										"start": 2820
									},
									{
										"length": 32,
										"start": 3410
									},
									{
										"length": 32,
										"start": 4209
									}
								],
								"808": [
									{
										"length": 32,
										"start": 493
									},
									{
										"length": 32,
										"start": 1199
									},
									{
										"length": 32,
										"start": 1527
									},
									{
										"length": 32,
										"start": 3525
									}
								],
								"810": [
									{
										"length": 32,
										"start": 596
									},
									{
										"length": 32,
										"start": 1065
									},
									{
										"length": 32,
										"start": 1376
									},
									{
										"length": 32,
										"start": 1655
									},
									{
										"length": 32,
										"start": 1954
									},
									{
										"length": 32,
										"start": 2401
									},
									{
										"length": 32,
										"start": 2685
									},
									{
										"length": 32,
										"start": 5360
									}
								],
								"812": [
									{
										"length": 32,
										"start": 747
									},
									{
										"length": 32,
										"start": 2499
									},
									{
										"length": 32,
										"start": 2553
									},
									{
										"length": 32,
										"start": 3359
									},
									{
										"length": 32,
										"start": 4130
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x137 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA66F42C0 GT PUSH2 0xB8 JUMPI DUP1 PUSH4 0xC73B399B GT PUSH2 0x7C JUMPI DUP1 PUSH4 0xC73B399B EQ PUSH2 0x2B8 JUMPI DUP1 PUSH4 0xE2BBB158 EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0xE3161DDD EQ PUSH2 0x2DE JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x2E6 JUMPI DUP1 PUSH4 0xFC97A303 EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0xFDB483C7 EQ PUSH2 0x32D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA66F42C0 EQ PUSH2 0x24F JUMPI DUP1 PUSH4 0xA9F8D181 EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0xB66503CF EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0xC00007B0 EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0xC6F678BD EQ PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4198709A GT PUSH2 0xFF JUMPI DUP1 PUSH4 0x4198709A EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x5EEBEA20 EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0x853828B6 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x892F4805 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0x8F662915 EQ PUSH2 0x246 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD EQ PUSH2 0x13C JUMPI DUP1 PUSH4 0x1959A002 EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x194 JUMPI DUP1 PUSH4 0x3A4B66F1 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x3B92EB23 EQ PUSH2 0x1E8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x145 PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH2 0x166 CALLDATASIZE PUSH1 0x4 PUSH2 0x1530 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x14F JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x154D JUMP JUMPDEST PUSH2 0x340 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D0 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14F JUMP JUMPDEST PUSH2 0x1D0 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x145 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x145 PUSH2 0x226 CALLDATASIZE PUSH1 0x4 PUSH2 0x1530 JUMP JUMPDEST PUSH2 0x377 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x396 JUMP JUMPDEST PUSH2 0x145 PUSH2 0x241 CALLDATASIZE PUSH1 0x4 PUSH2 0x1566 JUMP JUMPDEST PUSH2 0x3B1 JUMP JUMPDEST PUSH2 0x145 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1D0 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x145 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x28D CALLDATASIZE PUSH1 0x4 PUSH2 0x1566 JUMP JUMPDEST PUSH2 0x797 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x2A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1530 JUMP JUMPDEST PUSH2 0x91C JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x2B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x154D JUMP JUMPDEST PUSH2 0xAEB JUMP JUMPDEST PUSH2 0x145 PUSH2 0x2C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1530 JUMP JUMPDEST PUSH2 0xB80 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x2D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1592 JUMP JUMPDEST PUSH2 0xC86 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0xF00 JUMP JUMPDEST PUSH2 0x1D0 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x145 PUSH2 0x31B CALLDATASIZE PUSH1 0x4 PUSH2 0x1530 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1A7 PUSH2 0x33B CALLDATASIZE PUSH1 0x4 PUSH2 0x1592 JUMP JUMPDEST PUSH2 0xF82 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 EQ ISZERO PUSH2 0x369 JUMPI POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST PUSH2 0x373 DUP3 DUP3 PUSH2 0xF82 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x383 DUP4 PUSH2 0xB80 JUMP JUMPDEST SWAP1 POP PUSH2 0x38F DUP4 DUP3 PUSH2 0x3B1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x3AF SWAP1 PUSH2 0x340 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 PUSH1 0x64 PUSH2 0x3D8 DUP6 PUSH1 0x1E PUSH2 0x15CA JUMP JUMPDEST PUSH2 0x3E2 SWAP2 SWAP1 PUSH2 0x15E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x53E56423 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE SWAP2 SWAP3 POP PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0xA7CAC846 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x472 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x496 SWAP2 SWAP1 PUSH2 0x160B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4FE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x522 SWAP2 SWAP1 PUSH2 0x1624 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x542 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x779 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1E7A4E09 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x79E93824 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5AF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5D3 SWAP2 SWAP1 PUSH2 0x160B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x39F890B5 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xE7E242D4 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x63E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x662 SWAP2 SWAP1 PUSH2 0x160B JUMP JUMPDEST SWAP1 POP PUSH2 0x742 DUP3 PUSH2 0x73C DUP4 PUSH2 0x736 PUSH5 0xE8D4A51000 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD23254B4 DUP14 PUSH32 0x0 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F5 SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x712 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x736 SWAP2 SWAP1 PUSH2 0x160B JUMP JUMPDEST SWAP1 PUSH2 0x1144 JUMP JUMPDEST SWAP1 PUSH2 0x1150 JUMP JUMPDEST SWAP4 POP PUSH1 0x64 DUP4 DUP6 PUSH1 0x5 SLOAD PUSH2 0x755 SWAP2 SWAP1 PUSH2 0x15CA JUMP JUMPDEST PUSH2 0x75F SWAP2 SWAP1 PUSH2 0x15E9 JUMP JUMPDEST PUSH2 0x76A SWAP1 PUSH1 0x46 PUSH2 0x15CA JUMP JUMPDEST PUSH2 0x774 SWAP2 SWAP1 PUSH2 0x15E9 JUMP JUMPDEST SWAP4 POP POP POP JUMPDEST PUSH2 0x78C PUSH2 0x786 DUP4 DUP6 PUSH2 0x1641 JUMP JUMPDEST DUP8 PUSH2 0x115C JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x801 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x1BDB9B1E48189BDBDCDD PUSH1 0xB2 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x86E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x8 PUSH1 0x24 DUP3 ADD MSTORE PUSH8 0x6E6F207374616B65 PUSH1 0xC0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7F8 JUMP JUMPDEST PUSH1 0x4 SLOAD NUMBER GT PUSH2 0x87B JUMPI POP POP JUMP JUMPDEST PUSH1 0x2 DUP2 SWAP1 SSTORE PUSH1 0x5 SLOAD ISZERO PUSH2 0x8D8 JUMPI PUSH1 0x0 PUSH2 0x89F PUSH1 0x4 SLOAD NUMBER PUSH2 0x1172 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x8CF PUSH2 0x8C6 PUSH1 0x5 SLOAD PUSH2 0x73C PUSH5 0xE8D4A51000 PUSH2 0x736 DUP7 DUP9 PUSH2 0x1144 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP1 PUSH2 0x117E JUMP JUMPDEST PUSH1 0x3 SSTORE POP NUMBER PUSH1 0x4 SSTORE JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 CALLER SWAP1 PUSH32 0xF70D5C697DE7EA828DF48E5C4573CB2194C659F1901F70110C52B066DCF50826 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x93F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F8 SWAP1 PUSH2 0x1659 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x983 JUMPI POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ JUMPDEST PUSH2 0x98C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x994 PUSH2 0xF00 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x9B6 DUP4 PUSH2 0xB80 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xA4A JUMPI PUSH2 0x9E9 PUSH32 0x0 DUP5 DUP4 PUSH2 0x118A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 CALLER SWAP1 PUSH32 0x9AA05B3D70A9E3E2F004F039648839560576334FB45C81F91B6DB03AD9E2EFC9 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST PUSH1 0x3 SLOAD DUP3 SLOAD PUSH2 0xA63 SWAP2 PUSH5 0xE8D4A51000 SWAP2 PUSH2 0x73C SWAP2 PUSH2 0x1144 JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x40 MLOAD PUSH4 0x63453AE1 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x63453AE1 SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAC9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xADD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x1 PUSH1 0x0 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH2 0xB7D SWAP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB53 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB77 SWAP2 SWAP1 PUSH2 0x160B JUMP JUMPDEST DUP3 PUSH2 0xC86 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x3 SLOAD DUP2 SLOAD ISZERO PUSH2 0xC7C JUMPI PUSH1 0x4 SLOAD NUMBER GT ISZERO PUSH2 0xC40 JUMPI PUSH1 0x0 PUSH2 0xBC3 PUSH1 0x4 SLOAD NUMBER PUSH2 0x1172 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xBDC DUP3 PUSH1 0x2 SLOAD PUSH2 0x1144 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xC06 PUSH2 0xBFF PUSH1 0x5 SLOAD PUSH2 0x73C PUSH5 0xE8D4A51000 DUP6 PUSH2 0x1144 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP5 SWAP1 PUSH2 0x117E JUMP JUMPDEST SWAP3 POP PUSH2 0xC36 DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0xC30 PUSH5 0xE8D4A51000 PUSH2 0x73C DUP8 DUP10 PUSH1 0x0 ADD SLOAD PUSH2 0x1144 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0x1172 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 SLOAD NUMBER EQ ISZERO PUSH2 0xC7C JUMPI PUSH2 0xC74 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0xC30 PUSH5 0xE8D4A51000 PUSH2 0x73C PUSH1 0x3 SLOAD DUP8 PUSH1 0x0 ADD SLOAD PUSH2 0x1144 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xCA9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F8 SWAP1 PUSH2 0x1659 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SSTORE DUP2 PUSH2 0xCE9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x616D6F756E74206973203 PUSH1 0xAC SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7F8 JUMP JUMPDEST PUSH2 0xCF1 PUSH2 0xF00 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD ISZERO PUSH2 0xD47 JUMPI PUSH1 0x0 PUSH2 0xD12 CALLER PUSH2 0xB80 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0xD45 JUMPI PUSH2 0xD45 PUSH32 0x0 CALLER DUP4 PUSH2 0x118A JUMP JUMPDEST POP JUMPDEST DUP3 ISZERO PUSH2 0xD9F JUMPI PUSH2 0xD79 PUSH32 0x0 CALLER ADDRESS DUP7 PUSH2 0x122A JUMP JUMPDEST DUP3 PUSH1 0x5 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD8B SWAP2 SWAP1 PUSH2 0x1641 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP1 SLOAD PUSH2 0xD9C SWAP1 DUP5 PUSH2 0x117E JUMP JUMPDEST DUP2 SSTORE JUMPDEST DUP2 ISZERO PUSH2 0xE8A JUMPI PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE CALLER SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE0C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE30 SWAP2 SWAP1 PUSH2 0x1624 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xE43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xE6A JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP3 SWAP1 SSTORE JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP3 EQ PUSH2 0xE85 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE9D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 POP JUMPDEST PUSH1 0x3 SLOAD DUP2 SLOAD PUSH2 0xEB6 SWAP2 PUSH5 0xE8D4A51000 SWAP2 PUSH2 0x73C SWAP2 PUSH2 0x1144 JUMP JUMPDEST PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 DUP1 MLOAD DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE CALLER SWAP2 PUSH32 0x90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 PUSH1 0x0 SSTORE POP JUMP JUMPDEST PUSH1 0x4 SLOAD NUMBER GT PUSH2 0xF0B JUMPI JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH2 0xF18 JUMPI NUMBER PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD GT PUSH2 0xF24 JUMPI JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF3B PUSH1 0x4 SLOAD NUMBER PUSH2 0x1172 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xF54 DUP3 PUSH1 0x2 SLOAD PUSH2 0x1144 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0xF77 PUSH2 0x8C6 PUSH1 0x5 SLOAD PUSH2 0x73C PUSH5 0xE8D4A51000 DUP6 PUSH2 0x1144 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x3 SSTORE POP POP NUMBER PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xFA5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F8 SWAP1 PUSH2 0x1659 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 DUP2 SSTORE CALLER DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP4 GT ISZERO PUSH2 0x1002 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x1DDA5D1A191C985DD4DDD85C0E881B9BDD0819DBDBD9 PUSH1 0x52 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7F8 JUMP JUMPDEST PUSH2 0x100A PUSH2 0xF00 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1015 CALLER PUSH2 0xB80 JUMP JUMPDEST SWAP1 POP DUP1 ISZERO PUSH2 0x1048 JUMPI PUSH2 0x1048 PUSH32 0x0 CALLER DUP4 PUSH2 0x118A JUMP JUMPDEST DUP4 ISZERO PUSH2 0x1097 JUMPI DUP2 SLOAD PUSH2 0x105A SWAP1 DUP6 PUSH2 0x1172 JUMP JUMPDEST DUP3 SSTORE PUSH1 0x5 SLOAD PUSH2 0x1069 SWAP1 DUP6 PUSH2 0x1172 JUMP JUMPDEST PUSH1 0x5 SSTORE PUSH2 0x1097 PUSH32 0x0 CALLER DUP7 PUSH2 0x135A JUMP JUMPDEST PUSH1 0x3 SLOAD DUP3 SLOAD PUSH2 0x10B0 SWAP2 PUSH5 0xE8D4A51000 SWAP2 PUSH2 0x73C SWAP2 PUSH2 0x1144 JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SSTORE DUP3 ISZERO PUSH2 0x10EB JUMPI CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP4 EQ PUSH2 0x10D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH2 0x10FE JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP3 POP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE CALLER SWAP2 PUSH32 0xF279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH1 0x1 PUSH1 0x0 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38F DUP3 DUP5 PUSH2 0x15CA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38F DUP3 DUP5 PUSH2 0x15E9 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP4 LT PUSH2 0x116B JUMPI DUP2 PUSH2 0x38F JUMP JUMPDEST POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38F DUP3 DUP5 PUSH2 0x1690 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38F DUP3 DUP5 PUSH2 0x1641 JUMP JUMPDEST PUSH2 0x1194 DUP4 DUP3 PUSH2 0x1475 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11DB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11FF SWAP2 SWAP1 PUSH2 0x160B JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x120D JUMPI DUP1 SWAP2 POP JUMPDEST PUSH2 0x1217 DUP4 DUP4 PUSH2 0x3B1 JUMP JUMPDEST SWAP2 POP PUSH2 0x1224 DUP5 DUP5 DUP5 PUSH2 0x135A JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 DUP2 AND PUSH1 0x44 DUP4 ADD MSTORE PUSH1 0x64 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP9 AND SWAP2 PUSH2 0x128E SWAP2 SWAP1 PUSH2 0x16A7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x12CB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12D0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x12FA JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x12FA JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x12FA SWAP2 SWAP1 PUSH2 0x16E2 JUMP JUMPDEST PUSH2 0x1352 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A205452414E534645525F46524F4D5F4641 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x12531151 PUSH1 0xE2 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x7F8 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE PUSH1 0x44 DUP1 DUP4 ADD DUP6 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP3 ADD DUP4 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE SWAP2 MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 SWAP1 DUP8 AND SWAP2 PUSH2 0x13B6 SWAP2 SWAP1 PUSH2 0x16A7 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x13F3 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x13F8 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1422 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x1422 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1422 SWAP2 SWAP1 PUSH2 0x16E2 JUMP JUMPDEST PUSH2 0x146E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657248656C7065723A205452414E534645525F4641494C454400 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7F8 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14BC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x14E0 SWAP2 SWAP1 PUSH2 0x160B JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1516 JUMPI PUSH2 0x1516 DUP4 PUSH32 0x0 ADDRESS DUP6 PUSH2 0x122A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1542 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x38F DUP2 PUSH2 0x151B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x155F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1579 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1584 DUP2 PUSH2 0x151B JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x15E4 JUMPI PUSH2 0x15E4 PUSH2 0x15B4 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1606 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x161D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1636 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x38F DUP2 PUSH2 0x151B JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1654 JUMPI PUSH2 0x1654 PUSH2 0x15B4 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1F SWAP1 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x16A2 JUMPI PUSH2 0x16A2 PUSH2 0x15B4 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x16C8 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x16AE JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x16D7 JUMPI PUSH1 0x0 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x38F JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB3 DUP15 0xC9 DUP14 DUP2 0xCB STATICCALL 0x29 0x25 SWAP2 SLOAD 0xB4 SLT REVERT PUSH19 0xFD8BFD59145D6EAB4CD0A156048453AA626473 PUSH16 0x6C634300080A00330000000000000000 ",
							"sourceMap": "16315:7950:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17416:23;;;;;;;;;160:25:1;;;148:2;133:18;17416:23:0;;;;;;;;17446:44;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;758:25:1;;;814:2;799:18;;792:34;;;;731:18;17446:44:0;584:248:1;21031:218:0;;;;;;:::i;:::-;;:::i;:::-;;16869:30;;;;;;;;-1:-1:-1;;;;;1186:32:1;;;1168:51;;1156:2;1141:18;16869:30:0;1022:203:1;16957:32:0;;;;;17201:28;;;;;;23544:158;;;;;;:::i;:::-;;:::i;20939:86::-;;;:::i;19017:710::-;;;;;;:::i;:::-;;:::i;17235:31::-;;;;;;17027:30;;;;;17321;;;;;;23709:553;;;;;;:::i;:::-;;:::i;18454:557::-;;;;;;:::i;:::-;;:::i;19734:113::-;;;;;;:::i;:::-;;:::i;22771:767::-;;;;;;:::i;:::-;;:::i;19853:1080::-;;;;;;:::i;:::-;;:::i;22179:525::-;;;:::i;17063:36::-;;;;;17154:40;;;;;;:::i;:::-;;;;;;;;;;;;;;21255:918;;;;;;:::i;:::-;;:::i;21031:218::-;21128:10;21079:12;21119:20;;;:8;:20;;;;;:27;21109:37;;21105:98;;;-1:-1:-1;21181:10:0;21172:20;;;;:8;:20;;;;;;21105:98;21212:30;21226:6;21234:7;21212:13;:30::i;:::-;21069:180;21031:218;:::o;23544:158::-;23597:7;23615:14;23632:17;23643:5;23632:10;:17::i;:::-;23615:34;;23666:29;23681:5;23688:6;23666:14;:29::i;:::-;23659:36;23544:158;-1:-1:-1;;;23544:158:0:o;20939:86::-;20999:10;20990:20;;;;:8;:20;;;;;:27;20981:37;;:8;:37::i;:::-;20939:86::o;19017:710::-;-1:-1:-1;;;;;19126:17:0;;19094:4;19126:17;;;:8;:17;;;;;;19094:4;19185:3;19169:13;:8;19180:2;19169:13;:::i;:::-;:19;;;;:::i;:::-;19241:28;;-1:-1:-1;;;19241:28:0;;-1:-1:-1;;;;;19263:5:0;1186:32:1;;19241:28:0;;;1168:51:1;19153:35:0;;-1:-1:-1;;;;;19248:5:0;19241:21;;;;;;1141:18:1;;19241:28:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19294:35;;-1:-1:-1;;;19294:35:0;;;;;160:25:1;;;19226:43:0;;-1:-1:-1;19303:7:0;-1:-1:-1;;;;;19294:25:0;;;;133:18:1;;19294:35:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;19283:46:0;:7;-1:-1:-1;;;;;19283:46:0;;:61;;;;;19343:1;19333:7;:11;19283:61;19279:383;;;19378:35;;-1:-1:-1;;;19378:35:0;;;;;160:25:1;;;19360:15:0;;19385:5;-1:-1:-1;;;;;19378:25:0;;;;133:18:1;;19378:35:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19440:40;;-1:-1:-1;;;19440:40:0;;;;;160:25:1;;;19360:53:0;;-1:-1:-1;19427:10:0;;-1:-1:-1;;;;;19449:7:0;19440:30;;;;133:18:1;;19440:40:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19427:53;;19506:73;19568:10;19506:57;19557:5;19506:46;19547:4;19513:5;-1:-1:-1;;;;;19506:19:0;;19526:8;19536:5;19506:36;;;;;;;;;;;;;;;2949:25:1;;;-1:-1:-1;;;;;3010:32:1;3005:2;2990:18;;2983:60;2937:2;2922:18;;2775:274;19506:36:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:40;;:46::i;:57::-;:61;;:73::i;:::-;19494:85;;19648:3;19632:7;19620:9;19606:11;;:23;;;;:::i;:::-;:33;;;;:::i;:::-;19605:40;;19643:2;19605:40;:::i;:::-;:46;;;;:::i;:::-;19593:58;;19346:316;;19279:383;19678:42;19688:20;19699:9;19688:8;:20;:::i;:::-;19711:8;19678;:42::i;:::-;19671:49;19017:710;-1:-1:-1;;;;;;;19017:710:0:o;23709:553::-;17738:10;-1:-1:-1;;;;;17752:5:0;17738:19;;17730:42;;;;-1:-1:-1;;;17730:42:0;;3389:2:1;17730:42:0;;;3371:21:1;3428:2;3408:18;;;3401:30;-1:-1:-1;;;3447:18:1;;;3440:40;3497:18;;17730:42:0;;;;;;;;;23816:5:::1;-1:-1:-1::0;;;;;23807:14:0::1;:5;-1:-1:-1::0;;;;;23807:14:0::1;;;23799:35;;;::::0;-1:-1:-1;;;23799:35:0;;3728:2:1;23799:35:0::1;::::0;::::1;3710:21:1::0;3767:1;3747:18;;;3740:29;-1:-1:-1;;;3785:18:1;;;3778:38;3833:18;;23799:35:0::1;3526:331:1::0;23799:35:0::1;23864:15;;23848:12;:31;23844:68;;21069:180:::0;21031:218;:::o;23844:68::-:1;23921:13;:27:::0;;;23962:11:::1;::::0;:15;23958:239:::1;;23993:11;24007:33;24024:15;;24007:12;:16;;:33;;;;:::i;:::-;23993:47;;24073:69;24094:47;24129:11;;24094:30;24119:4;24094:20;24110:3;24094:11;:15;;:20;;;;:::i;:47::-;24073:16;::::0;;:20:::1;:69::i;:::-;24054:16;:88:::0;-1:-1:-1;24174:12:0::1;24156:15;:30:::0;23958:239:::1;24211:44;::::0;160:25:1;;;-1:-1:-1;;;;;24211:44:0;::::1;::::0;24224:10:::1;::::0;24211:44:::1;::::0;148:2:1;133:18;24211:44:0::1;;;;;;;23709:553:::0;;:::o;18454:557::-;3133:1;3714:7;;:19;;3706:63;;;;-1:-1:-1;;;3706:63:0;;;;;;;:::i;:::-;3133:1;3844:7;:18;18530:10:::1;-1:-1:-1::0;;;;;18530:21:0;::::1;;::::0;:44:::1;;-1:-1:-1::0;18555:10:0::1;-1:-1:-1::0;;;;;18569:5:0::1;18555:19;;18530:44;18522:53;;;::::0;::::1;;18585:12;:10;:12::i;:::-;-1:-1:-1::0;;;;;18631:17:0;::::1;18607:21;18631:17:::0;;;:8:::1;:17;::::0;;;;;18682:19:::1;18640:7:::0;18682:10:::1;:19::i;:::-;18658:43:::0;-1:-1:-1;18715:17:0;;18711:174:::1;;18748:55;18767:11;18780:7;18789:13;18748:18;:55::i;:::-;18822:52;::::0;160:25:1;;;-1:-1:-1;;;;;18847:11:0::1;18822:52;::::0;18835:10:::1;::::0;18822:52:::1;::::0;148:2:1;133:18;18822:52:0::1;;;;;;;18711:174;18928:16;::::0;18912:11;;:43:::1;::::0;18950:4:::1;::::0;18912:33:::1;::::0;:15:::1;:33::i;:43::-;18894:15;::::0;::::1;:61:::0;18965:39:::1;::::0;-1:-1:-1;;;18965:39:0;;18998:4:::1;18965:39;::::0;::::1;1168:51:1::0;18972:5:0::1;-1:-1:-1::0;;;;;18965:24:0::1;::::0;::::1;::::0;1141:18:1;;18965:39:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;3090:1:0;4017:7;:22;-1:-1:-1;;;;;18454:557:0:o;19734:113::-;19795:35;;-1:-1:-1;;;19795:35:0;;19819:10;19795:35;;;1168:51:1;19787:53:0;;19802:5;-1:-1:-1;;;;;19795:23:0;;;;1141:18:1;;19795:35:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19832:7;19787;:53::i;:::-;19734:113;:::o;22771:767::-;-1:-1:-1;;;;;22869:15:0;;22827:7;22869:15;;;:8;:15;;;;;22922:16;;22952:11;;:15;22948:566;;23002:15;;22987:12;:30;22983:367;;;23037:11;23051:33;23068:15;;23051:12;:16;;:33;;;;:::i;:::-;23037:47;;23102:19;23124:22;23142:3;23124:13;;:17;;:22;;;;:::i;:::-;23102:44;;23184:61;23206:38;23232:11;;23206:21;23222:4;23206:11;:15;;:21;;;;:::i;:38::-;23184:17;;:21;:61::i;:::-;23164:81;;23270:65;23319:4;:15;;;23270:44;23309:4;23270:34;23286:17;23270:4;:11;;;:15;;:34;;;;:::i;:44::-;:48;;:65::i;:::-;23263:72;22771:767;-1:-1:-1;;;;;;22771:767:0:o;22983:367::-;23383:15;;23367:12;:31;23363:141;;;23425:64;23473:4;:15;;;23425:43;23463:4;23425:33;23441:16;;23425:4;:11;;;:15;;:33;;;;:::i;:64::-;23418:71;22771:767;-1:-1:-1;;;;22771:767:0:o;23363:141::-;-1:-1:-1;23530:1:0;;22771:767;-1:-1:-1;;;22771:767:0:o;19853:1080::-;3133:1;3714:7;;:19;;3706:63;;;;-1:-1:-1;;;3706:63:0;;;;;;;:::i;:::-;3133:1;3844:7;:18;19935:10;19927:34:::1;;;::::0;-1:-1:-1;;;19927:34:0;;4424:2:1;19927:34:0::1;::::0;::::1;4406:21:1::0;4463:2;4443:18;;;4436:30;-1:-1:-1;;;4482:18:1;;;4475:41;4533:18;;19927:34:0::1;4222:335:1::0;19927:34:0::1;19971:12;:10;:12::i;:::-;20026:10;19993:21;20017:20:::0;;;:8:::1;:20;::::0;;;;20051:11;;:15;20047:219:::1;;20082:21;20106:22;20117:10;20106;:22::i;:::-;20082:46:::0;-1:-1:-1;20146:17:0;;20142:114:::1;;20183:58;20202:11;20215:10;20227:13;20183:18;:58::i;:::-;20068:198;20047:219;20279:10:::0;;20275:200:::1;;20305:73;20337:5;20344:10;20364:4;20371:6;20305:31;:73::i;:::-;20407:6;20392:11;;:21;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;20441:11:0;;:23:::1;::::0;20457:6;20441:15:::1;:23::i;:::-;20427:37:::0;;20275:200:::1;20488:11:::0;;20484:321:::1;;20523:34;::::0;-1:-1:-1;;;20523:34:0;;::::1;::::0;::::1;160:25:1::0;;;20561:10:0::1;::::0;-1:-1:-1;;;;;20532:7:0::1;20523:25;::::0;::::1;::::0;133:18:1;;20523:34:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;20523:48:0::1;;20515:57;;;::::0;::::1;;20599:10;20590:20;::::0;;;:8:::1;:20;::::0;;;;;20586:94:::1;;20644:10;20635:20;::::0;;;:8:::1;:20;::::0;;;;:30;;;20586:94:::1;20710:10;20701:20;::::0;;;:8:::1;:20;::::0;;;;;:31;::::1;20693:40;;;::::0;::::1;;20484:321;;;20783:10;20774:20;::::0;;;:8:::1;:20;::::0;;;;;;-1:-1:-1;20484:321:0::1;20848:16;::::0;20832:11;;:43:::1;::::0;20870:4:::1;::::0;20832:33:::1;::::0;:15:::1;:33::i;:43::-;20814:15;::::0;::::1;:61:::0;20890:36:::1;::::0;;758:25:1;;;814:2;799:18;;792:34;;;20898:10:0::1;::::0;20890:36:::1;::::0;731:18:1;20890:36:0::1;;;;;;;-1:-1:-1::0;;3090:1:0;4017:7;:22;-1:-1:-1;19853:1080:0:o;22179:525::-;22238:15;;22222:12;:31;22218:68;;22179:525::o;22218:68::-;22300:11;;22296:97;;22350:12;22332:15;:30;22179:525::o;22296:97::-;22423:1;22406:13;;:18;22402:55;;22179:525::o;22402:55::-;22466:11;22480:33;22497:15;;22480:12;:16;;:33;;;;:::i;:::-;22466:47;;22523:19;22545:22;22563:3;22545:13;;:17;;:22;;;;:::i;:::-;22523:44;;22597:60;22618:38;22644:11;;22618:21;22634:4;22618:11;:15;;:21;;;;:::i;22597:60::-;22578:16;:79;-1:-1:-1;;22685:12:0;22667:15;:30;22179:525::o;21255:918::-;3133:1;3714:7;;:19;;3706:63;;;;-1:-1:-1;;;3706:63:0;;;;;;;:::i;:::-;3133:1;3844:7;:18;;;21369:10:::1;21360:20:::0;;:8:::1;:20;::::0;;;;21398:11;;:22;-1:-1:-1;21398:22:0::1;21390:57;;;::::0;-1:-1:-1;;;21390:57:0;;4764:2:1;21390:57:0::1;::::0;::::1;4746:21:1::0;4803:2;4783:18;;;4776:30;-1:-1:-1;;;4822:18:1;;;4815:52;4884:18;;21390:57:0::1;4562:346:1::0;21390:57:0::1;21457:12;:10;:12::i;:::-;21479:21;21503:22;21514:10;21503;:22::i;:::-;21479:46:::0;-1:-1:-1;21539:17:0;;21535:106:::1;;21572:58;21591:11;21604:10;21616:13;21572:18;:58::i;:::-;21654:11:::0;;21650:201:::1;;21695:11:::0;;:24:::1;::::0;21711:7;21695:15:::1;:24::i;:::-;21681:38:::0;;21747:11:::1;::::0;:24:::1;::::0;21763:7;21747:15:::1;:24::i;:::-;21733:11;:38:::0;21785:55:::1;21813:5;21820:10;21832:7:::0;21785:27:::1;:55::i;:::-;21895:16;::::0;21879:11;;:43:::1;::::0;21917:4:::1;::::0;21879:33:::1;::::0;:15:::1;:33::i;:43::-;21861:15;::::0;::::1;:61:::0;21937:11;;21933:181:::1;;21992:10;21983:20;::::0;;;:8:::1;:20;::::0;;;;;21972:31;::::1;21964:40;;;::::0;::::1;;22027:10;22041:1;22018:20:::0;;;:8:::1;:20;::::0;;;;:24;21933:181:::1;;;22092:10;22083:20;::::0;;;:8:::1;:20;::::0;;;;;;-1:-1:-1;21933:181:0::1;22128:38;::::0;;758:25:1;;;814:2;799:18;;792:34;;;22137:10:0::1;::::0;22128:38:::1;::::0;731:18:1;22128:38:0::1;;;;;;;-1:-1:-1::0;;3090:1:0;4017:7;:22;-1:-1:-1;;21255:918:0:o;10336:96::-;10394:7;10420:5;10424:1;10420;:5;:::i;10721:96::-;10779:7;10805:5;10809:1;10805;:5;:::i;583:104::-;641:7;671:1;667;:5;:13;;679:1;667:13;;;-1:-1:-1;675:1:0;;583:104;-1:-1:-1;583:104:0:o;9993:96::-;10051:7;10077:5;10081:1;10077;:5;:::i;9626:96::-;9684:7;9710:5;9714:1;9710;:5;:::i;18065:383::-;18161:38;18184:5;18191:7;18161:22;:38::i;:::-;18223;;-1:-1:-1;;;18223:38:0;;18255:4;18223:38;;;1168:51:1;18209:11:0;;-1:-1:-1;;;;;18223:23:0;;;;;1141:18:1;;18223:38:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18209:52;;18285:3;18275:7;:13;18271:57;;;18314:3;18304:13;;18271:57;18347:32;18362:7;18371;18347:14;:32::i;:::-;18337:42;;18389:52;18417:5;18424:7;18433;18389:27;:52::i;:::-;18151:297;18065:383;;;:::o;15552:398::-;15775:51;;;-1:-1:-1;;;;;5301:15:1;;;15775:51:0;;;5283:34:1;5353:15;;;5333:18;;;5326:43;5385:18;;;;5378:34;;;15775:51:0;;;;;;;;;;5218:18:1;;;;15775:51:0;;;;;;;-1:-1:-1;;;;;15775:51:0;-1:-1:-1;;;15775:51:0;;;15764:63;;-1:-1:-1;;;;15764:10:0;;;;:63;;15775:51;15764:63;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15728:99;;;;15845:7;:57;;;;-1:-1:-1;15857:11:0;;:16;;:44;;;15888:4;15877:24;;;;;;;;;;;;:::i;:::-;15837:106;;;;-1:-1:-1;;;15837:106:0;;6338:2:1;15837:106:0;;;6320:21:1;6377:2;6357:18;;;6350:30;6416:34;6396:18;;;6389:62;-1:-1:-1;;;6467:18:1;;;6460:34;6511:19;;15837:106:0;6136:400:1;15837:106:0;15640:310;;15552:398;;;;:::o;15189:357::-;15382:45;;;-1:-1:-1;;;;;6733:32:1;;;15382:45:0;;;6715:51:1;6782:18;;;;6775:34;;;15382:45:0;;;;;;;;;;6688:18:1;;;;15382:45:0;;;;;;;-1:-1:-1;;;;;15382:45:0;-1:-1:-1;;;15382:45:0;;;15371:57;;-1:-1:-1;;;;15371:10:0;;;;:57;;15382:45;15371:57;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15335:93;;;;15446:7;:57;;;;-1:-1:-1;15458:11:0;;:16;;:44;;;15489:4;15478:24;;;;;;;;;;;;:::i;:::-;15438:101;;;;-1:-1:-1;;;15438:101:0;;7022:2:1;15438:101:0;;;7004:21:1;7061:2;7041:18;;;7034:30;7100:33;7080:18;;;7073:61;7151:18;;15438:101:0;6820:355:1;15438:101:0;15259:287;;15189:357;;;:::o;17796:263::-;17892:38;;-1:-1:-1;;;17892:38:0;;17924:4;17892:38;;;1168:51:1;17878:11:0;;-1:-1:-1;;;;;17892:23:0;;;;;1141:18:1;;17892:38:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17878:52;;17950:7;17944:3;:13;17940:113;;;17973:69;18005:5;18012;18027:4;18034:7;17973:31;:69::i;:::-;17868:191;17796:263;;:::o;196:131:1:-;-1:-1:-1;;;;;271:31:1;;261:42;;251:70;;317:1;314;307:12;332:247;391:6;444:2;432:9;423:7;419:23;415:32;412:52;;;460:1;457;450:12;412:52;499:9;486:23;518:31;543:5;518:31;:::i;837:180::-;896:6;949:2;937:9;928:7;924:23;920:32;917:52;;;965:1;962;955:12;917:52;-1:-1:-1;988:23:1;;837:180;-1:-1:-1;837:180:1:o;1230:315::-;1298:6;1306;1359:2;1347:9;1338:7;1334:23;1330:32;1327:52;;;1375:1;1372;1365:12;1327:52;1414:9;1401:23;1433:31;1458:5;1433:31;:::i;:::-;1483:5;1535:2;1520:18;;;;1507:32;;-1:-1:-1;;;1230:315:1:o;1550:248::-;1618:6;1626;1679:2;1667:9;1658:7;1654:23;1650:32;1647:52;;;1695:1;1692;1685:12;1647:52;-1:-1:-1;;1718:23:1;;;1788:2;1773:18;;;1760:32;;-1:-1:-1;1550:248:1:o;1803:127::-;1864:10;1859:3;1855:20;1852:1;1845:31;1895:4;1892:1;1885:15;1919:4;1916:1;1909:15;1935:168;1975:7;2041:1;2037;2033:6;2029:14;2026:1;2023:21;2018:1;2011:9;2004:17;2000:45;1997:71;;;2048:18;;:::i;:::-;-1:-1:-1;2088:9:1;;1935:168::o;2108:217::-;2148:1;2174;2164:132;;2218:10;2213:3;2209:20;2206:1;2199:31;2253:4;2250:1;2243:15;2281:4;2278:1;2271:15;2164:132;-1:-1:-1;2310:9:1;;2108:217::o;2330:184::-;2400:6;2453:2;2441:9;2432:7;2428:23;2424:32;2421:52;;;2469:1;2466;2459:12;2421:52;-1:-1:-1;2492:16:1;;2330:184;-1:-1:-1;2330:184:1:o;2519:251::-;2589:6;2642:2;2630:9;2621:7;2617:23;2613:32;2610:52;;;2658:1;2655;2648:12;2610:52;2690:9;2684:16;2709:31;2734:5;2709:31;:::i;3054:128::-;3094:3;3125:1;3121:6;3118:1;3115:13;3112:39;;;3131:18;;:::i;:::-;-1:-1:-1;3167:9:1;;3054:128::o;3862:355::-;4064:2;4046:21;;;4103:2;4083:18;;;4076:30;4142:33;4137:2;4122:18;;4115:61;4208:2;4193:18;;3862:355::o;4913:125::-;4953:4;4981:1;4978;4975:8;4972:34;;;4986:18;;:::i;:::-;-1:-1:-1;5023:9:1;;4913:125::o;5423:426::-;5552:3;5590:6;5584:13;5615:1;5625:129;5639:6;5636:1;5633:13;5625:129;;;5737:4;5721:14;;;5717:25;;5711:32;5698:11;;;5691:53;5654:12;5625:129;;;5772:6;5769:1;5766:13;5763:48;;;5807:1;5798:6;5793:3;5789:16;5782:27;5763:48;-1:-1:-1;5827:16:1;;;;;5423:426;-1:-1:-1;;5423:426:1:o;5854:277::-;5921:6;5974:2;5962:9;5953:7;5949:23;5945:32;5942:52;;;5990:1;5987;5980:12;5942:52;6022:9;6016:16;6075:5;6068:13;6061:21;6054:5;6051:32;6041:60;;6097:1;6094;6087:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1189200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"accTokenPerShare()": "2395",
								"boost()": "infinite",
								"deposit(uint256,uint256)": "infinite",
								"depositAll(uint256)": "infinite",
								"derivedBalance(address,uint256)": "infinite",
								"getReward(address)": "infinite",
								"lastRewardBlock()": "2329",
								"notifyRewardAmount(address,uint256)": "infinite",
								"pending(address)": "infinite",
								"pendingMax(address)": "infinite",
								"rewardToken()": "infinite",
								"stake()": "infinite",
								"tokenIds(address)": "2612",
								"tokenPerBlock()": "2307",
								"totalSupply()": "2308",
								"updatePool()": "infinite",
								"userInfo(address)": "4698",
								"veToken()": "infinite",
								"withdraw(uint256)": "infinite",
								"withdrawAll()": "infinite",
								"withdrawToken(uint256,uint256)": "infinite"
							},
							"internal": {
								"_safeTokenTransfer(address,address,uint256)": "infinite",
								"_safeTransferFromToken(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 16315,
									"end": 24265,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 16315,
									"end": 24265,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 16315,
									"end": 24265,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17497,
									"end": 17692,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 17497,
									"end": 17692,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17497,
									"end": 17692,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 17497,
									"end": 17692,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 17497,
									"end": 17692,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17497,
									"end": 17692,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17497,
									"end": 17692,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17497,
									"end": 17692,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 17497,
									"end": 17692,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 17497,
									"end": 17692,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17497,
									"end": 17692,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17497,
									"end": 17692,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17497,
									"end": 17692,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17497,
									"end": 17692,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 17497,
									"end": 17692,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 17497,
									"end": 17692,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17497,
									"end": 17692,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17497,
									"end": 17692,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 17497,
									"end": 17692,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17497,
									"end": 17692,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 17497,
									"end": 17692,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17497,
									"end": 17692,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17497,
									"end": 17692,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17497,
									"end": 17692,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17497,
									"end": 17692,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17497,
									"end": 17692,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17497,
									"end": 17692,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 17497,
									"end": 17692,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17497,
									"end": 17692,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 17497,
									"end": 17692,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 17497,
									"end": 17692,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 17497,
									"end": 17692,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3090,
									"end": 3091,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3195,
									"end": 3202,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3195,
									"end": 3217,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 17587,
									"end": 17601,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 17587,
									"end": 17601,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 17587,
									"end": 17601,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17587,
									"end": 17601,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 17587,
									"end": 17601,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17611,
									"end": 17625,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17611,
									"end": 17625,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17611,
									"end": 17625,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17611,
									"end": 17625,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 17611,
									"end": 17625,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17635,
									"end": 17649,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17635,
									"end": 17649,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17635,
									"end": 17649,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 17635,
									"end": 17649,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17659,
									"end": 17685,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17659,
									"end": 17685,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 17659,
									"end": 17685,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16315,
									"end": 24265,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 16315,
									"end": 24265,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 196,
									"end": 660,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 660,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 293,
									"end": 299,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 301,
									"end": 307,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 309,
									"end": 315,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 323,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 370,
									"end": 373,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 358,
									"end": 367,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 349,
									"end": 356,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 345,
									"end": 368,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 341,
									"end": 374,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 338,
									"end": 391,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 338,
									"end": 391,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 338,
									"end": 391,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 387,
									"end": 388,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 384,
									"end": 385,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 377,
									"end": 389,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 338,
									"end": 391,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 338,
									"end": 391,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 410,
									"end": 450,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 440,
									"end": 449,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 410,
									"end": 450,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 410,
									"end": 450,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 410,
									"end": 450,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 410,
									"end": 450,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 400,
									"end": 450,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 400,
									"end": 450,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 469,
									"end": 518,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 514,
									"end": 516,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 503,
									"end": 512,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 499,
									"end": 517,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 469,
									"end": 518,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 469,
									"end": 518,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 469,
									"end": 518,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 469,
									"end": 518,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 459,
									"end": 518,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 459,
									"end": 518,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 537,
									"end": 586,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 582,
									"end": 584,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 571,
									"end": 580,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 567,
									"end": 585,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 537,
									"end": 586,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 537,
									"end": 586,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 537,
									"end": 586,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 537,
									"end": 586,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 527,
									"end": 586,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 527,
									"end": 586,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 605,
									"end": 654,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 650,
									"end": 652,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 639,
									"end": 648,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 635,
									"end": 653,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 605,
									"end": 654,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 605,
									"end": 654,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 605,
									"end": 654,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 605,
									"end": 654,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 595,
									"end": 654,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 595,
									"end": 654,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 660,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 196,
									"end": 660,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 196,
									"end": 660,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 196,
									"end": 660,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 196,
									"end": 660,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 660,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 196,
									"end": 660,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 196,
									"end": 660,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 196,
									"end": 660,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 196,
									"end": 660,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 16315,
									"end": 24265,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 16315,
									"end": 24265,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 16315,
									"end": 24265,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 16315,
									"end": 24265,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 16315,
									"end": 24265,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 16315,
									"end": 24265,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 16315,
									"end": 24265,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 16315,
									"end": 24265,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 16315,
									"end": 24265,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 16315,
									"end": 24265,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 16315,
									"end": 24265,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16315,
									"end": 24265,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 16315,
									"end": 24265,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16315,
									"end": 24265,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "812"
								},
								{
									"begin": 16315,
									"end": 24265,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16315,
									"end": 24265,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "810"
								},
								{
									"begin": 16315,
									"end": 24265,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16315,
									"end": 24265,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "808"
								},
								{
									"begin": 16315,
									"end": 24265,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16315,
									"end": 24265,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "806"
								},
								{
									"begin": 16315,
									"end": 24265,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 16315,
									"end": 24265,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16315,
									"end": 24265,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b38ec98d81cbfa29259154b412fd72fd8bfd59145d6eab4cd0a156048453aa6264736f6c634300080a0033",
									".code": [
										{
											"begin": 16315,
											"end": 24265,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "PUSH",
											"source": 0,
											"value": "A66F42C0"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "PUSH",
											"source": 0,
											"value": "C73B399B"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "PUSH",
											"source": 0,
											"value": "C73B399B"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "PUSH",
											"source": 0,
											"value": "E2BBB158"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "PUSH",
											"source": 0,
											"value": "E3161DDD"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "PUSH",
											"source": 0,
											"value": "F7C618C1"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "PUSH",
											"source": 0,
											"value": "FC97A303"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "PUSH",
											"source": 0,
											"value": "FDB483C7"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "PUSH",
											"source": 0,
											"value": "A66F42C0"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "PUSH",
											"source": 0,
											"value": "A9F8D181"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "PUSH",
											"source": 0,
											"value": "B66503CF"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "PUSH",
											"source": 0,
											"value": "C00007B0"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "PUSH",
											"source": 0,
											"value": "C6F678BD"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "PUSH",
											"source": 0,
											"value": "4198709A"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "PUSH",
											"source": 0,
											"value": "4198709A"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "PUSH",
											"source": 0,
											"value": "5EEBEA20"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "PUSH",
											"source": 0,
											"value": "853828B6"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "PUSH",
											"source": 0,
											"value": "892F4805"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "PUSH",
											"source": 0,
											"value": "8F662915"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "PUSH",
											"source": 0,
											"value": "1959A002"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "PUSH",
											"source": 0,
											"value": "2E1A7D4D"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "PUSH",
											"source": 0,
											"value": "3A4B66F1"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "PUSH",
											"source": 0,
											"value": "3B92EB23"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16315,
											"end": 24265,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17416,
											"end": 17439,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 17416,
											"end": 17439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17416,
											"end": 17439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 17416,
											"end": 17439,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 17416,
											"end": 17439,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17416,
											"end": 17439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17416,
											"end": 17439,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17416,
											"end": 17439,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 17416,
											"end": 17439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17416,
											"end": 17439,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17416,
											"end": 17439,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17416,
											"end": 17439,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 17416,
											"end": 17439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17416,
											"end": 17439,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17416,
											"end": 17439,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17416,
											"end": 17439,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17416,
											"end": 17439,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17416,
											"end": 17439,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17416,
											"end": 17439,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17416,
											"end": 17439,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 17446,
											"end": 17490,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17446,
											"end": 17490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17446,
											"end": 17490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 17446,
											"end": 17490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 17446,
											"end": 17490,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17446,
											"end": 17490,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17446,
											"end": 17490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 17446,
											"end": 17490,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17446,
											"end": 17490,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 17446,
											"end": 17490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17446,
											"end": 17490,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 17446,
											"end": 17490,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17446,
											"end": 17490,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17446,
											"end": 17490,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17446,
											"end": 17490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17446,
											"end": 17490,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17446,
											"end": 17490,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17446,
											"end": 17490,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17446,
											"end": 17490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17446,
											"end": 17490,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17446,
											"end": 17490,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17446,
											"end": 17490,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17446,
											"end": 17490,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17446,
											"end": 17490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17446,
											"end": 17490,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17446,
											"end": 17490,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17446,
											"end": 17490,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17446,
											"end": 17490,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17446,
											"end": 17490,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17446,
											"end": 17490,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 17446,
											"end": 17490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17446,
											"end": 17490,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17446,
											"end": 17490,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17446,
											"end": 17490,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 758,
											"end": 783,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 758,
											"end": 783,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 758,
											"end": 783,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 814,
											"end": 816,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 799,
											"end": 817,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 799,
											"end": 817,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 792,
											"end": 826,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 792,
											"end": 826,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 792,
											"end": 826,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 792,
											"end": 826,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 731,
											"end": 749,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17446,
											"end": 17490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 584,
											"end": 832,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21031,
											"end": 21249,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 21031,
											"end": 21249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21031,
											"end": 21249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 21031,
											"end": 21249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 21031,
											"end": 21249,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 21031,
											"end": 21249,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21031,
											"end": 21249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 21031,
											"end": 21249,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21031,
											"end": 21249,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 21031,
											"end": 21249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21031,
											"end": 21249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21031,
											"end": 21249,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21031,
											"end": 21249,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 21031,
											"end": 21249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21031,
											"end": 21249,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 16869,
											"end": 16899,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 16869,
											"end": 16899,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16869,
											"end": 16899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 16869,
											"end": 16899,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "806"
										},
										{
											"begin": 16869,
											"end": 16899,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16869,
											"end": 16899,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16869,
											"end": 16899,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 16869,
											"end": 16899,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16869,
											"end": 16899,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16869,
											"end": 16899,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1186,
											"end": 1218,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1218,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1218,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1219,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1168,
											"end": 1219,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1158,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1141,
											"end": 1159,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16869,
											"end": 16899,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1022,
											"end": 1225,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16957,
											"end": 16989,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 16957,
											"end": 16989,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16957,
											"end": 16989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 16957,
											"end": 16989,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "808"
										},
										{
											"begin": 16957,
											"end": 16989,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16957,
											"end": 16989,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17201,
											"end": 17229,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 17201,
											"end": 17229,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17201,
											"end": 17229,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 17201,
											"end": 17229,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17201,
											"end": 17229,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17201,
											"end": 17229,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17201,
											"end": 17229,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23544,
											"end": 23702,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 23544,
											"end": 23702,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23544,
											"end": 23702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 23544,
											"end": 23702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 23544,
											"end": 23702,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23544,
											"end": 23702,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23544,
											"end": 23702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 23544,
											"end": 23702,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23544,
											"end": 23702,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 23544,
											"end": 23702,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23544,
											"end": 23702,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 23544,
											"end": 23702,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20939,
											"end": 21025,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 20939,
											"end": 21025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20939,
											"end": 21025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 20939,
											"end": 21025,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 20939,
											"end": 21025,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19017,
											"end": 19727,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 19017,
											"end": 19727,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19017,
											"end": 19727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 19017,
											"end": 19727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 19017,
											"end": 19727,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 19017,
											"end": 19727,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19017,
											"end": 19727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 19017,
											"end": 19727,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19017,
											"end": 19727,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 19017,
											"end": 19727,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19017,
											"end": 19727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 19017,
											"end": 19727,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17235,
											"end": 17266,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 17235,
											"end": 17266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17235,
											"end": 17266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 17235,
											"end": 17266,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 17235,
											"end": 17266,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17235,
											"end": 17266,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17235,
											"end": 17266,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17027,
											"end": 17057,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 17027,
											"end": 17057,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17027,
											"end": 17057,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 17027,
											"end": 17057,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "810"
										},
										{
											"begin": 17027,
											"end": 17057,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17027,
											"end": 17057,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17321,
											"end": 17351,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 17321,
											"end": 17351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17321,
											"end": 17351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 17321,
											"end": 17351,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17321,
											"end": 17351,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17321,
											"end": 17351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17321,
											"end": 17351,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23709,
											"end": 24262,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 23709,
											"end": 24262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23709,
											"end": 24262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 23709,
											"end": 24262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 23709,
											"end": 24262,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 23709,
											"end": 24262,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23709,
											"end": 24262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 23709,
											"end": 24262,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23709,
											"end": 24262,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 23709,
											"end": 24262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23709,
											"end": 24262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 23709,
											"end": 24262,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18454,
											"end": 19011,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 18454,
											"end": 19011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18454,
											"end": 19011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 18454,
											"end": 19011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 18454,
											"end": 19011,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 18454,
											"end": 19011,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18454,
											"end": 19011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 18454,
											"end": 19011,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18454,
											"end": 19011,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 18454,
											"end": 19011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18454,
											"end": 19011,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 18454,
											"end": 19011,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19734,
											"end": 19847,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 19734,
											"end": 19847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19734,
											"end": 19847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 19734,
											"end": 19847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 19734,
											"end": 19847,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 19734,
											"end": 19847,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19734,
											"end": 19847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 19734,
											"end": 19847,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19734,
											"end": 19847,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 19734,
											"end": 19847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19734,
											"end": 19847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 19734,
											"end": 19847,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22771,
											"end": 23538,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 22771,
											"end": 23538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22771,
											"end": 23538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 22771,
											"end": 23538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 22771,
											"end": 23538,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22771,
											"end": 23538,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22771,
											"end": 23538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 22771,
											"end": 23538,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22771,
											"end": 23538,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 22771,
											"end": 23538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22771,
											"end": 23538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 22771,
											"end": 23538,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19853,
											"end": 20933,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 19853,
											"end": 20933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19853,
											"end": 20933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 19853,
											"end": 20933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 19853,
											"end": 20933,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 19853,
											"end": 20933,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19853,
											"end": 20933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 19853,
											"end": 20933,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19853,
											"end": 20933,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 19853,
											"end": 20933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19853,
											"end": 20933,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 19853,
											"end": 20933,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22179,
											"end": 22704,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22179,
											"end": 22704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22179,
											"end": 22704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 22179,
											"end": 22704,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 22179,
											"end": 22704,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17063,
											"end": 17099,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 17063,
											"end": 17099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17063,
											"end": 17099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 17063,
											"end": 17099,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "812"
										},
										{
											"begin": 17063,
											"end": 17099,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17063,
											"end": 17099,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17154,
											"end": 17194,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 17154,
											"end": 17194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17154,
											"end": 17194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 17154,
											"end": 17194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 17154,
											"end": 17194,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17154,
											"end": 17194,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17154,
											"end": 17194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 17154,
											"end": 17194,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17154,
											"end": 17194,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 17154,
											"end": 17194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17154,
											"end": 17194,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17154,
											"end": 17194,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17154,
											"end": 17194,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17154,
											"end": 17194,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17154,
											"end": 17194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17154,
											"end": 17194,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17154,
											"end": 17194,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17154,
											"end": 17194,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17154,
											"end": 17194,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17154,
											"end": 17194,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17154,
											"end": 17194,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17154,
											"end": 17194,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17154,
											"end": 17194,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21255,
											"end": 22173,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 21255,
											"end": 22173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21255,
											"end": 22173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 21255,
											"end": 22173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 21255,
											"end": 22173,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 21255,
											"end": 22173,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21255,
											"end": 22173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 21255,
											"end": 22173,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21255,
											"end": 22173,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 21255,
											"end": 22173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21255,
											"end": 22173,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 21255,
											"end": 22173,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21031,
											"end": 21249,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21031,
											"end": 21249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21128,
											"end": 21138,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 21079,
											"end": 21091,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21119,
											"end": 21139,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21119,
											"end": 21139,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21119,
											"end": 21139,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21119,
											"end": 21127,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 21119,
											"end": 21139,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21119,
											"end": 21139,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21119,
											"end": 21139,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21119,
											"end": 21139,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21119,
											"end": 21139,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21119,
											"end": 21146,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21109,
											"end": 21146,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21109,
											"end": 21146,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21105,
											"end": 21203,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21105,
											"end": 21203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 21105,
											"end": 21203,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21181,
											"end": 21191,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 21172,
											"end": 21192,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21172,
											"end": 21192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21172,
											"end": 21192,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21172,
											"end": 21192,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21172,
											"end": 21180,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21172,
											"end": 21192,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21172,
											"end": 21192,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21172,
											"end": 21192,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21172,
											"end": 21192,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21172,
											"end": 21192,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21172,
											"end": 21192,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21105,
											"end": 21203,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 21105,
											"end": 21203,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21212,
											"end": 21242,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 21226,
											"end": 21232,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21234,
											"end": 21241,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21212,
											"end": 21225,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 21212,
											"end": 21242,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21212,
											"end": 21242,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 21212,
											"end": 21242,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21069,
											"end": 21249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21031,
											"end": 21249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21031,
											"end": 21249,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23544,
											"end": 23702,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 23544,
											"end": 23702,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23597,
											"end": 23604,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23615,
											"end": 23629,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23632,
											"end": 23649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 23643,
											"end": 23648,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23632,
											"end": 23642,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 23632,
											"end": 23649,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23632,
											"end": 23649,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 23632,
											"end": 23649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23615,
											"end": 23649,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23615,
											"end": 23649,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23666,
											"end": 23695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 23681,
											"end": 23686,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23688,
											"end": 23694,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23666,
											"end": 23680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 23666,
											"end": 23695,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23666,
											"end": 23695,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 23666,
											"end": 23695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23659,
											"end": 23695,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 23544,
											"end": 23702,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23544,
											"end": 23702,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20939,
											"end": 21025,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 20939,
											"end": 21025,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20999,
											"end": 21009,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 20990,
											"end": 21010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20990,
											"end": 21010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20990,
											"end": 21010,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20990,
											"end": 21010,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20990,
											"end": 20998,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 20990,
											"end": 21010,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20990,
											"end": 21010,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20990,
											"end": 21010,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20990,
											"end": 21010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20990,
											"end": 21010,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20990,
											"end": 21017,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20981,
											"end": 21018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 20981,
											"end": 21018,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20981,
											"end": 20989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20981,
											"end": 21018,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20981,
											"end": 21018,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 20981,
											"end": 21018,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20939,
											"end": 21025,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19017,
											"end": 19727,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 19017,
											"end": 19727,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19126,
											"end": 19143,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19126,
											"end": 19143,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19094,
											"end": 19098,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19126,
											"end": 19143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19126,
											"end": 19143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19126,
											"end": 19143,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19126,
											"end": 19134,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19126,
											"end": 19143,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19126,
											"end": 19143,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19126,
											"end": 19143,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19126,
											"end": 19143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19126,
											"end": 19143,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19126,
											"end": 19143,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19094,
											"end": 19098,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19185,
											"end": 19188,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 19169,
											"end": 19182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 19169,
											"end": 19177,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19180,
											"end": 19182,
											"name": "PUSH",
											"source": 0,
											"value": "1E"
										},
										{
											"begin": 19169,
											"end": 19182,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 19169,
											"end": 19182,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19169,
											"end": 19182,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 19169,
											"end": 19182,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19169,
											"end": 19188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 19169,
											"end": 19188,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19169,
											"end": 19188,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19169,
											"end": 19188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 19169,
											"end": 19188,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19169,
											"end": 19188,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 19169,
											"end": 19188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19241,
											"end": 19269,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19241,
											"end": 19269,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "53E56423"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19241,
											"end": 19269,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19241,
											"end": 19269,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19263,
											"end": 19268,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "806"
										},
										{
											"begin": 1186,
											"end": 1218,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1186,
											"end": 1218,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 19241,
											"end": 19269,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19241,
											"end": 19269,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19241,
											"end": 19269,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1219,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19153,
											"end": 19188,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19153,
											"end": 19188,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": 19248,
											"end": 19253,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "810"
										},
										{
											"begin": 19241,
											"end": 19262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19241,
											"end": 19262,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19241,
											"end": 19262,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19241,
											"end": 19262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19241,
											"end": 19262,
											"name": "PUSH",
											"source": 0,
											"value": "A7CAC846"
										},
										{
											"begin": 19241,
											"end": 19262,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1159,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1141,
											"end": 1159,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19241,
											"end": 19269,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19241,
											"end": 19269,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19241,
											"end": 19269,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19241,
											"end": 19269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19241,
											"end": 19269,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19241,
											"end": 19269,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19241,
											"end": 19269,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19241,
											"end": 19269,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 19241,
											"end": 19269,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 19241,
											"end": 19269,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 19241,
											"end": 19269,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19241,
											"end": 19269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19241,
											"end": 19269,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19241,
											"end": 19269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 19241,
											"end": 19269,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19241,
											"end": 19269,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19241,
											"end": 19269,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19241,
											"end": 19269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19241,
											"end": 19269,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 19241,
											"end": 19269,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19241,
											"end": 19269,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19241,
											"end": 19269,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19241,
											"end": 19269,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 19241,
											"end": 19269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19241,
											"end": 19269,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19241,
											"end": 19269,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19241,
											"end": 19269,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19241,
											"end": 19269,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19241,
											"end": 19269,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19241,
											"end": 19269,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19241,
											"end": 19269,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19241,
											"end": 19269,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 19241,
											"end": 19269,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 19241,
											"end": 19269,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 19241,
											"end": 19269,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19241,
											"end": 19269,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19241,
											"end": 19269,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19241,
											"end": 19269,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19241,
											"end": 19269,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19241,
											"end": 19269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19241,
											"end": 19269,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19241,
											"end": 19269,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19241,
											"end": 19269,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19241,
											"end": 19269,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19241,
											"end": 19269,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19241,
											"end": 19269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19241,
											"end": 19269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 19241,
											"end": 19269,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19241,
											"end": 19269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19241,
											"end": 19269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 19241,
											"end": 19269,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19241,
											"end": 19269,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 19241,
											"end": 19269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19294,
											"end": 19329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19294,
											"end": 19329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31A9108F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19294,
											"end": 19329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19294,
											"end": 19329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19294,
											"end": 19329,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19294,
											"end": 19329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19294,
											"end": 19329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19226,
											"end": 19269,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19226,
											"end": 19269,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19303,
											"end": 19310,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "808"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19294,
											"end": 19319,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19294,
											"end": 19319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19294,
											"end": 19319,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 19294,
											"end": 19319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19294,
											"end": 19329,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19294,
											"end": 19329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19294,
											"end": 19329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19294,
											"end": 19329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19294,
											"end": 19329,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19294,
											"end": 19329,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19294,
											"end": 19329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19294,
											"end": 19329,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 19294,
											"end": 19329,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 19294,
											"end": 19329,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 19294,
											"end": 19329,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19294,
											"end": 19329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19294,
											"end": 19329,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19294,
											"end": 19329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 19294,
											"end": 19329,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19294,
											"end": 19329,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19294,
											"end": 19329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19294,
											"end": 19329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19294,
											"end": 19329,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 19294,
											"end": 19329,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19294,
											"end": 19329,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19294,
											"end": 19329,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19294,
											"end": 19329,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 19294,
											"end": 19329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19294,
											"end": 19329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19294,
											"end": 19329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19294,
											"end": 19329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19294,
											"end": 19329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19294,
											"end": 19329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19294,
											"end": 19329,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19294,
											"end": 19329,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19294,
											"end": 19329,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 19294,
											"end": 19329,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 19294,
											"end": 19329,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 19294,
											"end": 19329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19294,
											"end": 19329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19294,
											"end": 19329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19294,
											"end": 19329,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19294,
											"end": 19329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19294,
											"end": 19329,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19294,
											"end": 19329,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19294,
											"end": 19329,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19294,
											"end": 19329,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19294,
											"end": 19329,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19294,
											"end": 19329,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19294,
											"end": 19329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19294,
											"end": 19329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 19294,
											"end": 19329,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19294,
											"end": 19329,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19294,
											"end": 19329,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 19294,
											"end": 19329,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19294,
											"end": 19329,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 19294,
											"end": 19329,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19283,
											"end": 19329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19283,
											"end": 19290,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19283,
											"end": 19329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19283,
											"end": 19329,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19283,
											"end": 19344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19283,
											"end": 19344,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19283,
											"end": 19344,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 19283,
											"end": 19344,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19283,
											"end": 19344,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19343,
											"end": 19344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19333,
											"end": 19340,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19333,
											"end": 19344,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 19283,
											"end": 19344,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 19283,
											"end": 19344,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19279,
											"end": 19662,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19279,
											"end": 19662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 19279,
											"end": 19662,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19378,
											"end": 19413,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19378,
											"end": 19413,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1E7A4E09"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19378,
											"end": 19413,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19378,
											"end": 19413,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19378,
											"end": 19413,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19378,
											"end": 19413,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19378,
											"end": 19413,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19360,
											"end": 19375,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19360,
											"end": 19375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19385,
											"end": 19390,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "810"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19378,
											"end": 19403,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19378,
											"end": 19403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19378,
											"end": 19403,
											"name": "PUSH",
											"source": 0,
											"value": "79E93824"
										},
										{
											"begin": 19378,
											"end": 19403,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19378,
											"end": 19413,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19378,
											"end": 19413,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19378,
											"end": 19413,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19378,
											"end": 19413,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19378,
											"end": 19413,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19378,
											"end": 19413,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19378,
											"end": 19413,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19378,
											"end": 19413,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 19378,
											"end": 19413,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 19378,
											"end": 19413,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 19378,
											"end": 19413,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19378,
											"end": 19413,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19378,
											"end": 19413,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19378,
											"end": 19413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 19378,
											"end": 19413,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19378,
											"end": 19413,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19378,
											"end": 19413,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19378,
											"end": 19413,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19378,
											"end": 19413,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 19378,
											"end": 19413,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19378,
											"end": 19413,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19378,
											"end": 19413,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19378,
											"end": 19413,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 19378,
											"end": 19413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19378,
											"end": 19413,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19378,
											"end": 19413,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19378,
											"end": 19413,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19378,
											"end": 19413,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19378,
											"end": 19413,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19378,
											"end": 19413,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19378,
											"end": 19413,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19378,
											"end": 19413,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 19378,
											"end": 19413,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 19378,
											"end": 19413,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 19378,
											"end": 19413,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19378,
											"end": 19413,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19378,
											"end": 19413,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19378,
											"end": 19413,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19378,
											"end": 19413,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19378,
											"end": 19413,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19378,
											"end": 19413,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19378,
											"end": 19413,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19378,
											"end": 19413,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19378,
											"end": 19413,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19378,
											"end": 19413,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19378,
											"end": 19413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19378,
											"end": 19413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 19378,
											"end": 19413,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19378,
											"end": 19413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19378,
											"end": 19413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 19378,
											"end": 19413,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19378,
											"end": 19413,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 19378,
											"end": 19413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19440,
											"end": 19480,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19440,
											"end": 19480,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39F890B5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19440,
											"end": 19480,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19440,
											"end": 19480,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19440,
											"end": 19480,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19440,
											"end": 19480,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19440,
											"end": 19480,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19360,
											"end": 19413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19360,
											"end": 19413,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19427,
											"end": 19437,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19427,
											"end": 19437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19449,
											"end": 19456,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "808"
										},
										{
											"begin": 19440,
											"end": 19470,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19440,
											"end": 19470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19440,
											"end": 19470,
											"name": "PUSH",
											"source": 0,
											"value": "E7E242D4"
										},
										{
											"begin": 19440,
											"end": 19470,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19440,
											"end": 19480,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19440,
											"end": 19480,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19440,
											"end": 19480,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19440,
											"end": 19480,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19440,
											"end": 19480,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19440,
											"end": 19480,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19440,
											"end": 19480,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19440,
											"end": 19480,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 19440,
											"end": 19480,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 19440,
											"end": 19480,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 19440,
											"end": 19480,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19440,
											"end": 19480,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19440,
											"end": 19480,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19440,
											"end": 19480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 19440,
											"end": 19480,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19440,
											"end": 19480,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19440,
											"end": 19480,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19440,
											"end": 19480,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19440,
											"end": 19480,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 19440,
											"end": 19480,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19440,
											"end": 19480,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19440,
											"end": 19480,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19440,
											"end": 19480,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 19440,
											"end": 19480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19440,
											"end": 19480,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19440,
											"end": 19480,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19440,
											"end": 19480,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19440,
											"end": 19480,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19440,
											"end": 19480,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19440,
											"end": 19480,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19440,
											"end": 19480,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19440,
											"end": 19480,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 19440,
											"end": 19480,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 19440,
											"end": 19480,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 19440,
											"end": 19480,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19440,
											"end": 19480,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19440,
											"end": 19480,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19440,
											"end": 19480,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19440,
											"end": 19480,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19440,
											"end": 19480,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19440,
											"end": 19480,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19440,
											"end": 19480,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19440,
											"end": 19480,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19440,
											"end": 19480,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19440,
											"end": 19480,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19440,
											"end": 19480,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19440,
											"end": 19480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 19440,
											"end": 19480,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19440,
											"end": 19480,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19440,
											"end": 19480,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 19440,
											"end": 19480,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19440,
											"end": 19480,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 19440,
											"end": 19480,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19427,
											"end": 19480,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19427,
											"end": 19480,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19506,
											"end": 19579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 19568,
											"end": 19578,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19506,
											"end": 19563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 19557,
											"end": 19562,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19506,
											"end": 19552,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 19547,
											"end": 19551,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 19513,
											"end": 19518,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "810"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19506,
											"end": 19525,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19506,
											"end": 19525,
											"name": "PUSH",
											"source": 0,
											"value": "D23254B4"
										},
										{
											"begin": 19526,
											"end": 19534,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 19536,
											"end": 19541,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "806"
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2949,
											"end": 2974,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2949,
											"end": 2974,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2949,
											"end": 2974,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3010,
											"end": 3042,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3005,
											"end": 3007,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2990,
											"end": 3008,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2990,
											"end": 3008,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2983,
											"end": 3043,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2937,
											"end": 2939,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2922,
											"end": 2940,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2922,
											"end": 2940,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2775,
											"end": 3049,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 19506,
											"end": 19542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19506,
											"end": 19546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19506,
											"end": 19546,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 19506,
											"end": 19552,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19506,
											"end": 19563,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 19506,
											"end": 19563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19506,
											"end": 19567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19506,
											"end": 19567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 19506,
											"end": 19579,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19506,
											"end": 19579,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 19506,
											"end": 19579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19494,
											"end": 19579,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 19494,
											"end": 19579,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19648,
											"end": 19651,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 19632,
											"end": 19639,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19620,
											"end": 19629,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19606,
											"end": 19617,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 19606,
											"end": 19617,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19606,
											"end": 19629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 19606,
											"end": 19629,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19606,
											"end": 19629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19606,
											"end": 19629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 19606,
											"end": 19629,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19606,
											"end": 19629,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 19606,
											"end": 19629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19606,
											"end": 19639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 19606,
											"end": 19639,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19606,
											"end": 19639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19606,
											"end": 19639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 19606,
											"end": 19639,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19606,
											"end": 19639,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 19606,
											"end": 19639,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19605,
											"end": 19645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 19605,
											"end": 19645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19643,
											"end": 19645,
											"name": "PUSH",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 19605,
											"end": 19645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 19605,
											"end": 19645,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19605,
											"end": 19645,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 19605,
											"end": 19645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19605,
											"end": 19651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 19605,
											"end": 19651,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19605,
											"end": 19651,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19605,
											"end": 19651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 19605,
											"end": 19651,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19605,
											"end": 19651,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 19605,
											"end": 19651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19593,
											"end": 19651,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 19593,
											"end": 19651,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19346,
											"end": 19662,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19346,
											"end": 19662,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19279,
											"end": 19662,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 19279,
											"end": 19662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19678,
											"end": 19720,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 19688,
											"end": 19708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 19699,
											"end": 19708,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19688,
											"end": 19696,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 19688,
											"end": 19708,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 19688,
											"end": 19708,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19688,
											"end": 19708,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 19688,
											"end": 19708,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19711,
											"end": 19719,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 19678,
											"end": 19686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 19678,
											"end": 19720,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19678,
											"end": 19720,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 19678,
											"end": 19720,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19671,
											"end": 19720,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 19017,
											"end": 19727,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19017,
											"end": 19727,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23709,
											"end": 24262,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 23709,
											"end": 24262,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17738,
											"end": 17748,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17752,
											"end": 17757,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "810"
										},
										{
											"begin": 17738,
											"end": 17757,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17738,
											"end": 17757,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17730,
											"end": 17772,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 17730,
											"end": 17772,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17730,
											"end": 17772,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17730,
											"end": 17772,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17730,
											"end": 17772,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17730,
											"end": 17772,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3389,
											"end": 3391,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17730,
											"end": 17772,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17730,
											"end": 17772,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17730,
											"end": 17772,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3371,
											"end": 3392,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3430,
											"name": "PUSH",
											"source": 1,
											"value": "A"
										},
										{
											"begin": 3408,
											"end": 3426,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3408,
											"end": 3426,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3408,
											"end": 3426,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3401,
											"end": 3431,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1BDB9B1E48189BDBDCDD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3447,
											"end": 3465,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3447,
											"end": 3465,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3447,
											"end": 3465,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3440,
											"end": 3480,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3497,
											"end": 3515,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3497,
											"end": 3515,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17730,
											"end": 17772,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 17730,
											"end": 17772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17730,
											"end": 17772,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17730,
											"end": 17772,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17730,
											"end": 17772,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17730,
											"end": 17772,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17730,
											"end": 17772,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17730,
											"end": 17772,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17730,
											"end": 17772,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17730,
											"end": 17772,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 17730,
											"end": 17772,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23816,
											"end": 23821,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "806"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23807,
											"end": 23821,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23807,
											"end": 23812,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23807,
											"end": 23821,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23807,
											"end": 23821,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23807,
											"end": 23821,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23799,
											"end": 23834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 23799,
											"end": 23834,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23799,
											"end": 23834,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23799,
											"end": 23834,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23799,
											"end": 23834,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23799,
											"end": 23834,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3728,
											"end": 3730,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23799,
											"end": 23834,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23799,
											"end": 23834,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23799,
											"end": 23834,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3710,
											"end": 3731,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3767,
											"end": 3768,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 3747,
											"end": 3765,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 3747,
											"end": 3765,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3747,
											"end": 3765,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3769,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E6F207374616B65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3785,
											"end": 3803,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 3785,
											"end": 3803,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3785,
											"end": 3803,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3778,
											"end": 3816,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3833,
											"end": 3851,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3833,
											"end": 3851,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23799,
											"end": 23834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 3526,
											"end": 3857,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23799,
											"end": 23834,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 23799,
											"end": 23834,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23864,
											"end": 23879,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23864,
											"end": 23879,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23848,
											"end": 23860,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 23848,
											"end": 23879,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 23844,
											"end": 23912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 23844,
											"end": 23912,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21069,
											"end": 21249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21031,
											"end": 21249,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21031,
											"end": 21249,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23844,
											"end": 23912,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 23844,
											"end": 23912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23921,
											"end": 23934,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23921,
											"end": 23948,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23921,
											"end": 23948,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23921,
											"end": 23948,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 23962,
											"end": 23973,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23962,
											"end": 23973,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23962,
											"end": 23977,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23958,
											"end": 24197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 23958,
											"end": 24197,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24004,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24007,
											"end": 24040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 24024,
											"end": 24039,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24024,
											"end": 24039,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24007,
											"end": 24019,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 24007,
											"end": 24023,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 24007,
											"end": 24023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24007,
											"end": 24040,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24007,
											"end": 24040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24007,
											"end": 24040,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 24007,
											"end": 24040,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24007,
											"end": 24040,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24007,
											"end": 24040,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 24007,
											"end": 24040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24040,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23993,
											"end": 24040,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24073,
											"end": 24142,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 24094,
											"end": 24141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 24129,
											"end": 24140,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24129,
											"end": 24140,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24094,
											"end": 24124,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 24119,
											"end": 24123,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 24094,
											"end": 24114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 24110,
											"end": 24113,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 24094,
											"end": 24105,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 24094,
											"end": 24109,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 24094,
											"end": 24109,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24094,
											"end": 24114,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24094,
											"end": 24114,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24094,
											"end": 24114,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 24094,
											"end": 24114,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24094,
											"end": 24114,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24094,
											"end": 24141,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 24094,
											"end": 24141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24073,
											"end": 24089,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 24073,
											"end": 24089,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24073,
											"end": 24089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24073,
											"end": 24093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 24073,
											"end": 24142,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 24073,
											"end": 24142,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 24073,
											"end": 24142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24054,
											"end": 24070,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 24054,
											"end": 24142,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 24174,
											"end": 24186,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 24156,
											"end": 24171,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24156,
											"end": 24186,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 23958,
											"end": 24197,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 23958,
											"end": 24197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24211,
											"end": 24255,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24211,
											"end": 24255,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 24211,
											"end": 24255,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24211,
											"end": 24255,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24211,
											"end": 24255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24224,
											"end": 24234,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 24224,
											"end": 24234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24211,
											"end": 24255,
											"name": "PUSH",
											"source": 0,
											"value": "F70D5C697DE7EA828DF48E5C4573CB2194C659F1901F70110C52B066DCF50826"
										},
										{
											"begin": 24211,
											"end": 24255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24211,
											"end": 24255,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24211,
											"end": 24255,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24211,
											"end": 24255,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24211,
											"end": 24255,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24211,
											"end": 24255,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24211,
											"end": 24255,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24211,
											"end": 24255,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 23709,
											"end": 24262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23709,
											"end": 24262,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23709,
											"end": 24262,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 18454,
											"end": 19011,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 18454,
											"end": 19011,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3133,
											"end": 3134,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3714,
											"end": 3721,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3714,
											"end": 3721,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3714,
											"end": 3733,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3714,
											"end": 3733,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3706,
											"end": 3769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 3706,
											"end": 3769,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3706,
											"end": 3769,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3706,
											"end": 3769,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3706,
											"end": 3769,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3706,
											"end": 3769,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3706,
											"end": 3769,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3706,
											"end": 3769,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3706,
											"end": 3769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 3706,
											"end": 3769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3706,
											"end": 3769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 3706,
											"end": 3769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3706,
											"end": 3769,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 3706,
											"end": 3769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3133,
											"end": 3134,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3844,
											"end": 3851,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3844,
											"end": 3862,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 18530,
											"end": 18540,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18530,
											"end": 18551,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18530,
											"end": 18551,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18530,
											"end": 18551,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18530,
											"end": 18551,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18530,
											"end": 18574,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 18530,
											"end": 18574,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18555,
											"end": 18565,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18569,
											"end": 18574,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "810"
										},
										{
											"begin": 18555,
											"end": 18574,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18555,
											"end": 18574,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 18530,
											"end": 18574,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 18530,
											"end": 18574,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18522,
											"end": 18575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 18522,
											"end": 18575,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18522,
											"end": 18575,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18522,
											"end": 18575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18522,
											"end": 18575,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18522,
											"end": 18575,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 18522,
											"end": 18575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18585,
											"end": 18597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 18585,
											"end": 18595,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 18585,
											"end": 18597,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18585,
											"end": 18597,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 18585,
											"end": 18597,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18631,
											"end": 18648,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18631,
											"end": 18648,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18607,
											"end": 18628,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18631,
											"end": 18648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18631,
											"end": 18648,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18631,
											"end": 18648,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18631,
											"end": 18639,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 18631,
											"end": 18648,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18631,
											"end": 18648,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18631,
											"end": 18648,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18631,
											"end": 18648,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18631,
											"end": 18648,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18631,
											"end": 18648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18682,
											"end": 18701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 18640,
											"end": 18647,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18682,
											"end": 18692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 18682,
											"end": 18701,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18682,
											"end": 18701,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 18682,
											"end": 18701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18658,
											"end": 18701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18715,
											"end": 18732,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18715,
											"end": 18732,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18711,
											"end": 18885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 18711,
											"end": 18885,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18748,
											"end": 18803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 18767,
											"end": 18778,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "812"
										},
										{
											"begin": 18780,
											"end": 18787,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18789,
											"end": 18802,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18748,
											"end": 18766,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 18748,
											"end": 18803,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18748,
											"end": 18803,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 18748,
											"end": 18803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18822,
											"end": 18874,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18822,
											"end": 18874,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18847,
											"end": 18858,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "812"
										},
										{
											"begin": 18822,
											"end": 18874,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18822,
											"end": 18874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18835,
											"end": 18845,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 18835,
											"end": 18845,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18822,
											"end": 18874,
											"name": "PUSH",
											"source": 0,
											"value": "9AA05B3D70A9E3E2F004F039648839560576334FB45C81F91B6DB03AD9E2EFC9"
										},
										{
											"begin": 18822,
											"end": 18874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 148,
											"end": 150,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18822,
											"end": 18874,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18822,
											"end": 18874,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18822,
											"end": 18874,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18822,
											"end": 18874,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18822,
											"end": 18874,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18822,
											"end": 18874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18822,
											"end": 18874,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 18711,
											"end": 18885,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 18711,
											"end": 18885,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18928,
											"end": 18944,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 18928,
											"end": 18944,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18912,
											"end": 18923,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18912,
											"end": 18923,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18912,
											"end": 18955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 18912,
											"end": 18955,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18950,
											"end": 18954,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 18950,
											"end": 18954,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18912,
											"end": 18945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 18912,
											"end": 18945,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18912,
											"end": 18927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 18912,
											"end": 18945,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18912,
											"end": 18955,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 18912,
											"end": 18955,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18894,
											"end": 18909,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18894,
											"end": 18909,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18894,
											"end": 18909,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18894,
											"end": 18955,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 18965,
											"end": 19004,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18965,
											"end": 19004,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "63453AE1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18965,
											"end": 19004,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18965,
											"end": 19004,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19002,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 18965,
											"end": 19004,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18965,
											"end": 19004,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18965,
											"end": 19004,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1219,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18972,
											"end": 18977,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "810"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18965,
											"end": 18989,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18965,
											"end": 18989,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18965,
											"end": 18989,
											"name": "PUSH",
											"source": 0,
											"value": "63453AE1"
										},
										{
											"begin": 18965,
											"end": 18989,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1159,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1141,
											"end": 1159,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18965,
											"end": 19004,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18965,
											"end": 19004,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18965,
											"end": 19004,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18965,
											"end": 19004,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18965,
											"end": 19004,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18965,
											"end": 19004,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18965,
											"end": 19004,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18965,
											"end": 19004,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18965,
											"end": 19004,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 18965,
											"end": 19004,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18965,
											"end": 19004,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 18965,
											"end": 19004,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18965,
											"end": 19004,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18965,
											"end": 19004,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18965,
											"end": 19004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 18965,
											"end": 19004,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18965,
											"end": 19004,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18965,
											"end": 19004,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18965,
											"end": 19004,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18965,
											"end": 19004,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 18965,
											"end": 19004,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18965,
											"end": 19004,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18965,
											"end": 19004,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 18965,
											"end": 19004,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 18965,
											"end": 19004,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18965,
											"end": 19004,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18965,
											"end": 19004,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18965,
											"end": 19004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 18965,
											"end": 19004,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18965,
											"end": 19004,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18965,
											"end": 19004,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18965,
											"end": 19004,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18965,
											"end": 19004,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 18965,
											"end": 19004,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18965,
											"end": 19004,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18965,
											"end": 19004,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18965,
											"end": 19004,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 18965,
											"end": 19004,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3090,
											"end": 3091,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4017,
											"end": 4024,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4017,
											"end": 4039,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18454,
											"end": 19011,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19734,
											"end": 19847,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 19734,
											"end": 19847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19830,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19795,
											"end": 19830,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19795,
											"end": 19830,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19830,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19819,
											"end": 19829,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19830,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19795,
											"end": 19830,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19830,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1219,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19787,
											"end": 19840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 19787,
											"end": 19840,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19802,
											"end": 19807,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "806"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19795,
											"end": 19818,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19818,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 19795,
											"end": 19818,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1159,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1141,
											"end": 1159,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19795,
											"end": 19830,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19795,
											"end": 19830,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19795,
											"end": 19830,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19830,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19830,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19830,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19830,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19830,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19830,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19830,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19830,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 19795,
											"end": 19830,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19830,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19830,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19795,
											"end": 19830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19830,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19830,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19830,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19795,
											"end": 19830,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19830,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 19795,
											"end": 19830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19830,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19830,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19830,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19830,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19830,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19795,
											"end": 19830,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19830,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19830,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 19795,
											"end": 19830,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19830,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 19795,
											"end": 19830,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19830,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19830,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19830,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19830,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19830,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19830,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19795,
											"end": 19830,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19830,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19830,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19830,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 19795,
											"end": 19830,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19830,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19795,
											"end": 19830,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 19795,
											"end": 19830,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19795,
											"end": 19830,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 19795,
											"end": 19830,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19832,
											"end": 19839,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19787,
											"end": 19794,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 19787,
											"end": 19840,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19787,
											"end": 19840,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 19787,
											"end": 19840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19734,
											"end": 19847,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19734,
											"end": 19847,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 22771,
											"end": 23538,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 22771,
											"end": 23538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22869,
											"end": 22884,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22869,
											"end": 22884,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22827,
											"end": 22834,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22869,
											"end": 22884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22869,
											"end": 22884,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22869,
											"end": 22884,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22869,
											"end": 22877,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 22869,
											"end": 22884,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22869,
											"end": 22884,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22869,
											"end": 22884,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22869,
											"end": 22884,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22869,
											"end": 22884,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22922,
											"end": 22938,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 22922,
											"end": 22938,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22952,
											"end": 22963,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22952,
											"end": 22963,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22952,
											"end": 22967,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22948,
											"end": 23514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 22948,
											"end": 23514,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23002,
											"end": 23017,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23002,
											"end": 23017,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22987,
											"end": 22999,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 22987,
											"end": 23017,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22983,
											"end": 23350,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22983,
											"end": 23350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 22983,
											"end": 23350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23037,
											"end": 23048,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23051,
											"end": 23084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 23068,
											"end": 23083,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23068,
											"end": 23083,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23051,
											"end": 23063,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 23051,
											"end": 23067,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 23051,
											"end": 23067,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23051,
											"end": 23084,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23051,
											"end": 23084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23051,
											"end": 23084,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23051,
											"end": 23084,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23051,
											"end": 23084,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23051,
											"end": 23084,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 23051,
											"end": 23084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23037,
											"end": 23084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23037,
											"end": 23084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23102,
											"end": 23121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23124,
											"end": 23146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 23142,
											"end": 23145,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23124,
											"end": 23137,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 23124,
											"end": 23137,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23124,
											"end": 23141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 23124,
											"end": 23141,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23124,
											"end": 23146,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23124,
											"end": 23146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23124,
											"end": 23146,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23124,
											"end": 23146,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23124,
											"end": 23146,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23124,
											"end": 23146,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 23124,
											"end": 23146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23102,
											"end": 23146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23102,
											"end": 23146,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23184,
											"end": 23245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 23206,
											"end": 23244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 23232,
											"end": 23243,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23232,
											"end": 23243,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23206,
											"end": 23227,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 23222,
											"end": 23226,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 23206,
											"end": 23217,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23206,
											"end": 23221,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 23206,
											"end": 23221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23206,
											"end": 23227,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23206,
											"end": 23227,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23206,
											"end": 23227,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23206,
											"end": 23227,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23206,
											"end": 23227,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23206,
											"end": 23244,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 23206,
											"end": 23244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23184,
											"end": 23201,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23184,
											"end": 23201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23184,
											"end": 23205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 23184,
											"end": 23245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23184,
											"end": 23245,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 23184,
											"end": 23245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23164,
											"end": 23245,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23164,
											"end": 23245,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23270,
											"end": 23335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 23319,
											"end": 23323,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23319,
											"end": 23334,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23319,
											"end": 23334,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23319,
											"end": 23334,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23270,
											"end": 23314,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 23309,
											"end": 23313,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 23270,
											"end": 23304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 23286,
											"end": 23303,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 23270,
											"end": 23274,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 23270,
											"end": 23281,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23270,
											"end": 23281,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23270,
											"end": 23281,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23270,
											"end": 23285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 23270,
											"end": 23285,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23270,
											"end": 23304,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23270,
											"end": 23304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23270,
											"end": 23304,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23270,
											"end": 23304,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23270,
											"end": 23304,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23270,
											"end": 23314,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 23270,
											"end": 23314,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23270,
											"end": 23318,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23270,
											"end": 23318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 23270,
											"end": 23335,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23270,
											"end": 23335,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 23270,
											"end": 23335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23263,
											"end": 23335,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 22771,
											"end": 23538,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22771,
											"end": 23538,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 22983,
											"end": 23350,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 22983,
											"end": 23350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23383,
											"end": 23398,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23383,
											"end": 23398,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23367,
											"end": 23379,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 23367,
											"end": 23398,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23363,
											"end": 23504,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 23363,
											"end": 23504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 23363,
											"end": 23504,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23425,
											"end": 23489,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 23473,
											"end": 23477,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23473,
											"end": 23488,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 23473,
											"end": 23488,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23473,
											"end": 23488,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23425,
											"end": 23468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 23463,
											"end": 23467,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 23425,
											"end": 23458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 23441,
											"end": 23457,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 23441,
											"end": 23457,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23425,
											"end": 23429,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 23425,
											"end": 23436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23425,
											"end": 23436,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23425,
											"end": 23436,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23425,
											"end": 23440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 23425,
											"end": 23440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23425,
											"end": 23458,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23425,
											"end": 23458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23425,
											"end": 23458,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 23425,
											"end": 23458,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23425,
											"end": 23458,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23425,
											"end": 23489,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 23425,
											"end": 23489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23418,
											"end": 23489,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 22771,
											"end": 23538,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22771,
											"end": 23538,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23363,
											"end": 23504,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 23363,
											"end": 23504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 23530,
											"end": 23531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23530,
											"end": 23531,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 22771,
											"end": 23538,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22771,
											"end": 23538,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19853,
											"end": 20933,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 19853,
											"end": 20933,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3133,
											"end": 3134,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3714,
											"end": 3721,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3714,
											"end": 3721,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3714,
											"end": 3733,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3714,
											"end": 3733,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3706,
											"end": 3769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 3706,
											"end": 3769,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3706,
											"end": 3769,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3706,
											"end": 3769,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3706,
											"end": 3769,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3706,
											"end": 3769,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3706,
											"end": 3769,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3706,
											"end": 3769,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3706,
											"end": 3769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 3706,
											"end": 3769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3706,
											"end": 3769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 3706,
											"end": 3769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3706,
											"end": 3769,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 3706,
											"end": 3769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3133,
											"end": 3134,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3844,
											"end": 3851,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3844,
											"end": 3862,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 19935,
											"end": 19945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19927,
											"end": 19961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 19927,
											"end": 19961,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19927,
											"end": 19961,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19927,
											"end": 19961,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 19927,
											"end": 19961,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19927,
											"end": 19961,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4424,
											"end": 4426,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19927,
											"end": 19961,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19927,
											"end": 19961,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19927,
											"end": 19961,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4406,
											"end": 4427,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4463,
											"end": 4465,
											"name": "PUSH",
											"source": 1,
											"value": "B"
										},
										{
											"begin": 4443,
											"end": 4461,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4443,
											"end": 4461,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4443,
											"end": 4461,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4436,
											"end": 4466,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616D6F756E74206973203"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "AC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4482,
											"end": 4500,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4482,
											"end": 4500,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4482,
											"end": 4500,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4475,
											"end": 4516,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4533,
											"end": 4551,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4533,
											"end": 4551,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19927,
											"end": 19961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 4222,
											"end": 4557,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19927,
											"end": 19961,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 19927,
											"end": 19961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19971,
											"end": 19983,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 19971,
											"end": 19981,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 19971,
											"end": 19983,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19971,
											"end": 19983,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 19971,
											"end": 19983,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20026,
											"end": 20036,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 19993,
											"end": 20014,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20017,
											"end": 20037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20017,
											"end": 20037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20017,
											"end": 20037,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20017,
											"end": 20025,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 20017,
											"end": 20037,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20017,
											"end": 20037,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20017,
											"end": 20037,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20017,
											"end": 20037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20017,
											"end": 20037,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20051,
											"end": 20062,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20051,
											"end": 20062,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20051,
											"end": 20066,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20047,
											"end": 20266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 20047,
											"end": 20266,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20082,
											"end": 20103,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20106,
											"end": 20128,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 20117,
											"end": 20127,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 20106,
											"end": 20116,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 20106,
											"end": 20128,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20106,
											"end": 20128,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 20106,
											"end": 20128,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20082,
											"end": 20128,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20146,
											"end": 20163,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20146,
											"end": 20163,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20142,
											"end": 20256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 20142,
											"end": 20256,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20183,
											"end": 20241,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 20202,
											"end": 20213,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "812"
										},
										{
											"begin": 20215,
											"end": 20225,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 20227,
											"end": 20240,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20183,
											"end": 20201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 20183,
											"end": 20241,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20183,
											"end": 20241,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 20183,
											"end": 20241,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20068,
											"end": 20266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20047,
											"end": 20266,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 20047,
											"end": 20266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20279,
											"end": 20289,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20279,
											"end": 20289,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20275,
											"end": 20475,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 20275,
											"end": 20475,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20305,
											"end": 20378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 20337,
											"end": 20342,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "806"
										},
										{
											"begin": 20344,
											"end": 20354,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 20364,
											"end": 20368,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 20371,
											"end": 20377,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 20305,
											"end": 20336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 20305,
											"end": 20378,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20305,
											"end": 20378,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 20305,
											"end": 20378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20407,
											"end": 20413,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20392,
											"end": 20403,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 20392,
											"end": 20403,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20392,
											"end": 20413,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20392,
											"end": 20413,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20392,
											"end": 20413,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20392,
											"end": 20413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 20392,
											"end": 20413,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20392,
											"end": 20413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20392,
											"end": 20413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 20392,
											"end": 20413,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20392,
											"end": 20413,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 20392,
											"end": 20413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20392,
											"end": 20413,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20392,
											"end": 20413,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20392,
											"end": 20413,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20441,
											"end": 20452,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20441,
											"end": 20452,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20441,
											"end": 20464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 20441,
											"end": 20464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20457,
											"end": 20463,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20441,
											"end": 20456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 20441,
											"end": 20464,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20441,
											"end": 20464,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 20441,
											"end": 20464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20427,
											"end": 20464,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20427,
											"end": 20464,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 20275,
											"end": 20475,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 20275,
											"end": 20475,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20488,
											"end": 20499,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20488,
											"end": 20499,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20484,
											"end": 20805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 20484,
											"end": 20805,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20557,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20523,
											"end": 20557,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31A9108F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20523,
											"end": 20557,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20557,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20557,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20523,
											"end": 20557,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20557,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 160,
											"end": 185,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 160,
											"end": 185,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20561,
											"end": 20571,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 20561,
											"end": 20571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20532,
											"end": 20539,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "808"
										},
										{
											"begin": 20523,
											"end": 20548,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20548,
											"name": "PUSH",
											"source": 0,
											"value": "6352211E"
										},
										{
											"begin": 20523,
											"end": 20548,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 133,
											"end": 151,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 133,
											"end": 151,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20523,
											"end": 20557,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20523,
											"end": 20557,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20523,
											"end": 20557,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20557,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20557,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20557,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20557,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20557,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20557,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20557,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20557,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20557,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20557,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 20523,
											"end": 20557,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20557,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20557,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20523,
											"end": 20557,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20557,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20557,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20557,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20523,
											"end": 20557,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20557,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 20523,
											"end": 20557,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20557,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20557,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20557,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20557,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20557,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20523,
											"end": 20557,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20557,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20557,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 20523,
											"end": 20557,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20557,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 20523,
											"end": 20557,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20557,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20557,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20557,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20557,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20557,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20557,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20523,
											"end": 20557,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20557,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20557,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20557,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20557,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 20523,
											"end": 20557,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20557,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20557,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 20523,
											"end": 20557,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20523,
											"end": 20557,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 20523,
											"end": 20557,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20523,
											"end": 20571,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20523,
											"end": 20571,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20515,
											"end": 20572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 20515,
											"end": 20572,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20515,
											"end": 20572,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20515,
											"end": 20572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20515,
											"end": 20572,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20515,
											"end": 20572,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 20515,
											"end": 20572,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20599,
											"end": 20609,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 20590,
											"end": 20610,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20590,
											"end": 20610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20590,
											"end": 20610,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20590,
											"end": 20610,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20590,
											"end": 20598,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20590,
											"end": 20610,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20590,
											"end": 20610,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20590,
											"end": 20610,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20590,
											"end": 20610,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20590,
											"end": 20610,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20590,
											"end": 20610,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20586,
											"end": 20680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 20586,
											"end": 20680,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20644,
											"end": 20654,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 20635,
											"end": 20655,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20635,
											"end": 20655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20635,
											"end": 20655,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20635,
											"end": 20655,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20635,
											"end": 20643,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20635,
											"end": 20655,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20635,
											"end": 20655,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20635,
											"end": 20655,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20635,
											"end": 20655,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20635,
											"end": 20655,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20635,
											"end": 20665,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20635,
											"end": 20665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20635,
											"end": 20665,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 20586,
											"end": 20680,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 20586,
											"end": 20680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20710,
											"end": 20720,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20721,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20701,
											"end": 20721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20721,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20721,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20709,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20701,
											"end": 20721,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20701,
											"end": 20721,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20721,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20701,
											"end": 20721,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20721,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20721,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20732,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20701,
											"end": 20732,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 20693,
											"end": 20733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 20693,
											"end": 20733,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20693,
											"end": 20733,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20693,
											"end": 20733,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20693,
											"end": 20733,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20693,
											"end": 20733,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 20693,
											"end": 20733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20484,
											"end": 20805,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 20484,
											"end": 20805,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20484,
											"end": 20805,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 20484,
											"end": 20805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20783,
											"end": 20793,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 20774,
											"end": 20794,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20774,
											"end": 20794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20774,
											"end": 20794,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20774,
											"end": 20794,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20774,
											"end": 20782,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20774,
											"end": 20794,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20774,
											"end": 20794,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20774,
											"end": 20794,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20774,
											"end": 20794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20774,
											"end": 20794,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20774,
											"end": 20794,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20774,
											"end": 20794,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20484,
											"end": 20805,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 20484,
											"end": 20805,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20848,
											"end": 20864,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 20848,
											"end": 20864,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20832,
											"end": 20843,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20832,
											"end": 20843,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20832,
											"end": 20875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 20832,
											"end": 20875,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20870,
											"end": 20874,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 20870,
											"end": 20874,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20832,
											"end": 20865,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 20832,
											"end": 20865,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20832,
											"end": 20847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 20832,
											"end": 20865,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20832,
											"end": 20875,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 20832,
											"end": 20875,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20814,
											"end": 20829,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20814,
											"end": 20829,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20814,
											"end": 20829,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20814,
											"end": 20875,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 20890,
											"end": 20926,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20890,
											"end": 20926,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20890,
											"end": 20926,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 758,
											"end": 783,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 758,
											"end": 783,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 758,
											"end": 783,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 814,
											"end": 816,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 799,
											"end": 817,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 799,
											"end": 817,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 792,
											"end": 826,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 792,
											"end": 826,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 792,
											"end": 826,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20898,
											"end": 20908,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 20898,
											"end": 20908,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20890,
											"end": 20926,
											"name": "PUSH",
											"source": 0,
											"value": "90890809C654F11D6E72A28FA60149770A0D11EC6C92319D6CEB2BB0A4EA1A15"
										},
										{
											"begin": 20890,
											"end": 20926,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 731,
											"end": 749,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20890,
											"end": 20926,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20890,
											"end": 20926,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20890,
											"end": 20926,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20890,
											"end": 20926,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20890,
											"end": 20926,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20890,
											"end": 20926,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20890,
											"end": 20926,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3090,
											"end": 3091,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4017,
											"end": 4024,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4017,
											"end": 4039,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19853,
											"end": 20933,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 22179,
											"end": 22704,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 22179,
											"end": 22704,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22238,
											"end": 22253,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22238,
											"end": 22253,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22222,
											"end": 22234,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 22222,
											"end": 22253,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22218,
											"end": 22286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 22218,
											"end": 22286,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22179,
											"end": 22704,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 22218,
											"end": 22286,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 22218,
											"end": 22286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22300,
											"end": 22311,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 22300,
											"end": 22311,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22296,
											"end": 22393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 22296,
											"end": 22393,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22350,
											"end": 22362,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 22332,
											"end": 22347,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22332,
											"end": 22362,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 22179,
											"end": 22704,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 22296,
											"end": 22393,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 22296,
											"end": 22393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22423,
											"end": 22424,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22406,
											"end": 22419,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22406,
											"end": 22419,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22406,
											"end": 22424,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 22402,
											"end": 22457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 22402,
											"end": 22457,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22179,
											"end": 22704,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 22402,
											"end": 22457,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 22402,
											"end": 22457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22466,
											"end": 22477,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22480,
											"end": 22513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 22497,
											"end": 22512,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22497,
											"end": 22512,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22480,
											"end": 22492,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 22480,
											"end": 22496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 22480,
											"end": 22496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22480,
											"end": 22513,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22480,
											"end": 22513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22480,
											"end": 22513,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 22480,
											"end": 22513,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22480,
											"end": 22513,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22480,
											"end": 22513,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 22480,
											"end": 22513,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22466,
											"end": 22513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22466,
											"end": 22513,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22523,
											"end": 22542,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22545,
											"end": 22567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 22563,
											"end": 22566,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22545,
											"end": 22558,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 22545,
											"end": 22558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22545,
											"end": 22562,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 22545,
											"end": 22562,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22545,
											"end": 22567,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22545,
											"end": 22567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22545,
											"end": 22567,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 22545,
											"end": 22567,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22545,
											"end": 22567,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22545,
											"end": 22567,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 22545,
											"end": 22567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22523,
											"end": 22567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22523,
											"end": 22567,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 22597,
											"end": 22657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 22618,
											"end": 22656,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 22644,
											"end": 22655,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 22644,
											"end": 22655,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22618,
											"end": 22639,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 22634,
											"end": 22638,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 22618,
											"end": 22629,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 22618,
											"end": 22633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 22618,
											"end": 22633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22618,
											"end": 22639,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22618,
											"end": 22639,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22618,
											"end": 22639,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 22618,
											"end": 22639,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22618,
											"end": 22639,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22597,
											"end": 22657,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 22597,
											"end": 22657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22578,
											"end": 22594,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 22578,
											"end": 22657,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22685,
											"end": 22697,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 22667,
											"end": 22682,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22667,
											"end": 22697,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 22179,
											"end": 22704,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21255,
											"end": 22173,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 21255,
											"end": 22173,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3133,
											"end": 3134,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3714,
											"end": 3721,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3714,
											"end": 3721,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3714,
											"end": 3733,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3714,
											"end": 3733,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3706,
											"end": 3769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 3706,
											"end": 3769,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3706,
											"end": 3769,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3706,
											"end": 3769,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3706,
											"end": 3769,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3706,
											"end": 3769,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3706,
											"end": 3769,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3706,
											"end": 3769,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3706,
											"end": 3769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 3706,
											"end": 3769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3706,
											"end": 3769,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 3706,
											"end": 3769,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3706,
											"end": 3769,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 3706,
											"end": 3769,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3133,
											"end": 3134,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3844,
											"end": 3851,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3844,
											"end": 3862,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 3862,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 3862,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21369,
											"end": 21379,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 21360,
											"end": 21380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21360,
											"end": 21380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21360,
											"end": 21368,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 21360,
											"end": 21380,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21360,
											"end": 21380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21360,
											"end": 21380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21360,
											"end": 21380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21360,
											"end": 21380,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21398,
											"end": 21409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21398,
											"end": 21409,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21398,
											"end": 21420,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 21398,
											"end": 21420,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21390,
											"end": 21447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 21390,
											"end": 21447,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21390,
											"end": 21447,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21390,
											"end": 21447,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21390,
											"end": 21447,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21390,
											"end": 21447,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4764,
											"end": 4766,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21390,
											"end": 21447,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21390,
											"end": 21447,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21390,
											"end": 21447,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4746,
											"end": 4767,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4803,
											"end": 4805,
											"name": "PUSH",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 4783,
											"end": 4801,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4783,
											"end": 4801,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4783,
											"end": 4801,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4776,
											"end": 4806,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1DDA5D1A191C985DD4DDD85C0E881B9BDD0819DBDBD9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "52"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4822,
											"end": 4840,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 4822,
											"end": 4840,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4822,
											"end": 4840,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4815,
											"end": 4867,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4884,
											"end": 4902,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 4884,
											"end": 4902,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21390,
											"end": 21447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 4562,
											"end": 4908,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21390,
											"end": 21447,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 21390,
											"end": 21447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21457,
											"end": 21469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 21457,
											"end": 21467,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 21457,
											"end": 21469,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21457,
											"end": 21469,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 21457,
											"end": 21469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21479,
											"end": 21500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21503,
											"end": 21525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 21514,
											"end": 21524,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 21503,
											"end": 21513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 21503,
											"end": 21525,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21503,
											"end": 21525,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 21503,
											"end": 21525,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21479,
											"end": 21525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21539,
											"end": 21556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21539,
											"end": 21556,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21535,
											"end": 21641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 21535,
											"end": 21641,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21572,
											"end": 21630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 21591,
											"end": 21602,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "812"
										},
										{
											"begin": 21604,
											"end": 21614,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 21616,
											"end": 21629,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21572,
											"end": 21590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 21572,
											"end": 21630,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21572,
											"end": 21630,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 21572,
											"end": 21630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21654,
											"end": 21665,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21654,
											"end": 21665,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21650,
											"end": 21851,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 21650,
											"end": 21851,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21695,
											"end": 21706,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21695,
											"end": 21706,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21695,
											"end": 21719,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 21695,
											"end": 21719,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21711,
											"end": 21718,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21695,
											"end": 21710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 21695,
											"end": 21719,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21695,
											"end": 21719,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 21695,
											"end": 21719,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21681,
											"end": 21719,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21681,
											"end": 21719,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21747,
											"end": 21758,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 21747,
											"end": 21758,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21747,
											"end": 21771,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 21747,
											"end": 21771,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21763,
											"end": 21770,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21747,
											"end": 21762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 21747,
											"end": 21771,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21747,
											"end": 21771,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 21747,
											"end": 21771,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21733,
											"end": 21744,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 21733,
											"end": 21771,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21785,
											"end": 21840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 21813,
											"end": 21818,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "806"
										},
										{
											"begin": 21820,
											"end": 21830,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 21832,
											"end": 21839,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 21785,
											"end": 21812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 21785,
											"end": 21840,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21785,
											"end": 21840,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 21785,
											"end": 21840,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21895,
											"end": 21911,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 21895,
											"end": 21911,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21879,
											"end": 21890,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21879,
											"end": 21890,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21879,
											"end": 21922,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 21879,
											"end": 21922,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21917,
											"end": 21921,
											"name": "PUSH",
											"source": 0,
											"value": "E8D4A51000"
										},
										{
											"begin": 21917,
											"end": 21921,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21879,
											"end": 21912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 21879,
											"end": 21912,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21879,
											"end": 21894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 21879,
											"end": 21912,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21879,
											"end": 21922,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 21879,
											"end": 21922,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21861,
											"end": 21876,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21861,
											"end": 21876,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21861,
											"end": 21876,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21861,
											"end": 21922,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21937,
											"end": 21948,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21937,
											"end": 21948,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21933,
											"end": 22114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 21933,
											"end": 22114,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21992,
											"end": 22002,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 21983,
											"end": 22003,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21983,
											"end": 22003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21983,
											"end": 22003,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21983,
											"end": 22003,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21983,
											"end": 21991,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21983,
											"end": 22003,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21983,
											"end": 22003,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21983,
											"end": 22003,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21983,
											"end": 22003,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21983,
											"end": 22003,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21983,
											"end": 22003,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21972,
											"end": 22003,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21972,
											"end": 22003,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 21964,
											"end": 22004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 21964,
											"end": 22004,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21964,
											"end": 22004,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21964,
											"end": 22004,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21964,
											"end": 22004,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21964,
											"end": 22004,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 21964,
											"end": 22004,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22027,
											"end": 22037,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 22041,
											"end": 22042,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22018,
											"end": 22038,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22018,
											"end": 22038,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22018,
											"end": 22038,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22018,
											"end": 22026,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22018,
											"end": 22038,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22018,
											"end": 22038,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22018,
											"end": 22038,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22018,
											"end": 22038,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22018,
											"end": 22038,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22018,
											"end": 22042,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 21933,
											"end": 22114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 21933,
											"end": 22114,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21933,
											"end": 22114,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 21933,
											"end": 22114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22092,
											"end": 22102,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 22083,
											"end": 22103,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22083,
											"end": 22103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22083,
											"end": 22103,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22083,
											"end": 22103,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22083,
											"end": 22091,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22083,
											"end": 22103,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22083,
											"end": 22103,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22083,
											"end": 22103,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22083,
											"end": 22103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22083,
											"end": 22103,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22083,
											"end": 22103,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22083,
											"end": 22103,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21933,
											"end": 22114,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 21933,
											"end": 22114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22128,
											"end": 22166,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22128,
											"end": 22166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22128,
											"end": 22166,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 758,
											"end": 783,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 758,
											"end": 783,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 758,
											"end": 783,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 814,
											"end": 816,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 799,
											"end": 817,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 799,
											"end": 817,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 792,
											"end": 826,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 792,
											"end": 826,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 792,
											"end": 826,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22137,
											"end": 22147,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 22137,
											"end": 22147,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22128,
											"end": 22166,
											"name": "PUSH",
											"source": 0,
											"value": "F279E6A1F5E320CCA91135676D9CB6E44CA8A08C0B88342BCDB1144F6511B568"
										},
										{
											"begin": 22128,
											"end": 22166,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 731,
											"end": 749,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22128,
											"end": 22166,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22128,
											"end": 22166,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22128,
											"end": 22166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22128,
											"end": 22166,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22128,
											"end": 22166,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22128,
											"end": 22166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22128,
											"end": 22166,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3090,
											"end": 3091,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4017,
											"end": 4024,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4017,
											"end": 4039,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21255,
											"end": 22173,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10336,
											"end": 10432,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 10336,
											"end": 10432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10394,
											"end": 10401,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10420,
											"end": 10425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 10424,
											"end": 10425,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10421,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10420,
											"end": 10425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 10420,
											"end": 10425,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10721,
											"end": 10817,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 10721,
											"end": 10817,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10779,
											"end": 10786,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10805,
											"end": 10810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 10809,
											"end": 10810,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10805,
											"end": 10806,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10805,
											"end": 10810,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 10805,
											"end": 10810,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 583,
											"end": 687,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 583,
											"end": 687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 641,
											"end": 648,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 671,
											"end": 672,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 667,
											"end": 668,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 667,
											"end": 672,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 667,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 667,
											"end": 680,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 679,
											"end": 680,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 667,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 667,
											"end": 680,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 667,
											"end": 680,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 667,
											"end": 680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 675,
											"end": 676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 675,
											"end": 676,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 583,
											"end": 687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 583,
											"end": 687,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9993,
											"end": 10089,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 9993,
											"end": 10089,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10051,
											"end": 10058,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10077,
											"end": 10082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 10081,
											"end": 10082,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10077,
											"end": 10078,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10077,
											"end": 10082,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 10077,
											"end": 10082,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9626,
											"end": 9722,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 9626,
											"end": 9722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9684,
											"end": 9691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9710,
											"end": 9715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 9714,
											"end": 9715,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9710,
											"end": 9711,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 9710,
											"end": 9715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 9710,
											"end": 9715,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18065,
											"end": 18448,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 18065,
											"end": 18448,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18161,
											"end": 18199,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 18184,
											"end": 18189,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18191,
											"end": 18198,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18161,
											"end": 18183,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 18161,
											"end": 18199,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18161,
											"end": 18199,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 18161,
											"end": 18199,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18223,
											"end": 18261,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18223,
											"end": 18261,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 18223,
											"end": 18261,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18223,
											"end": 18261,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18255,
											"end": 18259,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 18223,
											"end": 18261,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18223,
											"end": 18261,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18223,
											"end": 18261,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1219,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18209,
											"end": 18220,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18209,
											"end": 18220,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18223,
											"end": 18246,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18223,
											"end": 18246,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18223,
											"end": 18246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18223,
											"end": 18246,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 18223,
											"end": 18246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1159,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1141,
											"end": 1159,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18223,
											"end": 18261,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18223,
											"end": 18261,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18223,
											"end": 18261,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18223,
											"end": 18261,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18223,
											"end": 18261,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18223,
											"end": 18261,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18223,
											"end": 18261,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18223,
											"end": 18261,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 18223,
											"end": 18261,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 18223,
											"end": 18261,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 18223,
											"end": 18261,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18223,
											"end": 18261,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18223,
											"end": 18261,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18223,
											"end": 18261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 18223,
											"end": 18261,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18223,
											"end": 18261,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18223,
											"end": 18261,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18223,
											"end": 18261,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18223,
											"end": 18261,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 18223,
											"end": 18261,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18223,
											"end": 18261,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18223,
											"end": 18261,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18223,
											"end": 18261,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 18223,
											"end": 18261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18223,
											"end": 18261,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18223,
											"end": 18261,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18223,
											"end": 18261,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18223,
											"end": 18261,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18223,
											"end": 18261,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18223,
											"end": 18261,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18223,
											"end": 18261,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 18223,
											"end": 18261,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 18223,
											"end": 18261,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 18223,
											"end": 18261,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 18223,
											"end": 18261,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18223,
											"end": 18261,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18223,
											"end": 18261,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18223,
											"end": 18261,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18223,
											"end": 18261,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18223,
											"end": 18261,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18223,
											"end": 18261,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18223,
											"end": 18261,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18223,
											"end": 18261,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18223,
											"end": 18261,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18223,
											"end": 18261,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18223,
											"end": 18261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18223,
											"end": 18261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 18223,
											"end": 18261,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18223,
											"end": 18261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18223,
											"end": 18261,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 18223,
											"end": 18261,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18223,
											"end": 18261,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 18223,
											"end": 18261,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18209,
											"end": 18261,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18209,
											"end": 18261,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18285,
											"end": 18288,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18275,
											"end": 18282,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18275,
											"end": 18288,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 18271,
											"end": 18328,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18271,
											"end": 18328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 18271,
											"end": 18328,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18314,
											"end": 18317,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18304,
											"end": 18317,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18304,
											"end": 18317,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18271,
											"end": 18328,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 18271,
											"end": 18328,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18347,
											"end": 18379,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 18362,
											"end": 18369,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18371,
											"end": 18378,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18347,
											"end": 18361,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 18347,
											"end": 18379,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18347,
											"end": 18379,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 18347,
											"end": 18379,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18337,
											"end": 18379,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18337,
											"end": 18379,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18389,
											"end": 18441,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 18417,
											"end": 18422,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18424,
											"end": 18431,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18433,
											"end": 18440,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18389,
											"end": 18416,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 18389,
											"end": 18441,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18389,
											"end": 18441,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 18389,
											"end": 18441,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18151,
											"end": 18448,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18065,
											"end": 18448,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18065,
											"end": 18448,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18065,
											"end": 18448,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18065,
											"end": 18448,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15552,
											"end": 15950,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 15552,
											"end": 15950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15775,
											"end": 15826,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15775,
											"end": 15826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15775,
											"end": 15826,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5301,
											"end": 5316,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5301,
											"end": 5316,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5301,
											"end": 5316,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15775,
											"end": 15826,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 15775,
											"end": 15826,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15775,
											"end": 15826,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5283,
											"end": 5317,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5353,
											"end": 5368,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5353,
											"end": 5368,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5353,
											"end": 5368,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5333,
											"end": 5351,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 5333,
											"end": 5351,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5333,
											"end": 5351,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5326,
											"end": 5369,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5385,
											"end": 5403,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5385,
											"end": 5403,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5385,
											"end": 5403,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5385,
											"end": 5403,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5378,
											"end": 5412,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5378,
											"end": 5412,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5378,
											"end": 5412,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15775,
											"end": 15826,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15775,
											"end": 15826,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15775,
											"end": 15826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15775,
											"end": 15826,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15775,
											"end": 15826,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15775,
											"end": 15826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15775,
											"end": 15826,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15775,
											"end": 15826,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15775,
											"end": 15826,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15775,
											"end": 15826,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5218,
											"end": 5236,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 5218,
											"end": 5236,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5218,
											"end": 5236,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5218,
											"end": 5236,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15775,
											"end": 15826,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15775,
											"end": 15826,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15775,
											"end": 15826,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15775,
											"end": 15826,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15775,
											"end": 15826,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15775,
											"end": 15826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15775,
											"end": 15826,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15775,
											"end": 15826,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15775,
											"end": 15826,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 15775,
											"end": 15826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15775,
											"end": 15826,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 15764,
											"end": 15774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15764,
											"end": 15774,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 15764,
											"end": 15774,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15764,
											"end": 15774,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15775,
											"end": 15826,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "tag",
											"source": 0,
											"value": "298"
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15764,
											"end": 15827,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15728,
											"end": 15827,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15728,
											"end": 15827,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15728,
											"end": 15827,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15728,
											"end": 15827,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15845,
											"end": 15852,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15845,
											"end": 15902,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15845,
											"end": 15902,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15845,
											"end": 15902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 15845,
											"end": 15902,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15857,
											"end": 15868,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15857,
											"end": 15868,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15857,
											"end": 15873,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15857,
											"end": 15873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15857,
											"end": 15901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 15857,
											"end": 15901,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15857,
											"end": 15901,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15888,
											"end": 15892,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15877,
											"end": 15901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15877,
											"end": 15901,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15877,
											"end": 15901,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15877,
											"end": 15901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15877,
											"end": 15901,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15877,
											"end": 15901,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15877,
											"end": 15901,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15877,
											"end": 15901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15877,
											"end": 15901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 15877,
											"end": 15901,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15877,
											"end": 15901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15877,
											"end": 15901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 15877,
											"end": 15901,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15877,
											"end": 15901,
											"name": "tag",
											"source": 0,
											"value": "301"
										},
										{
											"begin": 15877,
											"end": 15901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15837,
											"end": 15943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 15837,
											"end": 15943,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15837,
											"end": 15943,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15837,
											"end": 15943,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15837,
											"end": 15943,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15837,
											"end": 15943,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6338,
											"end": 6340,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15837,
											"end": 15943,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15837,
											"end": 15943,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15837,
											"end": 15943,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6320,
											"end": 6341,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6377,
											"end": 6379,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 6357,
											"end": 6375,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6357,
											"end": 6375,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6357,
											"end": 6375,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6350,
											"end": 6380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6416,
											"end": 6450,
											"name": "PUSH",
											"source": 1,
											"value": "5472616E7366657248656C7065723A205452414E534645525F46524F4D5F4641"
										},
										{
											"begin": 6396,
											"end": 6414,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6396,
											"end": 6414,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6396,
											"end": 6414,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6389,
											"end": 6451,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "12531151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6467,
											"end": 6485,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6467,
											"end": 6485,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6467,
											"end": 6485,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6460,
											"end": 6494,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6511,
											"end": 6530,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 6511,
											"end": 6530,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15837,
											"end": 15943,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 6136,
											"end": 6536,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15837,
											"end": 15943,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 15837,
											"end": 15943,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15640,
											"end": 15950,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15640,
											"end": 15950,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15552,
											"end": 15950,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15552,
											"end": 15950,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15552,
											"end": 15950,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15552,
											"end": 15950,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15552,
											"end": 15950,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15189,
											"end": 15546,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 15189,
											"end": 15546,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15382,
											"end": 15427,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15382,
											"end": 15427,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15382,
											"end": 15427,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6733,
											"end": 6765,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6733,
											"end": 6765,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6733,
											"end": 6765,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15382,
											"end": 15427,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 15382,
											"end": 15427,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15382,
											"end": 15427,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6715,
											"end": 6766,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6782,
											"end": 6800,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 6782,
											"end": 6800,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6782,
											"end": 6800,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6782,
											"end": 6800,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6775,
											"end": 6809,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6775,
											"end": 6809,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6775,
											"end": 6809,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15382,
											"end": 15427,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15382,
											"end": 15427,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15382,
											"end": 15427,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15382,
											"end": 15427,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15382,
											"end": 15427,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15382,
											"end": 15427,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15382,
											"end": 15427,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15382,
											"end": 15427,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15382,
											"end": 15427,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15382,
											"end": 15427,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6688,
											"end": 6706,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15382,
											"end": 15427,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15382,
											"end": 15427,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15382,
											"end": 15427,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15382,
											"end": 15427,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15382,
											"end": 15427,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15382,
											"end": 15427,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15382,
											"end": 15427,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15382,
											"end": 15427,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15382,
											"end": 15427,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 15382,
											"end": 15427,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15382,
											"end": 15427,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": 15371,
											"end": 15381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15371,
											"end": 15381,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 15371,
											"end": 15381,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15371,
											"end": 15381,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15382,
											"end": 15427,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "295"
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "tag",
											"source": 0,
											"value": "309"
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15371,
											"end": 15428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15335,
											"end": 15428,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15335,
											"end": 15428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15335,
											"end": 15428,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15335,
											"end": 15428,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15446,
											"end": 15453,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15446,
											"end": 15503,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15446,
											"end": 15503,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15446,
											"end": 15503,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 15446,
											"end": 15503,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15458,
											"end": 15469,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15458,
											"end": 15469,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15458,
											"end": 15474,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 15458,
											"end": 15474,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15458,
											"end": 15502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 15458,
											"end": 15502,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15458,
											"end": 15502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15489,
											"end": 15493,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15478,
											"end": 15502,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15478,
											"end": 15502,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15478,
											"end": 15502,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15478,
											"end": 15502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15478,
											"end": 15502,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15478,
											"end": 15502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15478,
											"end": 15502,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15478,
											"end": 15502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15478,
											"end": 15502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 15478,
											"end": 15502,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15478,
											"end": 15502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15478,
											"end": 15502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 15478,
											"end": 15502,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15478,
											"end": 15502,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 15478,
											"end": 15502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15438,
											"end": 15539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 15438,
											"end": 15539,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15438,
											"end": 15539,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15438,
											"end": 15539,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15438,
											"end": 15539,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15438,
											"end": 15539,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7022,
											"end": 7024,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15438,
											"end": 15539,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15438,
											"end": 15539,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15438,
											"end": 15539,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7004,
											"end": 7025,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7061,
											"end": 7063,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 7041,
											"end": 7059,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 7041,
											"end": 7059,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7041,
											"end": 7059,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7034,
											"end": 7064,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7100,
											"end": 7133,
											"name": "PUSH",
											"source": 1,
											"value": "5472616E7366657248656C7065723A205452414E534645525F4641494C454400"
										},
										{
											"begin": 7080,
											"end": 7098,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7080,
											"end": 7098,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7080,
											"end": 7098,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7134,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7151,
											"end": 7169,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7151,
											"end": 7169,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15438,
											"end": 15539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 6820,
											"end": 7175,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15438,
											"end": 15539,
											"name": "tag",
											"source": 0,
											"value": "316"
										},
										{
											"begin": 15438,
											"end": 15539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15259,
											"end": 15546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15259,
											"end": 15546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15189,
											"end": 15546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15189,
											"end": 15546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15189,
											"end": 15546,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15189,
											"end": 15546,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 17796,
											"end": 18059,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 17796,
											"end": 18059,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17892,
											"end": 17930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17892,
											"end": 17930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17892,
											"end": 17930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17892,
											"end": 17930,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17924,
											"end": 17928,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 17892,
											"end": 17930,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17892,
											"end": 17930,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17892,
											"end": 17930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1168,
											"end": 1219,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17878,
											"end": 17889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17878,
											"end": 17889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17892,
											"end": 17915,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17892,
											"end": 17915,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17892,
											"end": 17915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17892,
											"end": 17915,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 17892,
											"end": 17915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1141,
											"end": 1159,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1141,
											"end": 1159,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17892,
											"end": 17930,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17892,
											"end": 17930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17892,
											"end": 17930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17892,
											"end": 17930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17892,
											"end": 17930,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17892,
											"end": 17930,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17892,
											"end": 17930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17892,
											"end": 17930,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17892,
											"end": 17930,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 17892,
											"end": 17930,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 17892,
											"end": 17930,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17892,
											"end": 17930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17892,
											"end": 17930,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17892,
											"end": 17930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 17892,
											"end": 17930,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17892,
											"end": 17930,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17892,
											"end": 17930,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17892,
											"end": 17930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17892,
											"end": 17930,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 17892,
											"end": 17930,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17892,
											"end": 17930,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17892,
											"end": 17930,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17892,
											"end": 17930,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 17892,
											"end": 17930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17892,
											"end": 17930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17892,
											"end": 17930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17892,
											"end": 17930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17892,
											"end": 17930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17892,
											"end": 17930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17892,
											"end": 17930,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17892,
											"end": 17930,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 17892,
											"end": 17930,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 17892,
											"end": 17930,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 17892,
											"end": 17930,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 17892,
											"end": 17930,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17892,
											"end": 17930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17892,
											"end": 17930,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17892,
											"end": 17930,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17892,
											"end": 17930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17892,
											"end": 17930,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17892,
											"end": 17930,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17892,
											"end": 17930,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17892,
											"end": 17930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17892,
											"end": 17930,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17892,
											"end": 17930,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17892,
											"end": 17930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17892,
											"end": 17930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 17892,
											"end": 17930,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17892,
											"end": 17930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17892,
											"end": 17930,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 17892,
											"end": 17930,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17892,
											"end": 17930,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 17892,
											"end": 17930,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17878,
											"end": 17930,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17878,
											"end": 17930,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17950,
											"end": 17957,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17944,
											"end": 17947,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17944,
											"end": 17957,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17940,
											"end": 18053,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17940,
											"end": 18053,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 17940,
											"end": 18053,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17973,
											"end": 18042,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 18005,
											"end": 18010,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18012,
											"end": 18017,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "810"
										},
										{
											"begin": 18027,
											"end": 18031,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 18034,
											"end": 18041,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17973,
											"end": 18004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 17973,
											"end": 18042,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17973,
											"end": 18042,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 17973,
											"end": 18042,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17868,
											"end": 18059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17796,
											"end": 18059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17796,
											"end": 18059,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17796,
											"end": 18059,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 196,
											"end": 327,
											"name": "tag",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 196,
											"end": 327,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 271,
											"end": 302,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 271,
											"end": 302,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 261,
											"end": 303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 261,
											"end": 303,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 251,
											"end": 321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 251,
											"end": 321,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 317,
											"end": 318,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 314,
											"end": 315,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 307,
											"end": 319,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 332,
											"end": 579,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 332,
											"end": 579,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 391,
											"end": 397,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 444,
											"end": 446,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 432,
											"end": 441,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 423,
											"end": 430,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 419,
											"end": 442,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 415,
											"end": 447,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 412,
											"end": 464,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 412,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 412,
											"end": 464,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 460,
											"end": 461,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 457,
											"end": 458,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 450,
											"end": 462,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 412,
											"end": 464,
											"name": "tag",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 412,
											"end": 464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 499,
											"end": 508,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 486,
											"end": 509,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 518,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 543,
											"end": 548,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 518,
											"end": 549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 518,
											"end": 549,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 837,
											"end": 1017,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 837,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 896,
											"end": 902,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 917,
											"end": 969,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 917,
											"end": 969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 917,
											"end": 969,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 965,
											"end": 966,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 962,
											"end": 963,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 955,
											"end": 967,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 917,
											"end": 969,
											"name": "tag",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 917,
											"end": 969,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 988,
											"end": 1011,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1011,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 837,
											"end": 1017,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 837,
											"end": 1017,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1230,
											"end": 1545,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1230,
											"end": 1545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1298,
											"end": 1304,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1306,
											"end": 1312,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1359,
											"end": 1361,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1347,
											"end": 1356,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1338,
											"end": 1345,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1334,
											"end": 1357,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1330,
											"end": 1362,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1379,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 1327,
											"end": 1379,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1375,
											"end": 1376,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1372,
											"end": 1373,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1365,
											"end": 1377,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1327,
											"end": 1379,
											"name": "tag",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 1327,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1414,
											"end": 1423,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1401,
											"end": 1424,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1433,
											"end": 1464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 1458,
											"end": 1463,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1433,
											"end": 1464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 1433,
											"end": 1464,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1433,
											"end": 1464,
											"name": "tag",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 1433,
											"end": 1464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1488,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1537,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1520,
											"end": 1538,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1520,
											"end": 1538,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1520,
											"end": 1538,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1520,
											"end": 1538,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1507,
											"end": 1539,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1507,
											"end": 1539,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1230,
											"end": 1545,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1550,
											"end": 1798,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 1550,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1618,
											"end": 1624,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1626,
											"end": 1632,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 1681,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1667,
											"end": 1676,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1658,
											"end": 1665,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1654,
											"end": 1677,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1650,
											"end": 1682,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1699,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 1647,
											"end": 1699,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1695,
											"end": 1696,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1692,
											"end": 1693,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1697,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1647,
											"end": 1699,
											"name": "tag",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 1647,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1718,
											"end": 1741,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1718,
											"end": 1741,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1718,
											"end": 1741,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1788,
											"end": 1790,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1773,
											"end": 1791,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1773,
											"end": 1791,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1773,
											"end": 1791,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1792,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1760,
											"end": 1792,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1550,
											"end": 1798,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1803,
											"end": 1930,
											"name": "tag",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 1803,
											"end": 1930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1864,
											"end": 1874,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 1859,
											"end": 1862,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 1855,
											"end": 1875,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 1852,
											"end": 1853,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1845,
											"end": 1876,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1895,
											"end": 1899,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1892,
											"end": 1893,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1885,
											"end": 1900,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1919,
											"end": 1923,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1916,
											"end": 1917,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1909,
											"end": 1924,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1935,
											"end": 2103,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 1935,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1975,
											"end": 1982,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2042,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2037,
											"end": 2038,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2033,
											"end": 2039,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2029,
											"end": 2043,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2026,
											"end": 2027,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2023,
											"end": 2044,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2018,
											"end": 2019,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2020,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2021,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2045,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1997,
											"end": 2068,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1997,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 1997,
											"end": 2068,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2048,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 2048,
											"end": 2066,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 2048,
											"end": 2066,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2048,
											"end": 2066,
											"name": "tag",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 2048,
											"end": 2066,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2088,
											"end": 2097,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2088,
											"end": 2097,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1935,
											"end": 2103,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2108,
											"end": 2325,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 2108,
											"end": 2325,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2148,
											"end": 2149,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2174,
											"end": 2175,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2164,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 2164,
											"end": 2296,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2218,
											"end": 2228,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2213,
											"end": 2216,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2209,
											"end": 2229,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2206,
											"end": 2207,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2199,
											"end": 2230,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2253,
											"end": 2257,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2250,
											"end": 2251,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2243,
											"end": 2258,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2281,
											"end": 2285,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2278,
											"end": 2279,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2271,
											"end": 2286,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2164,
											"end": 2296,
											"name": "tag",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 2164,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2310,
											"end": 2319,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2310,
											"end": 2319,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2108,
											"end": 2325,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2330,
											"end": 2514,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 2330,
											"end": 2514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2400,
											"end": 2406,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2453,
											"end": 2455,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2441,
											"end": 2450,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2432,
											"end": 2439,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2428,
											"end": 2451,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2424,
											"end": 2456,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2421,
											"end": 2473,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2421,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 2421,
											"end": 2473,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2469,
											"end": 2470,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2466,
											"end": 2467,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2459,
											"end": 2471,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2421,
											"end": 2473,
											"name": "tag",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 2421,
											"end": 2473,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2492,
											"end": 2508,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2492,
											"end": 2508,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2330,
											"end": 2514,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2330,
											"end": 2514,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2519,
											"end": 2770,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 2519,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2589,
											"end": 2595,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2642,
											"end": 2644,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2630,
											"end": 2639,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2621,
											"end": 2628,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2617,
											"end": 2640,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2613,
											"end": 2645,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2610,
											"end": 2662,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2610,
											"end": 2662,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 2610,
											"end": 2662,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2658,
											"end": 2659,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2655,
											"end": 2656,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2648,
											"end": 2660,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2610,
											"end": 2662,
											"name": "tag",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 2610,
											"end": 2662,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2699,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2684,
											"end": 2700,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2709,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 2734,
											"end": 2739,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2709,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 2709,
											"end": 2740,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3054,
											"end": 3182,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 3054,
											"end": 3182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3094,
											"end": 3097,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3125,
											"end": 3126,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3121,
											"end": 3127,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3118,
											"end": 3119,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3115,
											"end": 3128,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3112,
											"end": 3151,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3112,
											"end": 3151,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 3112,
											"end": 3151,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3131,
											"end": 3149,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 3131,
											"end": 3149,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 3131,
											"end": 3149,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3131,
											"end": 3149,
											"name": "tag",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 3131,
											"end": 3149,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3167,
											"end": 3176,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3176,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3054,
											"end": 3182,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3862,
											"end": 4217,
											"name": "tag",
											"source": 1,
											"value": "172"
										},
										{
											"begin": 3862,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4064,
											"end": 4066,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4046,
											"end": 4067,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4067,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4046,
											"end": 4067,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4103,
											"end": 4105,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4083,
											"end": 4101,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4083,
											"end": 4101,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4083,
											"end": 4101,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4076,
											"end": 4106,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4142,
											"end": 4175,
											"name": "PUSH",
											"source": 1,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 4137,
											"end": 4139,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4122,
											"end": 4140,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4122,
											"end": 4140,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4115,
											"end": 4176,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4208,
											"end": 4210,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4193,
											"end": 4211,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4193,
											"end": 4211,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3862,
											"end": 4217,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4913,
											"end": 5038,
											"name": "tag",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 4913,
											"end": 5038,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4953,
											"end": 4957,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4981,
											"end": 4982,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4978,
											"end": 4979,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4975,
											"end": 4983,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4972,
											"end": 5006,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4972,
											"end": 5006,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 4972,
											"end": 5006,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4986,
											"end": 5004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 4986,
											"end": 5004,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 4986,
											"end": 5004,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4986,
											"end": 5004,
											"name": "tag",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 4986,
											"end": 5004,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5023,
											"end": 5032,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5023,
											"end": 5032,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4913,
											"end": 5038,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5423,
											"end": 5849,
											"name": "tag",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 5423,
											"end": 5849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5552,
											"end": 5555,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5590,
											"end": 5596,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5584,
											"end": 5597,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5615,
											"end": 5616,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5625,
											"end": 5754,
											"name": "tag",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 5625,
											"end": 5754,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5639,
											"end": 5645,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5636,
											"end": 5637,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5633,
											"end": 5646,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5625,
											"end": 5754,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5625,
											"end": 5754,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 5625,
											"end": 5754,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5737,
											"end": 5741,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5721,
											"end": 5735,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5721,
											"end": 5735,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5721,
											"end": 5735,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5717,
											"end": 5742,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5717,
											"end": 5742,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5711,
											"end": 5743,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5698,
											"end": 5709,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5698,
											"end": 5709,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5698,
											"end": 5709,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5691,
											"end": 5744,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5654,
											"end": 5666,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5625,
											"end": 5754,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 5625,
											"end": 5754,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5625,
											"end": 5754,
											"name": "tag",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 5625,
											"end": 5754,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5772,
											"end": 5778,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5769,
											"end": 5770,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5766,
											"end": 5779,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5763,
											"end": 5811,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5763,
											"end": 5811,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 5763,
											"end": 5811,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5798,
											"end": 5804,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5793,
											"end": 5796,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5789,
											"end": 5805,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5782,
											"end": 5809,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5763,
											"end": 5811,
											"name": "tag",
											"source": 1,
											"value": "372"
										},
										{
											"begin": 5763,
											"end": 5811,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5827,
											"end": 5843,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5827,
											"end": 5843,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5827,
											"end": 5843,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5827,
											"end": 5843,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5827,
											"end": 5843,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5423,
											"end": 5849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5423,
											"end": 5849,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5854,
											"end": 6131,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 5854,
											"end": 6131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5921,
											"end": 5927,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5974,
											"end": 5976,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5962,
											"end": 5971,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5953,
											"end": 5960,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5949,
											"end": 5972,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5945,
											"end": 5977,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5994,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5994,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 5942,
											"end": 5994,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5990,
											"end": 5991,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5987,
											"end": 5988,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5980,
											"end": 5992,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5942,
											"end": 5994,
											"name": "tag",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 5942,
											"end": 5994,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6022,
											"end": 6031,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6016,
											"end": 6032,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6075,
											"end": 6080,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 6081,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6061,
											"end": 6082,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6054,
											"end": 6059,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6051,
											"end": 6083,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6041,
											"end": 6101,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 6041,
											"end": 6101,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6097,
											"end": 6098,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6094,
											"end": 6095,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6087,
											"end": 6099,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"accTokenPerShare()": "8f662915",
							"boost()": "a66f42c0",
							"deposit(uint256,uint256)": "e2bbb158",
							"depositAll(uint256)": "c6f678bd",
							"derivedBalance(address,uint256)": "892f4805",
							"getReward(address)": "c00007b0",
							"lastRewardBlock()": "a9f8d181",
							"notifyRewardAmount(address,uint256)": "b66503cf",
							"pending(address)": "5eebea20",
							"pendingMax(address)": "c73b399b",
							"rewardToken()": "f7c618c1",
							"stake()": "3a4b66f1",
							"tokenIds(address)": "fc97a303",
							"tokenPerBlock()": "4198709a",
							"totalSupply()": "18160ddd",
							"updatePool()": "e3161ddd",
							"userInfo(address)": "1959a002",
							"veToken()": "3b92eb23",
							"withdraw(uint256)": "2e1a7d4d",
							"withdrawAll()": "853828b6",
							"withdrawToken(uint256,uint256)": "fdb483c7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stake\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"__ve\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_boost\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reward\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ClaimRewards\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reward\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardRate\",\"type\":\"uint256\"}],\"name\":\"NotifyReward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"accTokenPerShare\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"boost\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"depositAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_balance\",\"type\":\"uint256\"}],\"name\":\"derivedBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastRewardBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardRate\",\"type\":\"uint256\"}],\"name\":\"notifyRewardAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pending\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"pendingMax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stake\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokenIds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenPerBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updatePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"veToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Gauge.sol\":\"Gauge\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Gauge.sol\":{\"keccak256\":\"0xb425a718bd47c1a7110638e2ea2ba5178c0de85b43a11ec99790f94fd4295f10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://797b9be765251d17dca342fdfbe95ed326ba2c71fcb2ea44d74dcbf5d7f2efdb\",\"dweb:/ipfs/QmUTBAaDtPc2RcXr2pxkvNuX2HDG789cgs8ipZWAahCknq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 97,
								"contract": "contracts/Gauge.sol:Gauge",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 821,
								"contract": "contracts/Gauge.sol:Gauge",
								"label": "tokenIds",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 823,
								"contract": "contracts/Gauge.sol:Gauge",
								"label": "tokenPerBlock",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 825,
								"contract": "contracts/Gauge.sol:Gauge",
								"label": "accTokenPerShare",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 827,
								"contract": "contracts/Gauge.sol:Gauge",
								"label": "lastRewardBlock",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 829,
								"contract": "contracts/Gauge.sol:Gauge",
								"label": "totalSupply",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 834,
								"contract": "contracts/Gauge.sol:Gauge",
								"label": "userInfo",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_struct(UserInfo)804_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(UserInfo)804_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Gauge.UserInfo)",
								"numberOfBytes": "32",
								"value": "t_struct(UserInfo)804_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(UserInfo)804_storage": {
								"encoding": "inplace",
								"label": "struct Gauge.UserInfo",
								"members": [
									{
										"astId": 801,
										"contract": "contracts/Gauge.sol:Gauge",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 803,
										"contract": "contracts/Gauge.sol:Gauge",
										"label": "rewardDebt",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IBoost": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_gauge",
									"type": "address"
								}
							],
							"name": "distribute",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokeId",
									"type": "uint256"
								}
							],
							"name": "usedWeights",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokeId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "_pool",
									"type": "address"
								}
							],
							"name": "votes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_pool",
									"type": "address"
								}
							],
							"name": "weights",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"distribute(address)": "63453ae1",
							"usedWeights(uint256)": "79e93824",
							"votes(uint256,address)": "d23254b4",
							"weights(address)": "a7cac846"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_gauge\",\"type\":\"address\"}],\"name\":\"distribute\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokeId\",\"type\":\"uint256\"}],\"name\":\"usedWeights\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokeId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"}],\"name\":\"votes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"}],\"name\":\"weights\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Gauge.sol\":\"IBoost\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Gauge.sol\":{\"keccak256\":\"0xb425a718bd47c1a7110638e2ea2ba5178c0de85b43a11ec99790f94fd4295f10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://797b9be765251d17dca342fdfbe95ed326ba2c71fcb2ea44d74dcbf5d7f2efdb\",\"dweb:/ipfs/QmUTBAaDtPc2RcXr2pxkvNuX2HDG789cgs8ipZWAahCknq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Gauge.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Gauge.sol\":{\"keccak256\":\"0xb425a718bd47c1a7110638e2ea2ba5178c0de85b43a11ec99790f94fd4295f10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://797b9be765251d17dca342fdfbe95ed326ba2c71fcb2ea44d74dcbf5d7f2efdb\",\"dweb:/ipfs/QmUTBAaDtPc2RcXr2pxkvNuX2HDG789cgs8ipZWAahCknq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IVeToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "abstain",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "balanceOfNFT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "isApprovedOrOwner",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenIndex",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "voting",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"abstain(uint256)": "c1f0fb9f",
							"balanceOfNFT(uint256)": "e7e242d4",
							"isApprovedOrOwner(address,uint256)": "430c2081",
							"ownerOf(uint256)": "6352211e",
							"token()": "fc0c546a",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"transferFrom(address,address,uint256)": "23b872dd",
							"voting(uint256)": "fd4a77f1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"abstain\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"balanceOfNFT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"isApprovedOrOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenIndex\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"voting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Gauge.sol\":\"IVeToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Gauge.sol\":{\"keccak256\":\"0xb425a718bd47c1a7110638e2ea2ba5178c0de85b43a11ec99790f94fd4295f10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://797b9be765251d17dca342fdfbe95ed326ba2c71fcb2ea44d74dcbf5d7f2efdb\",\"dweb:/ipfs/QmUTBAaDtPc2RcXr2pxkvNuX2HDG789cgs8ipZWAahCknq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Gauge.sol\":324:1348  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Gauge.sol\":324:1348  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122043c23916543a9ab6f7665c651665de41d7fe2f93ce1d4d847783411d63a31cb964736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122043c23916543a9ab6f7665c651665de41d7fe2f93ce1d4d847783411d63a31cb964736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER 0xC2 CODECOPY AND SLOAD GASPRICE SWAP11 0xB6 0xF7 PUSH7 0x5C651665DE41D7 INVALID 0x2F SWAP4 0xCE SAR 0x4D DUP5 PUSH24 0x83411D63A31CB964736F6C634300080A0033000000000000 ",
							"sourceMap": "324:1024:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;324:1024:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122043c23916543a9ab6f7665c651665de41d7fe2f93ce1d4d847783411d63a31cb964736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 NUMBER 0xC2 CODECOPY AND SLOAD GASPRICE SWAP11 0xB6 0xF7 PUSH7 0x5C651665DE41D7 INVALID 0x2F SWAP4 0xCE SAR 0x4D DUP5 PUSH24 0x83411D63A31CB964736F6C634300080A0033000000000000 ",
							"sourceMap": "324:1024:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 324,
									"end": 1348,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 324,
									"end": 1348,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122043c23916543a9ab6f7665c651665de41d7fe2f93ce1d4d847783411d63a31cb964736f6c634300080a0033",
									".code": [
										{
											"begin": 324,
											"end": 1348,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 324,
											"end": 1348,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 324,
											"end": 1348,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 324,
											"end": 1348,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 324,
											"end": 1348,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 324,
											"end": 1348,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 324,
											"end": 1348,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 324,
											"end": 1348,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 324,
											"end": 1348,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Gauge.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Gauge.sol\":{\"keccak256\":\"0xb425a718bd47c1a7110638e2ea2ba5178c0de85b43a11ec99790f94fd4295f10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://797b9be765251d17dca342fdfbe95ed326ba2c71fcb2ea44d74dcbf5d7f2efdb\",\"dweb:/ipfs/QmUTBAaDtPc2RcXr2pxkvNuX2HDG789cgs8ipZWAahCknq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Gauge.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Gauge.sol\":{\"keccak256\":\"0xb425a718bd47c1a7110638e2ea2ba5178c0de85b43a11ec99790f94fd4295f10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://797b9be765251d17dca342fdfbe95ed326ba2c71fcb2ea44d74dcbf5d7f2efdb\",\"dweb:/ipfs/QmUTBAaDtPc2RcXr2pxkvNuX2HDG789cgs8ipZWAahCknq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 97,
								"contract": "contracts/Gauge.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Gauge.sol\":7352:13653  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Gauge.sol\":7352:13653  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a23d7d0db3e3c52fc882a6a14b8a94a01ca0ebd1773925faed6f111711f3055164736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a23d7d0db3e3c52fc882a6a14b8a94a01ca0ebd1773925faed6f111711f3055164736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 RETURNDATASIZE PUSH30 0xDB3E3C52FC882A6A14B8A94A01CA0EBD1773925FAED6F111711F3055164 PUSH20 0x6F6C634300080A00330000000000000000000000 ",
							"sourceMap": "7352:6301:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;7352:6301:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220a23d7d0db3e3c52fc882a6a14b8a94a01ca0ebd1773925faed6f111711f3055164736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 RETURNDATASIZE PUSH30 0xDB3E3C52FC882A6A14B8A94A01CA0EBD1773925FAED6F111711F3055164 PUSH20 0x6F6C634300080A00330000000000000000000000 ",
							"sourceMap": "7352:6301:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 7352,
									"end": 13653,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7352,
									"end": 13653,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7352,
									"end": 13653,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 7352,
									"end": 13653,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7352,
									"end": 13653,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7352,
									"end": 13653,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7352,
									"end": 13653,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 7352,
									"end": 13653,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7352,
									"end": 13653,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7352,
									"end": 13653,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7352,
									"end": 13653,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 7352,
									"end": 13653,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 7352,
									"end": 13653,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 7352,
									"end": 13653,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7352,
									"end": 13653,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7352,
									"end": 13653,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7352,
									"end": 13653,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7352,
									"end": 13653,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7352,
									"end": 13653,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 7352,
									"end": 13653,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7352,
									"end": 13653,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 7352,
									"end": 13653,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7352,
									"end": 13653,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 7352,
									"end": 13653,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7352,
									"end": 13653,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7352,
									"end": 13653,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 7352,
									"end": 13653,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7352,
									"end": 13653,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7352,
									"end": 13653,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 7352,
									"end": 13653,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7352,
									"end": 13653,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 7352,
									"end": 13653,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7352,
									"end": 13653,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7352,
									"end": 13653,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a23d7d0db3e3c52fc882a6a14b8a94a01ca0ebd1773925faed6f111711f3055164736f6c634300080a0033",
									".code": [
										{
											"begin": 7352,
											"end": 13653,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 7352,
											"end": 13653,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 7352,
											"end": 13653,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 7352,
											"end": 13653,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7352,
											"end": 13653,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7352,
											"end": 13653,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7352,
											"end": 13653,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7352,
											"end": 13653,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7352,
											"end": 13653,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Gauge.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Gauge.sol\":{\"keccak256\":\"0xb425a718bd47c1a7110638e2ea2ba5178c0de85b43a11ec99790f94fd4295f10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://797b9be765251d17dca342fdfbe95ed326ba2c71fcb2ea44d74dcbf5d7f2efdb\",\"dweb:/ipfs/QmUTBAaDtPc2RcXr2pxkvNuX2HDG789cgs8ipZWAahCknq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"TransferHelper": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Gauge.sol\":14800:16150  library TransferHelper {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Gauge.sol\":14800:16150  library TransferHelper {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122041900a2db78bdb44a688904bb794d1de3859dcc5433678bf36b2a8b3a1de8e0064736f6c634300080a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122041900a2db78bdb44a688904bb794d1de3859dcc5433678bf36b2a8b3a1de8e0064736f6c634300080a0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE SWAP1 EXP 0x2D 0xB7 DUP12 0xDB DIFFICULTY 0xA6 DUP9 SWAP1 0x4B 0xB7 SWAP5 0xD1 0xDE CODESIZE MSIZE 0xDC 0xC5 NUMBER CALLDATASIZE PUSH25 0xBF36B2A8B3A1DE8E0064736F6C634300080A00330000000000 ",
							"sourceMap": "14800:1350:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;14800:1350:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122041900a2db78bdb44a688904bb794d1de3859dcc5433678bf36b2a8b3a1de8e0064736f6c634300080a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 COINBASE SWAP1 EXP 0x2D 0xB7 DUP12 0xDB DIFFICULTY 0xA6 DUP9 SWAP1 0x4B 0xB7 SWAP5 0xD1 0xDE CODESIZE MSIZE 0xDC 0xC5 NUMBER CALLDATASIZE PUSH25 0xBF36B2A8B3A1DE8E0064736F6C634300080A00330000000000 ",
							"sourceMap": "14800:1350:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"safeApprove(address,address,uint256)": "infinite",
								"safeTransfer(address,address,uint256)": "infinite",
								"safeTransferETH(address,uint256)": "infinite",
								"safeTransferFrom(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 14800,
									"end": 16150,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 14800,
									"end": 16150,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 14800,
									"end": 16150,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 14800,
									"end": 16150,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 14800,
									"end": 16150,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 14800,
									"end": 16150,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 14800,
									"end": 16150,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 14800,
									"end": 16150,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 14800,
									"end": 16150,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 14800,
									"end": 16150,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14800,
									"end": 16150,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 14800,
									"end": 16150,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 14800,
									"end": 16150,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 14800,
									"end": 16150,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 14800,
									"end": 16150,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 14800,
									"end": 16150,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14800,
									"end": 16150,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 14800,
									"end": 16150,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14800,
									"end": 16150,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 14800,
									"end": 16150,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 14800,
									"end": 16150,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 14800,
									"end": 16150,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14800,
									"end": 16150,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 14800,
									"end": 16150,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 14800,
									"end": 16150,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 14800,
									"end": 16150,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 14800,
									"end": 16150,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 14800,
									"end": 16150,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 14800,
									"end": 16150,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 14800,
									"end": 16150,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 14800,
									"end": 16150,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 14800,
									"end": 16150,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 14800,
									"end": 16150,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 14800,
									"end": 16150,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122041900a2db78bdb44a688904bb794d1de3859dcc5433678bf36b2a8b3a1de8e0064736f6c634300080a0033",
									".code": [
										{
											"begin": 14800,
											"end": 16150,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 14800,
											"end": 16150,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 14800,
											"end": 16150,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 14800,
											"end": 16150,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 14800,
											"end": 16150,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14800,
											"end": 16150,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14800,
											"end": 16150,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14800,
											"end": 16150,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14800,
											"end": 16150,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Gauge.sol\":\"TransferHelper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Gauge.sol\":{\"keccak256\":\"0xb425a718bd47c1a7110638e2ea2ba5178c0de85b43a11ec99790f94fd4295f10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://797b9be765251d17dca342fdfbe95ed326ba2c71fcb2ea44d74dcbf5d7f2efdb\",\"dweb:/ipfs/QmUTBAaDtPc2RcXr2pxkvNuX2HDG789cgs8ipZWAahCknq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/Gauge.sol": {
				"ast": {
					"absolutePath": "contracts/Gauge.sol",
					"exportedSymbols": {
						"Gauge": [
							1734
						],
						"IBoost": [
							602
						],
						"IERC20": [
							203
						],
						"IVeToken": [
							572
						],
						"Math": [
							87
						],
						"ReentrancyGuard": [
							126
						],
						"SafeMath": [
							514
						],
						"TransferHelper": [
							761
						]
					},
					"id": 1735,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "225:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "250:73:0",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 87,
							"linearizedBaseContracts": [
								87
							],
							"name": "Math",
							"nameLocation": "332:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "474:38:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 14,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 12,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "491:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 13,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "496:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "491:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 16,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "504:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "491:14:0",
													"trueExpression": {
														"id": 15,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "500:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 11,
												"id": 18,
												"nodeType": "Return",
												"src": "484:21:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "343:59:0",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "416:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "428:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "420:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "420:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "439:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "431:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "419:22:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "465:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 9,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "464:9:0"
									},
									"scope": 87,
									"src": "407:105:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "650:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 32,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 30,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "667:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 31,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "671:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "667:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 34,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "679:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "667:13:0",
													"trueExpression": {
														"id": 33,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "675:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 29,
												"id": 36,
												"nodeType": "Return",
												"src": "660:20:0"
											}
										]
									},
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "518:60:0",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 38,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "592:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "604:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "596:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 22,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "615:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "607:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "607:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "641:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "641:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "640:9:0"
									},
									"scope": 87,
									"src": "583:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 60,
										"nodeType": "Block",
										"src": "871:82:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 50,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 48,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 41,
																	"src": "926:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 49,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 43,
																	"src": "930:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "926:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 51,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "925:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 57,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 54,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 52,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 41,
																		"src": "936:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 53,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 43,
																		"src": "940:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "936:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 55,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "935:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "945:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "935:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "925:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 47,
												"id": 59,
												"nodeType": "Return",
												"src": "918:28:0"
											}
										]
									},
									"documentation": {
										"id": 39,
										"nodeType": "StructuredDocumentation",
										"src": "693:102:0",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 61,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "809:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "825:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "817:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "817:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "836:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "828:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 42,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "828:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:22:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "862:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "862:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "861:9:0"
									},
									"scope": 87,
									"src": "800:153:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 85,
										"nodeType": "Block",
										"src": "1223:123:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 73,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 71,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 64,
															"src": "1311:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 72,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 66,
															"src": "1315:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1311:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 78,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 76,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 74,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 64,
																			"src": "1320:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "%",
																		"rightExpression": {
																			"id": 75,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 66,
																			"src": "1324:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1320:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1329:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "1320:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"hexValue": "31",
																	"id": 80,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1337:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "1320:18:0",
																"trueExpression": {
																	"hexValue": "30",
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1333:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"id": 82,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1319:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1311:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 70,
												"id": 84,
												"nodeType": "Return",
												"src": "1304:35:0"
											}
										]
									},
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "959:188:0",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 86,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1161:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1177:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "1169:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1169:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1188:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "1180:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1180:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1168:22:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "1214:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 68,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1214:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1213:9:0"
									},
									"scope": 87,
									"src": "1152:194:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1735,
							"src": "324:1024:0",
							"usedErrors": []
						},
						{
							"id": 88,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1486:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 89,
								"nodeType": "StructuredDocumentation",
								"src": "1511:750:0",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 126,
							"linearizedBaseContracts": [
								126
							],
							"name": "ReentrancyGuard",
							"nameLocation": "2280:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 92,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "3075:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 126,
									"src": "3050:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 90,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3050:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 91,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3090:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 95,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "3122:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 126,
									"src": "3097:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 93,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3097:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 94,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3133:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 97,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "3157:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 126,
									"src": "3141:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 96,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3141:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "3185:39:0",
										"statements": [
											{
												"expression": {
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 100,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "3195:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 101,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 92,
														"src": "3205:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3195:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 103,
												"nodeType": "ExpressionStatement",
												"src": "3195:22:0"
											}
										]
									},
									"id": 105,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3182:2:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3185:0:0"
									},
									"scope": 126,
									"src": "3171:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 124,
										"nodeType": "Block",
										"src": "3625:421:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 111,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 109,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "3714:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 110,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 95,
																"src": "3725:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3714:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 112,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3735:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 108,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3706:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3706:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 114,
												"nodeType": "ExpressionStatement",
												"src": "3706:63:0"
											},
											{
												"expression": {
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 115,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "3844:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 116,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "3854:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3844:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 118,
												"nodeType": "ExpressionStatement",
												"src": "3844:18:0"
											},
											{
												"id": 119,
												"nodeType": "PlaceholderStatement",
												"src": "3873:1:0"
											},
											{
												"expression": {
													"id": 122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 120,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "4017:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 121,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 92,
														"src": "4027:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4017:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 123,
												"nodeType": "ExpressionStatement",
												"src": "4017:22:0"
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "3230:366:0",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 125,
									"name": "nonReentrant",
									"nameLocation": "3610:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3622:2:0"
									},
									"src": "3601:445:0",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1735,
							"src": "2262:1786:0",
							"usedErrors": []
						},
						{
							"id": 127,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "4189:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 128,
								"nodeType": "StructuredDocumentation",
								"src": "4214:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 203,
							"linearizedBaseContracts": [
								203
							],
							"name": "IERC20",
							"nameLocation": "4295:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "4308:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 134,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "4388:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4399:2:0"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 134,
												"src": "4425:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4425:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4424:9:0"
									},
									"scope": 203,
									"src": "4379:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 135,
										"nodeType": "StructuredDocumentation",
										"src": "4440:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 142,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4526:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4544:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "4536:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4536:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4535:17:0"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "4576:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4576:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4575:9:0"
									},
									"scope": 203,
									"src": "4517:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 143,
										"nodeType": "StructuredDocumentation",
										"src": "4591:202:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 152,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "4807:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4824:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "4816:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4816:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 147,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4836:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "4828:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 146,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4828:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4815:28:0"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "4862:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 149,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4862:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4861:6:0"
									},
									"scope": 203,
									"src": "4798:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 153,
										"nodeType": "StructuredDocumentation",
										"src": "4874:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 162,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "5152:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5170:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "5162:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5162:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5185:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "5177:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5177:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5161:32:0"
									},
									"returnParameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "5217:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5217:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5216:9:0"
									},
									"scope": 203,
									"src": "5143:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "5232:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 172,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "5888:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5904:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "5896:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5896:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5921:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "5913:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5913:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5895:33:0"
									},
									"returnParameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "5947:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 169,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5947:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5946:6:0"
									},
									"scope": 203,
									"src": "5879:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "5959:287:0",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 184,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "6260:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6290:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "6282:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6282:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6312:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "6304:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6304:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6332:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "6324:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6324:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6272:72:0"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "6363:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 181,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6363:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6362:6:0"
									},
									"scope": 203,
									"src": "6251:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 185,
										"nodeType": "StructuredDocumentation",
										"src": "6375:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 193,
									"name": "Transfer",
									"nameLocation": "6544:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 187,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6569:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "6553:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6553:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6591:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "6575:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6575:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6603:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "6595:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6595:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6552:57:0"
									},
									"src": "6538:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 194,
										"nodeType": "StructuredDocumentation",
										"src": "6616:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 202,
									"name": "Approval",
									"nameLocation": "6775:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6800:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "6784:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6823:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "6807:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6807:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 200,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6840:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "6832:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6832:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6783:63:0"
									},
									"src": "6769:78:0"
								}
							],
							"scope": 1735,
							"src": "4285:2564:0",
							"usedErrors": []
						},
						{
							"id": 204,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "6977:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 205,
								"nodeType": "StructuredDocumentation",
								"src": "7155:196:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."
							},
							"fullyImplemented": true,
							"id": 514,
							"linearizedBaseContracts": [
								514
							],
							"name": "SafeMath",
							"nameLocation": "7360:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "7587:140:0",
										"statements": [
											{
												"id": 235,
												"nodeType": "UncheckedBlock",
												"src": "7597:124:0",
												"statements": [
													{
														"assignments": [
															218
														],
														"declarations": [
															{
																"constant": false,
																"id": 218,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "7629:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 235,
																"src": "7621:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 217,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7621:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 222,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 219,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 208,
																"src": "7633:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 220,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 210,
																"src": "7637:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7633:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "7621:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 223,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 218,
																"src": "7656:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 224,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 208,
																"src": "7660:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7656:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 230,
														"nodeType": "IfStatement",
														"src": "7652:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7671:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 227,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7678:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 228,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7670:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 216,
															"id": 229,
															"nodeType": "Return",
															"src": "7663:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7702:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 232,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 218,
																	"src": "7708:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 233,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7701:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 216,
														"id": 234,
														"nodeType": "Return",
														"src": "7694:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "7375:131:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "7520:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "7535:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "7527:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7527:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "7546:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "7538:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7538:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7526:22:0"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "7572:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 212,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7572:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "7578:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 214,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7578:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7571:15:0"
									},
									"scope": 514,
									"src": "7511:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 264,
										"nodeType": "Block",
										"src": "7949:113:0",
										"statements": [
											{
												"id": 263,
												"nodeType": "UncheckedBlock",
												"src": "7959:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 251,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 249,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 242,
																"src": "7987:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 250,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 240,
																"src": "7991:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7987:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 256,
														"nodeType": "IfStatement",
														"src": "7983:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 252,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8002:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8009:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 254,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8001:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 248,
															"id": 255,
															"nodeType": "Return",
															"src": "7994:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 257,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8033:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 260,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 258,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 240,
																		"src": "8039:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 259,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 242,
																		"src": "8043:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8039:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 261,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8032:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 248,
														"id": 262,
														"nodeType": "Return",
														"src": "8025:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "7733:135:0",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 265,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "7882:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "7897:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "7889:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7889:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "7908:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "7900:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7900:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7888:22:0"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "7934:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 244,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7934:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 265,
												"src": "7940:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7940:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7933:15:0"
									},
									"scope": 514,
									"src": "7873:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 306,
										"nodeType": "Block",
										"src": "8286:417:0",
										"statements": [
											{
												"id": 305,
												"nodeType": "UncheckedBlock",
												"src": "8296:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 277,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "8554:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 278,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8559:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8554:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 284,
														"nodeType": "IfStatement",
														"src": "8550:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 280,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8570:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 281,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8576:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 282,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8569:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 276,
															"id": 283,
															"nodeType": "Return",
															"src": "8562:16:0"
														}
													},
													{
														"assignments": [
															286
														],
														"declarations": [
															{
																"constant": false,
																"id": 286,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "8600:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 305,
																"src": "8592:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 285,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8592:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 290,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 289,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 287,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "8604:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 288,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 270,
																"src": "8608:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8604:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8592:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 295,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 291,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 286,
																	"src": "8627:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 292,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 268,
																	"src": "8631:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8627:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 294,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 270,
																"src": "8636:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8627:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 300,
														"nodeType": "IfStatement",
														"src": "8623:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8647:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 297,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8654:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 298,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8646:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 276,
															"id": 299,
															"nodeType": "Return",
															"src": "8639:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8678:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 302,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 286,
																	"src": "8684:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 303,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "8677:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 276,
														"id": 304,
														"nodeType": "Return",
														"src": "8670:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 266,
										"nodeType": "StructuredDocumentation",
										"src": "8068:137:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 307,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "8219:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8234:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "8226:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8226:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 270,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "8245:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "8237:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8237:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8225:22:0"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "8271:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 272,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8271:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "8277:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8277:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8270:15:0"
									},
									"scope": 514,
									"src": "8210:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "8928:114:0",
										"statements": [
											{
												"id": 333,
												"nodeType": "UncheckedBlock",
												"src": "8938:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 319,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 312,
																"src": "8966:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 320,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8971:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8966:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 326,
														"nodeType": "IfStatement",
														"src": "8962:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 322,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8982:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 323,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8989:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 324,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8981:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 318,
															"id": 325,
															"nodeType": "Return",
															"src": "8974:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 327,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9013:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 328,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 310,
																		"src": "9019:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 329,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 312,
																		"src": "9023:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9019:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 331,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "9012:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 318,
														"id": 332,
														"nodeType": "Return",
														"src": "9005:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 308,
										"nodeType": "StructuredDocumentation",
										"src": "8709:138:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "8861:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8876:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "8868:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8868:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "8887:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "8879:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8879:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8867:22:0"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "8913:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 314,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8913:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "8919:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8919:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8912:15:0"
									},
									"scope": 514,
									"src": "8852:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "9277:114:0",
										"statements": [
											{
												"id": 361,
												"nodeType": "UncheckedBlock",
												"src": "9287:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 347,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 340,
																"src": "9315:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 348,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9320:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9315:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 354,
														"nodeType": "IfStatement",
														"src": "9311:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9331:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9338:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 352,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9330:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 346,
															"id": 353,
															"nodeType": "Return",
															"src": "9323:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 355,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9362:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 358,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 356,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 338,
																		"src": "9368:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 357,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 340,
																		"src": "9372:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9368:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 359,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "9361:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 346,
														"id": 360,
														"nodeType": "Return",
														"src": "9354:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "9048:148:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "9210:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 341,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "9225:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "9217:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 337,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9217:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "9236:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "9228:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 339,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9228:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9216:22:0"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "9262:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 342,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9262:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "9268:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9268:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9261:15:0"
									},
									"scope": 514,
									"src": "9201:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 377,
										"nodeType": "Block",
										"src": "9693:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 373,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 366,
														"src": "9710:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 374,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 368,
														"src": "9714:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9710:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 372,
												"id": 376,
												"nodeType": "Return",
												"src": "9703:12:0"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "9397:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 378,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nameLocation": "9635:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "9647:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "9639:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9639:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "9658:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "9650:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9650:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9638:22:0"
									},
									"returnParameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 378,
												"src": "9684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9684:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9683:9:0"
									},
									"scope": 514,
									"src": "9626:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 392,
										"nodeType": "Block",
										"src": "10060:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 388,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "10077:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 389,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 383,
														"src": "10081:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10077:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 387,
												"id": 391,
												"nodeType": "Return",
												"src": "10070:12:0"
											}
										]
									},
									"documentation": {
										"id": 379,
										"nodeType": "StructuredDocumentation",
										"src": "9728:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 393,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "10002:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10014:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "10006:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 380,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10006:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "10025:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "10017:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10017:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10005:22:0"
									},
									"returnParameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "10051:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10051:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10050:9:0"
									},
									"scope": 514,
									"src": "9993:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 407,
										"nodeType": "Block",
										"src": "10403:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 403,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 396,
														"src": "10420:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 404,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "10424:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10420:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 402,
												"id": 406,
												"nodeType": "Return",
												"src": "10413:12:0"
											}
										]
									},
									"documentation": {
										"id": 394,
										"nodeType": "StructuredDocumentation",
										"src": "10095:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nameLocation": "10345:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10357:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "10349:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10349:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "10368:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "10360:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10360:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10348:22:0"
									},
									"returnParameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "10394:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10394:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10393:9:0"
									},
									"scope": 514,
									"src": "10336:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 422,
										"nodeType": "Block",
										"src": "10788:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 418,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 411,
														"src": "10805:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 419,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 413,
														"src": "10809:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10805:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 417,
												"id": 421,
												"nodeType": "Return",
												"src": "10798:12:0"
											}
										]
									},
									"documentation": {
										"id": 409,
										"nodeType": "StructuredDocumentation",
										"src": "10438:278:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "10730:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10742:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "10734:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10734:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "10753:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "10745:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10745:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10733:22:0"
									},
									"returnParameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "10779:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 415,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10779:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10778:9:0"
									},
									"scope": 514,
									"src": "10721:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "11337:29:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 433,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 426,
														"src": "11354:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 434,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 428,
														"src": "11358:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11354:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 432,
												"id": 436,
												"nodeType": "Return",
												"src": "11347:12:0"
											}
										]
									},
									"documentation": {
										"id": 424,
										"nodeType": "StructuredDocumentation",
										"src": "10823:442:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "11279:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "11291:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "11283:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11283:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "11302:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "11294:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11294:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11282:22:0"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "11328:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11328:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11327:9:0"
									},
									"scope": 514,
									"src": "11270:96:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 462,
										"nodeType": "Block",
										"src": "11955:106:0",
										"statements": [
											{
												"id": 461,
												"nodeType": "UncheckedBlock",
												"src": "11965:90:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 453,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 451,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 443,
																		"src": "11997:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<=",
																	"rightExpression": {
																		"id": 452,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 441,
																		"src": "12002:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "11997:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 454,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 445,
																	"src": "12005:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 450,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "11989:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11989:29:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 456,
														"nodeType": "ExpressionStatement",
														"src": "11989:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 459,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 457,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 441,
																"src": "12039:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 458,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 443,
																"src": "12043:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12039:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 449,
														"id": 460,
														"nodeType": "Return",
														"src": "12032:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "11372:453:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nameLocation": "11839:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "11860:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "11852:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11852:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 443,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "11879:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "11871:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11871:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "11904:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "11890:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 444,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11890:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11842:80:0"
									},
									"returnParameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 463,
												"src": "11946:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11946:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11945:9:0"
									},
									"scope": 514,
									"src": "11830:231:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 487,
										"nodeType": "Block",
										"src": "12670:105:0",
										"statements": [
											{
												"id": 486,
												"nodeType": "UncheckedBlock",
												"src": "12680:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 478,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 476,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 468,
																		"src": "12712:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 477,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12716:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "12712:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 479,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 470,
																	"src": "12719:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 475,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "12704:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12704:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 481,
														"nodeType": "ExpressionStatement",
														"src": "12704:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 482,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 466,
																"src": "12753:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 483,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 468,
																"src": "12757:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "12753:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 474,
														"id": 485,
														"nodeType": "Return",
														"src": "12746:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 464,
										"nodeType": "StructuredDocumentation",
										"src": "12067:473:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 488,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nameLocation": "12554:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "12575:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "12567:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12567:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 468,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "12594:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "12586:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12586:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "12619:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "12605:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 469,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12605:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12557:80:0"
									},
									"returnParameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 488,
												"src": "12661:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 472,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12661:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12660:9:0"
									},
									"scope": 514,
									"src": "12545:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 512,
										"nodeType": "Block",
										"src": "13546:105:0",
										"statements": [
											{
												"id": 511,
												"nodeType": "UncheckedBlock",
												"src": "13556:89:0",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 501,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 493,
																		"src": "13588:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 502,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13592:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "13588:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"id": 504,
																	"name": "errorMessage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 495,
																	"src": "13595:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 500,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "13580:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13580:28:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 506,
														"nodeType": "ExpressionStatement",
														"src": "13580:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 507,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 491,
																"src": "13629:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 508,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 493,
																"src": "13633:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13629:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 499,
														"id": 510,
														"nodeType": "Return",
														"src": "13622:12:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 489,
										"nodeType": "StructuredDocumentation",
										"src": "12781:635:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 513,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nameLocation": "13430:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "13451:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "13443:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 490,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13443:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "13470:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "13462:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13462:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "13495:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "13481:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 494,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13481:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13433:80:0"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "13537:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13537:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13536:9:0"
									},
									"scope": 514,
									"src": "13421:230:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1735,
							"src": "7352:6301:0",
							"usedErrors": []
						},
						{
							"id": 515,
							"literals": [
								"solidity",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "13698:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IVeToken",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 572,
							"linearizedBaseContracts": [
								572
							],
							"name": "IVeToken",
							"nameLocation": "13734:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "fc0c546a",
									"id": 520,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token",
									"nameLocation": "13758:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13763:2:0"
									},
									"returnParameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 520,
												"src": "13789:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13789:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13788:9:0"
									},
									"scope": 572,
									"src": "13749:49:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "2f745c59",
									"id": 529,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nameLocation": "13812:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "13840:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "13832:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13832:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "_tokenIndex",
												"nameLocation": "13853:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "13848:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 523,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "13848:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13831:34:0"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "13889:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 526,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "13889:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13888:6:0"
									},
									"scope": 572,
									"src": "13803:92:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "e7e242d4",
									"id": 536,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfNFT",
									"nameLocation": "13909:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "13922:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "13922:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13921:6:0"
									},
									"returnParameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "13951:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 533,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "13951:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13950:6:0"
									},
									"scope": 572,
									"src": "13900:57:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "430c2081",
									"id": 545,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedOrOwner",
									"nameLocation": "13971:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "13989:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13989:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "13998:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 539,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "13998:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13988:15:0"
									},
									"returnParameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "14027:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 542,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14027:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14026:6:0"
									},
									"scope": 572,
									"src": "13962:71:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6352211e",
									"id": 552,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "14047:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "14055:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 546,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14055:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14054:6:0"
									},
									"returnParameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "14084:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14084:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14083:9:0"
									},
									"scope": 572,
									"src": "14038:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 561,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "14107:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "14120:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14120:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "14129:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 555,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14129:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "14138:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 557,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14138:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14119:24:0"
									},
									"returnParameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14152:0:0"
									},
									"scope": 572,
									"src": "14098:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fd4a77f1",
									"id": 566,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "voting",
									"nameLocation": "14167:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14179:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "14174:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14174:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14173:14:0"
									},
									"returnParameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14196:0:0"
									},
									"scope": 572,
									"src": "14158:39:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c1f0fb9f",
									"id": 571,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "abstain",
									"nameLocation": "14211:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14224:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 571,
												"src": "14219:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 567,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14219:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14218:14:0"
									},
									"returnParameters": {
										"id": 570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14241:0:0"
									},
									"scope": 572,
									"src": "14202:40:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1735,
							"src": "13724:520:0",
							"usedErrors": []
						},
						{
							"id": 573,
							"literals": [
								"solidity",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "14287:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBoost",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 602,
							"linearizedBaseContracts": [
								602
							],
							"name": "IBoost",
							"nameLocation": "14322:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "63453ae1",
									"id": 578,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "distribute",
									"nameLocation": "14345:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "_gauge",
												"nameLocation": "14364:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "14356:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14356:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14355:16:0"
									},
									"returnParameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14380:0:0"
									},
									"scope": 602,
									"src": "14336:45:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a7cac846",
									"id": 585,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "weights",
									"nameLocation": "14396:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "_pool",
												"nameLocation": "14412:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "14404:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14403:15:0"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "14442:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14442:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14441:9:0"
									},
									"scope": 602,
									"src": "14387:64:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d23254b4",
									"id": 594,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "votes",
									"nameLocation": "14466:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "_tokeId",
												"nameLocation": "14480:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "14472:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 586,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14472:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "_pool",
												"nameLocation": "14497:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "14489:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14489:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14471:32:0"
									},
									"returnParameters": {
										"id": 593,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 594,
												"src": "14527:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14527:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14526:9:0"
									},
									"scope": 602,
									"src": "14457:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "79e93824",
									"id": 601,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "usedWeights",
									"nameLocation": "14551:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "_tokeId",
												"nameLocation": "14571:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "14563:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14563:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14562:17:0"
									},
									"returnParameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 601,
												"src": "14603:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14603:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14602:9:0"
									},
									"scope": 602,
									"src": "14542:70:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1735,
							"src": "14312:302:0",
							"usedErrors": []
						},
						{
							"id": 603,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".11"
							],
							"nodeType": "PragmaDirective",
							"src": "14662:25:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TransferHelper",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 761,
							"linearizedBaseContracts": [
								761
							],
							"name": "TransferHelper",
							"nameLocation": "14808:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 645,
										"nodeType": "Block",
										"src": "14898:285:0",
										"statements": [
											{
												"assignments": [
													613,
													615
												],
												"declarations": [
													{
														"constant": false,
														"id": 613,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "14979:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 645,
														"src": "14974:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 612,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "14974:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 615,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "15001:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 645,
														"src": "14988:17:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 614,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "14988:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 625,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30783039356561376233",
																	"id": 620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15043:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_157198259_by_1",
																		"typeString": "int_const 157198259"
																	},
																	"value": "0x095ea7b3"
																},
																{
																	"id": 621,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 607,
																	"src": "15055:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 622,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 609,
																	"src": "15059:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_157198259_by_1",
																		"typeString": "int_const 157198259"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 618,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "15020:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 619,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "15020:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15020:45:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 616,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 605,
															"src": "15009:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 617,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "15009:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15009:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14973:93:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 641,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 627,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 613,
																"src": "15084:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 639,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 631,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 628,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 615,
																					"src": "15096:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 629,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "15096:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 630,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "15111:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "15096:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 634,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 615,
																					"src": "15127:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 636,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "15134:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 635,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "15134:4:0",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 637,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "15133:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 632,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "15116:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 633,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "15116:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 638,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15116:24:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "15096:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 640,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "15095:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "15084:57:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a20415050524f56455f4641494c4544",
															"id": 642,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15143:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e27be550bb5367a6d8a8b2dd8b5c52ee0710d2d5b26de50062207957ab5bd00",
																"typeString": "literal_string \"TransferHelper: APPROVE_FAILED\""
															},
															"value": "TransferHelper: APPROVE_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e27be550bb5367a6d8a8b2dd8b5c52ee0710d2d5b26de50062207957ab5bd00",
																"typeString": "literal_string \"TransferHelper: APPROVE_FAILED\""
															}
														],
														"id": 626,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15076:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15076:100:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 644,
												"nodeType": "ExpressionStatement",
												"src": "15076:100:0"
											}
										]
									},
									"id": 646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nameLocation": "14838:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 605,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "14858:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "14850:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14850:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14873:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "14865:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14865:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14882:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "14877:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 608,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "14877:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14849:39:0"
									},
									"returnParameters": {
										"id": 611,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14898:0:0"
									},
									"scope": 761,
									"src": "14829:354:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 688,
										"nodeType": "Block",
										"src": "15259:287:0",
										"statements": [
											{
												"assignments": [
													656,
													658
												],
												"declarations": [
													{
														"constant": false,
														"id": 656,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "15341:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 688,
														"src": "15336:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 655,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "15336:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 658,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "15363:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 688,
														"src": "15350:17:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 657,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "15350:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 668,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30786139303539636262",
																	"id": 663,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15405:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2835717307_by_1",
																		"typeString": "int_const 2835717307"
																	},
																	"value": "0xa9059cbb"
																},
																{
																	"id": 664,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 650,
																	"src": "15417:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 665,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 652,
																	"src": "15421:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_2835717307_by_1",
																		"typeString": "int_const 2835717307"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 661,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "15382:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 662,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "15382:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15382:45:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 659,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 648,
															"src": "15371:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 660,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "15371:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15371:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15335:93:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 670,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 656,
																"src": "15446:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 674,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 671,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 658,
																					"src": "15458:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 672,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "15458:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 673,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "15473:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "15458:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 677,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 658,
																					"src": "15489:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 679,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "15496:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 678,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "15496:4:0",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 680,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "15495:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 675,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "15478:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 676,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "15478:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 681,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15478:24:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "15458:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 683,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "15457:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "15446:57:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a205452414e534645525f4641494c4544",
															"id": 685,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15505:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426",
																"typeString": "literal_string \"TransferHelper: TRANSFER_FAILED\""
															},
															"value": "TransferHelper: TRANSFER_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_05d7eee434319ef96b9de8eaf182057f1e6a6441451c0ddc676469e4b256f426",
																"typeString": "literal_string \"TransferHelper: TRANSFER_FAILED\""
															}
														],
														"id": 669,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15438:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15438:101:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 687,
												"nodeType": "ExpressionStatement",
												"src": "15438:101:0"
											}
										]
									},
									"id": 689,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "15198:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 648,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "15219:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "15211:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15234:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "15226:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 649,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15226:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15243:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 689,
												"src": "15238:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 651,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15238:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15210:39:0"
									},
									"returnParameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15259:0:0"
									},
									"scope": 761,
									"src": "15189:357:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 734,
										"nodeType": "Block",
										"src": "15640:310:0",
										"statements": [
											{
												"assignments": [
													701,
													703
												],
												"declarations": [
													{
														"constant": false,
														"id": 701,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "15734:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 734,
														"src": "15729:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 700,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "15729:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 703,
														"mutability": "mutable",
														"name": "data",
														"nameLocation": "15756:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 734,
														"src": "15743:17:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 702,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "15743:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 714,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30783233623837326464",
																	"id": 708,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "15798:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_599290589_by_1",
																		"typeString": "int_const 599290589"
																	},
																	"value": "0x23b872dd"
																},
																{
																	"id": 709,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 693,
																	"src": "15810:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 710,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 695,
																	"src": "15816:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 711,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 697,
																	"src": "15820:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_599290589_by_1",
																		"typeString": "int_const 599290589"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 706,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "15775:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 707,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "15775:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15775:51:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 704,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "15764:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 705,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "15764:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15764:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15728:99:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 716,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 701,
																"src": "15845:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 728,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 720,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 717,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 703,
																					"src": "15857:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 718,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "15857:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 719,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "15872:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "15857:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 723,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 703,
																					"src": "15888:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 725,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "15895:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 724,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "15895:4:0",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 726,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "15894:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 721,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "15877:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 722,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "15877:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 727,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15877:24:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "15857:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 729,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "15856:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "15845:57:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a205452414e534645525f46524f4d5f4641494c4544",
															"id": 731,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15904:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18",
																"typeString": "literal_string \"TransferHelper: TRANSFER_FROM_FAILED\""
															},
															"value": "TransferHelper: TRANSFER_FROM_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eb2904bf3c0c9ae693b53eb0188a703c388998a9c405b7965ca678cef9a51d18",
																"typeString": "literal_string \"TransferHelper: TRANSFER_FROM_FAILED\""
															}
														],
														"id": 715,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15837:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15837:106:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 733,
												"nodeType": "ExpressionStatement",
												"src": "15837:106:0"
											}
										]
									},
									"id": 735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "15561:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "15586:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "15578:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15578:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15601:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "15593:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15593:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15615:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "15607:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 694,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15607:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15624:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "15619:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 696,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15619:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15577:53:0"
									},
									"returnParameters": {
										"id": 699,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15640:0:0"
									},
									"scope": 761,
									"src": "15552:398:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 759,
										"nodeType": "Block",
										"src": "16014:134:0",
										"statements": [
											{
												"assignments": [
													743,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 743,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "16030:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 759,
														"src": "16025:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 742,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "16025:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 753,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16073:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 749,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "16063:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 748,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "16067:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16063:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 744,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 737,
																"src": "16042:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 745,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "16042:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 747,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 746,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 739,
																"src": "16056:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "16042:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16042:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16024:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 755,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 743,
															"src": "16094:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657248656c7065723a204554485f5452414e534645525f4641494c4544",
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16103:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d290720a9b119bbeaf8124eb771e119cbea85a2f430cbb39a8fead2398528881",
																"typeString": "literal_string \"TransferHelper: ETH_TRANSFER_FAILED\""
															},
															"value": "TransferHelper: ETH_TRANSFER_FAILED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d290720a9b119bbeaf8124eb771e119cbea85a2f430cbb39a8fead2398528881",
																"typeString": "literal_string \"TransferHelper: ETH_TRANSFER_FAILED\""
															}
														],
														"id": 754,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16086:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16086:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 758,
												"nodeType": "ExpressionStatement",
												"src": "16086:55:0"
											}
										]
									},
									"id": 760,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferETH",
									"nameLocation": "15965:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15989:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "15981:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15981:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15998:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 760,
												"src": "15993:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 738,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "15993:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15980:24:0"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16014:0:0"
									},
									"scope": 761,
									"src": "15956:192:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1735,
							"src": "14800:1350:0",
							"usedErrors": []
						},
						{
							"id": 762,
							"literals": [
								"solidity",
								"0.8",
								".10"
							],
							"nodeType": "PragmaDirective",
							"src": "16187:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 763,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 126,
										"src": "16333:15:0"
									},
									"id": 764,
									"nodeType": "InheritanceSpecifier",
									"src": "16333:15:0"
								}
							],
							"canonicalName": "Gauge",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1734,
							"linearizedBaseContracts": [
								1734,
								126
							],
							"name": "Gauge",
							"nameLocation": "16324:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 767,
									"libraryName": {
										"id": 765,
										"name": "SafeMath",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 514,
										"src": "16361:8:0"
									},
									"nodeType": "UsingForDirective",
									"src": "16355:27:0",
									"typeName": {
										"id": 766,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "16374:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"anonymous": false,
									"id": 775,
									"name": "Deposit",
									"nameLocation": "16394:7:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16418:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "16402:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 768,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16402:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 771,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16429:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "16424:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "16424:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 773,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "16443:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "16438:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 772,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "16438:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16401:49:0"
									},
									"src": "16388:63:0"
								},
								{
									"anonymous": false,
									"id": 783,
									"name": "Withdraw",
									"nameLocation": "16462:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 777,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16487:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "16471:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 776,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16471:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 779,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16498:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "16493:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "16493:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "16512:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 783,
												"src": "16507:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 780,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "16507:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16470:49:0"
									},
									"src": "16456:64:0"
								},
								{
									"anonymous": false,
									"id": 791,
									"name": "NotifyReward",
									"nameLocation": "16531:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16560:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "16544:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16544:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 787,
												"indexed": true,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "16582:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "16566:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 786,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 789,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardRate",
												"nameLocation": "16595:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "16590:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 788,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "16590:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16543:63:0"
									},
									"src": "16525:82:0"
								},
								{
									"anonymous": false,
									"id": 799,
									"name": "ClaimRewards",
									"nameLocation": "16618:12:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16647:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "16631:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16631:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 795,
												"indexed": true,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "16669:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "16653:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16653:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "16682:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "16677:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 796,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "16677:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16630:59:0"
									},
									"src": "16612:78:0"
								},
								{
									"canonicalName": "Gauge.UserInfo",
									"id": 804,
									"members": [
										{
											"constant": false,
											"id": 801,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "16756:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 804,
											"src": "16748:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 800,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "16748:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 803,
											"mutability": "mutable",
											"name": "rewardDebt",
											"nameLocation": "16829:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 804,
											"src": "16821:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 802,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "16821:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserInfo",
									"nameLocation": "16729:8:0",
									"nodeType": "StructDefinition",
									"scope": 1734,
									"src": "16722:141:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3a4b66f1",
									"id": 806,
									"mutability": "immutable",
									"name": "stake",
									"nameLocation": "16894:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 1734,
									"src": "16869:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 805,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "16869:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3b92eb23",
									"id": 808,
									"mutability": "immutable",
									"name": "veToken",
									"nameLocation": "16982:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1734,
									"src": "16957:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 807,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "16957:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a66f42c0",
									"id": 810,
									"mutability": "immutable",
									"name": "boost",
									"nameLocation": "17052:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 1734,
									"src": "17027:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 809,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "17027:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f7c618c1",
									"id": 812,
									"mutability": "immutable",
									"name": "rewardToken",
									"nameLocation": "17088:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1734,
									"src": "17063:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 811,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "17063:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 817,
									"mutability": "constant",
									"name": "PRECISION",
									"nameLocation": "17128:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1734,
									"src": "17105:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 813,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "17105:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										},
										"id": 816,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3130",
											"id": 814,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "17140:2:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10_by_1",
												"typeString": "int_const 10"
											},
											"value": "10"
										},
										"nodeType": "BinaryOperation",
										"operator": "**",
										"rightExpression": {
											"hexValue": "3138",
											"id": 815,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "17146:2:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_18_by_1",
												"typeString": "int_const 18"
											},
											"value": "18"
										},
										"src": "17140:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "fc97a303",
									"id": 821,
									"mutability": "mutable",
									"name": "tokenIds",
									"nameLocation": "17186:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 1734,
									"src": "17154:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 820,
										"keyType": {
											"id": 818,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "17162:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "17154:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 819,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "17173:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4198709a",
									"id": 823,
									"mutability": "mutable",
									"name": "tokenPerBlock",
									"nameLocation": "17216:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 1734,
									"src": "17201:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 822,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "17201:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "8f662915",
									"id": 825,
									"mutability": "mutable",
									"name": "accTokenPerShare",
									"nameLocation": "17250:16:0",
									"nodeType": "VariableDeclaration",
									"scope": 1734,
									"src": "17235:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 824,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "17235:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a9f8d181",
									"id": 827,
									"mutability": "mutable",
									"name": "lastRewardBlock",
									"nameLocation": "17336:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 1734,
									"src": "17321:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 826,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "17321:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "18160ddd",
									"id": 829,
									"mutability": "mutable",
									"name": "totalSupply",
									"nameLocation": "17428:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 1734,
									"src": "17416:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 828,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "17416:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1959a002",
									"id": 834,
									"mutability": "mutable",
									"name": "userInfo",
									"nameLocation": "17482:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 1734,
									"src": "17446:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$804_storage_$",
										"typeString": "mapping(address => struct Gauge.UserInfo)"
									},
									"typeName": {
										"id": 833,
										"keyType": {
											"id": 830,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "17454:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "17446:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$804_storage_$",
											"typeString": "mapping(address => struct Gauge.UserInfo)"
										},
										"valueType": {
											"id": 832,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 831,
												"name": "UserInfo",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 804,
												"src": "17465:8:0"
											},
											"referencedDeclaration": 804,
											"src": "17465:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_UserInfo_$804_storage_ptr",
												"typeString": "struct Gauge.UserInfo"
											}
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 861,
										"nodeType": "Block",
										"src": "17577:115:0",
										"statements": [
											{
												"expression": {
													"id": 847,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 845,
														"name": "stake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 806,
														"src": "17587:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 846,
														"name": "_stake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 836,
														"src": "17595:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17587:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 848,
												"nodeType": "ExpressionStatement",
												"src": "17587:14:0"
											},
											{
												"expression": {
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 849,
														"name": "veToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 808,
														"src": "17611:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 850,
														"name": "__ve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 838,
														"src": "17621:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17611:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 852,
												"nodeType": "ExpressionStatement",
												"src": "17611:14:0"
											},
											{
												"expression": {
													"id": 855,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 853,
														"name": "boost",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 810,
														"src": "17635:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 854,
														"name": "_boost",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "17643:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17635:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 856,
												"nodeType": "ExpressionStatement",
												"src": "17635:14:0"
											},
											{
												"expression": {
													"id": 859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 857,
														"name": "rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "17659:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 858,
														"name": "_rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 842,
														"src": "17673:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17659:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 860,
												"nodeType": "ExpressionStatement",
												"src": "17659:26:0"
											}
										]
									},
									"id": 862,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "_stake",
												"nameLocation": "17517:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "17509:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 835,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "__ve",
												"nameLocation": "17533:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "17525:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 837,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17525:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "_boost",
												"nameLocation": "17547:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "17539:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17539:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "_rewardToken",
												"nameLocation": "17563:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 862,
												"src": "17555:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 841,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17555:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17508:68:0"
									},
									"returnParameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17577:0:0"
									},
									"scope": 1734,
									"src": "17497:195:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 873,
										"nodeType": "Block",
										"src": "17720:70:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 868,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 865,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "17738:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 866,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "17738:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 867,
																"name": "boost",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 810,
																"src": "17752:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "17738:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6f6e6c7920626f6f7374",
															"id": 869,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "17759:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ed0b09a78e6ad75e5b35aa96c2e89689da2e1a3b0e3fcf7c3b1f4a7f00e87f29",
																"typeString": "literal_string \"only boost\""
															},
															"value": "only boost"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ed0b09a78e6ad75e5b35aa96c2e89689da2e1a3b0e3fcf7c3b1f4a7f00e87f29",
																"typeString": "literal_string \"only boost\""
															}
														],
														"id": 864,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "17730:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17730:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 871,
												"nodeType": "ExpressionStatement",
												"src": "17730:42:0"
											},
											{
												"id": 872,
												"nodeType": "PlaceholderStatement",
												"src": "17782:1:0"
											}
										]
									},
									"id": 874,
									"name": "onlyBoost",
									"nameLocation": "17708:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17717:2:0"
									},
									"src": "17699:91:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 910,
										"nodeType": "Block",
										"src": "17868:191:0",
										"statements": [
											{
												"assignments": [
													882
												],
												"declarations": [
													{
														"constant": false,
														"id": 882,
														"mutability": "mutable",
														"name": "bal",
														"nameLocation": "17886:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 910,
														"src": "17878:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 881,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17878:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 892,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 889,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "17924:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Gauge_$1734",
																		"typeString": "contract Gauge"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Gauge_$1734",
																		"typeString": "contract Gauge"
																	}
																],
																"id": 888,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "17916:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 887,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "17916:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 890,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17916:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 884,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 876,
																	"src": "17899:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 883,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "17892:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$203_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 885,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17892:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$203",
																"typeString": "contract IERC20"
															}
														},
														"id": 886,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 142,
														"src": "17892:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17892:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "17878:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 893,
														"name": "bal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "17944:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 894,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "17950:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "17944:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 909,
												"nodeType": "IfStatement",
												"src": "17940:113:0",
												"trueBody": {
													"id": 908,
													"nodeType": "Block",
													"src": "17959:94:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 899,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 876,
																		"src": "18005:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 900,
																		"name": "boost",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 810,
																		"src": "18012:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 903,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "18027:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Gauge_$1734",
																					"typeString": "contract Gauge"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Gauge_$1734",
																					"typeString": "contract Gauge"
																				}
																			],
																			"id": 902,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "18019:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 901,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "18019:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 904,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18019:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 905,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 878,
																		"src": "18034:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 896,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 761,
																		"src": "17973:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$761_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 898,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 735,
																	"src": "17973:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,address,uint256)"
																	}
																},
																"id": 906,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17973:69:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 907,
															"nodeType": "ExpressionStatement",
															"src": "17973:69:0"
														}
													]
												}
											}
										]
									},
									"id": 911,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFromToken",
									"nameLocation": "17805:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "17836:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "17828:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17828:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "17851:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "17843:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17843:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17827:32:0"
									},
									"returnParameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17868:0:0"
									},
									"scope": 1734,
									"src": "17796:263:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 961,
										"nodeType": "Block",
										"src": "18151:297:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 921,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "18184:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 922,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 917,
															"src": "18191:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 920,
														"name": "_safeTransferFromToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "18161:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18161:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 924,
												"nodeType": "ExpressionStatement",
												"src": "18161:38:0"
											},
											{
												"assignments": [
													926
												],
												"declarations": [
													{
														"constant": false,
														"id": 926,
														"mutability": "mutable",
														"name": "bal",
														"nameLocation": "18217:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 961,
														"src": "18209:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 925,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18209:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 936,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 933,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "18255:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Gauge_$1734",
																		"typeString": "contract Gauge"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Gauge_$1734",
																		"typeString": "contract Gauge"
																	}
																],
																"id": 932,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18247:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 931,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18247:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 934,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18247:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 928,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 913,
																	"src": "18230:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 927,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "18223:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$203_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18223:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$203",
																"typeString": "contract IERC20"
															}
														},
														"id": 930,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 142,
														"src": "18223:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18223:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18209:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 937,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 917,
														"src": "18275:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 938,
														"name": "bal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 926,
														"src": "18285:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18275:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 945,
												"nodeType": "IfStatement",
												"src": "18271:57:0",
												"trueBody": {
													"id": 944,
													"nodeType": "Block",
													"src": "18290:38:0",
													"statements": [
														{
															"expression": {
																"id": 942,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 940,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 917,
																	"src": "18304:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 941,
																	"name": "bal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 926,
																	"src": "18314:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "18304:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 943,
															"nodeType": "ExpressionStatement",
															"src": "18304:13:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 946,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 917,
														"src": "18337:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 948,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 915,
																"src": "18362:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 949,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 917,
																"src": "18371:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 947,
															"name": "derivedBalance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1149,
															"src": "18347:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (address,uint256) view returns (uint256)"
															}
														},
														"id": 950,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18347:32:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18337:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 952,
												"nodeType": "ExpressionStatement",
												"src": "18337:42:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 956,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "18417:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 957,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "18424:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 958,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 917,
															"src": "18433:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 953,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "18389:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$761_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 955,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 689,
														"src": "18389:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18389:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 960,
												"nodeType": "ExpressionStatement",
												"src": "18389:52:0"
											}
										]
									},
									"id": 962,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTokenTransfer",
									"nameLocation": "18074:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "18101:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "18093:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 912,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18093:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18116:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "18108:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 914,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "18133:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "18125:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 916,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18125:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18092:49:0"
									},
									"returnParameters": {
										"id": 919,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18151:0:0"
									},
									"scope": 1734,
									"src": "18065:383:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1038,
										"nodeType": "Block",
										"src": "18512:499:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 978,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 970,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "18530:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 971,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "18530:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 972,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 964,
																	"src": "18544:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "18530:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 977,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 974,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "18555:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 975,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "18555:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 976,
																	"name": "boost",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 810,
																	"src": "18569:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "18555:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "18530:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 969,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "18522:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18522:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 980,
												"nodeType": "ExpressionStatement",
												"src": "18522:53:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 981,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1552,
														"src": "18585:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18585:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 983,
												"nodeType": "ExpressionStatement",
												"src": "18585:12:0"
											},
											{
												"assignments": [
													986
												],
												"declarations": [
													{
														"constant": false,
														"id": 986,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "18624:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1038,
														"src": "18607:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$804_storage_ptr",
															"typeString": "struct Gauge.UserInfo"
														},
														"typeName": {
															"id": 985,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 984,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 804,
																"src": "18607:8:0"
															},
															"referencedDeclaration": 804,
															"src": "18607:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$804_storage_ptr",
																"typeString": "struct Gauge.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 990,
												"initialValue": {
													"baseExpression": {
														"id": 987,
														"name": "userInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "18631:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$804_storage_$",
															"typeString": "mapping(address => struct Gauge.UserInfo storage ref)"
														}
													},
													"id": 989,
													"indexExpression": {
														"id": 988,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 964,
														"src": "18640:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "18631:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$804_storage",
														"typeString": "struct Gauge.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18607:41:0"
											},
											{
												"assignments": [
													992
												],
												"declarations": [
													{
														"constant": false,
														"id": 992,
														"mutability": "mutable",
														"name": "pendingAmount",
														"nameLocation": "18666:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 1038,
														"src": "18658:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 991,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "18658:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 996,
												"initialValue": {
													"arguments": [
														{
															"id": 994,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 964,
															"src": "18693:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 993,
														"name": "pendingMax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1645,
														"src": "18682:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 995,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18682:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "18658:43:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 997,
														"name": "pendingAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 992,
														"src": "18715:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 998,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18731:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "18715:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1014,
												"nodeType": "IfStatement",
												"src": "18711:174:0",
												"trueBody": {
													"id": 1013,
													"nodeType": "Block",
													"src": "18734:151:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1001,
																		"name": "rewardToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 812,
																		"src": "18767:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1002,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 964,
																		"src": "18780:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1003,
																		"name": "pendingAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 992,
																		"src": "18789:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1000,
																	"name": "_safeTokenTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 962,
																	"src": "18748:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18748:55:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1005,
															"nodeType": "ExpressionStatement",
															"src": "18748:55:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1007,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "18835:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1008,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "18835:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1009,
																		"name": "rewardToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 812,
																		"src": "18847:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1010,
																		"name": "pendingAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 992,
																		"src": "18860:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1006,
																	"name": "ClaimRewards",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 799,
																	"src": "18822:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1011,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18822:52:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1012,
															"nodeType": "EmitStatement",
															"src": "18817:57:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1015,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 986,
															"src": "18894:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$804_storage_ptr",
																"typeString": "struct Gauge.UserInfo storage pointer"
															}
														},
														"id": 1017,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 803,
														"src": "18894:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31653132",
																"id": 1024,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18950:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																},
																"value": "1e12"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1021,
																		"name": "accTokenPerShare",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 825,
																		"src": "18928:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1018,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 986,
																			"src": "18912:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$804_storage_ptr",
																				"typeString": "struct Gauge.UserInfo storage pointer"
																			}
																		},
																		"id": 1019,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 801,
																		"src": "18912:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1020,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 408,
																	"src": "18912:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1022,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18912:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1023,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 423,
															"src": "18912:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1025,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18912:43:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "18894:61:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1027,
												"nodeType": "ExpressionStatement",
												"src": "18894:61:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1034,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "18998:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Gauge_$1734",
																		"typeString": "contract Gauge"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Gauge_$1734",
																		"typeString": "contract Gauge"
																	}
																],
																"id": 1033,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18990:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1032,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18990:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1035,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18990:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1029,
																	"name": "boost",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 810,
																	"src": "18972:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1028,
																"name": "IBoost",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 602,
																"src": "18965:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBoost_$602_$",
																	"typeString": "type(contract IBoost)"
																}
															},
															"id": 1030,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18965:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBoost_$602",
																"typeString": "contract IBoost"
															}
														},
														"id": 1031,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "distribute",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 578,
														"src": "18965:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address) external"
														}
													},
													"id": 1036,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18965:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1037,
												"nodeType": "ExpressionStatement",
												"src": "18965:39:0"
											}
										]
									},
									"functionSelector": "c00007b0",
									"id": 1039,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 967,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 966,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 125,
												"src": "18499:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "18499:12:0"
										}
									],
									"name": "getReward",
									"nameLocation": "18463:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18481:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1039,
												"src": "18473:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 963,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18473:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18472:17:0"
									},
									"returnParameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18512:0:0"
									},
									"scope": 1734,
									"src": "18454:557:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1148,
										"nodeType": "Block",
										"src": "19100:627:0",
										"statements": [
											{
												"assignments": [
													1049
												],
												"declarations": [
													{
														"constant": false,
														"id": 1049,
														"mutability": "mutable",
														"name": "_tokenId",
														"nameLocation": "19115:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1148,
														"src": "19110:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1048,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "19110:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1053,
												"initialValue": {
													"baseExpression": {
														"id": 1050,
														"name": "tokenIds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 821,
														"src": "19126:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1052,
													"indexExpression": {
														"id": 1051,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1041,
														"src": "19135:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "19126:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19110:33:0"
											},
											{
												"assignments": [
													1055
												],
												"declarations": [
													{
														"constant": false,
														"id": 1055,
														"mutability": "mutable",
														"name": "_derived",
														"nameLocation": "19158:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1148,
														"src": "19153:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1054,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "19153:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1061,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1058,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1056,
															"name": "_balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1043,
															"src": "19169:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"hexValue": "3330",
															"id": 1057,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19180:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_30_by_1",
																"typeString": "int_const 30"
															},
															"value": "30"
														},
														"src": "19169:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1059,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19185:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "19169:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19153:35:0"
											},
											{
												"assignments": [
													1063
												],
												"declarations": [
													{
														"constant": false,
														"id": 1063,
														"mutability": "mutable",
														"name": "_adjusted",
														"nameLocation": "19203:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 1148,
														"src": "19198:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1062,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "19198:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1065,
												"initialValue": {
													"hexValue": "30",
													"id": 1064,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "19215:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19198:18:0"
											},
											{
												"assignments": [
													1067
												],
												"declarations": [
													{
														"constant": false,
														"id": 1067,
														"mutability": "mutable",
														"name": "_supply",
														"nameLocation": "19231:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1148,
														"src": "19226:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1066,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "19226:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1074,
												"initialValue": {
													"arguments": [
														{
															"id": 1072,
															"name": "stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "19263:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1069,
																	"name": "boost",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 810,
																	"src": "19248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1068,
																"name": "IBoost",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 602,
																"src": "19241:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBoost_$602_$",
																	"typeString": "type(contract IBoost)"
																}
															},
															"id": 1070,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19241:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBoost_$602",
																"typeString": "contract IBoost"
															}
														},
														"id": 1071,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "weights",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 585,
														"src": "19241:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19241:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19226:43:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1082,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1075,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1041,
															"src": "19283:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"id": 1080,
																	"name": "_tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1049,
																	"src": "19320:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1077,
																			"name": "veToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 808,
																			"src": "19303:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1076,
																		"name": "IVeToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 572,
																		"src": "19294:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IVeToken_$572_$",
																			"typeString": "type(contract IVeToken)"
																		}
																	},
																	"id": 1078,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "19294:17:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IVeToken_$572",
																		"typeString": "contract IVeToken"
																	}
																},
																"id": 1079,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "ownerOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 552,
																"src": "19294:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																	"typeString": "function (uint256) view external returns (address)"
																}
															},
															"id": 1081,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19294:35:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "19283:46:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1085,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1083,
															"name": "_supply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "19333:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1084,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19343:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "19333:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "19283:61:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1138,
												"nodeType": "IfStatement",
												"src": "19279:383:0",
												"trueBody": {
													"id": 1137,
													"nodeType": "Block",
													"src": "19346:316:0",
													"statements": [
														{
															"assignments": [
																1088
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1088,
																	"mutability": "mutable",
																	"name": "usedWeight",
																	"nameLocation": "19365:10:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1137,
																	"src": "19360:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1087,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "19360:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1095,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1093,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1049,
																		"src": "19404:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1090,
																				"name": "boost",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 810,
																				"src": "19385:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1089,
																			"name": "IBoost",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 602,
																			"src": "19378:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IBoost_$602_$",
																				"typeString": "type(contract IBoost)"
																			}
																		},
																		"id": 1091,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19378:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IBoost_$602",
																			"typeString": "contract IBoost"
																		}
																	},
																	"id": 1092,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "usedWeights",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 601,
																	"src": "19378:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) view external returns (uint256)"
																	}
																},
																"id": 1094,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19378:35:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "19360:53:0"
														},
														{
															"assignments": [
																1097
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1097,
																	"mutability": "mutable",
																	"name": "useVe",
																	"nameLocation": "19432:5:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1137,
																	"src": "19427:10:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1096,
																		"name": "uint",
																		"nodeType": "ElementaryTypeName",
																		"src": "19427:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1104,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1102,
																		"name": "_tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1049,
																		"src": "19471:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1099,
																				"name": "veToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 808,
																				"src": "19449:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1098,
																			"name": "IVeToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 572,
																			"src": "19440:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IVeToken_$572_$",
																				"typeString": "type(contract IVeToken)"
																			}
																		},
																		"id": 1100,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19440:17:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IVeToken_$572",
																			"typeString": "contract IVeToken"
																		}
																	},
																	"id": 1101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOfNFT",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 536,
																	"src": "19440:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) view external returns (uint256)"
																	}
																},
																"id": 1103,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19440:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "19427:53:0"
														},
														{
															"expression": {
																"id": 1122,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1105,
																	"name": "_adjusted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1063,
																	"src": "19494:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1120,
																			"name": "usedWeight",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1088,
																			"src": "19568:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1117,
																					"name": "useVe",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1097,
																					"src": "19557:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "31653132",
																							"id": 1114,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "19547:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1000000000000_by_1",
																								"typeString": "int_const 1000000000000"
																							},
																							"value": "1e12"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_1000000000000_by_1",
																								"typeString": "int_const 1000000000000"
																							}
																						],
																						"expression": {
																							"arguments": [
																								{
																									"id": 1110,
																									"name": "_tokenId",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1049,
																									"src": "19526:8:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								{
																									"id": 1111,
																									"name": "stake",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 806,
																									"src": "19536:5:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									{
																										"typeIdentifier": "t_address",
																										"typeString": "address"
																									}
																								],
																								"expression": {
																									"arguments": [
																										{
																											"id": 1107,
																											"name": "boost",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 810,
																											"src": "19513:5:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_address",
																												"typeString": "address"
																											}
																										],
																										"id": 1106,
																										"name": "IBoost",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 602,
																										"src": "19506:6:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_type$_t_contract$_IBoost_$602_$",
																											"typeString": "type(contract IBoost)"
																										}
																									},
																									"id": 1108,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "typeConversion",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "19506:13:0",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_contract$_IBoost_$602",
																										"typeString": "contract IBoost"
																									}
																								},
																								"id": 1109,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "votes",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 594,
																								"src": "19506:19:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_external_view$_t_uint256_$_t_address_$returns$_t_uint256_$",
																									"typeString": "function (uint256,address) view external returns (uint256)"
																								}
																							},
																							"id": 1112,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "19506:36:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1113,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 408,
																						"src": "19506:40:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1115,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "19506:46:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1116,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 408,
																				"src": "19506:50:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1118,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "19506:57:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "div",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 423,
																		"src": "19506:61:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "19506:73:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19494:85:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1123,
															"nodeType": "ExpressionStatement",
															"src": "19494:85:0"
														},
														{
															"expression": {
																"id": 1135,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1124,
																	"name": "_adjusted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1063,
																	"src": "19593:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1134,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1132,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1129,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1127,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1125,
																							"name": "totalSupply",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 829,
																							"src": "19606:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"id": 1126,
																							"name": "_adjusted",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1063,
																							"src": "19620:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "19606:23:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "/",
																					"rightExpression": {
																						"id": 1128,
																						"name": "_supply",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1067,
																						"src": "19632:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "19606:33:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1130,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "19605:35:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3730",
																			"id": 1131,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "19643:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_70_by_1",
																				"typeString": "int_const 70"
																			},
																			"value": "70"
																		},
																		"src": "19605:40:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "313030",
																		"id": 1133,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19648:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_100_by_1",
																			"typeString": "int_const 100"
																		},
																		"value": "100"
																	},
																	"src": "19605:46:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19593:58:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1136,
															"nodeType": "ExpressionStatement",
															"src": "19593:58:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1143,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1141,
																		"name": "_derived",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1055,
																		"src": "19688:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1142,
																		"name": "_adjusted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1063,
																		"src": "19699:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "19688:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1144,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "19687:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1145,
															"name": "_balance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1043,
															"src": "19711:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1139,
															"name": "Math",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 87,
															"src": "19678:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Math_$87_$",
																"typeString": "type(library Math)"
															}
														},
														"id": 1140,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "min",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 38,
														"src": "19678:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19678:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1047,
												"id": 1147,
												"nodeType": "Return",
												"src": "19671:49:0"
											}
										]
									},
									"functionSelector": "892f4805",
									"id": 1149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "derivedBalance",
									"nameLocation": "19026:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "19049:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "19041:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1040,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19041:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "_balance",
												"nameLocation": "19063:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "19058:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1042,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "19058:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19040:32:0"
									},
									"returnParameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1149,
												"src": "19094:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1045,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "19094:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19093:6:0"
									},
									"scope": 1734,
									"src": "19017:710:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1165,
										"nodeType": "Block",
										"src": "19777:70:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 1159,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "19819:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "19819:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 1156,
																			"name": "stake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 806,
																			"src": "19802:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1155,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 203,
																		"src": "19795:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$203_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 1157,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "19795:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$203",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1158,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 142,
																"src": "19795:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 1161,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19795:35:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1162,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1151,
															"src": "19832:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1154,
														"name": "deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1320,
														"src": "19787:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19787:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1164,
												"nodeType": "ExpressionStatement",
												"src": "19787:53:0"
											}
										]
									},
									"functionSelector": "c6f678bd",
									"id": 1166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "depositAll",
									"nameLocation": "19743:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "19759:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1166,
												"src": "19754:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1150,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "19754:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19753:14:0"
									},
									"returnParameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19777:0:0"
									},
									"scope": 1734,
									"src": "19734:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1319,
										"nodeType": "Block",
										"src": "19917:1016:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1176,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1168,
																"src": "19935:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1177,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "19944:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "19935:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "616d6f756e742069732030",
															"id": 1179,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19947:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fbad808795e407b3997e34bfd6949d0e03d8e1b64d519d7675db0338f57f028e",
																"typeString": "literal_string \"amount is 0\""
															},
															"value": "amount is 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fbad808795e407b3997e34bfd6949d0e03d8e1b64d519d7675db0338f57f028e",
																"typeString": "literal_string \"amount is 0\""
															}
														],
														"id": 1175,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "19927:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19927:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1181,
												"nodeType": "ExpressionStatement",
												"src": "19927:34:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1182,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1552,
														"src": "19971:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19971:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1184,
												"nodeType": "ExpressionStatement",
												"src": "19971:12:0"
											},
											{
												"assignments": [
													1187
												],
												"declarations": [
													{
														"constant": false,
														"id": 1187,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "20010:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1319,
														"src": "19993:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$804_storage_ptr",
															"typeString": "struct Gauge.UserInfo"
														},
														"typeName": {
															"id": 1186,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1185,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 804,
																"src": "19993:8:0"
															},
															"referencedDeclaration": 804,
															"src": "19993:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$804_storage_ptr",
																"typeString": "struct Gauge.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1192,
												"initialValue": {
													"baseExpression": {
														"id": 1188,
														"name": "userInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "20017:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$804_storage_$",
															"typeString": "mapping(address => struct Gauge.UserInfo storage ref)"
														}
													},
													"id": 1191,
													"indexExpression": {
														"expression": {
															"id": 1189,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "20026:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1190,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "20026:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "20017:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$804_storage",
														"typeString": "struct Gauge.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19993:44:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1193,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1187,
															"src": "20051:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$804_storage_ptr",
																"typeString": "struct Gauge.UserInfo storage pointer"
															}
														},
														"id": 1194,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 801,
														"src": "20051:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1195,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "20065:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "20051:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1217,
												"nodeType": "IfStatement",
												"src": "20047:219:0",
												"trueBody": {
													"id": 1216,
													"nodeType": "Block",
													"src": "20068:198:0",
													"statements": [
														{
															"assignments": [
																1198
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1198,
																	"mutability": "mutable",
																	"name": "pendingAmount",
																	"nameLocation": "20090:13:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1216,
																	"src": "20082:21:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1197,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "20082:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1203,
															"initialValue": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1200,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "20117:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1201,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "20117:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1199,
																	"name": "pendingMax",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1645,
																	"src": "20106:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20106:22:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "20082:46:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1206,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1204,
																	"name": "pendingAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1198,
																	"src": "20146:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1205,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20162:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "20146:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1215,
															"nodeType": "IfStatement",
															"src": "20142:114:0",
															"trueBody": {
																"id": 1214,
																"nodeType": "Block",
																"src": "20165:91:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1208,
																					"name": "rewardToken",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 812,
																					"src": "20202:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"id": 1209,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "20215:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1210,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "20215:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1211,
																					"name": "pendingAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1198,
																					"src": "20227:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1207,
																				"name": "_safeTokenTransfer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 962,
																				"src": "20183:18:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1212,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "20183:58:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1213,
																		"nodeType": "ExpressionStatement",
																		"src": "20183:58:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1218,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1168,
														"src": "20279:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1219,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "20288:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "20279:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1249,
												"nodeType": "IfStatement",
												"src": "20275:200:0",
												"trueBody": {
													"id": 1248,
													"nodeType": "Block",
													"src": "20291:184:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1224,
																		"name": "stake",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 806,
																		"src": "20337:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1225,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "20344:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1226,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "20344:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 1229,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "20364:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Gauge_$1734",
																					"typeString": "contract Gauge"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Gauge_$1734",
																					"typeString": "contract Gauge"
																				}
																			],
																			"id": 1228,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "20356:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1227,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "20356:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1230,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "20356:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1231,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1168,
																		"src": "20371:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1221,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 761,
																		"src": "20305:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$761_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 1223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 735,
																	"src": "20305:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,address,uint256)"
																	}
																},
																"id": 1232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20305:73:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1233,
															"nodeType": "ExpressionStatement",
															"src": "20305:73:0"
														},
														{
															"expression": {
																"id": 1236,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1234,
																	"name": "totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 829,
																	"src": "20392:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1235,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1168,
																	"src": "20407:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "20392:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1237,
															"nodeType": "ExpressionStatement",
															"src": "20392:21:0"
														},
														{
															"expression": {
																"id": 1246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1238,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1187,
																		"src": "20427:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$804_storage_ptr",
																			"typeString": "struct Gauge.UserInfo storage pointer"
																		}
																	},
																	"id": 1240,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 801,
																	"src": "20427:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1244,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1168,
																			"src": "20457:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1241,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1187,
																				"src": "20441:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$804_storage_ptr",
																					"typeString": "struct Gauge.UserInfo storage pointer"
																				}
																			},
																			"id": 1242,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 801,
																			"src": "20441:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1243,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 378,
																		"src": "20441:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1245,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "20441:23:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "20427:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1247,
															"nodeType": "ExpressionStatement",
															"src": "20427:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1250,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1170,
														"src": "20488:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1251,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "20498:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "20488:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1297,
													"nodeType": "Block",
													"src": "20750:55:0",
													"statements": [
														{
															"expression": {
																"id": 1295,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1290,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1170,
																	"src": "20764:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1291,
																		"name": "tokenIds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 821,
																		"src": "20774:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1294,
																	"indexExpression": {
																		"expression": {
																			"id": 1292,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "20783:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "20783:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "20774:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "20764:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1296,
															"nodeType": "ExpressionStatement",
															"src": "20764:30:0"
														}
													]
												},
												"id": 1298,
												"nodeType": "IfStatement",
												"src": "20484:321:0",
												"trueBody": {
													"id": 1289,
													"nodeType": "Block",
													"src": "20501:243:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1262,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1258,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1170,
																					"src": "20549:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 1255,
																							"name": "veToken",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 808,
																							"src": "20532:7:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1254,
																						"name": "IVeToken",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 572,
																						"src": "20523:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IVeToken_$572_$",
																							"typeString": "type(contract IVeToken)"
																						}
																					},
																					"id": 1256,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "20523:17:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IVeToken_$572",
																						"typeString": "contract IVeToken"
																					}
																				},
																				"id": 1257,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "ownerOf",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 552,
																				"src": "20523:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																					"typeString": "function (uint256) view external returns (address)"
																				}
																			},
																			"id": 1259,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "20523:34:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"id": 1260,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "20561:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 1261,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "20561:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "20523:48:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1253,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "20515:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 1263,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20515:57:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1264,
															"nodeType": "ExpressionStatement",
															"src": "20515:57:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1265,
																		"name": "tokenIds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 821,
																		"src": "20590:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1268,
																	"indexExpression": {
																		"expression": {
																			"id": 1266,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "20599:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1267,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "20599:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "20590:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1269,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20614:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "20590:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1279,
															"nodeType": "IfStatement",
															"src": "20586:94:0",
															"trueBody": {
																"id": 1278,
																"nodeType": "Block",
																"src": "20617:63:0",
																"statements": [
																	{
																		"expression": {
																			"id": 1276,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 1271,
																					"name": "tokenIds",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 821,
																					"src": "20635:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 1274,
																				"indexExpression": {
																					"expression": {
																						"id": 1272,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "20644:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 1273,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "20644:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "20635:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1275,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1170,
																				"src": "20658:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "20635:30:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1277,
																		"nodeType": "ExpressionStatement",
																		"src": "20635:30:0"
																	}
																]
															}
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1286,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1281,
																				"name": "tokenIds",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 821,
																				"src": "20701:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1284,
																			"indexExpression": {
																				"expression": {
																					"id": 1282,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "20710:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1283,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "20710:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "20701:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 1285,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1170,
																			"src": "20725:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "20701:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1280,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "20693:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 1287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20693:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1288,
															"nodeType": "ExpressionStatement",
															"src": "20693:40:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1299,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1187,
															"src": "20814:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$804_storage_ptr",
																"typeString": "struct Gauge.UserInfo storage pointer"
															}
														},
														"id": 1301,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 803,
														"src": "20814:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31653132",
																"id": 1308,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20870:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																},
																"value": "1e12"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1305,
																		"name": "accTokenPerShare",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 825,
																		"src": "20848:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1302,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1187,
																			"src": "20832:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$804_storage_ptr",
																				"typeString": "struct Gauge.UserInfo storage pointer"
																			}
																		},
																		"id": 1303,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 801,
																		"src": "20832:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 408,
																	"src": "20832:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20832:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 423,
															"src": "20832:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1309,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20832:43:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20814:61:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1311,
												"nodeType": "ExpressionStatement",
												"src": "20814:61:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1313,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "20898:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "20898:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1315,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1170,
															"src": "20910:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1316,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1168,
															"src": "20919:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1312,
														"name": "Deposit",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 775,
														"src": "20890:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20890:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1318,
												"nodeType": "EmitStatement",
												"src": "20885:41:0"
											}
										]
									},
									"functionSelector": "e2bbb158",
									"id": 1320,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1173,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1172,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 125,
												"src": "19904:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "19904:12:0"
										}
									],
									"name": "deposit",
									"nameLocation": "19862:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1168,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "19875:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "19870:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1167,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "19870:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "19888:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1320,
												"src": "19883:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1169,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "19883:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19869:27:0"
									},
									"returnParameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19917:0:0"
									},
									"scope": 1734,
									"src": "19853:1080:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1331,
										"nodeType": "Block",
										"src": "20971:54:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"baseExpression": {
																	"id": 1324,
																	"name": "userInfo",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 834,
																	"src": "20990:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$804_storage_$",
																		"typeString": "mapping(address => struct Gauge.UserInfo storage ref)"
																	}
																},
																"id": 1327,
																"indexExpression": {
																	"expression": {
																		"id": 1325,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "20999:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 1326,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "20999:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "20990:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserInfo_$804_storage",
																	"typeString": "struct Gauge.UserInfo storage ref"
																}
															},
															"id": 1328,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 801,
															"src": "20990:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1323,
														"name": "withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1363,
														"src": "20981:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20981:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1330,
												"nodeType": "ExpressionStatement",
												"src": "20981:37:0"
											}
										]
									},
									"functionSelector": "853828b6",
									"id": 1332,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawAll",
									"nameLocation": "20948:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20959:2:0"
									},
									"returnParameters": {
										"id": 1322,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20971:0:0"
									},
									"scope": 1734,
									"src": "20939:86:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1362,
										"nodeType": "Block",
										"src": "21069:180:0",
										"statements": [
											{
												"assignments": [
													1338
												],
												"declarations": [
													{
														"constant": false,
														"id": 1338,
														"mutability": "mutable",
														"name": "tokenId",
														"nameLocation": "21084:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1362,
														"src": "21079:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1337,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "21079:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1340,
												"initialValue": {
													"hexValue": "30",
													"id": 1339,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "21094:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21079:16:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1341,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1334,
														"src": "21109:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 1342,
																"name": "userInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 834,
																"src": "21119:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$804_storage_$",
																	"typeString": "mapping(address => struct Gauge.UserInfo storage ref)"
																}
															},
															"id": 1345,
															"indexExpression": {
																"expression": {
																	"id": 1343,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "21128:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1344,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "21128:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "21119:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$804_storage",
																"typeString": "struct Gauge.UserInfo storage ref"
															}
														},
														"id": 1346,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 801,
														"src": "21119:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21109:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1356,
												"nodeType": "IfStatement",
												"src": "21105:98:0",
												"trueBody": {
													"id": 1355,
													"nodeType": "Block",
													"src": "21148:55:0",
													"statements": [
														{
															"expression": {
																"id": 1353,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1348,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1338,
																	"src": "21162:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1349,
																		"name": "tokenIds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 821,
																		"src": "21172:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1352,
																	"indexExpression": {
																		"expression": {
																			"id": 1350,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "21181:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1351,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "21181:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "21172:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21162:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1354,
															"nodeType": "ExpressionStatement",
															"src": "21162:30:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1358,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1334,
															"src": "21226:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1359,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1338,
															"src": "21234:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1357,
														"name": "withdrawToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1491,
														"src": "21212:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21212:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1361,
												"nodeType": "ExpressionStatement",
												"src": "21212:30:0"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 1363,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "21040:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "21054:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1363,
												"src": "21049:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1333,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "21049:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21048:13:0"
									},
									"returnParameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21069:0:0"
									},
									"scope": 1734,
									"src": "21031:218:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1490,
										"nodeType": "Block",
										"src": "21326:847:0",
										"statements": [
											{
												"assignments": [
													1374
												],
												"declarations": [
													{
														"constant": false,
														"id": 1374,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "21353:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1490,
														"src": "21336:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$804_storage_ptr",
															"typeString": "struct Gauge.UserInfo"
														},
														"typeName": {
															"id": 1373,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1372,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 804,
																"src": "21336:8:0"
															},
															"referencedDeclaration": 804,
															"src": "21336:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$804_storage_ptr",
																"typeString": "struct Gauge.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1379,
												"initialValue": {
													"baseExpression": {
														"id": 1375,
														"name": "userInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "21360:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$804_storage_$",
															"typeString": "mapping(address => struct Gauge.UserInfo storage ref)"
														}
													},
													"id": 1378,
													"indexExpression": {
														"expression": {
															"id": 1376,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "21369:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1377,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "21369:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "21360:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$804_storage",
														"typeString": "struct Gauge.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21336:44:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1381,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1374,
																	"src": "21398:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserInfo_$804_storage_ptr",
																		"typeString": "struct Gauge.UserInfo storage pointer"
																	}
																},
																"id": 1382,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 801,
																"src": "21398:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1383,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1365,
																"src": "21413:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "21398:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7769746864726177537761703a206e6f7420676f6f64",
															"id": 1385,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "21422:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_44e1ac252b85693a6fa5f93daaff79f31ace63ae223bf96d2011a80ecd164649",
																"typeString": "literal_string \"withdrawSwap: not good\""
															},
															"value": "withdrawSwap: not good"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_44e1ac252b85693a6fa5f93daaff79f31ace63ae223bf96d2011a80ecd164649",
																"typeString": "literal_string \"withdrawSwap: not good\""
															}
														],
														"id": 1380,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "21390:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21390:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1387,
												"nodeType": "ExpressionStatement",
												"src": "21390:57:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1388,
														"name": "updatePool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1552,
														"src": "21457:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21457:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1390,
												"nodeType": "ExpressionStatement",
												"src": "21457:12:0"
											},
											{
												"assignments": [
													1392
												],
												"declarations": [
													{
														"constant": false,
														"id": 1392,
														"mutability": "mutable",
														"name": "pendingAmount",
														"nameLocation": "21487:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 1490,
														"src": "21479:21:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1391,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21479:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1397,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1394,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "21514:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "21514:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1393,
														"name": "pendingMax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1645,
														"src": "21503:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21503:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21479:46:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1398,
														"name": "pendingAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1392,
														"src": "21539:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1399,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "21555:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "21539:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1409,
												"nodeType": "IfStatement",
												"src": "21535:106:0",
												"trueBody": {
													"id": 1408,
													"nodeType": "Block",
													"src": "21558:83:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1402,
																		"name": "rewardToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 812,
																		"src": "21591:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1403,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "21604:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "21604:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1405,
																		"name": "pendingAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1392,
																		"src": "21616:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1401,
																	"name": "_safeTokenTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 962,
																	"src": "21572:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1406,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21572:58:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1407,
															"nodeType": "ExpressionStatement",
															"src": "21572:58:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1410,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1365,
														"src": "21654:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1411,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "21664:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "21654:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1440,
												"nodeType": "IfStatement",
												"src": "21650:201:0",
												"trueBody": {
													"id": 1439,
													"nodeType": "Block",
													"src": "21667:184:0",
													"statements": [
														{
															"expression": {
																"id": 1421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1413,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1374,
																		"src": "21681:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserInfo_$804_storage_ptr",
																			"typeString": "struct Gauge.UserInfo storage pointer"
																		}
																	},
																	"id": 1415,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "amount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 801,
																	"src": "21681:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1419,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1365,
																			"src": "21711:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"expression": {
																				"id": 1416,
																				"name": "user",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1374,
																				"src": "21695:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_UserInfo_$804_storage_ptr",
																					"typeString": "struct Gauge.UserInfo storage pointer"
																				}
																			},
																			"id": 1417,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "amount",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 801,
																			"src": "21695:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1418,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 393,
																		"src": "21695:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1420,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "21695:24:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21681:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1422,
															"nodeType": "ExpressionStatement",
															"src": "21681:38:0"
														},
														{
															"expression": {
																"id": 1428,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1423,
																	"name": "totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 829,
																	"src": "21733:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1426,
																			"name": "_amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1365,
																			"src": "21763:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1424,
																			"name": "totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 829,
																			"src": "21747:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 393,
																		"src": "21747:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "21747:24:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21733:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1429,
															"nodeType": "ExpressionStatement",
															"src": "21733:38:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1433,
																		"name": "stake",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 806,
																		"src": "21813:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 1434,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "21820:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1435,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "21820:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1436,
																		"name": "_amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1365,
																		"src": "21832:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1430,
																		"name": "TransferHelper",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 761,
																		"src": "21785:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_TransferHelper_$761_$",
																			"typeString": "type(library TransferHelper)"
																		}
																	},
																	"id": 1432,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 689,
																	"src": "21785:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1437,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21785:55:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1438,
															"nodeType": "ExpressionStatement",
															"src": "21785:55:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1452,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1441,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1374,
															"src": "21861:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$804_storage_ptr",
																"typeString": "struct Gauge.UserInfo storage pointer"
															}
														},
														"id": 1443,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 803,
														"src": "21861:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31653132",
																"id": 1450,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "21917:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																},
																"value": "1e12"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1000000000000_by_1",
																	"typeString": "int_const 1000000000000"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1447,
																		"name": "accTokenPerShare",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 825,
																		"src": "21895:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1444,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1374,
																			"src": "21879:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserInfo_$804_storage_ptr",
																				"typeString": "struct Gauge.UserInfo storage pointer"
																			}
																		},
																		"id": 1445,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 801,
																		"src": "21879:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1446,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "mul",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 408,
																	"src": "21879:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1448,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21879:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1449,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "div",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 423,
															"src": "21879:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1451,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21879:43:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21861:61:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1453,
												"nodeType": "ExpressionStatement",
												"src": "21861:61:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1456,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1454,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1367,
														"src": "21937:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1455,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "21947:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "21937:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1481,
													"nodeType": "Block",
													"src": "22059:55:0",
													"statements": [
														{
															"expression": {
																"id": 1479,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1474,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1367,
																	"src": "22073:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1475,
																		"name": "tokenIds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 821,
																		"src": "22083:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1478,
																	"indexExpression": {
																		"expression": {
																			"id": 1476,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "22092:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1477,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "22092:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "22083:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22073:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1480,
															"nodeType": "ExpressionStatement",
															"src": "22073:30:0"
														}
													]
												},
												"id": 1482,
												"nodeType": "IfStatement",
												"src": "21933:181:0",
												"trueBody": {
													"id": 1473,
													"nodeType": "Block",
													"src": "21950:103:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1458,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1367,
																			"src": "21972:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"baseExpression": {
																				"id": 1459,
																				"name": "tokenIds",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 821,
																				"src": "21983:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1462,
																			"indexExpression": {
																				"expression": {
																					"id": 1460,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "21992:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 1461,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "21992:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "21983:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "21972:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 1457,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "21964:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																		"typeString": "function (bool) pure"
																	}
																},
																"id": 1464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21964:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1465,
															"nodeType": "ExpressionStatement",
															"src": "21964:40:0"
														},
														{
															"expression": {
																"id": 1471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1466,
																		"name": "tokenIds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 821,
																		"src": "22018:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1469,
																	"indexExpression": {
																		"expression": {
																			"id": 1467,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "22027:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1468,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "22027:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "22018:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 1470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22041:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "22018:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1472,
															"nodeType": "ExpressionStatement",
															"src": "22018:24:0"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1484,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "22137:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "22137:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1486,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1367,
															"src": "22149:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1487,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1365,
															"src": "22158:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1483,
														"name": "Withdraw",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 783,
														"src": "22128:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22128:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1489,
												"nodeType": "EmitStatement",
												"src": "22123:43:0"
											}
										]
									},
									"functionSelector": "fdb483c7",
									"id": 1491,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1370,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1369,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 125,
												"src": "21313:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "21313:12:0"
										}
									],
									"name": "withdrawToken",
									"nameLocation": "21264:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1368,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "21283:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "21278:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1364,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "21278:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1367,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "21297:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "21292:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1366,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "21292:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21277:28:0"
									},
									"returnParameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21326:0:0"
									},
									"scope": 1734,
									"src": "21255:918:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1551,
										"nodeType": "Block",
										"src": "22208:496:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1494,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "22222:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1495,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "22222:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 1496,
														"name": "lastRewardBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 827,
														"src": "22238:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22222:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1500,
												"nodeType": "IfStatement",
												"src": "22218:68:0",
												"trueBody": {
													"id": 1499,
													"nodeType": "Block",
													"src": "22255:31:0",
													"statements": [
														{
															"functionReturnParameters": 1493,
															"id": 1498,
															"nodeType": "Return",
															"src": "22269:7:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1501,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 829,
														"src": "22300:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1502,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "22315:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "22300:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1511,
												"nodeType": "IfStatement",
												"src": "22296:97:0",
												"trueBody": {
													"id": 1510,
													"nodeType": "Block",
													"src": "22318:75:0",
													"statements": [
														{
															"expression": {
																"id": 1507,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1504,
																	"name": "lastRewardBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 827,
																	"src": "22332:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1505,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "22350:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1506,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"src": "22350:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22332:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1508,
															"nodeType": "ExpressionStatement",
															"src": "22332:30:0"
														},
														{
															"functionReturnParameters": 1493,
															"id": 1509,
															"nodeType": "Return",
															"src": "22376:7:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1512,
														"name": "tokenPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 823,
														"src": "22406:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1513,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "22423:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "22406:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1517,
												"nodeType": "IfStatement",
												"src": "22402:55:0",
												"trueBody": {
													"id": 1516,
													"nodeType": "Block",
													"src": "22426:31:0",
													"statements": [
														{
															"functionReturnParameters": 1493,
															"id": 1515,
															"nodeType": "Return",
															"src": "22440:7:0"
														}
													]
												}
											},
											{
												"assignments": [
													1519
												],
												"declarations": [
													{
														"constant": false,
														"id": 1519,
														"mutability": "mutable",
														"name": "mul",
														"nameLocation": "22474:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 1551,
														"src": "22466:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1518,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22466:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1525,
												"initialValue": {
													"arguments": [
														{
															"id": 1523,
															"name": "lastRewardBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 827,
															"src": "22497:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"id": 1520,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "22480:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "22480:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1522,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 393,
														"src": "22480:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22480:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22466:47:0"
											},
											{
												"assignments": [
													1527
												],
												"declarations": [
													{
														"constant": false,
														"id": 1527,
														"mutability": "mutable",
														"name": "tokenReward",
														"nameLocation": "22531:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 1551,
														"src": "22523:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1526,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22523:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1532,
												"initialValue": {
													"arguments": [
														{
															"id": 1530,
															"name": "mul",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1519,
															"src": "22563:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1528,
															"name": "tokenPerBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 823,
															"src": "22545:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1529,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 408,
														"src": "22545:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22545:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22523:44:0"
											},
											{
												"expression": {
													"id": 1544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1533,
														"name": "accTokenPerShare",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 825,
														"src": "22578:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1541,
																		"name": "totalSupply",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 829,
																		"src": "22644:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"hexValue": "31653132",
																				"id": 1538,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "22634:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				},
																				"value": "1e12"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_1000000000000_by_1",
																					"typeString": "int_const 1000000000000"
																				}
																			],
																			"expression": {
																				"id": 1536,
																				"name": "tokenReward",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1527,
																				"src": "22618:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 1537,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "mul",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 408,
																			"src": "22618:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																				"typeString": "function (uint256,uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1539,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "22618:21:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "div",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 423,
																	"src": "22618:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1542,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22618:38:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 1534,
																"name": "accTokenPerShare",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 825,
																"src": "22597:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1535,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 378,
															"src": "22597:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 1543,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22597:60:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22578:79:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1545,
												"nodeType": "ExpressionStatement",
												"src": "22578:79:0"
											},
											{
												"expression": {
													"id": 1549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1546,
														"name": "lastRewardBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 827,
														"src": "22667:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1547,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "22685:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1548,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "22685:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "22667:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1550,
												"nodeType": "ExpressionStatement",
												"src": "22667:30:0"
											}
										]
									},
									"functionSelector": "e3161ddd",
									"id": 1552,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updatePool",
									"nameLocation": "22188:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22198:2:0"
									},
									"returnParameters": {
										"id": 1493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22208:0:0"
									},
									"scope": 1734,
									"src": "22179:525:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1644,
										"nodeType": "Block",
										"src": "22835:703:0",
										"statements": [
											{
												"assignments": [
													1561
												],
												"declarations": [
													{
														"constant": false,
														"id": 1561,
														"mutability": "mutable",
														"name": "user",
														"nameLocation": "22862:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1644,
														"src": "22845:21:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserInfo_$804_storage_ptr",
															"typeString": "struct Gauge.UserInfo"
														},
														"typeName": {
															"id": 1560,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1559,
																"name": "UserInfo",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 804,
																"src": "22845:8:0"
															},
															"referencedDeclaration": 804,
															"src": "22845:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$804_storage_ptr",
																"typeString": "struct Gauge.UserInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1565,
												"initialValue": {
													"baseExpression": {
														"id": 1562,
														"name": "userInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "22869:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_UserInfo_$804_storage_$",
															"typeString": "mapping(address => struct Gauge.UserInfo storage ref)"
														}
													},
													"id": 1564,
													"indexExpression": {
														"id": 1563,
														"name": "_user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1554,
														"src": "22878:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "22869:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserInfo_$804_storage",
														"typeString": "struct Gauge.UserInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22845:39:0"
											},
											{
												"assignments": [
													1567
												],
												"declarations": [
													{
														"constant": false,
														"id": 1567,
														"mutability": "mutable",
														"name": "_accTokenPerShare",
														"nameLocation": "22902:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 1644,
														"src": "22894:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1566,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22894:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1569,
												"initialValue": {
													"id": 1568,
													"name": "accTokenPerShare",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 825,
													"src": "22922:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22894:44:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1570,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1561,
															"src": "22952:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserInfo_$804_storage_ptr",
																"typeString": "struct Gauge.UserInfo storage pointer"
															}
														},
														"id": 1571,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 801,
														"src": "22952:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1572,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "22966:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "22952:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1641,
												"nodeType": "IfStatement",
												"src": "22948:566:0",
												"trueBody": {
													"id": 1640,
													"nodeType": "Block",
													"src": "22969:545:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1577,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1574,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "22987:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1575,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"src": "22987:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 1576,
																	"name": "lastRewardBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 827,
																	"src": "23002:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "22987:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1620,
															"nodeType": "IfStatement",
															"src": "22983:367:0",
															"trueBody": {
																"id": 1619,
																"nodeType": "Block",
																"src": "23019:331:0",
																"statements": [
																	{
																		"assignments": [
																			1579
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1579,
																				"mutability": "mutable",
																				"name": "mul",
																				"nameLocation": "23045:3:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1619,
																				"src": "23037:11:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1578,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "23037:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1585,
																		"initialValue": {
																			"arguments": [
																				{
																					"id": 1583,
																					"name": "lastRewardBlock",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 827,
																					"src": "23068:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"expression": {
																						"id": 1580,
																						"name": "block",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967292,
																						"src": "23051:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_block",
																							"typeString": "block"
																						}
																					},
																					"id": 1581,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "number",
																					"nodeType": "MemberAccess",
																					"src": "23051:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1582,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 393,
																				"src": "23051:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1584,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "23051:33:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "23037:47:0"
																	},
																	{
																		"assignments": [
																			1587
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 1587,
																				"mutability": "mutable",
																				"name": "tokenReward",
																				"nameLocation": "23110:11:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1619,
																				"src": "23102:19:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 1586,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "23102:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 1592,
																		"initialValue": {
																			"arguments": [
																				{
																					"id": 1590,
																					"name": "mul",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1579,
																					"src": "23142:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1588,
																					"name": "tokenPerBlock",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 823,
																					"src": "23124:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1589,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "mul",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 408,
																				"src": "23124:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1591,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "23124:22:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "23102:44:0"
																	},
																	{
																		"expression": {
																			"id": 1604,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1593,
																				"name": "_accTokenPerShare",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1567,
																				"src": "23164:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"id": 1601,
																								"name": "totalSupply",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 829,
																								"src": "23232:11:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "31653132",
																										"id": 1598,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "23222:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_1000000000000_by_1",
																											"typeString": "int_const 1000000000000"
																										},
																										"value": "1e12"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_1000000000000_by_1",
																											"typeString": "int_const 1000000000000"
																										}
																									],
																									"expression": {
																										"id": 1596,
																										"name": "tokenReward",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1587,
																										"src": "23206:11:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"id": 1597,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "mul",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 408,
																									"src": "23206:15:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																										"typeString": "function (uint256,uint256) pure returns (uint256)"
																									}
																								},
																								"id": 1599,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "23206:21:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1600,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberName": "div",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 423,
																							"src": "23206:25:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																								"typeString": "function (uint256,uint256) pure returns (uint256)"
																							}
																						},
																						"id": 1602,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "23206:38:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					],
																					"expression": {
																						"id": 1594,
																						"name": "_accTokenPerShare",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1567,
																						"src": "23184:17:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 1595,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "add",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 378,
																					"src": "23184:21:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																						"typeString": "function (uint256,uint256) pure returns (uint256)"
																					}
																				},
																				"id": 1603,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "23184:61:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "23164:81:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1605,
																		"nodeType": "ExpressionStatement",
																		"src": "23164:81:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1615,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1561,
																						"src": "23319:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserInfo_$804_storage_ptr",
																							"typeString": "struct Gauge.UserInfo storage pointer"
																						}
																					},
																					"id": 1616,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "rewardDebt",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 803,
																					"src": "23319:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "31653132",
																							"id": 1612,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "23309:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1000000000000_by_1",
																								"typeString": "int_const 1000000000000"
																							},
																							"value": "1e12"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_1000000000000_by_1",
																								"typeString": "int_const 1000000000000"
																							}
																						],
																						"expression": {
																							"arguments": [
																								{
																									"id": 1609,
																									"name": "_accTokenPerShare",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1567,
																									"src": "23286:17:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"expression": {
																									"expression": {
																										"id": 1606,
																										"name": "user",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1561,
																										"src": "23270:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_UserInfo_$804_storage_ptr",
																											"typeString": "struct Gauge.UserInfo storage pointer"
																										}
																									},
																									"id": 1607,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "amount",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 801,
																									"src": "23270:11:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 1608,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "mul",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 408,
																								"src": "23270:15:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																									"typeString": "function (uint256,uint256) pure returns (uint256)"
																								}
																							},
																							"id": 1610,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "23270:34:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1611,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "div",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 423,
																						"src": "23270:38:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1613,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "23270:44:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1614,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 393,
																				"src": "23270:48:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1617,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "23270:65:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"functionReturnParameters": 1558,
																		"id": 1618,
																		"nodeType": "Return",
																		"src": "23263:72:0"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1624,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1621,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "23367:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1622,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"src": "23367:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1623,
																	"name": "lastRewardBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 827,
																	"src": "23383:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23367:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1639,
															"nodeType": "IfStatement",
															"src": "23363:141:0",
															"trueBody": {
																"id": 1638,
																"nodeType": "Block",
																"src": "23400:104:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 1634,
																						"name": "user",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1561,
																						"src": "23473:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_UserInfo_$804_storage_ptr",
																							"typeString": "struct Gauge.UserInfo storage pointer"
																						}
																					},
																					"id": 1635,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "rewardDebt",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 803,
																					"src": "23473:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "31653132",
																							"id": 1631,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "23463:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1000000000000_by_1",
																								"typeString": "int_const 1000000000000"
																							},
																							"value": "1e12"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_1000000000000_by_1",
																								"typeString": "int_const 1000000000000"
																							}
																						],
																						"expression": {
																							"arguments": [
																								{
																									"id": 1628,
																									"name": "accTokenPerShare",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 825,
																									"src": "23441:16:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"expression": {
																									"expression": {
																										"id": 1625,
																										"name": "user",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1561,
																										"src": "23425:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_struct$_UserInfo_$804_storage_ptr",
																											"typeString": "struct Gauge.UserInfo storage pointer"
																										}
																									},
																									"id": 1626,
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "amount",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 801,
																									"src": "23425:11:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 1627,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "mul",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 408,
																								"src": "23425:15:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																									"typeString": "function (uint256,uint256) pure returns (uint256)"
																								}
																							},
																							"id": 1629,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "23425:33:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1630,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "div",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 423,
																						"src": "23425:37:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1632,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "23425:43:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1633,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sub",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 393,
																				"src": "23425:47:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1636,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "23425:64:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"functionReturnParameters": 1558,
																		"id": 1637,
																		"nodeType": "Return",
																		"src": "23418:71:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"hexValue": "30",
													"id": 1642,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "23530:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1558,
												"id": 1643,
												"nodeType": "Return",
												"src": "23523:8:0"
											}
										]
									},
									"functionSelector": "c73b399b",
									"id": 1645,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pendingMax",
									"nameLocation": "22780:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "22799:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1645,
												"src": "22791:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22791:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22790:15:0"
									},
									"returnParameters": {
										"id": 1558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1557,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1645,
												"src": "22827:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22827:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22826:9:0"
									},
									"scope": 1734,
									"src": "22771:767:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1663,
										"nodeType": "Block",
										"src": "23605:97:0",
										"statements": [
											{
												"assignments": [
													1653
												],
												"declarations": [
													{
														"constant": false,
														"id": 1653,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "23623:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 1663,
														"src": "23615:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1652,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "23615:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1657,
												"initialValue": {
													"arguments": [
														{
															"id": 1655,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1647,
															"src": "23643:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1654,
														"name": "pendingMax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1645,
														"src": "23632:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23632:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "23615:34:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1659,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1647,
															"src": "23681:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1660,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1653,
															"src": "23688:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1658,
														"name": "derivedBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1149,
														"src": "23666:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 1661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23666:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1651,
												"id": 1662,
												"nodeType": "Return",
												"src": "23659:36:0"
											}
										]
									},
									"functionSelector": "5eebea20",
									"id": 1664,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pending",
									"nameLocation": "23553:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1647,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "23569:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1664,
												"src": "23561:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23561:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23560:15:0"
									},
									"returnParameters": {
										"id": 1651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1650,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1664,
												"src": "23597:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23597:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23596:9:0"
									},
									"scope": 1734,
									"src": "23544:158:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1732,
										"nodeType": "Block",
										"src": "23789:473:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1674,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1666,
																"src": "23807:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1675,
																"name": "stake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 806,
																"src": "23816:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "23807:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6e6f207374616b65",
															"id": 1677,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23823:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7d55ade5a47c34418054247bad18c9837700da1697152ff8d1c641ccc474c9e9",
																"typeString": "literal_string \"no stake\""
															},
															"value": "no stake"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7d55ade5a47c34418054247bad18c9837700da1697152ff8d1c641ccc474c9e9",
																"typeString": "literal_string \"no stake\""
															}
														],
														"id": 1673,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "23799:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23799:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1679,
												"nodeType": "ExpressionStatement",
												"src": "23799:35:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1680,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "23848:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1681,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "23848:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 1682,
														"name": "lastRewardBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 827,
														"src": "23864:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23848:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1686,
												"nodeType": "IfStatement",
												"src": "23844:68:0",
												"trueBody": {
													"id": 1685,
													"nodeType": "Block",
													"src": "23881:31:0",
													"statements": [
														{
															"functionReturnParameters": 1672,
															"id": 1684,
															"nodeType": "Return",
															"src": "23895:7:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1687,
														"name": "tokenPerBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 823,
														"src": "23921:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1688,
														"name": "_rewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1668,
														"src": "23937:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23921:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1690,
												"nodeType": "ExpressionStatement",
												"src": "23921:27:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1691,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 829,
														"src": "23962:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1692,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "23976:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "23962:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1724,
												"nodeType": "IfStatement",
												"src": "23958:239:0",
												"trueBody": {
													"id": 1723,
													"nodeType": "Block",
													"src": "23979:218:0",
													"statements": [
														{
															"assignments": [
																1695
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1695,
																	"mutability": "mutable",
																	"name": "mul",
																	"nameLocation": "24001:3:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1723,
																	"src": "23993:11:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1694,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "23993:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1701,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1699,
																		"name": "lastRewardBlock",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 827,
																		"src": "24024:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"expression": {
																			"id": 1696,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "24007:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 1697,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "number",
																		"nodeType": "MemberAccess",
																		"src": "24007:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sub",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 393,
																	"src": "24007:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24007:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "23993:47:0"
														},
														{
															"expression": {
																"id": 1716,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1702,
																	"name": "accTokenPerShare",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 825,
																	"src": "24054:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1713,
																					"name": "totalSupply",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 829,
																					"src": "24129:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "31653132",
																							"id": 1710,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "24119:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1000000000000_by_1",
																								"typeString": "int_const 1000000000000"
																							},
																							"value": "1e12"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_1000000000000_by_1",
																								"typeString": "int_const 1000000000000"
																							}
																						],
																						"expression": {
																							"arguments": [
																								{
																									"id": 1707,
																									"name": "mul",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1695,
																									"src": "24110:3:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								],
																								"expression": {
																									"id": 1705,
																									"name": "_rewardRate",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1668,
																									"src": "24094:11:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"id": 1706,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberName": "mul",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 408,
																								"src": "24094:15:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																									"typeString": "function (uint256,uint256) pure returns (uint256)"
																								}
																							},
																							"id": 1708,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "24094:20:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"id": 1709,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "mul",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 408,
																						"src": "24094:24:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																							"typeString": "function (uint256,uint256) pure returns (uint256)"
																						}
																					},
																					"id": 1711,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "24094:30:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 1712,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "div",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 423,
																				"src": "24094:34:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																					"typeString": "function (uint256,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1714,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "24094:47:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"id": 1703,
																			"name": "accTokenPerShare",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 825,
																			"src": "24073:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1704,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "add",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 378,
																		"src": "24073:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1715,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "24073:69:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24054:88:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1717,
															"nodeType": "ExpressionStatement",
															"src": "24054:88:0"
														},
														{
															"expression": {
																"id": 1721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1718,
																	"name": "lastRewardBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 827,
																	"src": "24156:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1719,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "24174:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1720,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"src": "24174:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "24156:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1722,
															"nodeType": "ExpressionStatement",
															"src": "24156:30:0"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1726,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "24224:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1727,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "24224:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1728,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1666,
															"src": "24236:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1729,
															"name": "_rewardRate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1668,
															"src": "24243:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1725,
														"name": "NotifyReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 791,
														"src": "24211:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24211:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1731,
												"nodeType": "EmitStatement",
												"src": "24206:49:0"
											}
										]
									},
									"functionSelector": "b66503cf",
									"id": 1733,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1671,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1670,
												"name": "onlyBoost",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 874,
												"src": "23779:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "23779:9:0"
										}
									],
									"name": "notifyRewardAmount",
									"nameLocation": "23718:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1666,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "23745:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "23737:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23737:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1668,
												"mutability": "mutable",
												"name": "_rewardRate",
												"nameLocation": "23757:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1733,
												"src": "23752:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1667,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "23752:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23736:33:0"
									},
									"returnParameters": {
										"id": 1672,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23789:0:0"
									},
									"scope": 1734,
									"src": "23709:553:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1735,
							"src": "16315:7950:0",
							"usedErrors": []
						}
					],
					"src": "225:24041:0"
				},
				"id": 0
			}
		}
	}
}